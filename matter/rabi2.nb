(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1227974,      24854]
NotebookOptionsPosition[   1216487,      24508]
NotebookOutlinePosition[   1217009,      24530]
CellTagsIndexPosition[   1216920,      24525]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.677332711587536*^9}],

Cell[CellGroupData[{

Cell["Prepare", "Title",
 CellChangeTimes->{{3.672594346214926*^9, 3.67259435162236*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgsize", "=", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/neutrino.wl\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6725945078959703`*^9, 3.672594509953569*^9}, {
  3.675705587330755*^9, 3.675705590587934*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/neumat.wl\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.672594295880104*^9, 3.672594299034132*^9}, {
  3.675705593783924*^9, 3.675705597619895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"colorpalette5", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"172", ",", "151", ",", "62"}], "]"}], ",", "\n", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"129", ",", "118", ",", "204"}], "]"}], ",", "\n", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"91", ",", "169", ",", "102"}], "]"}], ",", "\n", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"199", ",", "90", ",", "147"}], "]"}], ",", "\n", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"204", ",", "95", ",", "67"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.677945236616535*^9, 3.677945300523353*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"RGBColor", "[", 
    RowBox[{"172", ",", "151", ",", "62"}], "]"}], ",", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"129", ",", "118", ",", "204"}], "]"}], ",", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"91", ",", "169", ",", "102"}], "]"}], ",", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"199", ",", "90", ",", "147"}], "]"}], ",", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"204", ",", "95", ",", "67"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.67794530129638*^9, 3.678021602716998*^9, 
  3.679928690896305*^9, 3.681149470981633*^9, 3.6820951444273453`*^9, 
  3.683058512825824*^9, 3.683206196573073*^9, 3.683898774552456*^9, 
  3.683909776009506*^9, 3.683983806784752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"markers", "=", 
  RowBox[{"Graphics`PlotMarkers", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.6780223187046137`*^9, 3.678022349347777*^9}, {
   3.6780226900583*^9, 3.678022690225069*^9}, 3.6780228234372873`*^9, {
   3.678023756546296*^9, 3.678023759844947*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledCircle]\"\>", ",", "8.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledSquare]\"\>", ",", "8.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledDiamond]\"\>", ",", "10.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledUpTriangle]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledDownTriangle]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyCircle]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptySquare]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyDiamond]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyUpTriangle]\"\>", ",", "11.136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyDownTriangle]\"\>", ",", "11.136`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6780223151601133`*^9, 3.678022349737755*^9}, 
   3.678022690720348*^9, 3.678022826176523*^9, {3.678023754944778*^9, 
   3.678023760811326*^9}, 3.6799286924029922`*^9, 3.6811494725407257`*^9, 
   3.682095145940543*^9, 3.6830585134815817`*^9, 3.68320619973988*^9, 
   3.6838987776217413`*^9, 3.6839097775546217`*^9, 3.683983808194272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rabi Oscillation", "Chapter",
 CellChangeTimes->{{3.677429172308065*^9, 3.677429175074863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ampRabi", "[", 
    RowBox[{"a_", ",", "k_", ",", "omegam_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "/", "4"}], 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "/", "4"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.677429180511324*^9, 3.677429190663039*^9}, {
  3.6774292294630747`*^9, 3.677429229797689*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"probRabi", "[", 
    RowBox[{"a_", ",", "k_", ",", "omegam_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "/", "4"}], 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "/", "4"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]], 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "/", "4"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]], "2"], "x"}], 
      "]"}], "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.677941748537778*^9, 3.6779417488564653`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ampRabi2", "[", 
    RowBox[{"a_", ",", "k_", ",", "omegam_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]]}], ";"}]], "Input",
 CellChangeTimes->{{3.677429180511324*^9, 3.677429190663039*^9}, {
  3.6774292294630747`*^9, 3.677429229797689*^9}, {3.6779417563678207`*^9, 
  3.677941766003715*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"probRabi2", "[", 
    RowBox[{"a_", ",", "k_", ",", "omegam_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]], 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]], "2"], "x"}], 
      "]"}], "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.677941748537778*^9, 3.677941775298169*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resonance & Off-resonance", "Chapter",
 CellChangeTimes->{{3.6773462130420227`*^9, 3.677346220753169*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"endpoint", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"thetam", "=", 
     RowBox[{"Pi", "/", "7"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"thetaV", "=", 
  RowBox[{
   RowBox[{"ArcSin", "[", 
    SqrtBox["0.093"], "]"}], "/", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"energy10", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deltamsquare13", "=", 
    RowBox[{"2.6", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "15"}], ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"MeV", "^", "2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deltamsquare13text", "=", "\"\<2.6*e-15\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegaV", "=", 
   RowBox[{"OmegaVacuum", "[", 
    RowBox[{"energy10", ",", "deltamsquare13"}], "]"}]}], 
  RowBox[{"(*", "MeV", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fraction", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambda0", "=", 
   RowBox[{"fraction", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "thetaV"}], "]"}], "omegaV"}]}], " ", 
  RowBox[{"(*", "MeV", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetam", "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetaV"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetaV"}], "]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambda0", "/", "omegaV"}], ")"}], "^", "2"}]}], ")"}]}], 
       "]"}], "/", "2"}], ",", "Pi"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a1", " ", "=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "4"}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"3.5", "*", " ", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "5"}], ")"}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k1", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deltalambda", "[", 
    RowBox[{"a_", ",", "k_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"a", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "x"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.677332851811117*^9, 3.677332886697122*^9}, {
   3.677333708773777*^9, 3.677333729354423*^9}, {3.6773462302310247`*^9, 
   3.6773462409618063`*^9}, {3.6773465903793087`*^9, 3.677346595369101*^9}, {
   3.67734665900292*^9, 3.677346671890562*^9}, {3.677348291726925*^9, 
   3.677348296745257*^9}, {3.677351105973794*^9, 3.677351108342319*^9}, {
   3.677417117393849*^9, 3.67741713702809*^9}, {3.679928536678369*^9, 
   3.679928608948552*^9}, {3.6799302694302692`*^9, 3.679930282477559*^9}, {
   3.6838988018107233`*^9, 3.6838988061116133`*^9}, 3.6839087142360573`*^9, {
   3.683909718516582*^9, 3.683909732361374*^9}, {3.683909866964658*^9, 
   3.683909867149185*^9}, {3.683909902581661*^9, 3.683909902747357*^9}}],

Cell[BoxData["0.15494769630192953`"], "Output",
 CellChangeTimes->{
  3.679928698096122*^9, 3.6799302834790287`*^9, 3.681149478537253*^9, 
   3.682095157433744*^9, 3.683058577497596*^9, 3.683206221607939*^9, {
   3.6838987866449203`*^9, 3.683898806714671*^9}, 3.683908715069914*^9, 
   3.683909786386244*^9, 3.683909905070036*^9, 3.6839838133339033`*^9}],

Cell[BoxData["1.3000000000000002`*^-16"], "Output",
 CellChangeTimes->{
  3.679928698096122*^9, 3.6799302834790287`*^9, 3.681149478537253*^9, 
   3.682095157433744*^9, 3.683058577497596*^9, 3.683206221607939*^9, {
   3.6838987866449203`*^9, 3.683898806714671*^9}, 3.683908715069914*^9, 
   3.683909786386244*^9, 3.683909905070036*^9, 3.683983813340794*^9}],

Cell[BoxData["6.190375594420747`*^-17"], "Output",
 CellChangeTimes->{
  3.679928698096122*^9, 3.6799302834790287`*^9, 3.681149478537253*^9, 
   3.682095157433744*^9, 3.683058577497596*^9, 3.683206221607939*^9, {
   3.6838987866449203`*^9, 3.683898806714671*^9}, 3.683908715069914*^9, 
   3.683909786386244*^9, 3.683909905070036*^9, 3.6839838133467627`*^9}],

Cell[BoxData["0.19893143402797822`"], "Output",
 CellChangeTimes->{
  3.679928698096122*^9, 3.6799302834790287`*^9, 3.681149478537253*^9, 
   3.682095157433744*^9, 3.683058577497596*^9, 3.683206221607939*^9, {
   3.6838987866449203`*^9, 3.683898806714671*^9}, 3.683908715069914*^9, 
   3.683909786386244*^9, 3.683909905070036*^9, 3.683983813351984*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dellam", "[", "x_", "]"}], ":=", 
   RowBox[{"a1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k1", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellam2", "[", "x_", "]"}], ":=", 
   RowBox[{"a1", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k1", " ", "x"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6773464493622723`*^9, 3.677346475607882*^9}, {
  3.677937772161599*^9, 3.6779377745437927`*^9}, {3.67793791622202*^9, 
  3.677937916712447*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sys1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
       RowBox[{
        RowBox[{"dellam", "[", "x", "]"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
       RowBox[{
        RowBox[{"dellam", "[", "x", "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], ",", 
       RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psi1", "[", "0", "]"}], ",", 
      RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.677346249168592*^9, 3.677346252033791*^9}, {
   3.6773463357310953`*^9, 3.677346448376651*^9}, {3.677346484839501*^9, 
   3.677346534251233*^9}, {3.677346757416553*^9, 3.677346757968862*^9}, 
   3.677937798561603*^9, 3.677937852996913*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.000019372451281654593`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5`"}], "+", 
         RowBox[{"0.00004609455641765001`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.00004609455641765001`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.000019372451281654593`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{
  3.6773465365789022`*^9, 3.677346599264971*^9, {3.677346653179655*^9, 
   3.677346675062674*^9}, 3.67734675873302*^9, 3.677348301314013*^9, 
   3.6773511105301847`*^9, 3.6774170933450212`*^9, {3.6779362226899347`*^9, 
   3.677936224718896*^9}, 3.677937804073844*^9, 3.6779378535425587`*^9, 
   3.679928704337494*^9, 3.682095160163987*^9, 3.683058582724595*^9, 
   3.683206226496211*^9, 3.683898833202362*^9, 3.6839838155877523`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"sys1", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67733290268077*^9, 3.677332947430629*^9}, {
  3.677332982619521*^9, 3.67733302025744*^9}, {3.677346542886861*^9, 
  3.677346562185844*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.677333006077684*^9, 3.677333021430976*^9}, {
   3.677333712704997*^9, 3.677333731247116*^9}, {3.677346585249949*^9, 
   3.677346600642145*^9}, 3.677346666578725*^9, 3.6773467093770933`*^9, 
   3.67734677660903*^9, 3.677348320633358*^9, 3.6773511296717052`*^9, 
   3.677417111527213*^9, 3.677936243974049*^9, 3.677937824919517*^9, 
   3.677937873474424*^9, 3.679928724525467*^9, 3.682095179232985*^9, 
   3.683058593107834*^9, 3.6832062451880083`*^9, 3.683898845582307*^9, 
   3.683983818450858*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol1List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sol1List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=1\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677333016402462*^9, 3.677333079340476*^9}, {
  3.677346607952553*^9, 3.677346632028047*^9}, {3.677347013617216*^9, 
  3.677347023192876*^9}, {3.6773470557175093`*^9, 3.67734705897945*^9}, {
  3.677347671492134*^9, 3.677347943063477*^9}, {3.6773483338540277`*^9, 
  3.677348353247273*^9}, {3.67734910046988*^9, 3.677349125788554*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1: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
+QwHNLmsBLZ1nzd9391h/D+oq9Dx
       "]],
      FontSize->15]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 15},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\"", FontSize -> 14, StripOnInput -> 
       False], TraditionalForm]], {0, 1}, {Left, Top}],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Larger,
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox["\"Transition Probability\"", TraditionalForm],
  PlotRange->{{0, 370000.}, {0, 0.9194232576836706}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.679928725277554*^9, 3.682095180098145*^9, 
  3.683206245832082*^9}]
}, Open  ]],

Cell["Remove the diagonal element of the perturbation", "Text",
 CellChangeTimes->{{3.6773491581822243`*^9, 3.6773491649968348`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sys2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
       RowBox[{
        RowBox[{"dellam", "[", "x", "]"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], ",", 
       RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psi1", "[", "0", "]"}], ",", 
      RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"sol2", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"sys2", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677348985454225*^9, 3.677349021060899*^9}, 
   3.6779378445453176`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.5`"}], " ", 
       RowBox[{"psi1", "[", "x", "]"}]}], "-", 
      RowBox[{"6.780357948579109`*^-6", " ", 
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"0.5`", " ", 
       RowBox[{"psi2", "[", "x", "]"}]}], "-", 
      RowBox[{"6.780357948579109`*^-6", " ", 
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{{3.677348995668757*^9, 3.677349021849752*^9}, 
   3.677351130054872*^9, 3.67741711274177*^9, 3.677936244813879*^9, 
   3.679928725524571*^9, 3.682095180398831*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.677348995668757*^9, 3.677349021849752*^9}, 
   3.677351130054872*^9, 3.67741711274177*^9, 3.677936244813879*^9, 
   3.679928725524571*^9, 3.6820951979899387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol2List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sol2List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability (with Diagonal Elements of Perturbation \
Removed)\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=1\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6773490327724648`*^9, 3.677349032918097*^9}, {
  3.6773490647694607`*^9, 3.677349081088293*^9}, {3.677349140191389*^9, 
  3.677349149750141*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011111111111111112`],
      AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1: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
0KZdaHJdBLmzbkt8Dnat+B9ngs4v
       "]],
      FontSize->15]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 15},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\"", FontSize -> 14, StripOnInput -> 
       False], TraditionalForm]], {0, 1}, {Left, Top}],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Larger,
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox[
   "\"Transition Probability (with Diagonal Elements of Perturbation Removed)\
\"", TraditionalForm],
  PlotRange->{{0, 370000.}, {0, 0.9197404395975975}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6799287438166637`*^9, 3.682095198113729*^9}]
}, Open  ]],

Cell["Combine the two results and compare", "Text",
 CellChangeTimes->{{3.6773492059550247`*^9, 3.677349213218754*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sol1List", ",", "sol2List"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=1\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Origianl System\>\"", ",", 
        "\"\<with Diagonal Elements of Perturbation Removed\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6773492152718477`*^9, 3.6773493495878553`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {GrayLevel[0], PointSize[0.011111111111111112`], AbsoluteThickness[
          1.6], 
          StyleBox[LineBox[CompressedData["
1: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
+QwHNLmsBLZ1nzd9391h/D+oq9Dx
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.011111111111111112`], 
          AbsoluteThickness[1.6], Dashing[{Small, Small}], 
          StyleBox[LineBox[CompressedData["
1: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
0KZdaHJdBLmzbkt8Dnat+B9ngs4v
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->{FontSize -> 15},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\"", FontSize -> 14, StripOnInput -> 
           False], TraditionalForm]], {0, 1}, {Left, Top}],
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->{{0, 370000.}, {0, 0.9197404395975975}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"Origianl System\"",
       "\"with Diagonal Elements of Perturbation Removed\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   BaseStyle->{FontSize -> 15},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox["\"Transition Probability\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          GrayLevel[0]], 
         Line[CompressedData["
1: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
+QwHNLmsBLZ1nzd9391h/D+oq9Dx
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0.5, 0], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1: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
0KZdaHJdBLmzbkt8Dnat+B9ngs4v
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 370000.}, {0, 0.9197404395975975}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, Epilog -> 
      Inset[
        Style[
        "\!\(\*SubscriptBox[\(A\), \(1\)]\)=0.000035\n \!\(\*SubscriptBox[\(k\
\), \(1\)]\)=1", FontSize -> 14], {0, 1}, {Left, Top}], 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Larger, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> "Transition Probability", 
      PlotRange -> {{0, 370000.}, {0, 0.9197404395975975}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0]], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0.5, 0], 
         Dashing[{Small, Small}]]}, {
       "Origianl System", "with Diagonal Elements of Perturbation Removed"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> GrayLevel[0], LegendLayout -> 
       "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6820951986767282`*^9}]
}, Open  ]],

Cell["Adding in a slow rotating field (a new perturbation)", "Text",
 CellChangeTimes->{{3.677349925848789*^9, 3.6773499359589157`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a2", "=", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamSlow", "[", "x_", "]"}], ":=", 
   RowBox[{"a2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k2", " ", "x"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.677349937186954*^9, 3.677349977808592*^9}, {
  3.677350191707232*^9, 3.677350203464438*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dellam", "[", "x", "]"}], "+", 
           RowBox[{"dellamSlow", "[", "x", "]"}]}], ")"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dellam", "[", "x", "]"}], "+", 
           RowBox[{"dellamSlow", "[", "x", "]"}]}], ")"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sol3", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"sys3", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677350187151108*^9, 3.677350281470613*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.19372451281654593`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "100"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5`"}], "+", 
         RowBox[{"0.46094556417650007`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "100"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.46094556417650007`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "100"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.19372451281654593`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "100"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{{3.6773502571995153`*^9, 3.677350283022155*^9}, 
   3.6773511485850067`*^9, 3.677417130638303*^9, 3.6779362648109503`*^9, 
   3.682095199062942*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6773502571995153`*^9, 3.677350283022155*^9}, 
   3.6773511485850067`*^9, 3.677417130638303*^9, 3.6779362648109503`*^9, 
   3.682095217676035*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol3List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol3"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sol3List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slowly Varying Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a2", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677350308811901*^9, 3.677350319458725*^9}, {
  3.6773503693932323`*^9, 3.677350391339244*^9}, {3.677350618766333*^9, 
  3.67735062683631*^9}, {3.67735091159442*^9, 3.677350989773994*^9}, {
  3.677501481093594*^9, 3.67750150163293*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {GrayLevel[0], PointSize[0.011111111111111112`], AbsoluteThickness[1.6], 
     StyleBox[LineBox[CompressedData["
1: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
gg==
       "]],
      FontSize->15]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 15},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\\n \
\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.01\\n \\!\\(\\*SubscriptBox[\\(k\
\\), \\(2\\)]\\)=0.1\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm]], {1, 0.3}, {Left, Top}],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Larger,
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox[
   "\"Transition Probability with New Slowly Varying Perturbation\"", 
    TraditionalForm],
  PlotRange->{{0, 370000.}, {0, 0.7615784969030868}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.682095217795719*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys4", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"dellam", "[", "x", "]"}], ")"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dellam", "[", "x", "]"}], "+", 
           RowBox[{"dellamSlow", "[", "x", "]"}]}], ")"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"sol4", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"sys4", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677350187151108*^9, 3.677350281470613*^9}, {
  3.677351086284985*^9, 3.677351094418289*^9}, {3.6773514486905203`*^9, 
  3.677351471807335*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.19372451281654593`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "100"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "0.5`"}], "+", 
         RowBox[{"0.000016133094746177503`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.19372451281654593`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             FractionBox["1", "100"], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "+", 
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.000016133094746177503`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{{3.6773502571995153`*^9, 3.677350283022155*^9}, 
   3.677351168201495*^9, {3.677351449801024*^9, 3.677351474202197*^9}, 
   3.677417149329146*^9, 3.677936286786821*^9, 3.682095217886216*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6773502571995153`*^9, 3.677350283022155*^9}, 
   3.677351168201495*^9, {3.677351449801024*^9, 3.677351474202197*^9}, 
   3.677417149329146*^9, 3.677936286786821*^9, 3.682095238127397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol4List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol4"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sol4List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slow Varying Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a2", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677350308811901*^9, 3.677350319458725*^9}, {
  3.6773503693932323`*^9, 3.677350391339244*^9}, {3.677350618766333*^9, 
  3.67735062683631*^9}, {3.67735091159442*^9, 3.677350989773994*^9}, {
  3.677351505996847*^9, 3.6773515345846663`*^9}, {3.6775014935850353`*^9, 
  3.677501495192732*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0.5, 0], PointSize[0.011111111111111112`], AbsoluteThickness[
     1.6], 
     StyleBox[LineBox[CompressedData["
1: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
V8Qd
       "]],
      FontSize->15]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 15},
  DisplayFunction->Identity,
  Epilog->InsetBox[
    BoxData[
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\\n \
\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.01\\n \\!\\(\\*SubscriptBox[\\(k\
\\), \\(2\\)]\\)=0.1\"", FontSize -> 14, StripOnInput -> False], 
      TraditionalForm]], {1, 0.3}, {Left, Top}],
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probability\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
     None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Larger,
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox[
   "\"Transition Probability with New Slow Varying Perturbation\"", 
    TraditionalForm],
  PlotRange->{{0, 370000.}, {0, 0.7621792400958096}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.68209523837082*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sol3List", ",", "sol4List"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slowly Varying Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a2", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Original Result\>\"", ",", 
        "\"\<Remove Diagonal Elements of Slow Perturbation\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6773515594074306`*^9, 3.677351630918211*^9}, {
  3.677351700705687*^9, 3.6773517690123253`*^9}, {3.677501509621435*^9, 
  3.677501513064479*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {GrayLevel[0], PointSize[0.011111111111111112`], AbsoluteThickness[
          1.6], 
          StyleBox[LineBox[CompressedData["
1:eJxtl3k81Pv3x2fs2zAbuUqRJRVdKmn3PtWlKJVKRZaUhKRVJbqTJeKWFqlI
aVORiCgRgxSpxh7Zi5CbLZIlvv3u+/z584/H83HmNc/Pct7nPEbT2cvaRYzB
YBxkMhj/9////SPhROzG39eb03uXUr5B9IXQstNZ0vQ/3nePNDjusWW0ciiT
JOKWrO8dJa9NOSSVuLwxOx27eg5+/inprAzxlZBbRHlLJpl2fJL1tDcE8znE
TWb2a/tr5pQjcsmMyvJ2duk6/L58MkXO4HCQ20bKvgVkcE64e+B9G/z+1+TA
9KvFoYO2lHcWkQ0tK60vPXBCXzEhf1Wcj5PZQXn1O8K/5NLhY7sT/SLiyzhz
/uCNXZSjSsjkP8M7mpLc8XpKyT9Nsyxl/fZSPltGwiY27J5luw+vr5yotOnu
/PZ5P2X/CnJa79XhprxDeL2VxHeLZkpq0BHK3lUkI6sAejnH8Po/kAlNPE+W
yIeyezVhTumxsarzw/upIcyZuoGjhwSUHT6SRSNWrDVWJ/H+aknkuU8T28eR
resI6+iu6XfdAvB+68nOls6BM3OCKJs1kNu31BjGG0/h/TeS7DWac86qB1NW
byJzXI5o2FaF4PNoIpqRShotc8MoT2gmK+9UWO+v+QefTzNJWG0h2Dp0hjLn
E1nmpDZ1QnM4Pq9PxHr9/dyxhecpy38mR075BPUZXcDn95lsF0xJqXqKLNlC
PI5OjuB4X8Tn2UK0zga8mpYWQXm8hcg9N37y9eUlfL6tZO6Kam7uskjKQ63E
xEPPwXcI2fsLWbjZuiB71xXK37+QQ8cfTF2dfxWffxvhFxddLD4TRflbG7E5
sSol+Wg0vo92MllqLtNEKYZyWzsJ7r6WVpN+Hd9PB0muV9bQfXaDcnMHmW/3
7LEKicX39ZVoxK72aulHrv1KYrb43Xd+dxPfXyepcDsx6W/zW5QrO8mOkbeL
34UjW/9L6rPaP/0z/zZl0b/k7iHfHQ+n3MH3+41kDVpaVWUiF30jT0+eY5rr
3MX33UVGPVlht5uR87vIP6tqj/r0xeH77yaZwlYLe9E9yi+6ydaoLVWc9fex
H3qI3NWUWQnjlAV2PaTCUj9AbUI89kcP8ZD3DAj7RVlQ3UOCTopNP7AzAful
l0hw+pNiOykLNvWSC2/HVKu+PsT+6SUFn1X3p1Qk0npZL+EY5I8YrX+E/dRH
EltctU3rKQvW9pG5wesq6r8mYX/1kULu20KVM8m0/raPRCc689O/JWO/fSdT
lr2TqF/0mNZXfSf+pQoqu4sfY/99J8tjtt4o8U6h9Vffyet7phXidSnYj/2k
QE+rOnZiKq0v7yebuzPTqy+lYn/2E7H82a3NRk9oXdhP7Ap+pPlHPsF+7Sej
Z7al1IiwvmSAbA6Z9+TYgjTs3wGyc56od6iJsuD5AAkJ2rf4jEc69vMA6dHf
7diaQVlg8oOoZuQpHZz1FPv7B3l2cNnoSB9lwZMfRFOnczQv6hn2+w+i5LUs
LaWPssBokHia/Z15wSED+3+QqGZ9i+1gP6f1R4Ok5UOFQdLj53geBsnkoZ+2
BeKZtD7zJ7kycQpsXJeJ5+MnySzc5/e9A+v3fxLHd7s0zkVl4Xn5SaQXDC6V
ZL6gdZ0hMstl+mrz9S/w/AyR+KXdp4LHsH5riKhF9cQ4V2XjeRoiCS9z3B84
5tD6lGHikisKd8rLwfM1TDaoKvIuzRPS+rVhkqXrCXduCvG8DZOBKi2F8K9Y
/2OE5INIu5OTi+dvhGiGLg+3XUdZEDlC+uvgLDMV65Uj5Gx4u9/BcazzRknD
wg/NC6bm4fkcJXrvBEEb7SkLzo0SRwd/i+Q3WBeNksXvjw78MSOf1lm/yOlX
Pq7KTvl4fn8ROe1b1zruYD30F9FUOrC4TOUlnudfxETbLkE7kLJAeozc0N6f
05OLdbMxskllq/P5H1gPHCNbNsUXKm4uwPM+RsZ+Fk27lEtZwBwnDrGTvnwc
xDoZJytP/9pcNukVrZ8YJxInoyP0vF/hPBgn6/+YXXj5C9ZHxgnJ1DaZbvAa
5wMDkuqLBc+cKJPFDNiywH/zPOFrnBcMUBUbWKMOhf+x0IcBrnd26DjfLMT5
wYB89XnNUTWUSQYDCpv5O4T6RThPGFCe3VwxFE9ZOMiAqywnSyvZNzhfmPBq
xcWJWkaUyTwmtDoVtmzY9wbnDROKuzUW9jVTFh5iAvvwSsF+KMb5wwTxiKrq
3AOUSSoTlNQF/jKpxTiPmHCI+6ee14y3NN/LBBubf9pC497ifBIDb2H15bc9
lImhGIw0XUnsmP0O55UYLE6OLGAlUhbuFYPrTqf1rOe8x/klBkdypno3+FAm
iWKQJpu61/Lhe5xnYvD8fOJxTY6I5jvFQBR673FmiAjnmzhkBWTv5ogokxni
sHN3/4YtwyKcd+JgE/B9uvH0EprfLQ4GLWnBge4lOP/EoSs3YsL8a5TJPXHw
3XAEbj8rwXkoDvXdn+9Ut2G+VRwOe3YJA2eX4nyUgEyZIy6ueygTbQnQ09N4
fup0Kc5LCUhru0WCUygLnSWg4U3IqdbvmPeXgIrWYLGM6WU0f1MCTO9rumsv
L8N5KgHW1q9VIxwpCxslgLGppLPwShnOVwmwd8pItq/E/GRJiPbfzqsYwPwS
SZjNmBQfxiun+W2SsH3/laruDeU4fyVBdFelcVMMZRItCbK8oip2YTnOY0k4
lTQ59lwH5mskoXa+ez9LtwLnsyRsnOhoEL6HMlGVgu9ze8aLL1fgvJaC1KhX
P4OTKAttpMA3Y9th81rMe0tBD5e3IH5SJc1fkoLBH4a5hhaVOM+lwGNN2/U3
DpSF5VIQ9vDzMdfTlTjfpWBuqV/h8zLMc6XB0zJO5bVCFc57aXiv/NFpTJ+y
cJ00PFh00ibDrgrnvzSMhKoyR+9SJuHSMNv4p59UG+YfSUNT9eNP0TIfaP6d
NDgtrtp8evoH3A/ScKw1/OU5V8pEQQbE1krVDt/9gPtCBhZM2TPon4t5CxmI
+LOm4mk15t1lwMjFszaAV03zp2WgpTgis92mGveJDNyP65vg6kdZ+FoGQoyd
ycSYatwvMuDf4WxW9RHzUrLgJ9JJ+ndaDe4bWZBYmexabkdZuEIWVvUXDq31
qcH9Iwujlpa/6hIpkwBZ6OuK458dxPwtWTBY7F72eNpHms+VhazqliWeCz/i
fpKFl1D/KHM7ZcKQg1usxosP7nzEfSUH4Yz4byNVmF8qB9c/nY0e78a8gxxY
BT6L6ZtQS/N+cnDOWak8xLEW95kcaFhbBindpizMlAOvHQUZEoW1uN/kYGx4
XEy3C/PDclCTXdN52bgO9508rE18NHuaL2XhfHmwdqvaNRZdh/vvNy+3K+Gn
UyZH5MEo/sxzXg/mI+UhJnQ9L2RWPc2nyYOo736YuVU97kd5WP/SRO3FTsqk
Xx6CD3OH2q7U475UANv9T0QmTZifrQCRy88q+LAbcH8qgOlfmxIq9CmT/Qpg
pFink72jAfepAii95c1UeUJZmKQAdkO+eYZfMS9SAM+c2rpk8Uaa71KALB+F
dccNG3HfsiCf/DpQeIiyUJ8FliVP1lTebcT9y4Ks3NzhqgzMe7Ag2Fve26ca
86Es0CmZaG8h30TzD1iQcF3lWrReE+5nFpTNfLty0zzKpJ0FJ/0ulAWbNeG+
VgTXPDv1JjfM6yqCwx6mfMgZzJspQk6PnK3nDcy7KMI+l6/uDUmYD1SEN1Wr
R/1EmL+tCMmzdjg96MF8viLcXr20JYTZTPOfFMGItWbTIvlm3PdK4NBwVYY9
lbJQQwmMbVky8dCM+18Jzn+J1pTdiHlHJeDlpk2y3ob5E0qwanjmvusHMR+j
BLddDl41uIL5F0qwjjUvQuox5uuUoHdh6jmnbMyP/P78wYR3VlWUnVhsCDWW
KbIfxrw6G2qMjNIvKn/6j2P12ZD677ZbRpqUyWI27DUQ+3OnIeUmSzaEuHlp
WFpRFtixYWBGfMyk3ZQ1PNjw+Uw2c9k+ykIfNnQ9nCo+5zhlp1A2DFuEWRRd
ocyIYsMeefJ9YTr6H7Ah8KJ684aX6M9gw8mbm+92l6G/8DevD7wd0Iv+ajZ4
v399PIz3mfrb2WCUeMx+vy5l4SAbstrNtmQbUXaS5gBPcZszy4IyYwIHtNKa
dV66UY7V5YDmu5N/+hyjTOZxwMM7ptH8BOWmvzjgPysya+J5yoJNHHipf/Bc
+iP0u3Cg3qJxfp4Q/Yc4sLQ/54+fhegP5MAP8aPVZnXoj+DAQFxNtdYv9N/m
gLHkgbPbJ7RQfyoHCjqy1Qy1KDflceD9m4MeFXMoC8o4sFziS8KTDZQ1PnEg
3r5s7x1PysJeDqyN1un8dYiyE5MLbYqhpqUnKDM4XNAJSPRbfIVyrAYXAtY8
7zVNQr8hF7TMfB2WPEW/KRe2v1fW/zsH/Wu5EJ/lOiXyA/oduSC39Iv25X70
7+WC06elWT3irdR/ggtKD+uGI1iUGWe5EGa8LddPl3JsDBcMUzP7H5pRJolc
WGnocv2IDeWmLC6E8kVRgm2UBW+5YLLeLlzNi7JGHRfiTCdmWJ2mLOzkwlZO
3oyPkegf+X09CzVvFl5FvzwP3ll7uW6LQ78aD1hd5moThOifwYM80XJHj3L0
L+BBHPvCjWM16F/Fg8BjGxUnt6F/Kw+i7378piP5hfp380BDYYmkiTplp6M8
YKw4Ki2hQ5kRwoNdk5c/O2pIOfYyD154nihxX0WZ3OPBh8hjDkEOlJvSeRBe
WWf8dQdlwSsePDIrbixzpaxRxYM7X7KXDh5DfysP3o/a7r0fjv4BHuhuLlxW
FYl+ST7461YukopCP58P4GVywuAR+rX5EFZaM6BXhP45fOioTNGKrkT/cj4U
j6wJvFGL/g18yJgMlXZd6HfmQ8xFBf8S6TbqP8AHkzz76AQ+ZYY/H1xrfX4v
GMqx5/lgwEz2+jyFMrnJB/fCiE0Ncyk3Jf/+vuo9+o2EskDIh2fRh2ZamlLW
KOHDUn6BVooZZWEjH8pL5ezc7NHfzYddbSoLGHvRP86HM7JLIp7sR7+iMpxX
93o69Tj6JyvDv6nHvaddQL+BMgSJptnrxKF/iTKEXFykxk5A/xpl2LXhwj7n
R+jfpgxFjruOz81B/x5leLgiz6akBP2+yrA1fWteSin6w5RB9vcvhg0i9Ecr
g9LYedO2OvTHK8P8oIdfhV3of64MOm47iiy+o/+NMrgJuDdZ/eivUQb/qHuq
5mLt1N+hDPx7y/PkVCkzhpRhb2n2x4SplGNlVGBl2/yaBVqUiaoKhIxoFagb
UG6apgI/KxJ01IGywEQFWKUvS91WUdYwV4FgNRmrySsoC21UQG8Ts/6ROfp3
qYCXzalj0zej31sFrmgZNdQ4oD9IBQ48dZZn2aH/kgpkrfHQzrdvN/0feAzI
gg==
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.011111111111111112`], 
          AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
          StyleBox[LineBox[CompressedData["
1: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
V8Qd
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->{FontSize -> 15},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\\n \
\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.01\\n \\!\\(\\*SubscriptBox[\\(k\
\\), \\(2\\)]\\)=0.1\"", FontSize -> 14, StripOnInput -> False], 
          TraditionalForm]], {1, 0.3}, {Left, Top}],
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->{{0, 370000.}, {0, 0.7621792400958096}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"Original Result\"",
       "\"Remove Diagonal Elements of Slow Perturbation\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   BaseStyle->{FontSize -> 15},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Transition Probability with New Slowly Varying Perturbation\"", 
     TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          GrayLevel[0]], 
         Line[CompressedData["
1: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
gg==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.011111111111111112`], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0.5, 0], 
          Dashing[{0.03, 0.03}]], 
         Line[CompressedData["
1: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
V8Qd
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 370000.}, {0, 0.7621792400958096}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, Epilog -> 
      Inset[
        Style[
        "\!\(\*SubscriptBox[\(A\), \(1\)]\)=0.000035\n \!\(\*SubscriptBox[\(k\
\), \(1\)]\)=1\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=0.01\n \
\!\(\*SubscriptBox[\(k\), \(2\)]\)=0.1", FontSize -> 14], {1, 0.3}, {
        Left, Top}], Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Larger, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> 
      "Transition Probability with New Slowly Varying Perturbation", 
      PlotRange -> {{0, 370000.}, {0, 0.7621792400958096}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0]], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0.5, 0], 
         Dashing[{0.03, 0.03}]]}, {
       "Original Result", "Remove Diagonal Elements of Slow Perturbation"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> GrayLevel[0], LegendLayout -> 
       "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.682095238718375*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Shift out of resonance", "Subchapter",
 CellChangeTimes->{{3.67741727555169*^9, 3.677417284480345*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a2prime", "=", 
  RowBox[{"1", "*", 
   RowBox[{
    SqrtBox[
     RowBox[{"2", "*", "1", "*", "a1", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "thetam"}], "]"}]}]], "/", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "thetam"}], "]"}], "^", "2"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2prime", " ", "=", "k2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dellamSlowPrime", "=", 
  RowBox[{"deltalambda", "[", 
   RowBox[{"a2prime", ",", "k2prime", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6774173351984253`*^9, 3.677417356512639*^9}, {
   3.6774174245087852`*^9, 3.677417509530342*^9}, 3.677417577811496*^9, 
   3.6774244718130713`*^9}],

Cell[BoxData["0.019030354944365512`"], "Output",
 CellChangeTimes->{{3.6774175017488127`*^9, 3.677417510022403*^9}, 
   3.677417579463266*^9, 3.677424472157159*^9, 3.67793630828004*^9}],

Cell[BoxData[
 RowBox[{"0.019030354944365512`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"0.1`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6774175017488127`*^9, 3.677417510022403*^9}, 
   3.677417579463266*^9, 3.677424472157159*^9, 3.6779363082852716`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sys5", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime"}], ")"}], 
        
        RowBox[{"Cos", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime"}], ")"}], 
        
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], ",", 
       RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psi1", "[", "0", "]"}], ",", 
      RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.677417527818676*^9, 3.67741757177073*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.019030354944365512`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.019030354944365512`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
         RowBox[{"0.000035000000000000004`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.019030354944365512`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.019030354944365512`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
         RowBox[{"0.000035000000000000004`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.6774175884146233`*^9, 3.677936308324256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol5", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"sys5", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67741760042684*^9, 3.6774176010566263`*^9}, {
  3.677418048076532*^9, 3.677418048417234*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.677418068845847*^9, 3.677936327694689*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol5List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol5"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sol5List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slow Rotating Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a2prime", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2prime"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6000"}], ",", "0.06"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677418068231207*^9, 3.677418180124075*^9}, {
  3.67742427850285*^9, 3.67742427914135*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a2prime2", "=", 
  RowBox[{"10", "*", 
   RowBox[{
    SqrtBox[
     RowBox[{"2", "*", "1", "*", "a1", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", "thetam"}], "]"}]}]], "/", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"2", "thetam"}], "]"}], "^", "2"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k2prime2", "=", "k2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dellamSlowPrime2", "=", 
  RowBox[{"deltalambda", "[", 
   RowBox[{"a2prime2", ",", "k2prime2", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6774173351984253`*^9, 3.677417356512639*^9}, {
   3.6774174245087852`*^9, 3.677417509530342*^9}, 3.677417577811496*^9, 
   3.6774244718130713`*^9, {3.677425736897233*^9, 3.677425755848586*^9}}],

Cell[BoxData["0.19030354944365513`"], "Output",
 CellChangeTimes->{{3.6774175017488127`*^9, 3.677417510022403*^9}, 
   3.677417579463266*^9, 3.677424472157159*^9, {3.677425745484284*^9, 
   3.6774257564769993`*^9}, 3.677432911838848*^9, 3.677936327876686*^9}],

Cell[BoxData[
 RowBox[{"0.19030354944365513`", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"0.1`", " ", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6774175017488127`*^9, 3.677417510022403*^9}, 
   3.677417579463266*^9, 3.677424472157159*^9, {3.677425745484284*^9, 
   3.6774257564769993`*^9}, 3.677432911838848*^9, 3.677936327881866*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sys6", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"I", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
    "\[Equal]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime2"}], ")"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime2"}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetam"}], "]"}], 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], ",", 
       RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"psi1", "[", "0", "]"}], ",", 
      RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.677417527818676*^9, 3.67741757177073*^9}, {
  3.677425759497287*^9, 3.677425772015978*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.19030354944365513`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.19030354944365513`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
         RowBox[{"0.000035000000000000004`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.19030354944365513`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000035000000000000004`", " ", 
             RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}], " ", 
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"0.19030354944365513`", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
         RowBox[{"0.000035000000000000004`", " ", 
          RowBox[{"Sin", "[", "x", "]"}]}]}], ")"}]}]}]}], "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.6774175884146233`*^9, 3.677425774484133*^9, 
  3.6779363278978767`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol6", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"sys6", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.67741760042684*^9, 3.6774176010566263`*^9}, {
  3.677418048076532*^9, 3.677418048417234*^9}, {3.6774257771654654`*^9, 
  3.677425780384309*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.677418068845847*^9, 3.677425799296733*^9, 
  3.67793634759861*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol6List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol6"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.677418068231207*^9, 3.677418180124075*^9}, {
  3.67742427850285*^9, 3.67742427914135*^9}, {3.6774257831599083`*^9, 
  3.677425792979804*^9}, {3.6774259129746323`*^9, 3.677425913109044*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol6List2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol6"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"sol6List2", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slow Rotating Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a2prime", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2prime"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "6000"}], ",", "0.06"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.677425910680636*^9, 3.677425938274453*^9}, {
  3.677432866403965*^9, 3.677432866833972*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sol4List", ",", "sol5List", ",", "sol6List"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slow Rotating Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2prime"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "@", "a2"}]}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime"}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
              "1"}]]}], "]"}], ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2prime", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
              "1"}]]}], "]"}], ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2prime2", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
              "1"}]]}], "]"}], ",", "Orange"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677424052836286*^9, 3.677424092971932*^9}, {
  3.677424317032323*^9, 3.677424322265193*^9}, {3.677424357434716*^9, 
  3.677424424846456*^9}, {3.67742580180079*^9, 3.6774258584488487`*^9}, {
  3.6774292040221653`*^9, 3.677429217398094*^9}, {3.6774292590076103`*^9, 
  3.6774293268521643`*^9}, {3.677429393677479*^9, 3.677429423946278*^9}, {
  3.677430094972361*^9, 3.677430101346238*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"k1", "-", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a2", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", "1"}]]}],
     "]"}], "/", 
   RowBox[{"(", 
    RowBox[{"a1", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "thetam"}], "]"}]}], ")"}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"k1", "-", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a2prime", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", "1"}]]}], 
   "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"a1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "thetam"}], "]"}]}], ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"k1", "-", 
    SqrtBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a2prime2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", "1"}]]}], 
   "]"}], "/", 
  RowBox[{"(", 
   RowBox[{"a1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2", "thetam"}], "]"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.677430119538402*^9, 3.677430139168592*^9}, {
   3.677430186719398*^9, 3.677430220890986*^9}, {3.677430335629159*^9, 
   3.677430430995249*^9}, 3.677430658727845*^9, 3.677430706991699*^9}],

Cell[BoxData["1.116885050379158`"], "Output",
 CellChangeTimes->{{3.67743041041365*^9, 3.677430431439004*^9}, 
   3.6779363479231567`*^9}],

Cell[BoxData["4.0446864359581856`"], "Output",
 CellChangeTimes->{{3.67743041041365*^9, 3.677430431439004*^9}, 
   3.677936347927787*^9}],

Cell[BoxData["402.2769054595258`"], "Output",
 CellChangeTimes->{{3.67743041041365*^9, 3.677430431439004*^9}, 
   3.677936347931172*^9}]
}, Open  ]],

Cell["\<\
One simple question: 

Does the z component of the perturbation matter in this case?\
\>", "Text",
 CellChangeTimes->{{3.6775022680960627`*^9, 3.677502289023123*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sol4List", ",", "sol5List", ",", "sol6List"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Orange", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with New Slow Rotating Perturbation\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2prime"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "@", "a2"}]}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime"}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{"a1", " ", ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", "a2", " ", ")"}], "^", "2"}], "+", "1"}]]}], 
           "]"}], ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{"a1", " ", ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", "a2prime", " ", ")"}], "^", "2"}], "+", "1"}]]}], 
           "]"}], ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{"a1", " ", ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", "a2prime2", " ", ")"}], "^", "2"}], "+", "1"}]]}],
            "]"}], ",", "Orange"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6775022956985083`*^9, 3.677502305049185*^9}, {
  3.677502338413349*^9, 3.6775023487537107`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Theory", "Subchapter",
 CellChangeTimes->{{3.677426098335491*^9, 3.6774260988940697`*^9}}],

Cell["\<\
We are treating the second slow perturbation as a shift of energy gap, which \
means we could predict the wavelength etc

Rabi oscillation has a oscillatary transition probability predicted by the \
formula we provided in the beginning of this notebook.\
\>", "Text",
 CellChangeTimes->{{3.677426102183495*^9, 3.6774261630142527`*^9}, {
  3.6774268344283113`*^9, 3.677426855801278*^9}, {3.677429244801359*^9, 
  3.6774292539290743`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory1List", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"probRabi", "[", 
         RowBox[{
          RowBox[{"a1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", "1", ",", "x"}],
          "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theoryNumerical1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"theory1List", ",", "sol1List"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Black"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
       "\"\<Probability\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "[", "a1", "]"}]}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=1\>\""}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Theory\>\"", ",", "\"\<Numerical\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6774269593393087`*^9, 3.677426972765617*^9}, {
   3.6774270310987673`*^9, 3.677427034738297*^9}, 3.6774270688901587`*^9, {
   3.677427153006765*^9, 3.677427299372982*^9}, {3.677427351253702*^9, 
   3.6774273557934513`*^9}, {3.677428564312091*^9, 3.677428571370194*^9}}],

Cell["Adding back the slow perturbation", "Text",
 CellChangeTimes->{{3.677427359291123*^9, 3.677427366145896*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theory3List", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"probRabi", "[", 
         RowBox[{
          RowBox[{"a1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"a2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
            "1"}]], ",", "x"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theoryNumerical2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"theory3List", ",", "sol3List"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Red", ",", "Black"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Transition Probability with Slow Perturbation\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
       "\"\<Probability\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "[", "a1", "]"}]}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=1\>\"", "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "@", "a2"}]}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "k2"}]}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Theory\>\"", ",", "\"\<Numerical\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.677427371411893*^9, 3.6774274553642693`*^9}, {
  3.6774284512279797`*^9, 3.67742845699339*^9}, {3.677428496343055*^9, 
  3.677428541583881*^9}, {3.677428579015407*^9, 3.677428581102797*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"theoryNumerical12", "=", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "theoryNumerical1", "}"}], ",", 
      RowBox[{"{", "theoryNumerical2", "}"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6774285861733017`*^9, 3.67742864218083*^9}, 
   3.677431975743183*^9, 3.677936437506041*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotating Perturbation", "Subchapter",
 CellChangeTimes->{{3.677501240940054*^9, 3.6775012441958323`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sys7", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dellam", "[", "x", "]"}], "+", 
           RowBox[{"dellamSlow", "[", "x", "]"}]}], ")"}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"dellam", "[", "x", "]"}], "+", 
           RowBox[{"dellamSlow", "[", "x", "]"}]}], ")"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"dellamSlow", "[", "x", "]"}], ")"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "thetam"}], "]"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol7", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"sys7", ",", 
     RowBox[{"{", 
      RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol7List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol7"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.677350187151108*^9, 3.677350281470613*^9}, {
   3.677431991717648*^9, 3.67743199877947*^9}, {3.67743210670157*^9, 
   3.677432122052*^9}, {3.677432496566596*^9, 3.677432501171974*^9}, {
   3.6779366139689817`*^9, 3.677936622130319*^9}, 3.677937044780307*^9, {
   3.6779378827054768`*^9, 3.677937886383317*^9}, {3.6779380856608047`*^9, 
   3.677938090642438*^9}, {3.677938139043167*^9, 3.677938143684628*^9}, 
   3.677938186591881*^9, {3.6779414512952538`*^9, 3.677941473148705*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys8", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime"}], 
           ")"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime"}], 
           ")"}], 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", "dellamSlowPrime", ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol8", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys8", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol8List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol8"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.677417527818676*^9, 3.67741757177073*^9}, {
   3.677432309756526*^9, 3.67743233180479*^9}, {3.677432513045628*^9, 
   3.677432520084536*^9}, {3.677936627489231*^9, 3.6779366350661373`*^9}, 
   3.677937048812503*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys9", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime2"}], 
           ")"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellam", "[", "x", "]"}], "+", "dellamSlowPrime2"}], 
           ")"}], 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", "dellamSlowPrime2", ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol9", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys9", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol9List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol9"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.677417527818676*^9, 3.67741757177073*^9}, {
   3.677425759497287*^9, 3.677425772015978*^9}, {3.677432387739024*^9, 
   3.677432404594922*^9}, {3.677432596733511*^9, 3.677432638866243*^9}, {
   3.6779366374470377`*^9, 3.677936640786221*^9}, 3.677937052291315*^9}],

Cell["Theories of these cases", "Text",
 CellChangeTimes->{{3.67743303826091*^9, 3.677433043581181*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theory7List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi", "[", 
        RowBox[{
         RowBox[{"a1", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a2", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
           "1"}]], ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory8List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi", "[", 
        RowBox[{
         RowBox[{"a1", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a2prime", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
           "1"}]], ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.677433047873081*^9, 3.677433048349983*^9}, {
   3.677433353588112*^9, 3.6774333623522987`*^9}, {3.67793669447392*^9, 
   3.677936698115964*^9}, 3.677937587354622*^9, 3.6779418523216543`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "sol7List", ",", "sol8List", ",", "theory7List", ",", "theory8List"}], 
    RowBox[{"(*", 
     RowBox[{",", "sol10List", ",", "theory10List"}], "*)"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Lighter", "@", "Black"}], ",", "Orange", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dotted"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dotted"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with Rotating Field\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2prime"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "@", "a2"}]}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime"}]}], ",", 
        RowBox[{
        "\"\<Rabi Formula of \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "@", "a2"}]}]}], ",", 
        RowBox[{
        "\"\<Rabi Formula of \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677433146846634*^9, 3.677433194823674*^9}, {
  3.677433233724113*^9, 3.67743341177783*^9}, {3.677434882963068*^9, 
  3.677434925395677*^9}, {3.677937600453727*^9, 3.6779376178442593`*^9}, {
  3.6779376570439463`*^9, 3.677937658630745*^9}}],

Cell["A not so perfect part", "Text",
 CellChangeTimes->{{3.677433131551251*^9, 3.677433140030509*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "sol7List", ",", "sol8List", ",", "sol9List", ",", "theory7List"}], "}"}],
    ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Orange", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Lighter", "@", "Black"}], ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.02", ",", "0.02"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability with Rotating Field\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k2prime"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "@", "a2"}]}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime"}]}], ",", 
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "a2prime2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
              "1"}]]}], "]"}], ",", "Black"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2prime", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
              "1"}]]}], "]"}], ",", "Orange"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ampRabi", "[", 
           RowBox[{
            RowBox[{"a1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", "thetam"}], "]"}]}], ",", "k1", ",", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"a2prime2", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"2", "thetam"}], "]"}]}], ")"}], "^", "2"}], "+", 
              "1"}]]}], "]"}], ",", "Blue"}], "}"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677432199235545*^9, 3.677432200030945*^9}, {
  3.677432428152638*^9, 3.677432430464471*^9}, {3.677432578207655*^9, 
  3.677432578676898*^9}, {3.677432798294808*^9, 3.67743281305221*^9}, {
  3.677433010825292*^9, 3.6774331091270447`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Demonstrate Pure Rabi", "Subchapter",
 CellChangeTimes->{{3.677941958045685*^9, 3.6779419620107107`*^9}}],

Cell["We can chose amplitude of a2 according to the desired Q", "Text",
 CellChangeTimes->{{3.683305449222735*^9, 3.683305492360263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a2FromQ", "[", 
    RowBox[{"q_", ",", "a1_"}], "]"}], ":=", 
   SqrtBox[
    RowBox[{"2", "a1", " ", "q"}]]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"a2FromQ", "[", 
  RowBox[{"0.001", ",", "a1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"a2FromQ", "[", 
  RowBox[{"1", ",", "a1"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"a2FromQ", "[", 
  RowBox[{"3", ",", "a1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.683305498376093*^9, 3.6833055455921507`*^9}, {
  3.683899014444469*^9, 3.683899021205122*^9}}],

Cell[BoxData["0.00044721359549995795`"], "Output",
 CellChangeTimes->{
  3.683305545929885*^9, {3.683899000163682*^9, 3.683899021562356*^9}, 
   3.683909818048499*^9, 3.68390991882021*^9, 3.683983836019793*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"50", " ", 
   SqrtBox["2"]}]]], "Output",
 CellChangeTimes->{
  3.683305545929885*^9, {3.683899000163682*^9, 3.683899021562356*^9}, 
   3.683909818048499*^9, 3.68390991882021*^9, 3.683983836027398*^9}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   FractionBox["3", "2"]], "50"]], "Output",
 CellChangeTimes->{
  3.683305545929885*^9, {3.683899000163682*^9, 3.683899021562356*^9}, 
   3.683909818048499*^9, 3.68390991882021*^9, 3.683983836034018*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"k2P", "=", "0.01"}]], "Input",
 CellChangeTimes->{{3.678020447381606*^9, 3.678020451561112*^9}, {
  3.678020488568493*^9, 3.6780204899360943`*^9}, {3.678020698308309*^9, 
  3.67802069883358*^9}, {3.6780208534061317`*^9, 3.678020854067958*^9}, {
  3.6780210886760807`*^9, 3.6780210889407187`*^9}}],

Cell[BoxData["0.01`"], "Output",
 CellChangeTimes->{
  3.67802045271954*^9, 3.678020490613916*^9, {3.678020699549529*^9, 
   3.6780207067584257`*^9}, {3.678020855294916*^9, 3.67802085938783*^9}, {
   3.6780210951669483`*^9, 3.6780210992175694`*^9}, 3.679928743924159*^9, 
   3.681149495291499*^9, 3.682095238767726*^9, 3.6830585313151617`*^9, 
   3.6832062527853937`*^9, 3.683899007030731*^9, 3.683909819602777*^9, 
   3.683909920219393*^9, 3.683983837576603*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"a2Critical", "=", 
  RowBox[{"N", "@", 
   SqrtBox[
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"a1", "+", "k1", "-", "1"}], 
      ")"}]}]]}]}], "\[IndentingNewLine]", 
 RowBox[{"a2PureRabi", "=", 
  RowBox[{"N", "@", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"a2FromQ", "[", 
      RowBox[{"0.001", ",", "a1"}], "]"}], ",", 
     RowBox[{"a2FromQ", "[", 
      RowBox[{"3", ",", "a1"}], "]"}]}], "}"}], 
   RowBox[{"(*", 
    RowBox[{"a2PureRabi", "=", 
     RowBox[{"N", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "*", "a1"}], ",", "0.015"}], "}"}]}]}], "*)"}], " ", 
   RowBox[{"(*", 
    RowBox[{"N", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a2", "*", "2"}], ",", 
       RowBox[{"a2", "*", "3"}]}], "}"}]}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.677943347461932*^9, 3.677943399210307*^9}, {
   3.6779435621057043`*^9, 3.6779435645999413`*^9}, {3.677943747155642*^9, 
   3.677943747339094*^9}, {3.677943848327045*^9, 3.677943894751823*^9}, {
   3.677943991915407*^9, 3.677944025484185*^9}, {3.677945642364523*^9, 
   3.677945672203589*^9}, {3.677945742660581*^9, 3.6779457429880342`*^9}, {
   3.677945950168651*^9, 3.67794598537551*^9}, {3.6779462211842737`*^9, 
   3.677946223205015*^9}, {3.6779477307206087`*^9, 3.6779477315055113`*^9}, {
   3.683058557811537*^9, 3.6830585603871613`*^9}, {3.683058718182921*^9, 
   3.683058737649048*^9}, {3.6833057061937103`*^9, 3.683305771903357*^9}, 
   3.683899040987074*^9, {3.683899085495768*^9, 3.6838991161528482`*^9}}],

Cell[BoxData["0.014142135623730949`"], "Output",
 CellChangeTimes->{{3.677943354617457*^9, 3.6779434006380453`*^9}, 
   3.6779435654733963`*^9, {3.6779438772970037`*^9, 3.677943895097608*^9}, 
   3.677943993604925*^9, 3.677944032930526*^9, {3.6779456655350037`*^9, 
   3.6779456727720823`*^9}, 3.677945743387282*^9, {3.677945951044408*^9, 
   3.677945999905205*^9}, {3.677946224305681*^9, 3.67794623277135*^9}, 
   3.67802070726584*^9, 3.6780208598214903`*^9, 3.678021099584154*^9, 
   3.679928744047812*^9, 3.679929020303257*^9, {3.681149493171233*^9, 
   3.6811494972105503`*^9}, 3.6820952388751173`*^9, 3.683058532652049*^9, 
   3.68305860100065*^9, 3.683058738698929*^9, 3.6832062535642643`*^9, 
   3.683305774797997*^9, {3.683899027235096*^9, 3.683899041362936*^9}, {
   3.683899111010519*^9, 3.683899116454891*^9}, 3.683909820482498*^9, 
   3.6839099210108223`*^9, 3.683983838354289*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00044721359549995795`", ",", "0.02449489742783178`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.677943354617457*^9, 3.6779434006380453`*^9}, 
   3.6779435654733963`*^9, {3.6779438772970037`*^9, 3.677943895097608*^9}, 
   3.677943993604925*^9, 3.677944032930526*^9, {3.6779456655350037`*^9, 
   3.6779456727720823`*^9}, 3.677945743387282*^9, {3.677945951044408*^9, 
   3.677945999905205*^9}, {3.677946224305681*^9, 3.67794623277135*^9}, 
   3.67802070726584*^9, 3.6780208598214903`*^9, 3.678021099584154*^9, 
   3.679928744047812*^9, 3.679929020303257*^9, {3.681149493171233*^9, 
   3.6811494972105503`*^9}, 3.6820952388751173`*^9, 3.683058532652049*^9, 
   3.68305860100065*^9, 3.683058738698929*^9, 3.6832062535642643`*^9, 
   3.683305774797997*^9, {3.683899027235096*^9, 3.683899041362936*^9}, {
   3.683899111010519*^9, 3.683899116454891*^9}, 3.683909820482498*^9, 
   3.6839099210108223`*^9, 3.6839838383609247`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dellamPureRabiSin", "[", "x_", "]"}], ":=", 
   RowBox[{"a2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k2P", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamPureRabiCos", "[", "x_", "]"}], ":=", 
   RowBox[{"a2", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k2P", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamSin", "[", "x_", "]"}], ":=", 
   RowBox[{"a1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k1", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamCos", "[", "x_", "]"}], ":=", 
   RowBox[{"a1", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k1", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dellamPureRabi1Sin", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a2PureRabi", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k2P", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dellamPureRabi1Cos", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a2PureRabi", "[", 
    RowBox[{"[", "1", "]"}], "]"}], " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"k2P", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dellamPureRabi2Sin", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"a2PureRabi", "[", 
    RowBox[{"[", "2", "]"}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k2P", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamPureRabi2Cos", "[", "x_", "]"}], ":=", 
   RowBox[{
    RowBox[{"a2PureRabi", "[", 
     RowBox[{"[", "2", "]"}], "]"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k2P", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"dellamPureRabi3Sin", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"a2PureRabi", "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"k2P", " ", "x"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"dellamPureRabi3Cos", "[", "x_", "]"}]}], ":=", 
     RowBox[{
      RowBox[{"a2PureRabi", "[", 
       RowBox[{"[", "3", "]"}], "]"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"k2P", " ", "x"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dellamSlowCriticalSin", "[", "x_", "]"}], ":=", 
  RowBox[{"a2Critical", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"k2P", " ", "x"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamSlowCriticalCos", "[", "x_", "]"}], ":=", 
   RowBox[{"a2Critical", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"k2P", " ", "x"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamCoordSin", "[", "x_", "]"}], ":=", 
   RowBox[{"a1", " ", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"k1", " ", "x"}], "]"}], "/", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "thetam"}], "]"}]}], "*", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dellamCoordCos", "[", "x_", "]"}], ":=", 
   RowBox[{"a1", " ", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"k1", " ", "x"}], "]"}], "/", 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "thetam"}], "]"}]}], "*", "2"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.677938007732128*^9, 3.677938019355884*^9}, {
  3.677938098619574*^9, 3.677938125569806*^9}, {3.677941300597641*^9, 
  3.677941340125958*^9}, {3.677942834561676*^9, 3.6779428447994003`*^9}, {
  3.677943407563744*^9, 3.677943418530246*^9}, {3.677944062887866*^9, 
  3.6779440914684963`*^9}, {3.677945685773744*^9, 3.677945765944879*^9}, {
  3.677945813489373*^9, 3.67794582090478*^9}, {3.677946010305654*^9, 
  3.677946024080698*^9}, {3.6780204594271183`*^9, 3.6780204838160887`*^9}, {
  3.678034178169216*^9, 3.6780342527528954`*^9}, {3.6780349195028048`*^9, 
  3.67803493172593*^9}, {3.679928980877289*^9, 3.679928983799905*^9}}],

Cell["The one perturbation case", "Text",
 CellChangeTimes->{{3.677936483357237*^9, 3.677936491291479*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys10", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dellamCos", "[", "x", "]"}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dellamSin", "[", "x", "]"}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol10", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"sys10", ",", 
     RowBox[{"{", 
      RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol10List", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "sol10"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.677936494890929*^9, 3.677936521851336*^9}, {
   3.677936552735334*^9, 3.677936563213619*^9}, {3.677936653530761*^9, 
   3.6779366815609303`*^9}, {3.677937516334545*^9, 3.6779375714082937`*^9}, 
   3.6779377455687237`*^9, {3.677941854815131*^9, 3.677941895302515*^9}, {
   3.677941951053767*^9, 3.677941951766437*^9}, 3.6779421416261663`*^9, {
   3.677942720458839*^9, 3.67794274616623*^9}, {3.6779431903882647`*^9, 
   3.677943193243279*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys10P", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dellamCoordSin", "[", "x", "]"}], ")"}], 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "3", "]"}], "/", "2"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"dellamCoordSin", "[", "x", "]"}], ")"}], 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "thetam"}], "]"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol10P", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"sys10P", ",", 
     RowBox[{"{", 
      RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol10PList", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "sol10P"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.67803310941089*^9, 3.678033139212656*^9}, {
   3.678033443725965*^9, 3.678033478749185*^9}, {3.678033623171361*^9, 
   3.678033667468092*^9}, {3.67803372776721*^9, 3.678033732931284*^9}, {
   3.678033890866888*^9, 3.6780338921115103`*^9}, {3.678034024630908*^9, 
   3.678034030092083*^9}, 3.678034096781383*^9, {3.678034142519382*^9, 
   3.678034161185224*^9}, {3.678034263719164*^9, 3.67803428559501*^9}, {
   3.6780343419314737`*^9, 3.678034345626795*^9}, 3.67803439636108*^9, {
   3.678035666410987*^9, 3.6780356674857683`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys11", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamCos", "[", "x", "]"}], "+", 
            RowBox[{"dellamPureRabiCos", "[", "x", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamSin", "[", "x", "]"}], "+", 
            RowBox[{"dellamPureRabiSin", "[", "x", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol11", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys11", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol11List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol11"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.677941871860197*^9, 3.6779418826111183`*^9}, {
  3.677945844586667*^9, 3.677945856942399*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys12", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamCos", "[", "x", "]"}], "+", 
            RowBox[{"dellamPureRabi1Cos", "[", "x", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamSin", "[", "x", "]"}], "+", 
            RowBox[{"dellamPureRabi1Sin", "[", "x", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol12", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys12", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol12List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol12"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.677941014450625*^9, 3.6779411170420094`*^9}, {
   3.6779411535236797`*^9, 3.677941156442314*^9}, {3.677941232635971*^9, 
   3.6779412698327427`*^9}, {3.677941354711549*^9, 3.67794137930791*^9}, {
   3.677941535211761*^9, 3.677941560068206*^9}, {3.67794162749345*^9, 
   3.677941641745872*^9}, 3.677941937721271*^9, {3.6779458657837067`*^9, 
   3.6779458761027*^9}, {3.683908559882288*^9, 3.6839085606233253`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"sys13", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamCos", "[", "x", "]"}], "+", 
            RowBox[{"dellamSlowPrime2Cos", "[", "x", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamSin", "[", "x", "]"}], "+", 
            RowBox[{"dellamSlowPrime2Sin", "[", "x", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"sol13", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys13", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"sol13List", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "sol13"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.6779428564312353`*^9, 3.677942882966593*^9}, 
   3.677942957581284*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys14", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamCos", "[", "x", "]"}], "+", 
            RowBox[{"dellamPureRabi2Cos", "[", "x", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamSin", "[", "x", "]"}], "+", 
            RowBox[{"dellamPureRabi2Sin", "[", "x", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol14", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys14", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol14List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol14"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6779434386902847`*^9, 3.677943456392911*^9}, {
  3.6779458891044817`*^9, 3.677945893964219*^9}, {3.6839085996795273`*^9, 
  3.6839086002135267`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys15Critical", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamCos", "[", "x", "]"}], "+", 
            RowBox[{"dellamSlowCriticalCos", "[", "x", "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dellamSin", "[", "x", "]"}], "+", 
            RowBox[{"dellamSlowCriticalSin", "[", "x", "]"}]}], ")"}], " ", 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sol15Critical", "=", 
    RowBox[{"NDSolve", "[", 
     RowBox[{"sys15Critical", ",", 
      RowBox[{"{", 
       RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sol15CriticalList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "sol15Critical"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.677944051488258*^9, 3.677944053991394*^9}, {
  3.677944102039137*^9, 3.677944141885797*^9}, {3.683908610319524*^9, 
  3.6839086108051863`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"theory10List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi2", "[", 
        RowBox[{"a1", ",", "k1", ",", "1", ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory10Amp", "=", 
   RowBox[{"ampRabi2", "[", 
    RowBox[{"a1", ",", "k1", ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory11List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi2", "[", 
        RowBox[{"a1", ",", "k1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", "a2", " ", ")"}], "^", "2"}], "+", "1"}]], ",", 
         "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory11Amp", "=", 
   RowBox[{"ampRabi2", "[", 
    RowBox[{"a1", ",", "k1", ",", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", "a2", " ", ")"}], "^", "2"}], "+", "1"}]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory12List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi2", "[", 
        RowBox[{"a1", ",", "k1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a2PureRabi", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", ")"}], "^", "2"}], "+", 
           "1"}]], ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theory12Amp", "=", 
    RowBox[{"ampRabi2", "[", 
     RowBox[{"a1", ",", "k1", ",", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a2PureRabi", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", ")"}], "^", "2"}], "+", 
        "1"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"theory13List", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"probRabi2", "[", 
          RowBox[{"a1", ",", "k1", ",", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"(", "a2prime2", " ", ")"}], "^", "2"}], "+", "1"}]], 
           ",", "x"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", 
         RowBox[{"endpoint", "/", "2.7"}], ",", 
         RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory14List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi2", "[", 
        RowBox[{"a1", ",", "k1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"a2PureRabi", "[", 
              RowBox[{"[", "2", "]"}], "]"}], " ", ")"}], "^", "2"}], "+", 
           "1"}]], ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory14Amp", "=", 
   RowBox[{"ampRabi2", "[", 
    RowBox[{"a1", ",", "k1", ",", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"a2PureRabi", "[", 
          RowBox[{"[", "2", "]"}], "]"}], " ", ")"}], "^", "2"}], "+", 
       "1"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory15CriticalList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probRabi2", "[", 
        RowBox[{"a1", ",", "k1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", "a2Critical", " ", ")"}], "^", "2"}], "+", "1"}]], 
         ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theory15CriticalAmp", "=", 
   RowBox[{"ampRabi2", "[", 
    RowBox[{"a1", ",", "k1", ",", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", "a2Critical", " ", ")"}], "^", "2"}], "+", "1"}]]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.677941658234983*^9, 3.6779416608078547`*^9}, {
   3.677941802831583*^9, 3.677941804879593*^9}, {3.677941974515965*^9, 
   3.677941982528126*^9}, 3.677942069533531*^9, {3.677942171314838*^9, 
   3.677942182468548*^9}, {3.6779422355554657`*^9, 3.677942240660337*^9}, {
   3.677942887646126*^9, 3.677942894781722*^9}, 3.677942952432129*^9, {
   3.677943069671603*^9, 3.67794310169636*^9}, {3.677943468026538*^9, 
   3.677943481984722*^9}, {3.677944149310259*^9, 3.6779441763233624`*^9}, {
   3.67794590241782*^9, 3.67794593317981*^9}, {3.683908603541787*^9, 
   3.6839086276387987`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
resonance.csv\>\"", ",", "sol10List"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
a2Critical.csv\>\"", ",", "sol15CriticalList"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-0.\
01.csv\>\"", ",", "sol11List"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-0.\
02.csv\>\"", ",", "sol12List"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-0.\
03.csv\>\"", ",", "sol14List"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
resonance-k2-0-01.csv\>\"", ",", "sol10List"}], "]"}], "\[IndentingNewLine]", 
    
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
a2Critical-k2-0-01.csv\>\"", ",", "sol15CriticalList"}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-0.\
01-k2-0-01.csv\>\"", ",", "sol11List"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-0.\
02-k2-0-01.csv\>\"", ",", "sol12List"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-0.\
03-k2-0-01.csv\>\"", ",", "sol14List"}], "]"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-\
list.csv\>\"", ",", 
     RowBox[{"N", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "a2Critical", "}"}], ",", 
        RowBox[{"{", "a2", "}"}], ",", "a2PureRabi"}], "]"}]}]}], "]"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/a2-\
list-k2-0-01.csv\>\"", ",", 
     RowBox[{"N", "@", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", "a2Critical", "}"}], ",", 
        RowBox[{"{", "a2", "}"}], ",", "a2PureRabi"}], "]"}]}]}], "]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.677947103058111*^9, 3.677947112316514*^9}, {
  3.677947228082193*^9, 3.67794727869545*^9}, {3.677947341183119*^9, 
  3.677947452393649*^9}, {3.677947736791005*^9, 3.677947828885756*^9}, {
  3.678023890424429*^9, 3.67802389841341*^9}, {3.6780244699533787`*^9, 
  3.6780245319689207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rabiOscillationsEnergyGapChange", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sol14List", ",", "sol15CriticalList", ",", "sol12List", ",", 
      "sol12List"}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "@", "Green"}], ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", 
           RowBox[{"0.015", ",", "0.015"}], "}"}], "]"}]}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dotted"}], "]"}], ",", "Red"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"imgsize", "*", "1.5"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Transition Probability with Different Perturbations\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
       "\"\<Probability\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "[", "a1", "]"}]}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "k1"}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "k2P"}]}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1000", ",", "0.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "0"}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "@", "a2Critical"}]}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "@", "a2"}]}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"a2PureRabi", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "@", 
            RowBox[{"a2PureRabi", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"theory10Amp", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "Thick", ",", "Dashed"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"theory11Amp", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Blue", ",", "Thick", ",", "Dotted"}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"theory12Amp", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Red", ",", "Thick"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"theory15CriticalAmp", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"Darker", "@", "Green"}], ",", "Thick", ",", 
             RowBox[{"Dashing", "[", 
              RowBox[{"{", 
               RowBox[{"0.015", ",", "0.015"}], "}"}], "]"}]}], "]"}]}], 
          "}"}]}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.677943109167959*^9, 3.677943172971805*^9}, {
   3.6779432435117893`*^9, 3.677943277244391*^9}, {3.677943488561646*^9, 
   3.677943514585215*^9}, {3.677943585495976*^9, 3.677943589815455*^9}, {
   3.677944185424559*^9, 3.677944252966754*^9}, {3.6779443303673162`*^9, 
   3.677944350155271*^9}, {3.677944389818676*^9, 3.677944485056155*^9}, {
   3.677944727574354*^9, 3.6779448486916018`*^9}, {3.677944884361875*^9, 
   3.677944961579421*^9}, {3.677945229903919*^9, 3.6779452324027987`*^9}, {
   3.677945341462393*^9, 3.677945377364622*^9}, {3.677945430501569*^9, 
   3.6779454356194983`*^9}, {3.67794550885571*^9, 3.6779455642376337`*^9}, 
   3.6779459361606293`*^9, {3.677946047381277*^9, 3.677946089224183*^9}, {
   3.67794650390711*^9, 3.677946580651598*^9}, {3.6779466302494173`*^9, 
   3.677946674710967*^9}, {3.6779483488564463`*^9, 3.6779483629238157`*^9}, {
   3.67801823841786*^9, 3.6780182396735983`*^9}, {3.6780207441659517`*^9, 
   3.678020768411117*^9}, {3.6839085747066298`*^9, 3.683908578703991*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {GrayLevel[0], PointSize[0.005555555555555556], AbsoluteThickness[
          1.6], Dashing[{Small, Small}], 
          StyleBox[LineBox[CompressedData["
1:eJxtW3lcjF/Ub9/3fW+mZaaZprQpS3gOkiUpyo9SUiKUikpSjCWyVaKkRJtk
iSFFSYYkUsqSUDTZWoQS0f72vuf67/WPz/08c5/73O8953vO95wb3T90aaCI
kJBQl6iQ0P/+///+o5KoKwa6Ox//WTsLx2epGyPaNXE2h3Acdp7iuf2wYUcf
J8+vUhEJHnOHlp/DcUIx9Wdr866Xly6S39+kxGfRdnE+XcPxittU8PFfD3jK
N8n8u9RolrXtbHEyPnGPitHV+tEaWUHeV0XNGBzx9nlZhuPYaqpf+vdlna3l
5P01VE1CeYtT0y0cr31MvUp0LaStKibrPaHyLIS8VkVcx7FLPXVuf1P8im8F
ZP0GarKCosfd6hwcZzRSNSILslryyP5OPKOokuic4f7tOE58TlW6n7GLryL4
JLygTl3qWS01xw3He15Sy0qfzv2csol8bxPVkPdpyv1fiTiOekVV3glec3rj
afL9zZTukrRXkax8HG98TX3xVIuXvs4j+3lDOXISVc0fEfx831K3ze/lH1Ak
+13RQq15P7jBzo3gs7SVMplq7T5XieDj8o66m70l0quQ4DnvPaWqfjuipPYf
/m0UU8bdcOtl8j59AfUgaWiAq0DwyxBQxs2/bq25cgXHmu1UW/CLaP+AQoJP
O+XxJ/jiu+50HCt/oBZ313+QsEgheH2gvuRctN/0PRzHsh+pgUgpSyMfIPh9
pNKmixsetFyOY/FP1MozNaUtG3YTPD9RWnmy9yXPHsXx+CfKecxeVm1JLsH3
M3W2vfzrnnZynoOfJ35fIHPkH35RX6g3HbMcT3mV4Lj/C6VUKJORQ5US/Duo
cird/4MkwedbB7X+5Eep/IMEz42dVAOd+aAu8jaOOzopfm6ojd8W8nxtF1Vp
eOSVz/ANHLd3UdcerL3npk/Gvt1UW+35mVmCCzhu6abSwGDP2DHiLyu+UmHr
5VYqMgl+TV+pKX+3OkeqxJPz7KGEtjQ9Sli7FccNPZR3gnDcm+sscr7fqLOZ
VTKHtxP8Hn+jnGffpxeuOEDO+zslajjW4yVIxXHVd4oKrr3BP0zsnfpByVcf
uPjpehGO7/ygytTa1ibPIPjp91KtpUu25aijvXC9e6laHm2uiiyxl4xeKmaH
2c0ONtob93Uv1a0mebf1GMFTs4+aUx96omgv/p7r2UdZjXs+SlQh9nmij5qe
8fmCvBnixX3eR92ffSJ32xpi78o/qdhZT7Ieel3C50t+Uuqv/GU+a5wl9vWT
0ofb89n3TuLzuonf+9CFfCRiib31UyNVVs5d09bg8wX9VMnroqiRQmdif/3U
z6q6oxorIvD5w37qpI6eUWQpwV/8F8UcX/w89vAZfD7nF3V76vFAxQV5xD5/
USM7xSwCnqN/cPm/KD27LSf6dhH/Gf9FmXK0O65vQPvjzvhN/bL8erJrAbGn
2N9UQF9Q0gkjtCdu+W/qzJ6eV8aOBL/B31T3OX9FjzfkucMAdeTcMjm5FGK/
UQPUVa0lfYWnyPtvDFCe59apqg1cJvY+QP19mHEsNBrtj2v9h2JvSCq+MvCP
f/5QRu1LV7BVk/D5lT+UafH9Rbk3dxJ/+EO5L/zQn/DOEp+b/6WmJF9cm+I8
mfjHX+rjsyBf+T1cfF74lzo5sNTxm2Qy8Ze/1KdlcVwTDYKf6SBVlKTVu/if
P6wdpFbN33blUCTaHzd3kIrWiBThtBN/bR+kVOgJu03O4365hkPUc3Z43GxN
Yj++Q9SBd3bzPkxCvLinhyiz5Jlyk1nEP1uGKOWdOil69og3V3uY+jl51bau
SeT9K4apNQqfdlDr8Ly4acOUrrkiLdWG8F3TMKWqe1QlYwD5hqs6Qr3s3uSq
cjmL+OcIJTTDxMtu2z58njxCXedZLxbR/+evI5Sd8PflUlFO+Fx+lLoVYvCH
3etP/HeUCh/2zypehXhzD41SMm6NsoMZhA8ej1IeLlvoZz+hvXMlxyjqY9d4
uTI533lj1OYuuf/kktBfuPvGqMV27rKtOwn/VI1Ro4E5X6Up4p/C49To5y+5
qXnEf6lxSv/5gd9qdwh+O8cpq5ZpzXEKBN8741TbnRKOnwbx3+FxaqPl3t6v
H4j96QuBXeMua1115AvKUQjKbQoOFfiS8/QWgqJtQV6tUsg3/BghODXmIKwQ
RPgoQwimbZczDxXZj/PLhED2t0KBfvwywidC0HDHev7CmUyc/0cIfO8//Trb
LpLwizBcDpJq0hEn8+2FQUXoAb/I9RThG2GQiQaxlRIYH/gRwrBWb3huXjzJ
T04IQ4NBz9LqSMSLKhaG9z4t8lmWxJ+eC8OZaUvT7BrQnvh9wnDwnc+86gTi
v8oicGvZ5Z6Am/icshIBydvLivMUCZ5LRCB46GbbTSbixd8sAu9ahse+/0fs
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
            "]],
           FontSize->15]}, 
         {RGBColor[0, 
           NCache[
            Rational[2, 3], 0.6666666666666666], 0], PointSize[
          0.005555555555555556], AbsoluteThickness[1.6], 
          Dashing[{0.015, 0.015}], 
          StyleBox[LineBox[CompressedData["
1:eJxtm3k81N37/+37MvadwZjNkBaVFt5XSqlEVCqlabG0a5EUNZUWSxlS3LQg
ZUlZikQy2kTbtCiijBaJiCRF5ef7uU7//e5/7sd5HO8551znea7rda7rZLlq
s3eAjJSU1GdZKan/+///9z8qniqSim2OuLvaBdtnqfFty6d0/j2E7ZBsavHN
AYMUxROkv4BybDzi2XLxPLaPXKGsF+yb/OLeJfL316jc2F2TQsNLsb24gqq7
ONXLaU4l+b6KWh3h7T1r+S1sJ1VTpR7KNUt21pDfu00VT+lZcjWzDtsRd6kl
Xtby733F5PdrKObKtaP3f32K7TW11Ifc7Oii9BdkvAeUyTkqOCL/JbbnPqIK
E1hybmsayPhPKP7Klv0zW19jO1VMuc87ptKX20Tm85R6uOrlxO+f32D72DMq
1HG0770Vb8n8nlMfXms4W+xrwfb+F1TJ83qfxzoSMt96ynQfR23SU9K/4yVV
uG6F608X0h/yikpUOln3kUv61zVQGbodS+4zSXtNI3XOPZ77MY+M7/+aUowy
z/HxbSbra6Kyk/vD+zlkvt7NFDcEjm84T9Y39w11xmT56vtRr7Dt9pZKlk2o
3pZK7EO1UAF25X01Pc+wbSahuCqjb2luI/ZNlVB5RQ4XktQeYtuglaLJV8ve
3XSf2KeVqnhQZhDWQfZP6x2VFPP2ar22iNjrHSVMu+Z9rYzsv+p7iv7XsrLF
tYjY7z2lPxjBfLf/ArblP1ABZYNmW5f9R+z5gbJd6Dh1i3Uctoc/UEeaYpa8
cQgm9v1IfXjy7rPp8vHY/vWRKrnzeOy4lpXE3m2Um75Xs0zHHmz3tVErJu7o
KGMkEft/omQta+3P1mdiu+sTFbQ4h7q65SLZj3bqoW9eMDu5BNuf2qkXNR/r
hFnlZH8+UzlM3glXD7L+1s+Ur4X+Qlb1XbJfHZTl9zPvc7cQfps6KMU5R/v8
Ap+Q/eukfjyNWXQ1lPBb30l9uTim0Sqc7I/3F2qWa0Rbs7ge20++UAF3brNK
k/7tbxd1zOHFuZ+qhN/aLqqwsUhaKCI8uHVTzguDrW6lEH5ud1N570Y1zNUg
/FJfKdfqdYn1LwhvlV+pptL/VGcnk7ZZDxXEdHnxfDzyKvDroXawOzfyjAi/
qT2UgvzZCuOj+PeChh5q7bRRqn2R5HuDXiph4izlgHM4vmBhL0VPnDmX7kTm
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
5f8B6zr0nQ==
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], Dashing[{0, Small}], 
          StyleBox[LineBox[CompressedData["
1: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
2zO1CJLPeXk6sL0jcPAk4ZlTpgMV515kr1xN+K/XAZdPXAldX8L/Jx2QbZ9y
ttuJ8P9dBwbatWw0FAn//3TAwcr0aS/hnSunC961h+XffSf1h64urL+21PaY
HuGfrQttLy6eNDJBezgzdeHHltfzFimT/n2BLlzZULG5/iOuT/pKXXg0vVK7
+iTpf0J1oYCxPl/YHNdTEKULJmeCemRuEX3uqC74x3k3H2WS/TdVF5RFr2+M
Pkb6rxxd2DAmd379APqX80AXljHH36a4k/OXWl34vFb/12If5D29SRd8LjNl
92sg71SnLgjTEuj8buwPBcO6kJE1cj/mI9HnJPUgkP6SKm/H/pKurgf9v5TE
Uudh/8lj6kHiK58SeRnknWOrB5Krk432eZD+da4eLLNQ6PL6g/1t+lI9qFnn
cqUsBPtfKkgP9Db5Hrbvw/5YsE0PxhfFTe5xJ3r8QT24IMudYkf6a3qyHsh/
Mh56dRD7b94VPbAd/L30tB3255w7eqAb6nh49Sob/H65HrAu3Z0W3Iv9fXqj
HtjdK3kgXox6PPVFD2LLnjzsMUjD7w/owd5tk8LGV2Tj94X1Yb/7ErH7S1FP
pCvqg6idmklFDOoPPLo+vF4Lxa79yDvHSh/8DPYYScUT/YLSB+W+ro2ZV1Df
SF+kD8UtaTdN5XA9qdX6UKl2sCJrAHkXbNKHnOxShR1CRJ/bqw9tY/ZrxvWx
X6ef0IfEMQVnsTVEb03Thy93ZZjul1Cf4dzUh/ljv+WPRhL9plQf6FRZeqIa
xkv6c314LN4esPY20eM/6IMC/0r3HmeMN0G3PlwyftIq85joc6P6UFF8do/t
FIzXBHE6zJ8W7z18iPAuR4dP9jJzDlYj71aqdDA88MrjcjuJf106zOk9ELmv
E/ngG9HhyCS3BNlq0g+z6cDMbxYDLvIWbkMHjoHpkKM04XMmHbR8yuUiCK80
FzqI7589Ws8hvLrTIa9jLKZtI47zvScqtFZlTalAkr9X0sEgZXTcfy6OPQMm
fj+6ooCmQur5UDoMKgbSU1Px+/1b6HBwV/Q/uU7CdxQdqvJ+cDhyOE6IocOt
iLsnPisT3o/SQdJmj9zpn8T+JDp0q5auLC4l+mUqHbb3/JncHYzrx8+gw8JY
Temkf//pIXQ43icU9oWL6x9+mw4xtgYzrPqJfx7QoXelxbJpvug/2mM6TLVX
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
3ZYQ/LFd5f43cj/+oCVsTQw93LWnwOn/AGFmCmI=
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0, 0], PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1: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
2zO1CJLPeXk6sL0jcPAk4ZlTpgMV515kr1xN+K/XAZdPXAldX8L/Jx2QbZ9y
ttuJ8P9dBwbatWw0FAn//3TAwcr0aS/hnSunC961h+XffSf1h64urL+21PaY
HuGfrQttLy6eNDJBezgzdeHHltfzFimT/n2BLlzZULG5/iOuT/pKXXg0vVK7
+iTpf0J1oYCxPl/YHNdTEKULJmeCemRuEX3uqC74x3k3H2WS/TdVF5RFr2+M
Pkb6rxxd2DAmd379APqX80AXljHH36a4k/OXWl34vFb/12If5D29SRd8LjNl
92sg71SnLgjTEuj8buwPBcO6kJE1cj/mI9HnJPUgkP6SKm/H/pKurgf9v5TE
Uudh/8lj6kHiK58SeRnknWOrB5Krk432eZD+da4eLLNQ6PL6g/1t+lI9qFnn
cqUsBPtfKkgP9Db5Hrbvw/5YsE0PxhfFTe5xJ3r8QT24IMudYkf6a3qyHsh/
Mh56dRD7b94VPbAd/L30tB3255w7eqAb6nh49Sob/H65HrAu3Z0W3Iv9fXqj
HtjdK3kgXox6PPVFD2LLnjzsMUjD7w/owd5tk8LGV2Tj94X1Yb/7ErH7S1FP
pCvqg6idmklFDOoPPLo+vF4Lxa79yDvHSh/8DPYYScUT/YLSB+W+ro2ZV1Df
SF+kD8UtaTdN5XA9qdX6UKl2sCJrAHkXbNKHnOxShR1CRJ/bqw9tY/ZrxvWx
X6ef0IfEMQVnsTVEb03Thy93ZZjul1Cf4dzUh/ljv+WPRhL9plQf6FRZeqIa
xkv6c314LN4esPY20eM/6IMC/0r3HmeMN0G3PlwyftIq85joc6P6UFF8do/t
FIzXBHE6zJ8W7z18iPAuR4dP9jJzDlYj71aqdDA88MrjcjuJf106zOk9ELmv
E/ngG9HhyCS3BNlq0g+z6cDMbxYDLvIWbkMHjoHpkKM04XMmHbR8yuUiCK80
FzqI7589Ws8hvLrTIa9jLKZtI47zvScqtFZlTalAkr9X0sEgZXTcfy6OPQMm
fj+6ooCmQur5UDoMKgbSU1Px+/1b6HBwV/Q/uU7CdxQdqvJ+cDhyOE6IocOt
iLsnPisT3o/SQdJmj9zpn8T+JDp0q5auLC4l+mUqHbb3/JncHYzrx8+gw8JY
Temkf//pIXQ43icU9oWL6x9+mw4xtgYzrPqJfx7QoXelxbJpvug/2mM6TLVX
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
3ZYQ/LFd5f43cj/+oCVsTQw93LWnwOn/AGFmCmI=
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->{FontSize -> 15},
      DisplayFunction->Identity,
      Epilog->InsetBox[
        BoxData[
         FormBox[
          StyleBox[
          "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.0001\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)=0.01\"", FontSize -> 14, 
           StripOnInput -> False], TraditionalForm]], {1000, 0.8}, {
        Left, Top}],
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->Larger,
      GridLines->NCache[{None, {{1, 
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Dashing[{Small, Small}]]}, {
          Rational[1, 100000000]/(
           Rational[
            1, 100000000] + (1 + Rational[-1, 100] 10001^Rational[1, 2])^2), 
           Directive[
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            Dashing[{0, Small}]]}, {0.9999990000011009, 
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, {0.5000249981256661, 
           Directive[
            RGBColor[0, 
             Rational[2, 3], 0], 
            Thickness[Large], 
            Dashing[{0.015, 0.015}]]}}}, {None, {{1, 
           Directive[
            GrayLevel[0], 
            Thickness[Large], 
            Dashing[{Small, Small}]]}, {0.8000079995806624, 
           Directive[
            RGBColor[0, 0, 1], 
            Thickness[Large], 
            Dashing[{0, Small}]]}, {0.9999990000011009, 
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, {0.5000249981256661, 
           Directive[
            RGBColor[0, 
             Rational[2, 3], 0], 
            Thickness[Large], 
            Dashing[{0.015, 0.015}]]}}}],
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->1200.,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->{{0, 1.*^6}, {0, 1.049023727049751}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.0141421\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.01\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.000447214\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.0244949\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{0.135, 0.135}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0], 
                    Dashing[{0.135, 0.135}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.4444444444444444, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 2/3, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[2, 3], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[2, 3], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.015`", ",", "0.015`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   BaseStyle->{FontSize -> 15},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->1200.,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Transition Probability with Different Perturbations\"", 
     TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          GrayLevel[0], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJxtW3lcjF/Ub9/3fW+mZaaZprQpS3gOkiUpyo9SUiKUikpSjCWyVaKkRJtk
iSFFSYYkUsqSUDTZWoQS0f72vuf67/WPz/08c5/73O8953vO95wb3T90aaCI
kJBQl6iQ0P/+///+o5KoKwa6Ox//WTsLx2epGyPaNXE2h3Acdp7iuf2wYUcf
J8+vUhEJHnOHlp/DcUIx9Wdr866Xly6S39+kxGfRdnE+XcPxittU8PFfD3jK
N8n8u9RolrXtbHEyPnGPitHV+tEaWUHeV0XNGBzx9nlZhuPYaqpf+vdlna3l
5P01VE1CeYtT0y0cr31MvUp0LaStKibrPaHyLIS8VkVcx7FLPXVuf1P8im8F
ZP0GarKCosfd6hwcZzRSNSILslryyP5OPKOokuic4f7tOE58TlW6n7GLryL4
JLygTl3qWS01xw3He15Sy0qfzv2csol8bxPVkPdpyv1fiTiOekVV3glec3rj
afL9zZTukrRXkax8HG98TX3xVIuXvs4j+3lDOXISVc0fEfx831K3ze/lH1Ak
+13RQq15P7jBzo3gs7SVMplq7T5XieDj8o66m70l0quQ4DnvPaWqfjuipPYf
/m0UU8bdcOtl8j59AfUgaWiAq0DwyxBQxs2/bq25cgXHmu1UW/CLaP+AQoJP
O+XxJ/jiu+50HCt/oBZ313+QsEgheH2gvuRctN/0PRzHsh+pgUgpSyMfIPh9
pNKmixsetFyOY/FP1MozNaUtG3YTPD9RWnmy9yXPHsXx+CfKecxeVm1JLsH3
M3W2vfzrnnZynoOfJ35fIHPkH35RX6g3HbMcT3mV4Lj/C6VUKJORQ5US/Duo
cird/4MkwedbB7X+5Eep/IMEz42dVAOd+aAu8jaOOzopfm6ojd8W8nxtF1Vp
eOSVz/ANHLd3UdcerL3npk/Gvt1UW+35mVmCCzhu6abSwGDP2DHiLyu+UmHr
5VYqMgl+TV+pKX+3OkeqxJPz7KGEtjQ9Sli7FccNPZR3gnDcm+sscr7fqLOZ
VTKHtxP8Hn+jnGffpxeuOEDO+zslajjW4yVIxXHVd4oKrr3BP0zsnfpByVcf
uPjpehGO7/ygytTa1ibPIPjp91KtpUu25aijvXC9e6laHm2uiiyxl4xeKmaH
2c0ONtob93Uv1a0mebf1GMFTs4+aUx96omgv/p7r2UdZjXs+SlQh9nmij5qe
8fmCvBnixX3eR92ffSJ32xpi78o/qdhZT7Ieel3C50t+Uuqv/GU+a5wl9vWT
0ofb89n3TuLzuonf+9CFfCRiib31UyNVVs5d09bg8wX9VMnroqiRQmdif/3U
z6q6oxorIvD5w37qpI6eUWQpwV/8F8UcX/w89vAZfD7nF3V76vFAxQV5xD5/
USM7xSwCnqN/cPm/KD27LSf6dhH/Gf9FmXK0O65vQPvjzvhN/bL8erJrAbGn
2N9UQF9Q0gkjtCdu+W/qzJ6eV8aOBL/B31T3OX9FjzfkucMAdeTcMjm5FGK/
UQPUVa0lfYWnyPtvDFCe59apqg1cJvY+QP19mHEsNBrtj2v9h2JvSCq+MvCP
f/5QRu1LV7BVk/D5lT+UafH9Rbk3dxJ/+EO5L/zQn/DOEp+b/6WmJF9cm+I8
mfjHX+rjsyBf+T1cfF74lzo5sNTxm2Qy8Ze/1KdlcVwTDYKf6SBVlKTVu/if
P6wdpFbN33blUCTaHzd3kIrWiBThtBN/bR+kVOgJu03O4365hkPUc3Z43GxN
Yj++Q9SBd3bzPkxCvLinhyiz5Jlyk1nEP1uGKOWdOil69og3V3uY+jl51bau
SeT9K4apNQqfdlDr8Ly4acOUrrkiLdWG8F3TMKWqe1QlYwD5hqs6Qr3s3uSq
cjmL+OcIJTTDxMtu2z58njxCXedZLxbR/+evI5Sd8PflUlFO+Fx+lLoVYvCH
3etP/HeUCh/2zypehXhzD41SMm6NsoMZhA8ej1IeLlvoZz+hvXMlxyjqY9d4
uTI533lj1OYuuf/kktBfuPvGqMV27rKtOwn/VI1Ro4E5X6Up4p/C49To5y+5
qXnEf6lxSv/5gd9qdwh+O8cpq5ZpzXEKBN8741TbnRKOnwbx3+FxaqPl3t6v
H4j96QuBXeMua1115AvKUQjKbQoOFfiS8/QWgqJtQV6tUsg3/BghODXmIKwQ
RPgoQwimbZczDxXZj/PLhED2t0KBfvwywidC0HDHev7CmUyc/0cIfO8//Trb
LpLwizBcDpJq0hEn8+2FQUXoAb/I9RThG2GQiQaxlRIYH/gRwrBWb3huXjzJ
T04IQ4NBz9LqSMSLKhaG9z4t8lmWxJ+eC8OZaUvT7BrQnvh9wnDwnc+86gTi
v8oicGvZ5Z6Am/icshIBydvLivMUCZ5LRCB46GbbTSbixd8sAu9ahse+/0fs
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 
           Rational[2, 3], 0], 
          Dashing[{0.015, 0.015}]], 
         Line[CompressedData["
1:eJxtm3k81N37/+37MvadwZjNkBaVFt5XSqlEVCqlabG0a5EUNZUWSxlS3LQg
ZUlZikQy2kTbtCiijBaJiCRF5ef7uU7//e5/7sd5HO8551znea7rda7rZLlq
s3eAjJSU1GdZKan/+///9z8qniqSim2OuLvaBdtnqfFty6d0/j2E7ZBsavHN
AYMUxROkv4BybDzi2XLxPLaPXKGsF+yb/OLeJfL316jc2F2TQsNLsb24gqq7
ONXLaU4l+b6KWh3h7T1r+S1sJ1VTpR7KNUt21pDfu00VT+lZcjWzDtsRd6kl
Xtby733F5PdrKObKtaP3f32K7TW11Ifc7Oii9BdkvAeUyTkqOCL/JbbnPqIK
E1hybmsayPhPKP7Klv0zW19jO1VMuc87ptKX20Tm85R6uOrlxO+f32D72DMq
1HG0770Vb8n8nlMfXms4W+xrwfb+F1TJ83qfxzoSMt96ynQfR23SU9K/4yVV
uG6F608X0h/yikpUOln3kUv61zVQGbodS+4zSXtNI3XOPZ77MY+M7/+aUowy
z/HxbSbra6Kyk/vD+zlkvt7NFDcEjm84T9Y39w11xmT56vtRr7Dt9pZKlk2o
3pZK7EO1UAF25X01Pc+wbSahuCqjb2luI/ZNlVB5RQ4XktQeYtuglaLJV8ve
3XSf2KeVqnhQZhDWQfZP6x2VFPP2ar22iNjrHSVMu+Z9rYzsv+p7iv7XsrLF
tYjY7z2lPxjBfLf/ArblP1ABZYNmW5f9R+z5gbJd6Dh1i3Uctoc/UEeaYpa8
cQgm9v1IfXjy7rPp8vHY/vWRKrnzeOy4lpXE3m2Um75Xs0zHHmz3tVErJu7o
KGMkEft/omQta+3P1mdiu+sTFbQ4h7q65SLZj3bqoW9eMDu5BNuf2qkXNR/r
hFnlZH8+UzlM3glXD7L+1s+Ur4X+Qlb1XbJfHZTl9zPvc7cQfps6KMU5R/v8
Ap+Q/eukfjyNWXQ1lPBb30l9uTim0Sqc7I/3F2qWa0Rbs7ge20++UAF3brNK
k/7tbxd1zOHFuZ+qhN/aLqqwsUhaKCI8uHVTzguDrW6lEH5ud1N570Y1zNUg
/FJfKdfqdYn1LwhvlV+pptL/VGcnk7ZZDxXEdHnxfDzyKvDroXawOzfyjAi/
qT2UgvzZCuOj+PeChh5q7bRRqn2R5HuDXiph4izlgHM4vmBhL0VPnDmX7kTm
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
5f8B6zr0nQ==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 0, 1], 
          Dashing[{0, Small}]], 
         Line[CompressedData["
1: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
2zO1CJLPeXk6sL0jcPAk4ZlTpgMV515kr1xN+K/XAZdPXAldX8L/Jx2QbZ9y
ttuJ8P9dBwbatWw0FAn//3TAwcr0aS/hnSunC961h+XffSf1h64urL+21PaY
HuGfrQttLy6eNDJBezgzdeHHltfzFimT/n2BLlzZULG5/iOuT/pKXXg0vVK7
+iTpf0J1oYCxPl/YHNdTEKULJmeCemRuEX3uqC74x3k3H2WS/TdVF5RFr2+M
Pkb6rxxd2DAmd379APqX80AXljHH36a4k/OXWl34vFb/12If5D29SRd8LjNl
92sg71SnLgjTEuj8buwPBcO6kJE1cj/mI9HnJPUgkP6SKm/H/pKurgf9v5TE
Uudh/8lj6kHiK58SeRnknWOrB5Krk432eZD+da4eLLNQ6PL6g/1t+lI9qFnn
cqUsBPtfKkgP9Db5Hrbvw/5YsE0PxhfFTe5xJ3r8QT24IMudYkf6a3qyHsh/
Mh56dRD7b94VPbAd/L30tB3255w7eqAb6nh49Sob/H65HrAu3Z0W3Iv9fXqj
HtjdK3kgXox6PPVFD2LLnjzsMUjD7w/owd5tk8LGV2Tj94X1Yb/7ErH7S1FP
pCvqg6idmklFDOoPPLo+vF4Lxa79yDvHSh/8DPYYScUT/YLSB+W+ro2ZV1Df
SF+kD8UtaTdN5XA9qdX6UKl2sCJrAHkXbNKHnOxShR1CRJ/bqw9tY/ZrxvWx
X6ef0IfEMQVnsTVEb03Thy93ZZjul1Cf4dzUh/ljv+WPRhL9plQf6FRZeqIa
xkv6c314LN4esPY20eM/6IMC/0r3HmeMN0G3PlwyftIq85joc6P6UFF8do/t
FIzXBHE6zJ8W7z18iPAuR4dP9jJzDlYj71aqdDA88MrjcjuJf106zOk9ELmv
E/ngG9HhyCS3BNlq0g+z6cDMbxYDLvIWbkMHjoHpkKM04XMmHbR8yuUiCK80
FzqI7589Ws8hvLrTIa9jLKZtI47zvScqtFZlTalAkr9X0sEgZXTcfy6OPQMm
fj+6ooCmQur5UDoMKgbSU1Px+/1b6HBwV/Q/uU7CdxQdqvJ+cDhyOE6IocOt
iLsnPisT3o/SQdJmj9zpn8T+JDp0q5auLC4l+mUqHbb3/JncHYzrx8+gw8JY
Temkf//pIXQ43icU9oWL6x9+mw4xtgYzrPqJfx7QoXelxbJpvug/2mM6TLVX
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
3ZYQ/LFd5f43cj/+oCVsTQw93LWnwOn/AGFmCmI=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1: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
2zO1CJLPeXk6sL0jcPAk4ZlTpgMV515kr1xN+K/XAZdPXAldX8L/Jx2QbZ9y
ttuJ8P9dBwbatWw0FAn//3TAwcr0aS/hnSunC961h+XffSf1h64urL+21PaY
HuGfrQttLy6eNDJBezgzdeHHltfzFimT/n2BLlzZULG5/iOuT/pKXXg0vVK7
+iTpf0J1oYCxPl/YHNdTEKULJmeCemRuEX3uqC74x3k3H2WS/TdVF5RFr2+M
Pkb6rxxd2DAmd379APqX80AXljHH36a4k/OXWl34vFb/12If5D29SRd8LjNl
92sg71SnLgjTEuj8buwPBcO6kJE1cj/mI9HnJPUgkP6SKm/H/pKurgf9v5TE
Uudh/8lj6kHiK58SeRnknWOrB5Krk432eZD+da4eLLNQ6PL6g/1t+lI9qFnn
cqUsBPtfKkgP9Db5Hrbvw/5YsE0PxhfFTe5xJ3r8QT24IMudYkf6a3qyHsh/
Mh56dRD7b94VPbAd/L30tB3255w7eqAb6nh49Sob/H65HrAu3Z0W3Iv9fXqj
HtjdK3kgXox6PPVFD2LLnjzsMUjD7w/owd5tk8LGV2Tj94X1Yb/7ErH7S1FP
pCvqg6idmklFDOoPPLo+vF4Lxa79yDvHSh/8DPYYScUT/YLSB+W+ro2ZV1Df
SF+kD8UtaTdN5XA9qdX6UKl2sCJrAHkXbNKHnOxShR1CRJ/bqw9tY/ZrxvWx
X6ef0IfEMQVnsTVEb03Thy93ZZjul1Cf4dzUh/ljv+WPRhL9plQf6FRZeqIa
xkv6c314LN4esPY20eM/6IMC/0r3HmeMN0G3PlwyftIq85joc6P6UFF8do/t
FIzXBHE6zJ8W7z18iPAuR4dP9jJzDlYj71aqdDA88MrjcjuJf106zOk9ELmv
E/ngG9HhyCS3BNlq0g+z6cDMbxYDLvIWbkMHjoHpkKM04XMmHbR8yuUiCK80
FzqI7589Ws8hvLrTIa9jLKZtI47zvScqtFZlTalAkr9X0sEgZXTcfy6OPQMm
fj+6ooCmQur5UDoMKgbSU1Px+/1b6HBwV/Q/uU7CdxQdqvJ+cDhyOE6IocOt
iLsnPisT3o/SQdJmj9zpn8T+JDp0q5auLC4l+mUqHbb3/JncHYzrx8+gw8JY
Temkf//pIXQ43icU9oWL6x9+mw4xtgYzrPqJfx7QoXelxbJpvug/2mM6TLVX
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
3ZYQ/LFd5f43cj/+oCVsTQw93LWnwOn/AGFmCmI=
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 1.*^6}, {0, 1.049023727049751}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, Epilog -> 
      Inset[
        Style[
        "\!\(\*SubscriptBox[\(A\), \(1\)]\)=0.0001\n \
\!\(\*SubscriptBox[\(k\), \(1\)]\)=1\n \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=0.01", FontSize -> 14], {1000, 0.8}, {Left, Top}], 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Larger, GridLines -> {None, {{1, 
          Directive[
           GrayLevel[0], 
           Thickness[Large], 
           Dashing[{Small, Small}]]}, {
         Rational[1, 100000000]/(
          Rational[
           1, 100000000] + (1 + Rational[-1, 100] 10001^Rational[1, 2])^2), 
          Directive[
           RGBColor[0, 0, 1], 
           Thickness[Large], 
           Dashing[{0, Small}]]}, {0.9999990000011009, 
          Directive[
           RGBColor[1, 0, 0], 
           Thickness[Large]]}, {0.5000249981256661, 
          Directive[
           RGBColor[0, 
            Rational[2, 3], 0], 
           Thickness[Large], 
           Dashing[{0.015, 0.015}]]}}}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 1200., LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> 
      "Transition Probability with Different Perturbations", 
      PlotRange -> {{0, 1.*^6}, {0, 1.049023727049751}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 
          Rational[2, 3], 0], 
         Dashing[{0.015, 0.015}]], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0]]}, {
       "\!\(\*SubscriptBox[\(A\), \(2\)]\)=0", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=0.0141421", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=0.01", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=0.000447214", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=0.0244949"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True, True, True}, LabelStyle -> GrayLevel[0], 
       LegendLayout -> "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6799288148547583`*^9, 3.679929190447057*^9, 
  3.682095371746006*^9, 3.683899304280695*^9, 3.683908579707102*^9, 
  3.683910000175096*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
5s1NXWnySpNQeiymi5oxoWA3GVE/UTP69pvktXx7h7PKes2mBD2nXguS5Y8L
Qks4/Dk0NdJDFw2NPQW7yCV4FF5V5YBqd22cODl+e9mdj9jv+W4OSYjPDLwh
8fIPe/DzMvshh/tY+5xhbbJW4WocIllf9ChhVWSDn0DkknwVpjw9kUosPXzJ
JYjtdLteGNz0zLCkRkN9LfaQo5qvuAw2bUpZEejXmjc5IinEpxY4lK1tQGGZ
Djs2lcPK8ZLm6yowbmXYZRQjELAeY6Fc6i2pbNo5eWELdT/e89yK+i3aBbYt
y87gfzmlxw9nF1ow84z9J4rRFa+m6MbCLv8t817zfspLSHlSeOuDmR9stvsg
j1A6h4YTG1sQISlKsx98KX7r2KqE8c5JsjQrP/zi4rCuZu18StM9ws0cd/7M
8kEBzZT8dT5STvVH8Y3Km0r3MWeV4A29x/waO8i8p3hBfhwqkmG9RNJiYxSy
rnbU7X3tNEBAQgd7dApOXI9m97Ui1AVfJkWie2OtyjDpyLPC1e9cbe/VcFmN
8VvfsnvYP0qO0be8w0bf8rOj55CJYAB97USAosf3OV5rO/7X29sSkghG+jjk
L0kVHnzLO+Zbojb6pkxTqVWKwFBj5xqU6IMg1ZAapQDA1V2vxouiTa/CL6U6
EcvnRSITknXOnP/jf5myfoIb7A0NGoXlJ/mSCVXKr4nv0EF0zdfXCCuJdySP
WtuY6VyD3UOvXr4yO0PeLIVT3zvVTnI03BFN2uUjk/8XwtXst+NywhLmXYeI
nwupQFfk6tOlX12K5tEwfw3WOkLjpStTjIGosZauorHTz74i/i1T92wKsOq3
eXubkAdavFwS2542HFgAFc6tdM/hRST8lAa6jqWaUGVrzQ15IdvMKKxWGXB2
vb3C2B2OLVtAWLCIw00O1yGdL7O5bMClmkFnrOcuuP+CULqoFCbNnGQSmYQ1
aC24JEIzI1/7lr22ilK8bdrYazzfruZNwp76ClKFoqXTrCSAk4HVMoUud0Cb
wBOtPFMrQbp24tT4mbnXPWACGFMh4ghH3xmxlf/Z7qz4zKJJC60YCFIKLQyP
vLrhfUcaITlJ/T2fHKXVnp2HaYKyQ5otjmM2+4ZsCjL1RjVI9AToDlmzygQw
iZ6oOBq9bbplS+nWUhnTtnBQoIt/otqDurA0G6dBO+++2Rog7KSR8OhuPadM
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
wZj6dF6TdE3kDsQJSQpSG2ZIzArODN4/r0k7t6WWbAyCVHovideu/DZL1xUB
CdZGcLxbFm+R+3V4SuXJkjlTfKkAoEU5ryPvo73fvB3zfNGDtbnYiWj1j4uD
0haLduldQblDT5YNDasid0G/s/HpBvEW2Vy82cs20ndnPibe1bnDfqt22Cul
XfCU4pVlJ+WtLReD4pXx4/B+W4dJCK94xkLFK18PGfpnJZR3UgRLu4T6QIqg
0TAUBWh2gxCceLUvXVxyt92VAhWD0r8rV46orG5BumxcmniV1k6yHLev2Ha0
eKVWxbPP6kiZ6IpwD/HK8moV5QqXdvY1j+iaxiVibulSlRtEBVCGHkaS7LPL
6DMkXrFNTdZ70xSHkFOEtQcTIuVr19kdXXHj0+Kpk+9s+jDxykQA/Cfa3/4a
VAZw0bYvE+GZfOFTii9WUCgUxeWquFmnXJ/wnbZk/yLEIW0OMe/HqNSM+8fq
c+1BRmFZdEInt6GSzAnxCunpyLC3z6WfDEYM8aqwv0SqDhaGg7dgtcTA0//x
uAq8PWi5FjzcUXhEvNpd62S3o3UXZeKylLuGEJ+leYpXh34UX3hJzz56f7Bl
ozGXM3g1q6dEpTZOCcZU14yukldjNujuLVJdmnHOAypPiNIhWmfFl37p6DjV
6/JP7egKap2WMHdT+n8qMvb+jKSm8XeRgazbQc+xXeLDcw8HH97GVpe7/Mo1
wG+lqhqMQvLC1o+3CPsOwg8x5S6JVmW+PUVFqUAqF1deNkjxyjYJ4OMsEwSn
Y2HzPm5vSvWEV3Kfi5fWTZmieHUouYLL73azir5NhNFXBJ7Fdd4UQdvnxnp8
QXyKwlni1dyXxLy57vJ/YMupr4g5rHcHlLeZHlzbxZ3Fe1dSuO9o8Wr/dqk1
WNZ9sI70peUvqYVOvIrsPc5sOEy7PK++6ackyr3hu1nKI2DLE4hN8/pLXCr7
+8xwfl0W2U8NGnBX+O/gBoc7HH8x87+kS3d3qE59XQzGlSKZPWI5K3HDCsDf
ZnjAgKDYvydFgiUTQ5Fg/r58/4yhi4fq/UrGyd7c882v+txHsx7111kWS0a2
ncEhOBuBsWF1Eg0ZTTQ/woHKiuqsjveqIFsbl/dj17T3st+LN0aK21buRDer
bk/GyRiEXvKEvPLy9zN8eguKwmzyFYK3CBqrRfWDqMJu8GB93Mx617iCcpJA
qGoKG15u2aKwhHuxm3OyPsP5EN2Oa+9QuLFVPOrlNPEpjf8Y9x+naNnz4tNa
98FELYKD+kYGFSaR7Vgsp/Tqm4Lvb3qjvq4oWvhWf7SK884r2P3u8p4WfWb7
nwtVck0lLaWenb6Q1+Wv8/laSpZ1Qnfv1LODLvxMdLHtX4xXOcGDEbXHX9zZ
xYX7/XWTzxqoMsZuSMh0oSyuueAmdyBZponX2Uo3NtRmE6rufdrA6aA4aFI1
+Z3dQnqwgH43JSVhiP8j+DBajBpLih0qojHSXQd2KfggfACXBU7d1T9rroeu
nGHs5jLcNe8u9WSqM+llsaBddrauekHX3r5ljN18qJGn85rgg3ousHzxY9nM
OPHCDpzsVnS4XcECBUksj1TwKSr62y6yZQaH13I9uPDB4LU2QSw+d9jSYf46
lAocieyYqfowUHpO65nwrls69XEHKlc3Kxb9Fo3NYvZ03o/dLQEqvI7luqBQ
INAgCD3t5JvYGE+rbp8UlodZT/2i2RzwFjCIQ4DZOFocKXn/903gMLzhZldW
QWBEAWaQ+PHQkIQAY09IzXIx8UJeh9R91pNp0VHMkjx2/VgFmIMnNXUHO3ZK
2Agak/vuOwUYOLHovCXAZP8mOegZVwZn3+TmUnbYblI7BRjzXCueuhKmapKS
zRSDcDon25xexdaVtTu63KqJatu8EaJvoLEioQahGhaJcB9vWyH0QenthqgE
MI0CIVpKHsNGqLnidYiNRMeRNw8INRtfEt2q2yNNkYquYbzUE93Ck3omDNFa
DQo1Jgfpf4Qawgp0rhkn9UtYdFu6zbJZN2uWH2npRx/r7Cq18+M/6ioMWTRE
g86KL0MD8SR/O6VZIFPnnrNFBsQXOFjgaOHH0vMpW2L16ioNnBrb546bbfsi
Sa9e2jsYJwXfSqL8pje+Dql0ceQTpf/El5whYowVps3XVWbKIeqA1Sl0oVTb
IWBIfLFNwPmu9sBTqQ5eAL0fPOZQ+pAYzOtgtNJ5QqJS9kzbcf29XqM44/cz
9H2WvC0GYtaQsQoyVJDgOSfIzHxcknDRfVHHdG/MRX3ggMoHosxIJIDXgewN
mW1u931YnAEUeDFgrDgDPCXH1XU7Lrgi4TqsOWnf+Qw4/+h1JfAcyamnRMaf
fabAY9MPKSNLR2srRH23knuFgKvHhE4KPPT24vmF90kD5NK8LRqYSKnv5pwo
sRiKvOVh43WWnk6dQWBKatMmYfiLPpJtNeXWjxV4LAuSsi6sEd/grsdeUNGw
Rp32bDY8tcpT8Z4oaN1H1oNdq374lCZu/nFdE4aDNHKGsbmTFtTt7rZWqJ8w
nP8RZMrq1JUSRbPAqLxh6aqCjMkzUo9d+lT57vPPdcZtrq9aUBeKh2L/juC1
tlEtbjzLd0CQKTyxqdvUvBPH7U8d3B+Z7woyKAzv3j1haiw7jHpoxkuFVkaP
13Qci0ZJ2HXKLSHsakmM1M8Wh65yJq3SFQUHJ8aCDrlK02oihwQZq1DxXW2x
vUpw5ZPc4jpdKRsKeFwzvgcifXguGJIVZFj18NhjvuK73V/tgvI2VzaY+/BD
BRmW7H689mMFmal3i6KWOXKyjim7l4S5d+cG5m94XBBUhQfrSJ4kAg+zjew7
2vxogozNhKQMWqY+ggxIlFCg6My2yP5BIqFT+ryjIGPZp1VG0tMFML78KgDo
M8/47279qZuCDD340HJURrfv5U8say5F3vZ053WW/kNBxhQNcvhFMyVatfPZ
txRk2AbTmV1tGHdV1GxEVD3Rz0jxo9u4UUFm77MSXLnikzMQ/FWQqdHSravz
jwTJskkSPF5tbf3/D2T8f9EwwamnKm8nl9WWIRNaVr8mZ1vu++ZsM5kPnGeb
tEZomXzqHXK2lZXpb7ffLZb8obytut0s7ZrSMtSp4yvJ+DHni4pNTqXmblFN
WQtCgWVn1nLosVKdPv2WcIbZFH9OOiCJ1SK8318dJOC0dVGerqM9QLjeUy8R
eqStCzYotMCZjqRrZ6Blb/Nz3O7T2pjFiTM4qiYGCe2JwpLcoqXiJ9ty3/Ms
+gswsjyOa77xhsKIpR4kjOwfKfpYyYz5+nxlr56xXufW8tPyOpulRBjJani5
25paL+F9jO4Z+nHOvUNbR1DeWMaGZFONpJeG5ti8X06aBC/TLx2hMGIToxVG
DCWS/vY+CeL968O+SoVk+NeoT+v8bKjTxm2uI/5ayjZsc5K+8r7wyCLkAwe8
Jk6m1nbLmh2mZ62XDBs3fLhiiKU44qbd8oscdXnDR6lM2UR3RavQpFkxhEHR
y0ddBnnTR7drp6zMFBNLqkkM2VCrtVt/4rlB/DxQSCz2v6onefXPdZvqCHUL
19SSqxBDjnR0FS6QNUX5PufZZgxwHyw8ra/bU75awty7EZIs7Nas0X1ly4SI
IaWVq7oDvfpx3D4YjfujXEj1WxOM5p4/UtMph94zeOaYMTqOfStlbfcMGa7r
DZoCBkF4v333iIp1qHC3rqMtJ1UfC8tOly9XDLEU3OrMNWcVx7K6Vnu3qcYZ
YRGTki2Fm2KIoYZgYnLgvY69mHOuGKYYYvz0wWsbAuNBZewpAcbVPy/VuWWO
KOhQdT+agn2lycQ5dOqpCe+zs2VHt7dRIkkPCxUQ8aC82cYciiFH8IftXCkB
xeW9nlIMMTigY17xjHAbbfwyXX9LlpHBw+5WDDHJrG7Lxb1dSaVjw/xgbZqK
94QOJpTUkVRZy5S2iFqYf2tox4VAO2xeYCzvB7WboWVtlvKK2N/T7/9a5Yc+
BCRzU86yH5Wxb/hpnuIFCZSv/fkanHmKF4ZIlyJhmefVZWhUh6M0bBYee5Fb
myor7lfSO7UpD1Oul8qOZV+GM8o2UiZeIPrFrDj1mcBcqls3QZa2D5MkjJ0Z
gc8Ufks2niXRgXUfc06tKk4ZWdPoYre1hpzr3OP0mYJkQzHjCOeRLYDmxCNJ
CFlw9n7uzju11xfXcvzm8f4ZIGdQzDDtl4gZVr9VVqFja7uCDlcmzIunF47b
lnP+YL8jWOAMZhg6F2Ybh/J0MiifF3hcaWYu37VcZXj0ZZ39dcXZIUHz4AfC
hu1mBZ8UEjGZrXi43wZ+a8UMdNaSFo5HDPwRC3BOAwfz9+UrZljdQZu85EqZ
/YEnngn3MxTKfC70IgYSeZ3Fcr6HpZlUHLlbEimeevg+xRHDTMrxBxyB/ltH
VoHFHmWHJNA499wQaLTUyFpibHod8H5IWgC3njMbl/SVoD84PJsPdAXacuxf
Etlb+FaG4siG7tKo6saZNyKDWpkcTrna7UxJ7JhnA26KIyY5/ihxBKXu+cmi
fXJ1YWCziFgdJDHVSdnKVTprewv2yaydfb8iiq10UESR+vCEFWdZe+a703TG
oa2jnMGOBZKGExR/cSZ3bQqF1JpiUrjIPxc1KarNGiQjKjBKhNxTTu3iJ6UI
OefTNB1fWYmE9jb0HKgoE+fZJowPHj+coPhLm29c0NftjxdT/fJxydaXOYF0
cvnTclKu+jDQyVmeebV4cPLFjgHdWdddx9a+sWSnuuLfxNu6/b0vNL9YaW4O
iNQvOD9w0NN9iJ1NCX+/2RX+uqJNReFZ30g0z/35p86t5X/jb23YnHKzqVpz
t7bhhQlj3/nPQJV8eDcPm25Hh1b6Fa+FHQ1ERyjePMPGWvgMhmGtpjq5p2iH
a8cvDyfbGImDfPp2b0UU0/zG7Tmng9t/yulaJA7tAs4gaC0zT74eTpsQAjNa
k1qLSRW0TJVOL9NmS6+zbdy5lfd9IvKx97dAuo7caabkU7aIQHOf/TUeSyin
RRornoVaGaWUMKWp/M7OF+GlqFx1N79Zn4Qx/a/+1959JEhivkM5B69Ttp3Y
V+U2b9YpKUsOTc4Pb2mAKjrCy9rj27j1x5+TsPwzH5W0CPAgcxvZrcXtC+f/
4dO5N1sOsjU3PaPTbquDFV769RMWMAMvlruBU8uDbOnoufpu2Nygp7ZLgCwx
GmAcn2U6OhKHMscMQxzPBbOMKl6Gx5/wYqsVtVeAUdo4vgVnB+pswguVsQM/
fu8NCdASHilFgeVH1tjgfb9s3N3fA9zJXKsNH0h35ezXftS5tZzV/K0tZ+LW
RyCLUREN8DW9zbfmcAZebA4D4WXpF/P9c9HOgs/YXa6am3lS3/AMr1bzv1r3
jUrBsOCSVE/3r3LUf/d6ABWjEjAvXantTVsg27tSy1PzpAmpe/rpgCvVjne7
uoplenh5DUyNIxE1q7fVaLwccukksYbc118rhuy75Epfem/TSymsC/4hceay
Awf1O+Ymo6yfz4fGDU+uXSD4/OHVnHLq7erR+R9xxef4JCcb+UxGwpwf0v7t
ReG4wBHZSyqHiSGWvZ8YAnYyOr71mBr3h79f0SffhrjGzkzvZEGAj3vUhuuP
RHLM/WgVSuXOahmIj9WZuCXNMyogxZvvwaDkz5tCn7UZ18lxtm5CMBLACgd2
OGdwBQ5ZVE7hL6Zl2hiLpmDCEx6blHwPk/EZiJTfFDVjwaNjFVfAAYJjE9n/
iiu7RE0ruPUhHZ/lAee6bX5D1K+dP6SFdQNrx1XiSCae3D3vbg2uakynSzO3
N7VcwrqxHfC0u7/QebZMxPwtmYOdwRPwpM87pXfC/TLOus/fr2RXieKJHQvx
ZMs4cXCte2GMPsPyvfMZNnWLzzji+fKIRFRdYaFet+Jbwcrf7ntMkcU47H05
5oIanRRZmFAA5/HSy3R/cOo3pEv/sIXXB8TwTaD+Kb5aZYowxgevs62MiSw5
g0Qkd88NGpat/CSyzK/R2RcIWiLMY47w2oeTNoOujc+3jUHVjiuUZNOsToOO
FllWdZeoWMnOYpVQMP7z1OLjQWS87jSJldP4AQBjl+Mv8jduq1jfZTVIPKHc
TCmKcJ98oq40rCBrKLn7SmbICXXg7fd192FF4yaYKinp54h7FP28+Azyv03K
n6RjprsHpaI63eb80sOldkNXfFEib7btfEQUsS3LiSIo0Ctp2SbhPeiyRA67
ul0McfN/O+jm/zOO0K4v0Osm3/SR/27pZ3PCTqt6sltWT9zGRAwYIzQoed2i
i092W6onulSXjVng7ze5XzjX7S7lby2ZiRrGyXHipVnfLbcLF/nB/O2KGG+s
fEO7Caib1XTP5DO2HNvMrT/54oRnAL0ZVtPTybT/4ZiXXRQagylifCcFqBnX
jlTEMHngrrhGXZd/3hVKQ6/ZAUYj1xP2Kyk8n9z3PR3vniYt3M7TpfMo4cJG
y3md7exFuEjrJCG/zXM26Hi3TZaw4rIBbylcoH0jGDBRgI06MxiJR5Jffmd5
Eg6Hq4R9uFVcou7JJ48WLn5pK3CRMStNp2l6kxu8zW5Fx0bWVdxNLqH6VGbL
cm0eMlLJ5GxpI5d6wVvSxGLaPV/q1rPZpFprerVEtopW5ekz6LUHERvHZw/6
IyGxng6nn+5ch8SmHShlRGTIGWiwnO6aIWDc3hyfpd5SaFgqIuDefFPnatd8
Oam2PmJOquefl+tyc/W69KukhWX2L2HpITosA7WEciyF4HWZJ7d0a6pVSyiB
L10pz3WvvKJzb7cjf6vUuc4YtfvEP+buvz+M2dQ5c8zFn4gCdGiSUYBMyhZh
wPpXgi5d5rP0wIrG8U096UZfO22vW58hTXHTLnlJYQCpXnG2ghjpffooDOAd
vSyZ5rcc7+pPJTFq3qDPdbzgT2BNM2HgSEcQbQlk8CkMtBWIL1y3IxiF0yUy
mN51uPpXdtY7w+U3vSDhveb2k2huzsTQntR2SuVzj5TFYhsFH+X2//Yi0ak+
//7jsK0jvbXsxFoJ4mGDpHrdEU6O3KmSbZfW9QXd/szKRikIl5gMZrOf+Em3
F5JOmVijdohpQstn0Hm/evdqHR8qUfEdqqJ1W7c/vM1kqs3XcjuanucKGrXS
9pCWUohj2l29nstvc3nCmKITwF+HikZu+YKFstwLrh3+X08b26GW1xU9JskX
+1auD1v+hAvchmoS8OOWh5+HyZ7q56jc2mWlNgP8BbEwWgjn2249/tYGlrnl
d6za5n+7qMcTet2OZ//Pf7drxpL/qsFYZi7ezzKH8TvbBVf9P/Wu8vQsVpZK
8+V0K9XmxakaCPVlPuWj07vv7brlAV+AsanXB6ZfldXfpUW9+/57Ha+vfkwR
yOOWJ8cnGGx5HUvvwEiulTP9Jbm3bP+BkBAdV3VObv94cKkiuNatW8J7Tb5B
ArJLPw/VqQ8ufFATDvhc+rqQJ6eJQt8Jq/fsm94+2i2/5kVRtn/8/fkwPYb0
mI8vvTBEPc7ia++QEyHr4nAibF8Vilm55W0rTIrgpjekieGmL/7S7WUjErrl
46RbdILla9vceD7XEiSrZ7hx0Fy45SESiK/iA0KXyG7TLY8iedqFHBN0hRkN
eyeMyTJ66ZY3RbycR9vQSMVsgHirVn45J8z349LxBOxEun1MLJZb3kYGFBpS
T3PTK7XweXacnwM7pdfniu4P6pjt/HDrGb5R/S4nY528xyUv6jNsl2KOOa2H
2MZrfl2m7iREy1DFARta27zVCWQEfIYteuR3yO0HQWXC2kdyWNbk5ITtYmOw
hIFWf7TyhTk2gkcYYBcf28JW590wVCm8XXy1O3BsYldlMkohPszrWPAGqFVP
5C23OFehQuJ490vkzQ0cqDBw6Njj3P4e1yZcl/WYOFnXfBKKQy1TD59L9hzk
FfC3mf8WFrCpt396tDCQ+47YHd+OG6zTs6FeW5df+6yEx/v4bByEZE07lG2k
FiIoQ/twy1I5OdLbP6HiYbOjKR6HimV6dt08UOGCQdfXV74evEeG5ZpbEycg
CfM0eDTwC1nmd6bo9Nj+6RQ3pFOyeRDpgRY0usptT7ZZ6Kk2G9yXTGwtX1vh
wnJAckwoxUEKIf6qEr+piXr4T0mRvPOc8wfqXO/5Xk6knR+HE4ldihe+ma7X
bbpGPI6RWIU1AUnpcYndh20KrUYD6tZyE0+v6AusVOEuLfPO68nNAzkht+dT
i5/S+YIowk/jzDZe94sYdzOvHxl8MqZUkmPOvVPs4sIlG1QW2JA7svtVFqbX
vw6cwAnPsAF4fgdOLGx5u+6eDKply4T3xXtld7rDbAEx0ODYRz+X+vEa0zey
dXkoSiN88FkrX/re/7f1H/6u7zXvPiGcWvPF9LAWN93kXCUJRhI+bIY7r7NG
K+FjY7terqRKohHnUlOV9bpx/B14OhAIRdRLa7cRmD3lloR3PVLJp+3Twmeg
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
hB1x6ADkKLwUfFiLE6Y/9wztYlHqFls2/ILH8kIAYOFZD/9/gVz5cjcocvsz
84v8XqImxY2MXLtmOiJlkf/W57iXRuqx9JqpSYFvrFmMnwfSMacHVsXOXgz5
iot6u8qWqn6Maw29gldY8BeeIZR9GTrBc9zHYuVYfVVN27rUvqOjvivCDSIz
6QiZMn/0rBEgGCWaGNIV/6QFi3Kf/zIK6ZCybEj3lJJ+XEGBTQW8C7JnMeGi
k1W4p3xTmfWD9T0w3VDckfgJkE7SMaLva8nv2+DDqi5AOtnrSJvlZG3jTulJ
VkjvH33tx130siFd0jCVOy1YuikIWESQwcaaxSHMef+W7gmS5mlVIK+V2FyV
3U4LTt/Bb41dPNZsQ7hywqppsES+6AxdYyYvUPpK+s2v2RKtLlUPevxxdxkK
cfUiXENJk/zFm+waUzrQFval4r6FD6hk6rLnfQBkbevjg/In8hdScCSBWkJ0
/F32DAH9rEhVpiYnSzEy9FveBPIW9/Se5sHZI+T54Wxj7YDuS86c9YZ+JA9h
6EfHRxbkshdujxNcVW8Nipg/8Ikn9LbCQjMT2b6DRG7OtfXKSHEvvWToxxKa
KHVee8zxrq7fqWauLFJu5euufDH4reLF3pkjlBRIlNryIt7F/4B0by0vj0K6
ayLXBr21nNSoSoKTqyDdyJfmBEjXNMbPG9K9qM11WVnWDFZuwGpZeORAV9ii
TaDYaZvzU7zkCr7LedqGiJTEiGvV6dmKJI9ONmTiU41592fqCcL99JPdxy8O
IFjCcLWi7Nnr/cuEiElW3uIkfZfv2rHTn2aphAamkd3VQDBO8wCCiWtaAt34
5C9UQZHFI5+3PAjOcjIm6WJlnJY+/66h1dyLteLI2j/VpX778ttt/FkNF2i1
aby+3H+Z+4GFNw2tBKn6BrkxwclcfEa7nwBFYwurtv7UgW5HD925xaIGYUlt
z1ZSwaJzHjGE4NKfpiYyXPuSNSPDrsFD8M66d6IiTki7sdjji0pS2PJDgs0R
q6cArQTlJEGQv8tUVaAVwtUVmRrTzBzzdLhHbR74VEVDVD5SuTbh8LH2zPTx
U3Qpz00xZGLhyo7hb6AMXuobs4L7U5/6zq8R4kviNwRhRcRb/Ih4y2Vfqmer
ndsrzUaY/mpQRSVEsK6ZzgqoInZ08OGsBnOiTdH+uZQUWx+sVoZ1VDhf31op
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
LRx5yswPXj643PbiNH6rgK5xWaOVydFNr3q0m16vVeye1/SWMNjunO0KGHaL
pNofUYfsjNtfU8AwCtluY7XmLq1xD72W3dITMKzgrLIzTdsWWqGtx1AxvXM6
uOy6FUN5Q957ynlCkijevlvBAWETRKbwiRlbG+HhvXP9jTqtSJtEwcE6M8Fh
8WCZs5QXPOdpy89ibtlvjFSnR7cPnBcVj/RkPDNfGjxOKzK37PZeOkBWq+i5
TnBYX+MEt/TwrnwuntKSPMuTjCU4GFpN+LczVaZx62Ov6WXnvy479pkDf/Sk
gWDbAQY3NDw15GEqKWmiCH8i4YKGiQQHy4QmOFjSJ8Fh30WXuH2Nw7sgJdl3
6gzex/NPtOznSqySDD8RHCDOhPOCta/gEInm97zyDAQ9VYZukERsZj8+5qBj
G6aXMUfd1mWqURfLvt7dd5/fThgVSo48lpksVtaY4TOyRE0dPF5/u7zaKUrL
3R+WsUzXEOqVvoZNNS1MHx+CQ9kySbsVv/6Oju66YKP3Z23J4CqpL9IJ2bhw
g4KDbWnJa6z8ZWl43NSr3lMHI3EKq56MKq1cSu3OnrYcNQZELz7bCwmSWc6A
w6qfRORnat+P1QpJIIQsv9bkdWzt0htJcZm+aU0DIIJD9IYNP2m9u0mI8d5N
pigUYVvVrLuCg50zgsPsJ2TO5g7y1KO0L7yaL52eokqvLX9NwQGUXFBznQEH
lfYP5nH/1WhBToGPXSAIcNFFjOPwlAc2AqkkpYdRnRrBAXV2UTI+/Fs1VqYx
6cr39LKLP5bd9/Q7hntHNDWEfB8iKX7X/LtiprzrFq99RyBg7AD8T9UO9TWE
4T0FuyYfmjO7cLph6W6JseTffL8vYo3Y+3hHEwjWfCELz77XtkDomz+f9bjM
1ryXxh80EJhwLEeYybfF2xerAeevkz166kWPeSAwAo8cZQawIArD0bPBL/62
6LSOYZNlZ4AAy1zu4XXUTEEXnZS1+MGrQ4HAKmtxdrdUrut+aSy0CjW+i0QR
LWvKah1xLK1xPqiL8RppX88Xa7npE3UmrjOxns087DSX1aC9XqvoGdlTl2Su
VyBA4RkdguNom8gSCFApicw1suUEglVHt3Gph9ULCU8KBEbiikBgKZda2RjF
U8oe9T29sZXB+hrCJjWi5yFrFqvCSE9WwQEewHkkOCx9VuZx5SeJek/Bqkg8
7ZoP1emtaBQ9GexZ0mr0uIv7udLKVWPzY2W9eV0IcGJNDhTQDWvkTUjg1vul
Hi+D5OT+bYc31znWrW4umQQCBgKMCDTyj9M97cZP9FY2jZcd99pnPtFpntZd
QmR5i7IVMCJpVd6YTMEjgnGuoEABw+qgEDBymnV0mxuFbsAaAG/6ESZad922
RmIoiWc8ruZrF2qax45Uyu++v4bf+b4q07d2eOLBosXujRJrXXj+ozq8zGyi
LotWvnGRbMrRFpgev/QB0U/MGrNAh/iRxVLWGWxsdeiWPiLptzXfJ3ukMS1q
6fFW04AWhf0D0uZ2+rd3v8aVHCp+Te+2shk8X26aaComdn7We3W1yu67zhVi
Flr8ppDBytKW6BRYnUBOARZ0eMVj7a9mMX16+Nt9X3+jqAJlTvwWu0N39tmo
1PLvJ/PqJ6rYNTjHe8uideFxK258WX+bVrWtm1u1VRg15L3PuiparkxapQiC
4AF594ogJqhiheqRy7tz/p2KICaaS1F9RRA7txqY+FJkelxyso+MLhEm7u4X
39B5RB40ym0qgti2ohrJhExZlM7h+dJvkaq6giVr9bq2iQsdtbBSTbf0lOsp
JsjLAEy57eKjrwqGMrWW0CCIIECZSC05/Ns5QaZ263vf6K0ULBa+WdHbg/12
0sTJiCDl9Y7JvlWAcNeaXEWQd1e+q4RqIghW1EtrhsAalp8jk00E2VTnBJd+
VNfwE11YXfMcL9bNrCaqnBVBFkmx3DP31vfm+MUXOn0HiSDFu6Jmy23vjVkW
9G5Ae6JF58yQ7d2sXq8rClCgMGXIDB1i0veC33svM2qm/C2aOaOpszMIYlUB
aFG2KaJq5x5+aZg9cgZBWDsJEg/PtydXRAvXXPWIDtm+CoFnnye1BvoeN7Qs
ToElInAKqLZq11I24kIEYVYf5hEqP7Vooddf00t256UFuxVBbMsO3eh5Fq2P
siQc72bWbB9yVnjvSb1lbFf8mKIIgqgQIg3OIMjmeZnhcatufVW3uAjCs61O
9ejeDf1S2ge1bq0IwtoIzK0iiBFA1PGMFGNB2iLNwLbw4dzmd73c7a0f59ao
YuyKFXoNSx+mlje5P+S4ewqC8OPZlJI2s6zW6S69llQm01WsiKI+j9GQ4j39
kCQJ35WP3aVzsaSHzGPR9j0KG1EvjfAT7YOtmoL1sMKG7YZD4s/qhBPd4jrn
xMbC0l7pr3uWih9ueOC1f7XVNeNlI/5ix8sPYXUHclvgRwHJS99Xn/x/IodG
VIP/5p8sUdZjOHpLZZ/n3n9fPX3uYyLrl/buJH0yqyuunmRI0vwtWjhTGINe
DeoPyvitJWHJh1m3M44aMtSSOReXscc7E3THqpElUdZv14Cbw7IEyOU0j+aw
qEC28B+ecCpWu7z9rP8Iqyr7+2nqdLb6gbdlqXl8zIy3RQ5l3SfjFTCorAUm
R2qzy9zmhMY6zHbHTsDA5gShTGcBY5fQV9GbS6foqKauuNuFMaNKe0jeGet+
StZ7t/3JCBirxkm4OumKdxUwMMQYav+MCTb+xqaIChiU+czYmeE7sF79lozd
lJV+ybFBKFXrbnhSN2EkZsM5adRsA2Gfp/RDaWyxd+4ivYahOUXOXsUV75Sp
TD79PssU46nx3gGh1VqQOyfwxxOFKEcnsVxHVe37Ylx46h0jf9fbGjtFpvmH
0z05xd0pU4nCYGKGVemiiZCkunr8CsUMy2tUtfOjm7rS7vHpXVH3TLfmUNlj
a0yBXvneezrlqIFHwMmaK/fsb3a4SjHDTKGbcqlMXeZfKw8SM1ytWtpWWTFj
nsiyBG9hv78wEnd8MkjVIraON7fKJl8gO/DcBev9qsToSNA57IJOhchad3T5
TSXiwQAz6nPBZ3GKN5VdWaXKbnOfq8gKITRsz5JN/RvHdsV6TVf0ERlq3it/
6VjbOeZYW1aNxmWMUhyhAXJp0brGzWrS2+2oUNeXd7Tw/Ad1h+KoqXCbu/2o
ozfPFVfEjnPfy7XclCn6HmHPE2g0EjGZ5p52wzCFAYwkhX4IA1h6Rxt9t/LE
sBmzwkB5PW+mnPdyeN6c5HV6T7u3CAsq6ZQHFQawrsP1wMehr1opdP522q2y
k0n91LcGsxXXhAHGYiDoYxThdY+PhiGQfTAun7krMzwMgvU89Yz7R8lUvfW3
3sLCZZIY+77tDX7o+/UT1V/nm15Z19OA5psexejytu8WXd52HdOpNIVbdPmC
JJm2/DeGqRlCDoSbcZrhjlWyyf7y/PPV5c102Wk6KJdPEOO78srw1YugEeTH
mkXHr/pC1OiWPjXCu/5kITO5H37Qp7H9V3ncnpu8ygLdHAWV+y/83CnBou90
CXTRzZHjZzEr3RzSbYlNrgyf/JPVn9DNty2T7dmgU0/Dup5jzkzQ7CfH6viC
P0j9To6v5Vpzrmmq6CZHNzctpdzik/u54gpVPTezV2+3r7a8l/n0aLI87dhb
YnMOutD6LtfFbcO0AVbtKdMQRlkbMyQYX/b1cHVzlCSzRJVubrQC3cwmfSDQ
o25OTrbtzpdy2dPheXdkbNZ7AjcphCjD28w/7jS3/dj2sXu3cMjzQWUNmhvO
urQPmVsOEF06vU0vl1/tCPOTuKw0Tz3ttq8EQT6ZpbeQu13cY0LX8/RW5zTv
4woqyqTT8Ky0sRbkfSXnc7NmqUvbFBddujDhUJfV8dr4tEV0dDu9Nl+iaL9D
akr/vKmduq9pkujS+8jw78zcfJDuu7lGU7e8eRj0DJe4N8+5Wd03eMeJEzw6
Wg0z6zuhE6U+8rXXBugue6XCrb6BvfaH37NHR9Hu/+m+e5qe6Ha1l30R3dfq
zdB90bJ32hEXMVND93VrZLv05PUh/0vz4RMlf7NvpCcEIT/Es+qeJNrd7lvI
rmkJPtBkVnO60vIlEx6oEmq7jA59Y3NpGSrKOXhTRnPek6PVVW2nC3VVQ4On
q1qRerqqyXa45JY3Q4JGXfXHdT+G5528abLf+T4kykPBRsLT3BOquj29+8Xu
PWwo3Llz7N4z3xOYyfnsDz2fVTSgq26cJdORct1rYekI7mHR9kV0VUhnFkQP
RXu1LXh46u2vytuyYNoiT3EINvMI7szs1cqrsx1xedi32RlXtSqrdNWN78nb
fON3XkLUqIKrq9oG6rzu8lZXuvwqDWJDpITch370lI6d8iKZee1p6qos6wjb
jPnhP0hXNUSfMJwUGIW66uJBMkGLX/1DJ3fZSFmvJF071E+uMWoeF+zKwu92
r9/qhTSj4DM20jRC1NTMqx8XjLG1/nTVHXWbuRUndgyffGz2WHXVaJfy4C1h
hS7foIih8p2ulRuG2sPxtZxBdd+3ZMOC9kN036iRSwyA+PQ5rbu7/AbySYFK
+IrhJ25ZbNCUxy16Xzh+M+7+Vt2XiVGbyEx/V7Y2WR/9piOH/SrFzKpHtgGy
NUYv/LtL1A3dvn20DcuxUw/2h/nbRzS+d++YeRY2Psbt6iiRey5KQd5FgVds
+IxoIa9h1ZPo1enjNLtvNbfUq0+8NfQc/5M4EUxvPxK4csuX6+3vqlLBTe8W
X9uubtHd5dWSuVABh0gTOXj/q1cnPyU2H6zV1Kst5ZABpeLdEgCa2vYeva5p
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
ap4xQQ0fMhl4A6JWlM62d4u8O7bf/qg6G2umkGnC/w2eW51t7UhJ3Kx+0Sdu
Zg4UrFwwmDvnyvpb/Pfqslf/xdm8hKSvRPIK8j4F3aycUyizvFLw3223hZ8Y
RVk7XlLLi29734/OD9LqwE2e7K2bqnd/rtTjii/u5fY1OCJmjeWlkfdsE6qc
1eln2mDxWXfq+abeIm/ZtM9m63FUf0YXEB63slkPt7lW89h1S+6RlVzZHr+S
27wsT7yv0zP+bXJ4S7fh+Dh7yTax1efIzJTvXn3Vb6xrdXLpVdvErrvkfilS
XvvLAr/Rmy6s8cQer/i3YtcrXFHtw2PXTbxICLcgmum9IA59003GMj1bHrsx
et+G+m1dZuP45n3RBxJ+n3GXD79vmSbhyPWPvqeeBslQnG/WllnqaUkdZWG+
Y81W9TT0E8Nx6BOhm10TLKSnUYYC+bNl9Vu4jUe197YEsbjzzos9D8SioDGJ
NBJXdrlpUvqDDdMRkXcwlYc4TfAa1BoFk9nkY2a+JC1VskdNV+dCZRidK9gP
/Ffnquyy/v4/3r4CTMuq6V+ku7u7UQxaUrpRGhQlFANXxUBRECzEwkQMUMHC
QlF4Vdhld4GF7WW7e9nujvN/zj33xIHnW33x+/5e1/tel4+zZ+77PnPmTPxm
Zr/jP7vouhvlspAszDUuuxyW+x61y2UN/bbNPYNW6elkZTxzJXWbqYAh0LsJ
zxwGSLVGpHzk63AVh7z6C+1nyCoI7mf5J/L3XLFCqeYmtCx/xARV3NNMw2Kg
98ygTSzTxTAlVbm40HpVh9nZJLqfIVikfv+d+QpoGdFt3AgQNnnWMwE4ETX/
UfpN39D6ppZ059ZDly0ddaD1RMAa+QZ3nKpSGvc1+WLn+tBQWq8yBeSndOt2
PkuzZinVvbvBN9YFoFu5npwyxAHkgWM20a2lTTXdz0e3VqHpgk157jD+bdFP
YFblfsJpcQEUoTOHml5jWfHMud7wiMLAFZ45h0Vr0em57XjmEu8DOcgLSqAz
p+OousBCj6CJdHghgS0m0DdLajVMRXcwdYPUSXi+JM529F+j6XzZaKPqt/bx
K4nBIti+F0d44f/0/PJaDhnaCNFHNYBqjXLPqLwO41KV8aesPoMux6Kd+nB4
mjLrtFdenRcZpyn8Y9B6Pi6csPTZA871OZdvWWqefRZeISOD6BKm3aOq6tQz
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
K7BqbNTD7LOI/olbcuJ4WF/wfDgT1SnadiSMvaHde6iyKSYbwHJDd+r0j3aF
4+CO9T6uvGNzaFc4lEBYvp0nKKqvta1EP4hZevjFatPFlm+szrWl4JFjuCzl
53HcIXdcBSfm2D21HPd4rLc6bhkXiqInPu05nRe3gKwfQnpQPBxsEQtfpKWW
KRsoJyvvEyRElhVtAZ3uNtp03Epi9eWOW82vQrkLgQCxmPu38Xhim9EWWA0O
Xl2tAOVkCiLKBQ/j2jc0r139QP3wAy+16NtNcsKLQCzhM5CqlL1RpCo5SWly
XcR1cwiK62BbxH7pxfNqekKbNsa8RbdMVsU3mOH+4satVOzNpoM39UyyNZ7u
rkvBUTtV6eT9TKtA8nuSpyC/bwSvRFFYPMk5C/cXT7hNlXfvVZstgMsS9jrU
8Yh682encEC54P4LVUHD1gZcZX1ClJMMCRwPu0sF7fZg2KAHMyCA5E71XaFK
6jQ25k3uNkaltjW9pDrlOvbGGcayJP7FxSFQDnv8ud21k8Yr3wi6UkVqBv9e
8SyUq9Gym0oaMtOYV1YWI3gJHQ2XRcucuWGhIZcwjTswkN52kFOVcN7KBo1U
/vz7DbnA+yB7SussNK/QbXDetOGz1KXWXY15ZXyIYO0kVcmhTwJcx2xkOQ/w
AKsDB5hiuRwCdmnHmfwuuXjEihFZuc64C7WEqyznTssnqmqRnCgviXCNPQqX
ktudO0hOuiHI6toJcc8Ct7N8gX/wmfVZ4Z+nnMIB5WQlKzo1xcmHryftLJTe
cb31ZXbtfF0dDiemw0mQ5B7Pvxe7FERF8e8VWxblgrrNUpkNTTjEHQJL22f1
x7Qsesthz2pSCOxW8SX5pQzD9yFV6eTDnxkpTae732PM68yPKS1U8se2mmzF
3uW8Mj+XxrNTlarWsR+z6pJtojy+gWHoLFXJCfk9bRmEGity8ng9enM5TWdc
gdrCFZu17d9PP+di/bYqqO98U24t0AP0RY1wjTgEloX7vXvqDMKfrWtZ2y0u
SWnAsu9h7DnEVjpnXz9G88YNmKVymnU15vXtOFtlNuhivO7iuk2V943LjWXJ
TwI6ROScZ3hZTgEcKj9lOEimFMqFLgHPYV5oEluJw4aryhEjzWUWLFWcFxk3
jnHZaVMBWzZi8hqe9xabaZp4keQKj8BRcfHDb0hOpsDTvBurpypF7QGvY9CL
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
slE/hfgNpnOAWOMcC57zI3ijbDhtipvGCn8RXV2F1xU814+7i8fb+wNOZOEL
7xrAUqa3I6kQnRS0iS7zH5iamj7zLQZsxTzUWfe9+50R5kVtEqIDbzR1DiK6
/c+gBzn/53QG7JoX0OSwKWZeA3NKbcEBptvYZri7mSWwK68w9VQIYOteN9nf
tOrb2jlMoO1wi6703AtU9Ql9LCC6wrIOSmFgiyZeROdJw5CwlZNiDLAdJaKu
cxdrPKqStezBeWY8Yf7gfNanMeLgYNqmpgI7Oym6AYgL0+fgNa9/YA/Xkwl6
BOz7lIkoqIGbhlANugxEBUIJmboVqKrnPfQyojqEuX7Vl9+5Y+7fgDEHW6c8
HkA0EGSn5Tr8ocLzTz1ljINU8tjjMainpk4vCWsLxTQ88YRBs4iGI7qCK25W
dUGoXhIdlfcA1ZnDlb5GDyCE6hBKa95Gox+EZxPd9iFXqYrWXSw08zPn5Rlh
iKxB0qMIpUyCcaGIrmSccfgTHSSvU4YGs99vzPMxW4VQed3HltEHwpZuIUfj
+SvpUrAME9pXTDYeSlkamVXYQZEc+UZ0i2ahgAmGVEJz3UGMNtsX8YARcmaj
sxtMAE1Ec0ZcuEMRptIEmksy4lzWPS/La6F5ofPqzj+oonr99YHQBLtl0/6r
hdtAO9gU8gpqrUocDpty7fVHO3S9/3If1bnTvD43uHf6evgtmHQMs/bkk81z
E/e/HJWySDOXlD43unP15ak3u39/5fx/874W4Ma5QUGXHqqsfQdcEOda7kzE
Q+UNtwY0z42C3JFbq0xIo3Ntcw/AZffuq8Ze6F7bOGaMvn9zvF8L/X4qLk7V
Ojrv5p6h+LYgOp6P77d5+pPN9H408k6IYtNGGXwCl0YlD7zCvf7DmBnN+I7A
2JxJPBiLh/QPncOD9OjJ/W5zL+1/ck4zvSFhwwOioDNy6vTp+Bb6DbecGOoc
O8eohddd15xvGGhCGy6+OICubT/2HFXc+nhz+6PfCfgWnn79HC7qvJ2j/vNb
6F2y/ZiT1cqWw4+ebYkdEaR+mYgcJWv4NHkZptG1esKGacbtntH7HPd2yVdL
/gsy9cTJ7gfL+4c10xvSnvjlqhvxVDspAvcEvePPZ09zP8iY+Fizbvn5fW9x
x02aeCMuHb3jNkhGAHni0iua+R0rnbPht3YXu/ex3nH9iWe5gHL71hzNvvuD
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
\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/rabi-\
oscillations-energy-gap-change.pdf\>\"", ",", 
     "rabiOscillationsEnergyGapChange"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/rabi-\
oscillations-energy-gap-change.eps\>\"", ",", 
     "rabiOscillationsEnergyGapChange"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/rabi-\
oscillations-energy-gap-change.png\>\"", ",", 
     "rabiOscillationsEnergyGapChange"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.677948367388522*^9, 3.6779483954737263`*^9}, {
  3.6780182777918243`*^9, 3.678018301593463*^9}}],

Cell[CellGroupData[{

Cell[BoxData["markers"], "Input",
 CellChangeTimes->{{3.678033569659987*^9, 3.678033570672296*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledCircle]\"\>", ",", "8.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledSquare]\"\>", ",", "8.96`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledDiamond]\"\>", ",", "10.88`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledUpTriangle]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[FilledDownTriangle]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyCircle]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptySquare]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyDiamond]\"\>", ",", "10.24`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyUpTriangle]\"\>", ",", "11.136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\[EmptyDownTriangle]\"\>", ",", "11.136`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.678033571101305*^9, 3.679929190523369*^9, 
  3.68209537188167*^9}]
}, Open  ]],

Cell["Export data to csv for use of python", "Text",
 CellChangeTimes->{{3.682096019106126*^9, 3.682096025505796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/sol10List-a1-\>\"", "<>", 
       RowBox[{"ToString", "[", "a1", "]"}], "<>", "\"\<-k1-\>\"", "<>", 
       RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<.csv\>\""}], ",", 
      "sol10List"}], "]"}], "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{
      "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/theory10List-a1-\>\"", "<>", 
       RowBox[{"ToString", "[", "a1", "]"}], "<>", "\"\<-k1-\>\"", "<>", 
       RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<.csv\>\""}], ",", 
      "theory10List"}], "]"}]}], "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/sol15List-a2-\>\"", "<>", 
      RowBox[{"ToString", "[", "a2Critical", "]"}], "<>", "\"\<-k2-\>\"", "<>", 
      RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     "sol15CriticalList"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/theory15List-a2-\>\"", "<>", 
      RowBox[{"ToString", "[", "a2Critical", "]"}], "<>", "\"\<-k2-\>\"", "<>", 
      RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     "theory15CriticalList"}], "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/sol11List-a1-a2-\>\"", "<>", 
        RowBox[{"ToString", "[", "a1", "]"}], "<>", "\"\<-\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "@", "a2"}], "]"}], "<>", "\"\<-k1-k2-\>\"", "<>", 
        RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<-\>\"", "<>", 
        RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
       "sol11List"}], "]"}], "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{
       "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/theory11List-a1-a2-\>\"", "<>", 
        RowBox[{"ToString", "[", "a1", "]"}], "<>", "\"\<-\>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"N", "@", "a2"}], "]"}], "<>", "\"\<-k1-k2-\>\"", "<>", 
        RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<-\>\"", "<>", 
        RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
       "theory11List"}], "]"}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/sol12List-a1-a2-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", "a1"}], "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", 
        RowBox[{"a2PureRabi", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<>", "\"\<-k1-k2-\>\"", "<>", 
      RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     "sol12List"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/theory12List-a1-a2-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", "a1"}], "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", 
        RowBox[{"a2PureRabi", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "<>", "\"\<-k1-k2-\>\"", "<>", 
      RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     "theory12List"}], "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/sol14List-a1-a2-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", "a1"}], "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", 
        RowBox[{"a2PureRabi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<>", "\"\<-k1-k2-\>\"", "<>", 
      RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     "sol14List"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
     RowBox[{
     "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
interference/theory14List-a1-a2-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", "a1"}], "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"N", "@", 
        RowBox[{"a2PureRabi", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "<>", "\"\<-k1-k2-\>\"", "<>", 
      RowBox[{"ToString", "[", "k1", "]"}], "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", "k2P", "]"}], "<>", "\"\<.csv\>\""}], ",", 
     "theory14List"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.682096027786893*^9, 3.682096054080079*^9}, {
  3.682096210713122*^9, 3.682096216327573*^9}, {3.682096330671899*^9, 
  3.6820963423182487`*^9}, {3.6820963873030243`*^9, 3.682096400233597*^9}, {
  3.6820964493189096`*^9, 3.6820965053696747`*^9}, {3.6820965624847918`*^9, 
  3.682096646054418*^9}, {3.682096689368499*^9, 3.682096701889098*^9}, {
  3.682096805558379*^9, 3.682096915189118*^9}, {3.682097823882408*^9, 
  3.6820978976835947`*^9}, {3.682097929991973*^9, 3.682097933156406*^9}, {
  3.682098143915555*^9, 3.682098147679514*^9}, {3.682098259780553*^9, 
  3.682098263632262*^9}, {3.682098553620482*^9, 3.682098685765924*^9}, {
  3.682098722720902*^9, 3.682098727070551*^9}, {3.682099337878389*^9, 
  3.682099352402657*^9}, {3.683058850583179*^9, 3.683058878101863*^9}, {
  3.683907940468639*^9, 3.683907945649325*^9}, {3.683908011040339*^9, 
  3.6839080258943443`*^9}}],

Cell[BoxData["\<\"../../ipynb/papers/assets/rabi-oscillations-energy-gap-\
change/interference/sol15List-a2-0.0141421-k2-0.01.csv\"\>"], "Output",
 CellChangeTimes->{
  3.6820962173511763`*^9, 3.682096400831905*^9, {3.682096471471538*^9, 
   3.6820964995394897`*^9}, 3.682096574408614*^9, 3.682096639990272*^9, {
   3.6820968303561363`*^9, 3.682096885343669*^9}, 3.682097898176732*^9, {
   3.682097933637793*^9, 3.682097944176968*^9}, 3.68209816324406*^9, {
   3.6820982655571413`*^9, 3.682098287877161*^9}, {3.682098687114233*^9, 
   3.682098753103078*^9}, {3.6820993441832857`*^9, 3.682099369754236*^9}, 
   3.683058881171336*^9, 3.6833058494123297`*^9, 3.683907951268713*^9, 
   3.683908026348173*^9, 3.683910013584216*^9}],

Cell[BoxData["\<\"../../ipynb/papers/assets/rabi-oscillations-energy-gap-\
change/interference/theory15List-a2-0.0141421-k2-0.01.csv\"\>"], "Output",
 CellChangeTimes->{
  3.6820962173511763`*^9, 3.682096400831905*^9, {3.682096471471538*^9, 
   3.6820964995394897`*^9}, 3.682096574408614*^9, 3.682096639990272*^9, {
   3.6820968303561363`*^9, 3.682096885343669*^9}, 3.682097898176732*^9, {
   3.682097933637793*^9, 3.682097944176968*^9}, 3.68209816324406*^9, {
   3.6820982655571413`*^9, 3.682098287877161*^9}, {3.682098687114233*^9, 
   3.682098753103078*^9}, {3.6820993441832857`*^9, 3.682099369754236*^9}, 
   3.683058881171336*^9, 3.6833058494123297`*^9, 3.683907951268713*^9, 
   3.683908026348173*^9, 3.683910013620159*^9}],

Cell[BoxData["\<\"../../ipynb/papers/assets/rabi-oscillations-energy-gap-\
change/interference/sol12List-a1-a2-0.0001-0.000447214-k1-k2-1-0.01.csv\"\>"],\
 "Output",
 CellChangeTimes->{
  3.6820962173511763`*^9, 3.682096400831905*^9, {3.682096471471538*^9, 
   3.6820964995394897`*^9}, 3.682096574408614*^9, 3.682096639990272*^9, {
   3.6820968303561363`*^9, 3.682096885343669*^9}, 3.682097898176732*^9, {
   3.682097933637793*^9, 3.682097944176968*^9}, 3.68209816324406*^9, {
   3.6820982655571413`*^9, 3.682098287877161*^9}, {3.682098687114233*^9, 
   3.682098753103078*^9}, {3.6820993441832857`*^9, 3.682099369754236*^9}, 
   3.683058881171336*^9, 3.6833058494123297`*^9, 3.683907951268713*^9, 
   3.683908026348173*^9, 3.683910013646302*^9}],

Cell[BoxData["\<\"../../ipynb/papers/assets/rabi-oscillations-energy-gap-\
change/interference/theory12List-a1-a2-0.0001-0.000447214-k1-k2-1-0.01.csv\"\>\
"], "Output",
 CellChangeTimes->{
  3.6820962173511763`*^9, 3.682096400831905*^9, {3.682096471471538*^9, 
   3.6820964995394897`*^9}, 3.682096574408614*^9, 3.682096639990272*^9, {
   3.6820968303561363`*^9, 3.682096885343669*^9}, 3.682097898176732*^9, {
   3.682097933637793*^9, 3.682097944176968*^9}, 3.68209816324406*^9, {
   3.6820982655571413`*^9, 3.682098287877161*^9}, {3.682098687114233*^9, 
   3.682098753103078*^9}, {3.6820993441832857`*^9, 3.682099369754236*^9}, 
   3.683058881171336*^9, 3.6833058494123297`*^9, 3.683907951268713*^9, 
   3.683908026348173*^9, 3.683910013690299*^9}],

Cell[BoxData["\<\"../../ipynb/papers/assets/rabi-oscillations-energy-gap-\
change/interference/sol14List-a1-a2-0.0001-0.0244949-k1-k2-1-0.01.csv\"\>"], \
"Output",
 CellChangeTimes->{
  3.6820962173511763`*^9, 3.682096400831905*^9, {3.682096471471538*^9, 
   3.6820964995394897`*^9}, 3.682096574408614*^9, 3.682096639990272*^9, {
   3.6820968303561363`*^9, 3.682096885343669*^9}, 3.682097898176732*^9, {
   3.682097933637793*^9, 3.682097944176968*^9}, 3.68209816324406*^9, {
   3.6820982655571413`*^9, 3.682098287877161*^9}, {3.682098687114233*^9, 
   3.682098753103078*^9}, {3.6820993441832857`*^9, 3.682099369754236*^9}, 
   3.683058881171336*^9, 3.6833058494123297`*^9, 3.683907951268713*^9, 
   3.683908026348173*^9, 3.683910013740343*^9}],

Cell[BoxData["\<\"../../ipynb/papers/assets/rabi-oscillations-energy-gap-\
change/interference/theory14List-a1-a2-0.0001-0.0244949-k1-k2-1-0.01.csv\"\>"]\
, "Output",
 CellChangeTimes->{
  3.6820962173511763`*^9, 3.682096400831905*^9, {3.682096471471538*^9, 
   3.6820964995394897`*^9}, 3.682096574408614*^9, 3.682096639990272*^9, {
   3.6820968303561363`*^9, 3.682096885343669*^9}, 3.682097898176732*^9, {
   3.682097933637793*^9, 3.682097944176968*^9}, 3.68209816324406*^9, {
   3.6820982655571413`*^9, 3.682098287877161*^9}, {3.682098687114233*^9, 
   3.682098753103078*^9}, {3.6820993441832857`*^9, 3.682099369754236*^9}, 
   3.683058881171336*^9, 3.6833058494123297`*^9, 3.683907951268713*^9, 
   3.683908026348173*^9, 3.6839100137659483`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rabiOscillationsEnergyGapChange01", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sol10List", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "5"}], "]"}], "]"}], ",", 
      RowBox[{"sol15CriticalList", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "5"}], "]"}], "]"}], ",", 
      RowBox[{"sol11List", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "5"}], "]"}], "]"}], ",", 
      RowBox[{"sol12List", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "5"}], "]"}], "]"}], ",", "theory10List", 
      ",", "theory15CriticalList", ",", "theory11List", ",", "theory12List", 
      ",", 
      RowBox[{"sol10PList", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "4"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "False", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
       "True", ",", "True", ",", "True", ",", "False"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "11"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptySquare]\>\"", ",", "13"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptyDiamond]\>\"", ",", "13"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptyUpTriangle]\>\"", ",", "13"}], "}"}], ",", 
       "\"\<\>\"", ",", "\"\< \>\"", ",", "\"\<  \>\"", ",", "\"\<   \>\"", 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<+\>\"", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "11.136`"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Darker", "@", 
        RowBox[{"Darker", "@", 
         RowBox[{"Darker", "@", "Green"}]}]}], ",", "Blue", ",", "Red", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Dashed"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "@", 
          RowBox[{"Darker", "@", 
           RowBox[{"Darker", "@", "Green"}]}]}], ",", "DotDashed"}], "]"}], 
       ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Blue", ",", "Dotted"}], "]"}], ",", "Red"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"imgsize", "*", "1.1"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Transition Probability with Rotating Field\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\)x\>\"", ",", 
       "\"\<Probability\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "[", "a1", "]"}]}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(1\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "k1"}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "k2P"}]}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1000", ",", "0.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "0"}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "a2Critical"}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"a2PureRabi", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"a2PureRabi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
         RowBox[{
         "\"\<Rabi Formula for \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "@", "0"}]}]}], ",", 
         RowBox[{
         "\"\<Rabi Formula for \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "a2Critical"}]}], ",", 
         RowBox[{
         "\"\<Rabi Formula for \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"a2PureRabi", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
         RowBox[{
         "\"\<Rabi Formula for \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"a2PureRabi", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
         "\"\<Neutrino Oscillations with Matter Perturbation\>\""}], "}"}], 
       ",", "Below"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "10"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6779414235623713`*^9, 3.67794143288234*^9}, {
   3.677941584596697*^9, 3.677941617626552*^9}, {3.677941997709261*^9, 
   3.677942002091259*^9}, {3.67794238386644*^9, 3.677942414984365*^9}, {
   3.677942676718952*^9, 3.677942677283942*^9}, {3.677942906031653*^9, 
   3.677942919329692*^9}, {3.677942986081698*^9, 3.677942992274905*^9}, {
   3.6780206693636713`*^9, 3.678020684510537*^9}, {3.678020773771793*^9, 
   3.678020776978425*^9}, {3.678021262832213*^9, 3.6780213741274014`*^9}, {
   3.678021407396738*^9, 3.678021426331175*^9}, {3.678021742145915*^9, 
   3.678021758373116*^9}, 3.678021815636175*^9, {3.678022043657776*^9, 
   3.678022120093685*^9}, {3.678022268063048*^9, 3.678022438019418*^9}, {
   3.678022512579451*^9, 3.6780226706480417`*^9}, {3.678022704140853*^9, 
   3.678022761159732*^9}, {3.678022853501062*^9, 3.678022928370075*^9}, {
   3.678022977510797*^9, 3.678023016316536*^9}, {3.678023066347254*^9, 
   3.678023222990163*^9}, {3.67802331648834*^9, 3.678023358913329*^9}, {
   3.678023618542181*^9, 3.678023743260889*^9}, {3.6780237742714977`*^9, 
   3.6780237858442793`*^9}, {3.678033539411108*^9, 3.6780335586568813`*^9}, {
   3.678033596774289*^9, 3.678033598281766*^9}, 3.67803394589756*^9, {
   3.678034385900831*^9, 3.678034386605957*^9}, {3.678034602879136*^9, 
   3.678034700469994*^9}, {3.678034787483634*^9, 3.678034795711955*^9}, {
   3.6780361140524178`*^9, 3.678036163938466*^9}, {3.678036357235738*^9, 
   3.678036386533745*^9}, {3.67803656648004*^9, 3.6780365761336613`*^9}, {
   3.6780367539403276`*^9, 3.678036823636421*^9}, {3.67803685880748*^9, 
   3.6780368716815443`*^9}, {3.6780370649406033`*^9, 3.678037094308272*^9}, {
   3.6780372323724937`*^9, 3.678037269620833*^9}, {3.678037609548422*^9, 
   3.6780376614950953`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {}, {}, {}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxteHlczHv0ftO+Tc1auW6EJBUSiizzPpa6yBZlKSTCtS/RzU3GciNpoREq
FbJECskWmYSkjZJWmihSkhat1Nfvd873v2//9Hpez5w5n895n/fznDmDPLc6
eykrKSnt5Cgp/b///+cfC2WxNct89vHHShDHsn78KQ++6i9CvO0ym79KtKUj
ZC3xyWyV48In57W8ER9JYTcdx0huOu6jz99l5lGD3Hj7AhAvSWOeLt42zrIQ
in/MvtTEXjz6PRyxLIPFLH8dYjf6DH1fJguJHzTqqHYsYr9nrHJq8n7XR+fp
+7OYT6tqbJ7kEuI12SzyYsrtMJ2rlC+HHXYR624dmITYKY9lzTVN4E2+SfkL
2ATuhj7T4BTEka9Y6fw4hX1fKj3Pa1byI7M7+MQ9xCGFLPbUmdB5Dmn0fEXs
fuD+1Ev90hEfeMOKhOlzSv+T0/MWM6HMdL2c+wTx7rfMqGjGc158Jj1/CZv9
qrFv5l/PEG8oZZGervPrup7T+5SxEY/+ebz63gvEK8qZ6YAbTtYHX9L7VbCR
M+P+SF+ai9i5ksm0nKN9J+bT+75j23LSqmuFrxA7vGfVVrWGXP3X9P5VLDLq
fvJHvULExgrW2s9uWz9hEdVDweK7NmW493+D2LCalV/kP182rJjqU800d/jv
emz7FjH/A0tw1LozbmYJ1esDS21K8Vm3ohSxzkd294x5wa9dZVS/j4xZ9PDO
hZYjVqthb56aNXZeraB61rAzLelHE7MqEffVsIw7ORc8a99RfWuZ7xvHcxkq
VYi7almQJLrCjq+gen9iaYUbpIFxhFs/MRvl5flXRlVT/T8zf1Fgzfp0wo2f
mey5oi/a6QOdRx2z2WsfaFRO+HMdK7zlNCR57Uc6ny8sX3Lq3tgWwtVfWP1A
28C9fjV0XvXszsoz41eo1SKuqGc+NcYV144RXtLAbHIOqEwSfEJc3MAOmNm9
qjlJ2Pkrs2r6t9PP8DPigq9shZZrWUUEYadGtnae04EyYR3i7EbWdb4xY24I
YYdv7JFhfxux+hfEmd9YoLtgusa/hFkT+xA91kmpkfCjJjZieEBwpVs99cN3
ljXr43TfLMRSt+/MVv4p5faoBuqP7+zEbn/LLTLE0tLvrGCkpUHAD+INm5m4
9DPnvfNX5F2a2dRDqQlLEr9S/zQz1vmit4zTiHxhM5N0uI52XNhI/dTCvgX8
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
os5L/geBQd5C
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 
          NCache[
           Rational[8, 27], 0.2962962962962963], 0], 
         Dashing[{0, Small, Small, Small}]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], 
        LineBox[CompressedData["
1:eJxtmHk8FNr7xw2GGfvMGLSQb9EqlYpIOk9FdVGyV5JbyFWJ7NkmpdVVSSEp
0U1pp7IlI1lyFdlSchtFiBKSNb739z1P//36p9fndZx55pzzfD7vc+Y/O/ZZ
u4mLiYn5MsTE/u////cfOUWsEy0j9iotWUn1ZZKZ+t71L1lbqr3TyWLZ32dp
H3bH8bvkgJFINWbIl+pjWWSbp8pVeY0I/Pts0hNy8+iQzRGqHfOJR/PipdfX
xOD8QlK+zIH39NZZquOKyLfgA5y+Zwn4ecXksO38Bpb7JapDS4ij9xMrW9NU
/Pwysmje91kh5/+i2vU5CbmRH7hxxg2s9ze5/DDyo1fHLaotXhDZQUGmps89
rF9FHt9PdQo/kkn1hWoSG1g5bpP5AL/PK2K81vfxqb5HVMfUEJbjgJmcaS5+
v1pyM3dFZ2x6PtWRdWQnjKc1qz7B71tPolxNblWuF1Id0EDK9vVOLI4uwu//
muTHBAf0vnpKtWcjCcoaP/Fy0jNczxuy4JlPZuyOEqqd35LIztAoyZuluL4m
crDRtOtzbxnV1u8Iw6JttYL+c1xvM2HODjxjGFBBtdk/pFvt+qXl9//G9b8n
kq3p/+loq6RaXUTqFHe/VeO9xP0QkVzxeTfvGFRRrdpCghLl7NbPqcb9aSHZ
K1PObb2PmvOByFz62yV68Svcrw/ktM/MpO13Uct+JC31WUbbtWpw/z6S1OUe
2VNiUTNbyVazEH+dIdSRrSTMQHPOQvtaqidayfzXpotf3EQd2kZsvJmD94dQ
D7eRH177Zp0zrsP9/kQkA3fL6wei7v9Epjn8UeJ0HbV3O7nFuu73tgr1l3ay
qf+9//EvqD07yPB77TBLRj3V7R0k3601kyeL2rWT/D2ppqRGBnVLJ1m7s7b/
hBhq589EN6SQbdaNn9f0mVRUs7aovkTt2EX25m3KmHINdX0X8WFMqAb7obbu
Jk1eH/qdDVFXdRPv0WnnmAO4XosvZH9q0Iw76aiffyEtbN3NqZtQm30lDkvz
jJf0434WfyW2qy/VFESjJj0k40lsWYoG6oIesnXTbp7ZDTwv9W9kfZLUOfX5
VAu2fiP9p26kJ2fgeV/4RhZL6mSumk61oPEbcegvdlGf86tfeomah5sXR5L2
k8Cul/zcm94e1ID9FtdLuG/XWPpeof0oqOklkRX6S2a5Y79y+ohj7EedIm3a
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
Xh6kK++8zZakeSDUkYf0aaxnKovwfWMhD/4njHSf2GJ+7JaHI+rb2BYGeJ89
IQ+jqZda/n6C+XNDHp59++K3jeD9+Lk8yIllrIzKx/zqkIem4lVNLxZg/kkr
wH27GV7lFzH/ZipA2qFtfHnxX/dzBUiVzFy7fDvmp5sC9H0+v2gkC/lzWAFK
k1rZwxOYv2kKsOtso3PPKszvYgV4Fq21NTkU8/uDAiwzKBevvIX5zVCEv4JC
dlnWYv5rKkLLmsC6sR6cTxRB1dK39wnyhmxXhDU62e8OIm8E4YpgbDDTeAXy
RpisCJH3lpr2jeP8gn8/r7wk/2Yn1n+nCENR/7SHVWD9UUWY6bAl8sgVql3k
laC79HRCtxfOV1eCmeZTd4n0qE7RUYLhe//MS/qC+2GsBJIj+3qcL1MtMlcC
pbvzzALW4f5sVYIlGWrsJZ10fzV3K0Greo9U/0Hc7wNKsH76sdt8HtUuJ5Qg
x5J9i5mM53dBCc5VaMcs1qQ65YYSfOivs1JJpudNcpWg8Enrt7nKVIvKlSB5
xvX2dtlf9xMlKDV+0dDbRvtLs0MJKu686jiZjbwZVIJ2b5MdDQdpP7pIc2DU
WRgxZIrvG1UOVKzNdprGpP2cMpMD6RE6daFCyhuiz4GEhFXbzIKpH0SmHGjV
XdKatZD6RWDHARmJ0ZTxdsobTTcOVNfndW9PQb/5ccDkmpyq0lbqR5fDHPjC
WWtsOgnvh3Ec+GhRuNw1h/ImJY0DtS0/R9m/Ub+TLA7YqT8er+zMofWfcuBd
rRi/N5HyRlDDAS/3O/sznGieaH7gwC7OrbgpSzBvejmw3LLPwGY6zSMXBhc6
HteXxlnj+4bD/TevpORLzlHepGhyYfH+IKcyDs07spALcd8brw48p7wRreTC
lN+s+kWRlDeCjVzwSJuqu+xHPK2/nQt5AXvJ8v5YWt+LC6utVu3a8TOa1g/n
Qiw7IDrTEN83MVyoGK8ISzKlvElJ5kJ3ynrNoTDKG3KbC2enj28/ZOlK6z/m
Qn5Avt+daZto/UouHM++HVPdokPrv+PCPQsDX9eTzZQ3XVxYbjKm15xkROuP
cmE8pOX0Kj0HWl+WB1mHX3+qfU15kzKZB9IljZeDD/rT+nN5sEEtcod5JOWN
yJAHW0Ynj8/wp7wRrOfB4b0WnddiKW80N/OAtEW/PfkH8saDByu27dlQc57y
xiWIB+wao0ADi8u0/jEePNAsmar9lPImJZ4HZ6JKfGOmXqP103nw06ndVzuT
8kb0iAfPv2a5R0RQ3ghKebDma5t+uJCer2YDDxzFHoa4vcHzb+NB87kZ9/1Z
D2n9AR5k6mV9SjTH9w1TGUQFPFZGCuVNirIy5F7b3bWH+ZjW11KG5iWd+y4E
Ut6IFivDx0/m9V4HaP8KVivDA92sU7sLaH9r2ijDMSPNyFMS1A/CHcpQJcMu
TTOnvHHZrwyvzYqT9sXh+yZSGWzvX4vLfUf9lXJGGfbubShYN4PyhlxRhtMk
rqLNnfpTdE8ZJvYxVjhdw/eNUBlq7fSiQ0TU35rVynDRMdRMTRl5814Zlh7t
1JUnlDcuPcoABUW2xjvx95EJZTDYrchdZ0LzJUWBDwvk1hiEl2D+aPBBy9zi
YaEZzSfRfD407PnH9kwR3o9X8CGuNIYRvhTzz5IP1sm7DVVTMf+c+NAx2y5g
QIrmpcsePqhY3T6ds/PX72d8eMhmTGHlUJ1ykg+nxG0fnZXAPE/iQ7DOE2ee
GdWiDD7YzufeWxuB+Z7Hhw0rzKeP3KFas4IPrY3HVvysQ9684QMr171Epxfz
v5MPXYVHm/ZK4PtlmA/p3XqT7iJvUlgqYNXVebmDjTxSUwF1n07Nqcgb0SwV
sDGJbrLtwPoGKmC5MTY2vRzrr1WBCH/7IL3LWN9eBd4vZXLV92B9dxW4su0b
J2HBr98HVeCr/ow5zZ24/igVMLm0s1o3CflzTgW03epYjatrV/4X9+iwfQ==

         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJxtlmk81VvUx88xHPNwJkJJGVNJKqnQXgklQwmXNEgkyhCSiHuiom40qRSV
yk00qKvBLa6DrlJXQqiUMSGUkHl4ep69evd447M++6y99n999/r99gzPQEdv
EQaDEcJkMP73///7R46TrEUqU7YzFi6n8WXiHhzkWfFyPY2DMojWbDOD0hZv
XM8mU7Nz77wYD6ZxfA4pm+8vI120H3//iLiumFsz2BlLY9cnRNUiQWJP6xHM
LyAj36PznCRO0DipkOga92pt557G/YrJbPVu6U8DZ2i8/1+iG52+I+B0Mu7/
jMi7brM9XnaBxl6lJHZJz4W6hFSs95KM2cLajsKLNLYtI60+CjPYmy5h/XJi
rGNwpM8V4wuviRzElT95gL9PqiDHXkosV4/A/RIryaNkwwx2DtaLryLPeeel
rEPwPDFvSExhvZx35a/zVpP2pqf2Cl2naBxWQ0L7XQPj8o/j+WuJxUzZfxec
wX74vSWmcy5btFzGfnm9I+kDJ20jTLCfm9+TtKVb3kbEY79d64gVO2+f7Wzk
4fiBLGw4VG75yhG/9yMZVu+4dI5pRGOrerLVUlm4XuWmOf3+BqLFfeFXoGJM
16c1kg33kq3OljthPxrJ8Vvp0+Uub6exchNxFF9QuTI0BPvTROZqux6Kto2i
MbuZjNVctfnN5CD2q5lEsjtTaxYdpbFMC5F4aj3cMA95x7eQQCnf6CtLkbf4
J9J+98qgkdpZ7OcnMitWbdr6HOzv5Cdy1uk/38dt2P/9rcT1TfaPJVeQz3Ar
KTPeY5ZdhvzCPhO7mPlvijyQb99nklNZP8vPCeOgNnJNlsXRzcTfd7eRcbPT
ASLbcT+/diLsbjNekYz12tqJ/6ho60dHPI9XB4l7FCj26DbybvoZ16nyLj1F
3pu/kM6tJ5Q37kLedV/I+BwlNt8Sebt2EvPwL3fVnJB3dSexir85tSo7Enl2
kWXKZadceci7vIvIpdlope7xQr7dJC7qa8pIzToal3aTJSEfF3lOM0TeX4mM
TUuUpspLyrv4Kzk1x+pakp0J3v9v5DeP05DwzpnG+d8Iv39CmbvJB+9DD7nU
/n6gtZPyFrj3kHxfxcaqWuR9oYeoXhwSTB6kvAVve8iLVydWuRxG3srfyaSN
iZ2XK+UtcP5ObrnlWAi3Iu+k70Q8361i7XLKW1D5neg6vrLor8T+snsJpIha
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

         "]]}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 11, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1UmtMk2cY/VpAaKFAS0vFqagDCl7iZTrimPR9FpJCRNGh1qhTdNNFzBwi
ioUtQ/CC2QizahUcUJR5gURB3GDhYhErTINiuIRLiWjTUVop4xaEgc74PPu5
L3l/nDzfec/7nHPm7/n2871OHMetfXd47w6f+58vs5xpv6/7olr1gxJxPXve
2X+vQFiAOLqJuQat3xywpozmLUx36A9Ni18t4vgOFuyQvpROPqT/e9jdE22b
RNJmxPIX7IZ9Z885RRvxzSw87CfdeHYX4gkLO57818oEcS/dZ2VOoEn7susl
4m4bGz5+9lOPLAvdP8B8l4bGx0itiGsGWah1tuPrHTbSG2L5Ww4Kv4t99R6n
xQwzo5fm2CrbAOmPsAVFdom/dBDnhlF2JPBG0YLGQXrPGDNX5Kbu5v7G+fJx
9kJr7fusmubxr5lvduiusikHzq9MsI4c+6bJBrq/e5JNhe8LSFWQvs8U8xfw
+GMKel/0NMv+4OJpfmcfzk+8YQLT9eTfo2m/mrdsJCrq8LQO9zekcGDKT4l1
z31O+/GguHT94zAB+sfKeWCK49xnXW+lffmQn1OwLznsKfLtfEgcCTngGkL5
ZDpBZOCft8qrqpEf4AzrcrRa45JS8sMZLtenDRlDfkH+DheIE1mUEec05I8L
FL95UHkyU4L8CzNgzlCzqbMxnfxyBV59Q0mHWyHym1yh7deelm1b7pB/bhBz
4bDGP/0e8mcIAO5cfbS7uYH8FEBM1MFsryzsjyFcCOpIrr2pmPrTLYTZhebg
o37dyE92B7Pc/KFS3Ut+e0BgW7MuyN+M/NseMKvKkF725L/+iCCoRD5q2oD9
YVYR1B2J+FGotVEenvBwKxd9KQ3zM8zzgn7VzF1JIgfl4wXip1tzExdjH/SL
vWFP5aXpltZByssbrnmWZVRQf3obveGjY5ttjlLqj1wM89esqLxvwfvm7RVD
3W9qveLaAOUphoRPnPe3/mN/j+N4EqiIy3vWPtJP+UrgQcbwSvd87I8+TwIm
F5elVR4WylsCj4oaVK9jsT+9q31gZq3KTS6h/mT6wKvghaM/Z3SifrsPDMlP
cSZFK/VBChEfn++r3PgE9ROloJy7iIvcbqR+SOEbY2Hq26+qUN9TBiK/5Urx
ulvUFxmob+tlTQdyUL9YBoW6m46ShCTqjwwuqlOM7MwK1Ff5wrP4pA280FPU
J18wLdNPdOVdUf4L2VWMUw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 
          NCache[
           Rational[8, 27], 0.2962962962962963], 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptySquare]\"", FontSize -> 13, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1k2lMk1kUhttSBKSWlrbQoChokahIJOKK0HvASJyCLBLUDHGldoK7xB2U
BlEUIS44M2iIiAhoVaQ4qCnGClpBqcgoCtRCUVkUSMXWpW5oes9fv+T+eHK+
995z3vde39Wb4uUODAZD9msxfy0W4zdfdhWptIVz63rTpJTriL4q+nxXfSHl
KD2ZznpzTelUifUnRBkS7FWtvUU5pZX07UmoEHF1+L+RDI2xnu3fpafs2UUc
B4ZX5WX8j/pXJN6WouiOekbZ1k1K+l19m/rbcL8+EuQXrcq0vKBseEsetF3I
rGF04v6DZPTkVDfNAPItM5Gp0mreNiN7DhGWRiPmd3fYOSPmPdFox3JUC4x4
voXoeDX3Os3ttK61EkVuwOnqxufYzwcSX2AMNVqe0HrQJ0Jqzm/XZDVhf5/J
35/d4urW36f1YhsJCuvMZ0Vosd8vhO3XdVy07BqtC74R9ZISk0JXgv1/J5GT
kq0Bhw7T+v4f5LW8QZibDDjPMCkXKyPnLU+1s3Y3A/6aebb2od+/OB8TXq0w
3BbwL9mZVDGBGZ5fuE9yE+dlwTmz//ywsjqq72fB5Igv3vW6hzi/A5SGzGme
7UDzIBI2SLKPmDc0tqAfbFjI2yrN9qJ5aJMcoZeT5FFsNaA/jsC/cVqniKH+
kpMjYGeZJPyiuRP9cgJlRENHQISJ6vVO4JWek5D6GvNJcYapUtuVLG/Uj3CB
o0+ZjZn7DOinC7RU9rQ6rGml+rCR4DlhVU7ip6fo70gQeAfuOhjaTPU7XKH2
3ra1gr0P0G8ODMjaTh3KqqX6Cg6c4Kef4byrRv9HgTHt4zxnfjnV940CWfh8
WWzBccyDC67pd5TcRDnV+7hBjHTI2TVqCebjBv7awQNjWMfsXBTAg/vj2+M+
JpVjXjy4qtq+XuR93c6meh5oeqyx577dwfz48GePOHZmcIOdfeR82DS+/Y/V
/zzGPPnQPnv4TPRdOu9KpjtMjHp0o/xqK+brDsXq6/LSXupXUaE7dAXnt4in
dWDe7vCfU/K7xSeo36Y5ArDUXz6l9jRh/gKIC5wlFLIp+zwTQEtZ3tIZ3zEP
iRD277Rs3NJH39/KrUJI9NCHlD5uw/shhM3Epl7Gpu+3iCsCHscw6P+1Ge+L
CBLW/sgI9W2k518UwdzARWumaO/i/RHButHicUlqDT0/0gMUJTrVS5cKvE8e
MJyX15SzsED6E+HAi/Q=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyDiamond]\"", FontSize -> 13, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1UntMk3cUbUGwyKP0BUqMlAAOH3GAytRM+d3opowuKhRqfGeMoiCjKsqG
qBgratY5pnQbMtSK2sxHfKDFB3Tfhp2VpSgtNPiAQRhqfCBlClQFJNz7r1/y
/XFyvvude885YV/lJKV78ni8xOGXP/x68D7w7Ktkob+HbLtfUhCPuJa1xboM
W1XliBU2FnZ0SdmPpy4Q72CRNqedd7kacWYzU4bnre6uv0nft7DZPzTmdHbU
IQ5uZ8e38IYywu/SfAfr9e9qn5BrR+zuZOke6i9l8xvpf0/Yv94bMi/Ob0L8
4CnbPnaVLjiSsOIFs6SWtEttDsQ1L5lv/MHbPbkNpOdiSfmJrSHjbSO4cHEP
+zggbZeJd4v0/2fRyr5MeMshz71iluk9onFrTLTPaxZ04lHV+OdG5GP6WFJK
UY3qRjHt189a+dnu5+JU5I+7mcmS0ZiQq6Z93zCX0TztbdVB5CXv2NPv56xX
Go20/wCbJFMVhIpRr1A7yCrNqV1ZW/6ke4bYz38L6yu+to5gLp8HsYNlCzS1
9XQfH6a5Vu0Me4T3ssphHFeQffiUg+71gPzS1uhvLqGf3DMP0FfEy3x9yL99
nqCL0XxxWIs8ixgFfTekXcn9dvJjFFSca7q3cR3mxa30ggPqP6r2JFOebi/I
hofq3UW1OK/3Bhv3SqDTXye/RsOG+8Whk4bO47xtNGjy0peHRB0h/wSg1GfN
rHVux3lvH1BZj/anxEaSnz7wk2D/ZxsNWpyfNwZ2KqbMTblmIH/HgNtq+ch6
+yLO5/lC0NIja/mmavLbD34ZSKueeAH7yJ33gzkrFugdO/4h//0h7kWGztyN
97En/mA1dwYvUpN/2gDQ+K47vfAO+ScXgueD615RU8m/GiE0mWeZNp9D/tjU
QLB82uj8dZuD8gqEine9Tu9SzKfNGggdbl3PM5eN8hNBmjFmsFmDfZSni6D7
VvnnUQUc5SmC0ivFnebFl0fwWr4YHsv/+07w8ATlK4a4rGW5v0kOoH65GMae
ifBbGaaivIf5jhncPCn2sW22BASGFMleoZ7yl8DrQr5CrjmD+k4JNAlbzppO
XqU+SCGkpC66IeEv1N8khf1Fk29Gqq3UDyls6l06OF2LfTwWIAPr2ZMNaybY
qS8y+LZlhqhuNfrTdloGZZ/kNRsOkX9uGSSbol0texHLFwbBgDKnN3wF9VEf
BIkzB3SKNHv8ex2tjlw=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyUpTriangle]\"", FontSize -> 13, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1U21Mk1cYLQUEpSD0U5yEipVEICPNpDhEex9wioIfQx1EHLCOboxNQQhq
cAgBNqTMCBQUFRQrLFHUsoBG0WIZEDFaJ1OwGbBUdFGoDC1+UGNF4/Ps597k
/ji57znPxzl3viozXu3M4XBi3x+n94fL+Z9vXyvL8/xYc2l0jxJxF2s6PGEp
LahBHGdik7cdiRreMbq/w1ZqS0v05bWIM8ys/8m37UnhJfT/MCvqKavW1CsQ
S+6z2x5zyyyKHOI/YN9ofOOkJi1i+z/s9RKHJFp1nPQes6yTT2P25tQhHhxj
jnNH/A8llpP+OMu6l2n6fmojYsME2x+2+Ub6ox+o3jMWXxGVGitH/cL1NubI
7qnfpGug+pOs4HK07/Y5iAuNz9mLdWFJow8rqJ8XrP1XycXwBBXey18xbtoj
diYlnfqbYt42U++f1iq819lZY/CpztOrT1C/r9mV+HDbZCLiQsEbttc9bNzs
R/PGOdi8cvnZLc7f4X3JWwY6RVHTtTSaZ5p1yvRfXvdDfWMeB+y3xlNvBJO+
xAkUts8zDM2IWasT6ITD5xsXVdO8XEgaHHAOT9+GfCsXzCE8s/KPZJrfGTJD
m7Q9S3FeJnOBB4kLRw74/bcPF7j/400XfQDqG7e6QlTEiuyundW0H1foDog4
an+ehfyaGXB17OVQi34D7csNDI3ZQxF1GuSb3GBYWGR1nCM/M9wh2CjuXxaE
9diMmXBS2OYVZKH+dTOhLzl1ui45F/nLZ0GpJqZMs0JO+50F1sB8g767GPm7
PMA8zC0u+q2W9s0DD//FbvnNmFejngcdV4+NPVQepP17ws+22sPtbfnIf+wJ
srW/L/hr4d3l6IcXfNEnKW55kod86WxI41UO7Yin92CYDa6bquTdoajfEOIN
MUrt9kp7LfnlDU87ukv/Ff/0AVt6vUHhGaTxFS4j/3xgKp2rSji/4wOWqn3A
GiuTVy/Wkp8+UGEtFOwS4XtIdeLDuCDl1CftdeQvH3IXDbV1FPyC9ev5EPD2
wsHLfQnkNx9Cw5SDF2yYV8unAvhIqztrWVNF/gug9bNLIP8a9y8dEIBHYEUg
fzX5IRPCbtG+O5GdlVg/WwjRvs37N15RUz6EkPDm71GVDPPa4CWC3BFe5JKJ
SsqLCEJqLrrPEWN+LKdF4G/q3xzVQvm1i0C9Vp1yZD36LV0lhrlNkWemR7ZR
nsSQkbN7oEz0lfIdBEqB4w==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["", {0., 0.}], "InsetString"], CompressedData["
1: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
Sow+J/kfuDneRA==
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 
          NCache[
           Rational[8, 27], 0.2962962962962963], 0], 
         Dashing[{0, Small, Small, Small}]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox[" ", {0., 0.}], "InsetString"], CompressedData["
1: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
DA==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1], 
         Dashing[{0, Small}]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["  ", {0., 0.}], "InsetString"], CompressedData["
1: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
fw==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["   ", {0., 0.}], "InsetString"], CompressedData["
1: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
9A==
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\"+\"", FontSize -> 18, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1knlQ1GUYxxdYjmU5dpdFRGQmmCwEOYKAGBLeBxQpSGyJ3LySYNPCAycC
OdQFHQ6XlllakaPJAgcsM1yhDFmOICwCouWSZeMWEDkWAZVLyZn36c9+M78/
PvP9/Z73eZ/nY/fRSYFIj8FgHHzx6rx4dRn/85Bycr29Ku2wUZw/5TqidIjK
Fc99STn2d/La6pOVCFKKeTthtUS9EvZFBeXMTuLxi3BfknUtfn+PPG22+WN/
cBNloYb8+IZTnOu+Vvx/kDBcInfam3dQlg+TRc+fPIe8erDeKJnP+Uaiyemj
nDJGKmMWJoOYg1h/guimfZdUVTtMOXqSbBnJEaTMj+J5U2TL+RJGLm+ccugM
ebDZvuB9/gM8X0t6tl1Qy2YmKRfOEVd/bf+afAr7eUQOnImv+Ex3hrJ0ngTF
Zh/rdZnF/hbI0oj2Kzu+lnLaImG4fZ88egM55TH5PNvhB5tl5PgnZPrxbrVg
ETn2KRlS5muvXEH+dIkUq/9JUKxh/ehlEnFOUK8wQz60Qo542PUG9E3j/VZJ
YnjVYKQI+xWsEWmRX2XWbbxP6DNy6kFXt5l6gnLQc6KvinXY2jmG918n7ySW
qNg3cV62DFif+/VobhLOs5ABftYX+tKTByhb6YDivmXMuyzch1wHntUH+fRU
dlPm6kJGosbmJbkK56ULKwPJe24mtFBm60FMpFHJ0JnfcH56MLpLIkqvVlLW
Z4KQPVbNP34L58mEO0USuVvmVcrrTEhtKdBXFctwvvrQsNDqOW98kvKyPrTv
vSTxzuXhvA2gVJDWdsw+kfKCATQtB0yxovNw/oZw+URtjwH7GuUZQ9juG1C/
+3Yl7sMIbBzTtjqm1VGeMIKkPkM3x413cT8syPs2w6cM2igPs8DP16q/Oht9
PmQMrentyq5q9FljDMfPjZ8Ksdbg/tigagu5XJSDPnezIa7Z7VUH5gju0wTW
P1bsCPe6T7ndBOzevugqDP/PZ1PYO9ti1LYHfW42haNXc+UVLz/EfZuB1P40
R9mEfjSagbHIpKnBCX0m5iBTVJY+DEO/asxh6NK1rE+2oY+2HOBlsRNnlJTF
+znQJstyy3uOeSEHnJYPZDjPYd7LgY3ljo+0MsytuLBp+kZgxRitL47gQmBM
h2RuFs+XcyF01eoD0S3qs7iDCzUZ4lFvL+yXywP2afc31anUZ3EYD3KCnRN0
v0afpTzosRC6mMupz+JWHiwJ4004J9BntgUMu2/2GPSiPovfsoC/pluCzy70
o38W8J5q/N7182qa37UAlrRB4fA6+qzPhzIBd2fpJuqzOJAP7Kipg8z8P9FP
Pshltt3JPzfSvJ4Ph1M1pr6iavSVD8PTu9ShEQqab7eE1IJYccdQMfprCV2d
jXFlWinN71hCXYhzzYTjEfTZEj4UTenpSNxp7r0ByjMH+m3/Pot+bwAfclEt
Wsv3/xf3XOFw
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 370000.}, {0, 1.000175012989453}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, Epilog -> 
     InsetBox[
       BoxData[
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(1\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)=1\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(2\\)]\\)=0.01\"", FontSize -> 14, 
          StripOnInput -> False], TraditionalForm]], {1000, 0.8}, {
       Left, Top}], Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(m\\)]\\)x\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Larger, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     ImagePadding -> {{Automatic, 10}, {Automatic, 10}}, ImageSize -> 
     880.0000000000001, LabelStyle -> GrayLevel[0], Method -> {}, PlotLabel -> 
     FormBox["\"Transition Probability with Rotating Field\"", 
       TraditionalForm], PlotRange -> {{0, 370000.}, {0, 1.000175012989453}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0\"", 
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.0083666\"", 
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.02\"", 
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.03\"", 
       "\"Rabi Formula for \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.\"", 
       "\"Rabi Formula for \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=0.0083666\"", 
       "\"Rabi Formula for \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=0.02\"",
        "\"Rabi Formula for \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=0.03\"", "\"Neutrino Oscillations with Matter Perturbation\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], FontSize -> 11, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 11}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13636363636363638`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 
                    NCache[
                    Rational[8, 27], 0.2962962962962963], 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptySquare]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 
                    Rational[8, 27], 0]], FontSize -> 13, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19230769230769232`] -> 
                    Baseline)], #2, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyDiamond]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1]], FontSize -> 13, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19230769230769232`] -> 
                    Baseline)], #3, 
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyUpTriangle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], FontSize -> 13, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 13}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.19230769230769232`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 
                    NCache[
                    Rational[8, 27], 0.2962962962962963], 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 
                    NCache[
                    Rational[8, 27], 0.2962962962962963], 0], 
                    Dashing[{0, Small, Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\" \"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 
                    Rational[8, 27], 0], 
                    Dashing[{0, Small, Small, Small}]], FontSize -> 10, Plain,
                     StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"  \"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0, Small}]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"   \"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], FontSize -> 10, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"+\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.125], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], FontSize -> 18, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 18}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2777777777777778] -> 
                    Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[8, 27], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.19753086419753085`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 8/27, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[8, 27], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[8, 27], 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 
                    Rational[8, 27], 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0., 0.19753086419753085`, 0.], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 8/27, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 
                    Rational[8, 27], 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 
                    Rational[8, 27], 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "11"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptySquare]\"", ",", "13"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyDiamond]\"", ",", "13"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyUpTriangle]\"", ",", "13"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                   RowBox[{"\"\"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\" \"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"  \"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"   \"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"+\"", ",", "18"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "False", ",", "False", ",", "False", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
               BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
               ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.67803609979377*^9, {3.6780361306851177`*^9, 3.678036165795395*^9}, {
   3.678036361160077*^9, 3.6780363884563837`*^9}, 3.6780365769334383`*^9, {
   3.678036756067502*^9, 3.67803682409518*^9}, {3.678036860231072*^9, 
   3.678036872728611*^9}, {3.678037070516158*^9, 3.678037095238908*^9}, {
   3.678037234340684*^9, 3.678037270108235*^9}, {3.678037614527717*^9, 
   3.678037662741342*^9}, 3.679928815606654*^9, {3.6799291909134083`*^9, 
   3.679929206430088*^9}, 3.679929245524414*^9, 3.682095372537107*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/rabi-\
oscillations-energy-gap-change-k2-0-01.pdf\>\"", ",", 
     "rabiOscillationsEnergyGapChange01"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/rabi-\
oscillations-energy-gap-change-k2-0-01.eps\>\"", ",", 
     "rabiOscillationsEnergyGapChange01"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/rabi-\
oscillations-energy-gap-change-k2-0-01.png\>\"", ",", 
     "rabiOscillationsEnergyGapChange01"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.678023792498599*^9, 3.6780238186510267`*^9}, 
   3.678024554129098*^9, 3.678034712425131*^9, 3.6780348671814423`*^9, 
   3.678035728955489*^9, 3.678035812549069*^9, 3.678036412142974*^9, 
   3.678036505652783*^9, 3.678036589420374*^9, 3.678036655724374*^9, 
   3.678036879132886*^9, 3.678036941987121*^9, 3.678037108516255*^9, 
   3.678037167527177*^9, 3.6780372903651*^9, 3.678037381695204*^9, 
   3.6780377621212187`*^9, 3.678037826658826*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rabiOscillationsNeutrinoCoincidence", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sol10List", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "5"}], "]"}], "]"}], ",", "theory10List", 
      ",", 
      RowBox[{"sol10PList", "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", ";;", "4"}], "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"Joined", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], ",", 
    RowBox[{"PlotMarkers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "11"}], "}"}], ",", "\"\<\>\"",
        ",", 
       RowBox[{"{", 
        RowBox[{"\"\<+\>\"", ",", "18"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "11.136`"}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Dashed"}], "]"}], ",", "Red"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"imgsize", "*", "1.1"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Transition Probability for Rabi Oscillation and Neutrino Transition\
\>\""}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\)x\>\"", ",", 
       "\"\<Probability\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(R\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"N", "[", "a1", "]"}]}], "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(k\), \(R\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "k1"}], "<>", "\"\<\\n E=\>\"", "<>", 
          RowBox[{"ToString", "@", "energy10"}], "<>", 
          "\"\< MeV\\n \!\(\*SubscriptBox[\(\[Theta]\), \(v\)]\)=\>\"", "<>", 
          
          RowBox[{"ToString", "@", "thetaV"}], "<>", 
          "\"\<\\n \!\(\*SuperscriptBox[\(\[CapitalDelta]m\), \(2\)]\)=\>\"", 
          "<>", "deltamsquare13text", "<>", 
          "\"\<\\n \!\(\*SubscriptBox[\(\[Lambda]\), \(0\)]\)=\>\"", "<>", 
          RowBox[{"ToString", "@", "fraction"}], "<>", 
          "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(MSW\)]\)\>\""}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1000", ",", "0.8"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<Rabi Oscillation\>\"", ",", "\"\<Rabi Formula\>\"", ",", 
         "\"\<Neutrino Oscillations with Matter Perturbation\>\""}], "}"}], 
       ",", "Below"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "10"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "10"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.679929289730651*^9, 3.679929300417651*^9}, {
   3.6799293708386307`*^9, 3.679929389062745*^9}, 3.6799294223588953`*^9, {
   3.6799294600462017`*^9, 3.679929621394525*^9}, {3.6799296527780724`*^9, 
   3.6799296615165167`*^9}, {3.679929862132968*^9, 3.679929987615014*^9}, {
   3.679930039843957*^9, 3.679930263846764*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxteHlczHv0ftO+Tc1auW6EJBUSiizzPpa6yBZlKSTCtS/RzU3GciNpoREq
FbJECskWmYSkjZJWmihSkhat1Nfvd873v2//9Hpez5w5n895n/fznDmDPLc6
eykrKSnt5Cgp/b///+cfC2WxNct89vHHShDHsn78KQ++6i9CvO0ym79KtKUj
ZC3xyWyV48In57W8ER9JYTcdx0huOu6jz99l5lGD3Hj7AhAvSWOeLt42zrIQ
in/MvtTEXjz6PRyxLIPFLH8dYjf6DH1fJguJHzTqqHYsYr9nrHJq8n7XR+fp
+7OYT6tqbJ7kEuI12SzyYsrtMJ2rlC+HHXYR624dmITYKY9lzTVN4E2+SfkL
2ATuhj7T4BTEka9Y6fw4hX1fKj3Pa1byI7M7+MQ9xCGFLPbUmdB5Dmn0fEXs
fuD+1Ev90hEfeMOKhOlzSv+T0/MWM6HMdL2c+wTx7rfMqGjGc158Jj1/CZv9
qrFv5l/PEG8oZZGervPrup7T+5SxEY/+ebz63gvEK8qZ6YAbTtYHX9L7VbCR
M+P+SF+ai9i5ksm0nKN9J+bT+75j23LSqmuFrxA7vGfVVrWGXP3X9P5VLDLq
fvJHvULExgrW2s9uWz9hEdVDweK7NmW493+D2LCalV/kP182rJjqU800d/jv
emz7FjH/A0tw1LozbmYJ1esDS21K8Vm3ohSxzkd294x5wa9dZVS/j4xZ9PDO
hZYjVqthb56aNXZeraB61rAzLelHE7MqEffVsIw7ORc8a99RfWuZ7xvHcxkq
VYi7almQJLrCjq+gen9iaYUbpIFxhFs/MRvl5flXRlVT/T8zf1Fgzfp0wo2f
mey5oi/a6QOdRx2z2WsfaFRO+HMdK7zlNCR57Uc6ny8sX3Lq3tgWwtVfWP1A
28C9fjV0XvXszsoz41eo1SKuqGc+NcYV144RXtLAbHIOqEwSfEJc3MAOmNm9
qjlJ2Pkrs2r6t9PP8DPigq9shZZrWUUEYadGtnae04EyYR3i7EbWdb4xY24I
YYdv7JFhfxux+hfEmd9YoLtgusa/hFkT+xA91kmpkfCjJjZieEBwpVs99cN3
ljXr43TfLMRSt+/MVv4p5faoBuqP7+zEbn/LLTLE0tLvrGCkpUHAD+INm5m4
9DPnvfNX5F2a2dRDqQlLEr9S/zQz1vmit4zTiHxhM5N0uI52XNhI/dTCvgX8
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
os5L/geBQd5C
         "]]}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 11, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1UmtMk2cY/VpAaKFAS0vFqagDCl7iZTrimPR9FpJCRNGh1qhTdNNFzBwi
ioUtQ/CC2QizahUcUJR5gURB3GDhYhErTINiuIRLiWjTUVop4xaEgc74PPu5
L3l/nDzfec/7nHPm7/n2871OHMetfXd47w6f+58vs5xpv6/7olr1gxJxPXve
2X+vQFiAOLqJuQat3xywpozmLUx36A9Ni18t4vgOFuyQvpROPqT/e9jdE22b
RNJmxPIX7IZ9Z885RRvxzSw87CfdeHYX4gkLO57818oEcS/dZ2VOoEn7susl
4m4bGz5+9lOPLAvdP8B8l4bGx0itiGsGWah1tuPrHTbSG2L5Ww4Kv4t99R6n
xQwzo5fm2CrbAOmPsAVFdom/dBDnhlF2JPBG0YLGQXrPGDNX5Kbu5v7G+fJx
9kJr7fusmubxr5lvduiusikHzq9MsI4c+6bJBrq/e5JNhe8LSFWQvs8U8xfw
+GMKel/0NMv+4OJpfmcfzk+8YQLT9eTfo2m/mrdsJCrq8LQO9zekcGDKT4l1
z31O+/GguHT94zAB+sfKeWCK49xnXW+lffmQn1OwLznsKfLtfEgcCTngGkL5
ZDpBZOCft8qrqpEf4AzrcrRa45JS8sMZLtenDRlDfkH+DheIE1mUEec05I8L
FL95UHkyU4L8CzNgzlCzqbMxnfxyBV59Q0mHWyHym1yh7deelm1b7pB/bhBz
4bDGP/0e8mcIAO5cfbS7uYH8FEBM1MFsryzsjyFcCOpIrr2pmPrTLYTZhebg
o37dyE92B7Pc/KFS3Ut+e0BgW7MuyN+M/NseMKvKkF725L/+iCCoRD5q2oD9
YVYR1B2J+FGotVEenvBwKxd9KQ3zM8zzgn7VzF1JIgfl4wXip1tzExdjH/SL
vWFP5aXpltZByssbrnmWZVRQf3obveGjY5ttjlLqj1wM89esqLxvwfvm7RVD
3W9qveLaAOUphoRPnPe3/mN/j+N4EqiIy3vWPtJP+UrgQcbwSvd87I8+TwIm
F5elVR4WylsCj4oaVK9jsT+9q31gZq3KTS6h/mT6wKvghaM/Z3SifrsPDMlP
cSZFK/VBChEfn++r3PgE9ROloJy7iIvcbqR+SOEbY2Hq26+qUN9TBiK/5Urx
ulvUFxmob+tlTQdyUL9YBoW6m46ShCTqjwwuqlOM7MwK1Ff5wrP4pA280FPU
J18wLdNPdOVdUf4L2VWMUw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["", {0., 0.}], "InsetString"], CompressedData["
1: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
Sow+J/kfuDneRA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\"+\"", FontSize -> 18, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1knlQ1GUYxxdYjmU5dpdFRGQmmCwEOYKAGBLeBxQpSGyJ3LySYNPCAycC
OdQFHQ6XlllakaPJAgcsM1yhDFmOICwCouWSZeMWEDkWAZVLyZn36c9+M78/
PvP9/Z73eZ/nY/fRSYFIj8FgHHzx6rx4dRn/85Bycr29Ku2wUZw/5TqidIjK
Fc99STn2d/La6pOVCFKKeTthtUS9EvZFBeXMTuLxi3BfknUtfn+PPG22+WN/
cBNloYb8+IZTnOu+Vvx/kDBcInfam3dQlg+TRc+fPIe8erDeKJnP+Uaiyemj
nDJGKmMWJoOYg1h/guimfZdUVTtMOXqSbBnJEaTMj+J5U2TL+RJGLm+ccugM
ebDZvuB9/gM8X0t6tl1Qy2YmKRfOEVd/bf+afAr7eUQOnImv+Ex3hrJ0ngTF
Zh/rdZnF/hbI0oj2Kzu+lnLaImG4fZ88egM55TH5PNvhB5tl5PgnZPrxbrVg
ETn2KRlS5muvXEH+dIkUq/9JUKxh/ehlEnFOUK8wQz60Qo542PUG9E3j/VZJ
YnjVYKQI+xWsEWmRX2XWbbxP6DNy6kFXt5l6gnLQc6KvinXY2jmG918n7ySW
qNg3cV62DFif+/VobhLOs5ABftYX+tKTByhb6YDivmXMuyzch1wHntUH+fRU
dlPm6kJGosbmJbkK56ULKwPJe24mtFBm60FMpFHJ0JnfcH56MLpLIkqvVlLW
Z4KQPVbNP34L58mEO0USuVvmVcrrTEhtKdBXFctwvvrQsNDqOW98kvKyPrTv
vSTxzuXhvA2gVJDWdsw+kfKCATQtB0yxovNw/oZw+URtjwH7GuUZQ9juG1C/
+3Yl7sMIbBzTtjqm1VGeMIKkPkM3x413cT8syPs2w6cM2igPs8DP16q/Oht9
PmQMrentyq5q9FljDMfPjZ8Ksdbg/tigagu5XJSDPnezIa7Z7VUH5gju0wTW
P1bsCPe6T7ndBOzevugqDP/PZ1PYO9ti1LYHfW42haNXc+UVLz/EfZuB1P40
R9mEfjSagbHIpKnBCX0m5iBTVJY+DEO/asxh6NK1rE+2oY+2HOBlsRNnlJTF
+znQJstyy3uOeSEHnJYPZDjPYd7LgY3ljo+0MsytuLBp+kZgxRitL47gQmBM
h2RuFs+XcyF01eoD0S3qs7iDCzUZ4lFvL+yXywP2afc31anUZ3EYD3KCnRN0
v0afpTzosRC6mMupz+JWHiwJ4004J9BntgUMu2/2GPSiPovfsoC/pluCzy70
o38W8J5q/N7182qa37UAlrRB4fA6+qzPhzIBd2fpJuqzOJAP7Kipg8z8P9FP
Pshltt3JPzfSvJ4Ph1M1pr6iavSVD8PTu9ShEQqab7eE1IJYccdQMfprCV2d
jXFlWinN71hCXYhzzYTjEfTZEj4UTenpSNxp7r0ByjMH+m3/Pot+bwAfclEt
Wsv3/xf3XOFw
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 370000.}, {0, 1.000175012989453}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, Epilog -> 
     InsetBox[
       BoxData[
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(R\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(R\\)]\\)=1\\n E=10 MeV\\n \
\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(v\\)]\\)=0.154948\\n \
\\!\\(\\*SuperscriptBox[\\(\[CapitalDelta]m\\), \\(2\\)]\\)=2.6*e-15\\n \
\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(0\\)]\\)=0.5\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(MSW\\)]\\)\"", 
          FontSize -> 14, StripOnInput -> False], TraditionalForm]], {
       1000, 0.8}, {Left, Top}], Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(m\\)]\\)x\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Larger, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     ImagePadding -> {{Automatic, 10}, {Automatic, 10}}, ImageSize -> 
     880.0000000000001, LabelStyle -> GrayLevel[0], Method -> {}, PlotLabel -> 
     FormBox["\"Transition Probability for Rabi Oscillation and Neutrino \
Transition\"", TraditionalForm], 
     PlotRange -> {{0, 370000.}, {0, 1.000175012989453}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Rabi Oscillation\"", "\"Rabi Formula\"", 
       "\"Neutrino Oscillations with Matter Perturbation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], FontSize -> 11, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 11}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13636363636363638`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"+\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], FontSize -> 18, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 18}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2777777777777778] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "11"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"+\"", ",", "18"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "True", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.679929448921329*^9, 3.679929623205206*^9}, {
   3.679929653661327*^9, 3.679929662654439*^9}, {3.679929864915307*^9, 
   3.679929988742462*^9}, {3.679930048346472*^9, 3.679930085500058*^9}, {
   3.6799301193966417`*^9, 3.679930124164555*^9}, 3.679930157554864*^9, 
   3.679930201751048*^9, {3.6799302385980873`*^9, 3.679930288105968*^9}, 
   3.681149618445477*^9, 3.681149847550995*^9, 3.683206427227927*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../../ipynb/papers/assets/rabi-oscillations-energy-gap-change/\
rabiOscillationsNeutrinoCoincidence.pdf\>\"", ",", 
    "rabiOscillationsNeutrinoCoincidence"}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.679930308360023*^9, 3.679930326086199*^9}}],

Cell[TextData[StyleBox["Export the data for python plotting", "Subsection"]], \
"Text",
 CellChangeTimes->{{3.6811495721753483`*^9, 3.68114957830516*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.681149721060809*^9, 3.6811497267470007`*^9}}],

Cell[BoxData["\<\"/Users/leima/GitHub/NeuPhysics/codebase/mma/matter/\"\>"], \
"Output",
 CellChangeTimes->{3.681149727076315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<../../../../rabi-neutrino-oscillations/data/theory10List.csv\>\"", ",", 
   RowBox[{"Transpose", "@", "theory10List"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<../../../../rabi-neutrino-oscillations/data/sol10PList.csv\>\"", ",", 
   RowBox[{"Transpose", "@", "sol10PList"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6811496214389763`*^9, 3.6811496575557957`*^9}, {
   3.681149734507605*^9, 3.6811497446843367`*^9}, {3.6811497900847816`*^9, 
   3.681149827812479*^9}, {3.681149936438645*^9, 3.6811499401086473`*^9}, 
   3.681150115435062*^9, {3.681151739985145*^9, 3.6811517486449223`*^9}}],

Cell[BoxData["\<\"../../../../rabi-neutrino-oscillations/data/theory10List.\
csv\"\>"], "Output",
 CellChangeTimes->{3.6811517489675093`*^9}],

Cell[BoxData["\<\"../../../../rabi-neutrino-oscillations/data/sol10PList.csv\"\
\>"], "Output",
 CellChangeTimes->{3.681151748973171*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modes", "Subchapter",
 CellChangeTimes->{{3.677520153102284*^9, 3.6775201551335173`*^9}}],

Cell["\<\
First of all check if only the first mode is good enough for single frequency \
matter profile on resonance.\
\>", "Text",
 CellChangeTimes->{{3.683206499008644*^9, 3.683206520022653*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys10Original", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a1", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"k1", " ", "x"}], "]"}]}], ")"}], 
          RowBox[{"PauliMatrix", "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"a1", " ", 
            RowBox[{"Cot", "[", 
             RowBox[{"2", "thetam"}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"k1", " ", "x"}], "]"}]}], ")"}], 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sol10Original", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"sys10Original", ",", 
     RowBox[{"{", 
      RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sol10OriginalList", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "sol10Original"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.6832072218663692`*^9, 3.683207240074293*^9}, {
  3.6832072917088413`*^9, 3.683207340265436*^9}, {3.683215744008402*^9, 
  3.6832157558028107`*^9}, {3.683215856327095*^9, 3.68321585994199*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "qValueOrderdList"}]], "Input",
 CellChangeTimes->{3.683207004096633*^9}],

Cell[BoxData[
 StyleBox["\<\"gives ordered list of qValues and also their corresponding \
integer combinations; Example, \
qValueOrderdList[listNGenerator[6,3],kNListTest,aNListTest,phiNListTest,\
thetamTest]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6832070044092083`*^9},
 CellTags->"Info3683185404-9230663"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValueList", "=", 
   RowBox[{"Part", "[", 
    RowBox[{
     RowBox[{"qValueOrderdList", "[", 
      RowBox[{
       RowBox[{"listNGenerator", "[", 
        RowBox[{"1", ",", "4"}], "]"}], ",", 
       RowBox[{"{", "k1", "}"}], ",", 
       RowBox[{"{", "a1", "}"}], ",", 
       RowBox[{"{", "0", "}"}], ",", "thetam"}], "]"}], ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.683206843621992*^9, 3.683206843717062*^9}, {
  3.6832069875661497`*^9, 3.683206997073124*^9}, {3.683207059405302*^9, 
  3.683207110614355*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", "1", "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], "294969.677917874`"},
    {
     RowBox[{"{", "2", "}"}], "9.141757441639246`*^9"},
    {
     RowBox[{"{", 
      RowBox[{"-", "2"}], "}"}], "2.742527232491774`*^10"},
    {
     RowBox[{"{", "3", "}"}], "2.266584951063271`*^15"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.683206998160944*^9, {3.683207061549308*^9, 3.683207110883788*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sys10Modes", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"I", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"psi1", "[", "x", "]"}], ",", 
           RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
      "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Tan", "[", 
             RowBox[{"2", "thetam"}], "]"}], "k1", " ", 
            RowBox[{"BesselJ", "[", 
             RowBox[{"1", ",", 
              RowBox[{"2", "a1", " ", 
               RowBox[{
                RowBox[{"Cot", "[", 
                 RowBox[{"2", "thetam"}], "]"}], "/", "k1"}]}]}], "]"}], 
            RowBox[{"Cos", "[", 
             RowBox[{"k1", " ", "x"}], "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Tan", "[", 
             RowBox[{"2", "thetam"}], "]"}], "k1", " ", 
            RowBox[{"BesselJ", "[", 
             RowBox[{"1", ",", 
              RowBox[{"2", "a1", " ", 
               RowBox[{
                RowBox[{"Cot", "[", 
                 RowBox[{"2", "thetam"}], "]"}], "/", "k1"}]}]}], "]"}], 
            RowBox[{"Sin", "[", 
             RowBox[{"k1", " ", "x"}], "]"}]}], ")"}], 
          RowBox[{
           RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"psi1", "[", "x", "]"}], ",", 
         RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "0", "]"}], ",", 
        RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}]}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"sol10Modes", "=", 
   RowBox[{"NDSolve", "[", 
    RowBox[{"sys10Modes", ",", 
     RowBox[{"{", 
      RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "20"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sol10ModesList", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "sol10Modes"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.68320655444176*^9, 3.683206593175433*^9}, {
  3.683206765745179*^9, 3.6832067792250357`*^9}, {3.683206834911356*^9, 
  3.683206874696836*^9}, {3.683206913744186*^9, 3.683206918579364*^9}, {
  3.683215893516836*^9, 3.683215931129545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sol10List", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "5"}], "]"}], "]"}], ",", "theory10List", ",", 
     RowBox[{"sol10PList", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "4"}], "]"}], "]"}], ",", 
     RowBox[{"sol10ModesList", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "4"}], "]"}], "]"}], ",", 
     RowBox[{"sol10OriginalList", "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", ";;", "7"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True", ",", "False", ",", "False", ",", "False"}],
      "}"}]}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "11"}], "}"}], ",", "\"\<\>\"", 
      ",", 
      RowBox[{"{", 
       RowBox[{"\"\<+\>\"", ",", "18"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<+\>\"", ",", "18"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dashed"}], "]"}], ",", "Red", ",", "Blue"}], 
     "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"imgsize", "*", "1.1"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probability for Rabi Oscillation and Neutrino \
Transition\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\)x\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "14"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(A\), \(R\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "a1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(k\), \(R\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "k1"}], "<>", "\"\<\\n E=\>\"", "<>", 
         RowBox[{"ToString", "@", "energy10"}], "<>", 
         "\"\< MeV\\n \!\(\*SubscriptBox[\(\[Theta]\), \(v\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "thetaV"}], "<>", 
         "\"\<\\n \!\(\*SuperscriptBox[\(\[CapitalDelta]m\), \(2\)]\)=\>\"", "<>",
          "deltamsquare13text", "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Lambda]\), \(0\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", "fraction"}], "<>", 
         "\"\<\!\(\*SubscriptBox[\(\[Lambda]\), \(MSW\)]\)\>\""}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Rabi Oscillation\>\"", ",", "\"\<Rabi Formula\>\"", ",", 
        "\"\<Neutrino Oscillations with Matter Perturbation\>\""}], "}"}], 
      ",", "Below"}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", " ", "10"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", " ", "10"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6832066380863123`*^9, 3.683206673820444*^9}, {
  3.683207356130247*^9, 3.683207429303329*^9}, {3.683207544454718*^9, 
  3.683207549555971*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1:eJxteHlczHv0ftO+Tc1auW6EJBUSiizzPpa6yBZlKSTCtS/RzU3GciNpoREq
FbJECskWmYSkjZJWmihSkhat1Nfvd873v2//9Hpez5w5n895n/fznDmDPLc6
eykrKSnt5Cgp/b///+cfC2WxNct89vHHShDHsn78KQ++6i9CvO0ym79KtKUj
ZC3xyWyV48In57W8ER9JYTcdx0huOu6jz99l5lGD3Hj7AhAvSWOeLt42zrIQ
in/MvtTEXjz6PRyxLIPFLH8dYjf6DH1fJguJHzTqqHYsYr9nrHJq8n7XR+fp
+7OYT6tqbJ7kEuI12SzyYsrtMJ2rlC+HHXYR624dmITYKY9lzTVN4E2+SfkL
2ATuhj7T4BTEka9Y6fw4hX1fKj3Pa1byI7M7+MQ9xCGFLPbUmdB5Dmn0fEXs
fuD+1Ev90hEfeMOKhOlzSv+T0/MWM6HMdL2c+wTx7rfMqGjGc158Jj1/CZv9
qrFv5l/PEG8oZZGervPrup7T+5SxEY/+ebz63gvEK8qZ6YAbTtYHX9L7VbCR
M+P+SF+ai9i5ksm0nKN9J+bT+75j23LSqmuFrxA7vGfVVrWGXP3X9P5VLDLq
fvJHvULExgrW2s9uWz9hEdVDweK7NmW493+D2LCalV/kP182rJjqU800d/jv
emz7FjH/A0tw1LozbmYJ1esDS21K8Vm3ohSxzkd294x5wa9dZVS/j4xZ9PDO
hZYjVqthb56aNXZeraB61rAzLelHE7MqEffVsIw7ORc8a99RfWuZ7xvHcxkq
VYi7almQJLrCjq+gen9iaYUbpIFxhFs/MRvl5flXRlVT/T8zf1Fgzfp0wo2f
mey5oi/a6QOdRx2z2WsfaFRO+HMdK7zlNCR57Uc6ny8sX3Lq3tgWwtVfWP1A
28C9fjV0XvXszsoz41eo1SKuqGc+NcYV144RXtLAbHIOqEwSfEJc3MAOmNm9
qjlJ2Pkrs2r6t9PP8DPigq9shZZrWUUEYadGtnae04EyYR3i7EbWdb4xY24I
YYdv7JFhfxux+hfEmd9YoLtgusa/hFkT+xA91kmpkfCjJjZieEBwpVs99cN3
ljXr43TfLMRSt+/MVv4p5faoBuqP7+zEbn/LLTLE0tLvrGCkpUHAD+INm5m4
9DPnvfNX5F2a2dRDqQlLEr9S/zQz1vmit4zTiHxhM5N0uI52XNhI/dTCvgX8
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
os5L/geBQd5C
         "]]}}, {{
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 11, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1UmtMk2cY/VpAaKFAS0vFqagDCl7iZTrimPR9FpJCRNGh1qhTdNNFzBwi
ioUtQ/CC2QizahUcUJR5gURB3GDhYhErTINiuIRLiWjTUVop4xaEgc74PPu5
L3l/nDzfec/7nHPm7/n2871OHMetfXd47w6f+58vs5xpv6/7olr1gxJxPXve
2X+vQFiAOLqJuQat3xywpozmLUx36A9Ni18t4vgOFuyQvpROPqT/e9jdE22b
RNJmxPIX7IZ9Z885RRvxzSw87CfdeHYX4gkLO57818oEcS/dZ2VOoEn7susl
4m4bGz5+9lOPLAvdP8B8l4bGx0itiGsGWah1tuPrHTbSG2L5Ww4Kv4t99R6n
xQwzo5fm2CrbAOmPsAVFdom/dBDnhlF2JPBG0YLGQXrPGDNX5Kbu5v7G+fJx
9kJr7fusmubxr5lvduiusikHzq9MsI4c+6bJBrq/e5JNhe8LSFWQvs8U8xfw
+GMKel/0NMv+4OJpfmcfzk+8YQLT9eTfo2m/mrdsJCrq8LQO9zekcGDKT4l1
z31O+/GguHT94zAB+sfKeWCK49xnXW+lffmQn1OwLznsKfLtfEgcCTngGkL5
ZDpBZOCft8qrqpEf4AzrcrRa45JS8sMZLtenDRlDfkH+DheIE1mUEec05I8L
FL95UHkyU4L8CzNgzlCzqbMxnfxyBV59Q0mHWyHym1yh7deelm1b7pB/bhBz
4bDGP/0e8mcIAO5cfbS7uYH8FEBM1MFsryzsjyFcCOpIrr2pmPrTLYTZhebg
o37dyE92B7Pc/KFS3Ut+e0BgW7MuyN+M/NseMKvKkF725L/+iCCoRD5q2oD9
YVYR1B2J+FGotVEenvBwKxd9KQ3zM8zzgn7VzF1JIgfl4wXip1tzExdjH/SL
vWFP5aXpltZByssbrnmWZVRQf3obveGjY5ttjlLqj1wM89esqLxvwfvm7RVD
3W9qveLaAOUphoRPnPe3/mN/j+N4EqiIy3vWPtJP+UrgQcbwSvd87I8+TwIm
F5elVR4WylsCj4oaVK9jsT+9q31gZq3KTS6h/mT6wKvghaM/Z3SifrsPDMlP
cSZFK/VBChEfn++r3PgE9ROloJy7iIvcbqR+SOEbY2Hq26+qUN9TBiK/5Urx
ulvUFxmob+tlTQdyUL9YBoW6m46ShCTqjwwuqlOM7MwK1Ff5wrP4pA280FPU
J18wLdNPdOVdUf4L2VWMUw==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0], 
         Dashing[{Small, Small}]], 
        GeometricTransformationBox[
         TagBox[
          InsetBox["", {0., 0.}], "InsetString"], CompressedData["
1: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
Sow+J/kfuDneRA==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[1, 0, 0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\"+\"", FontSize -> 18, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1knlQ1GUYxxdYjmU5dpdFRGQmmCwEOYKAGBLeBxQpSGyJ3LySYNPCAycC
OdQFHQ6XlllakaPJAgcsM1yhDFmOICwCouWSZeMWEDkWAZVLyZn36c9+M78/
PvP9/Z73eZ/nY/fRSYFIj8FgHHzx6rx4dRn/85Bycr29Ku2wUZw/5TqidIjK
Fc99STn2d/La6pOVCFKKeTthtUS9EvZFBeXMTuLxi3BfknUtfn+PPG22+WN/
cBNloYb8+IZTnOu+Vvx/kDBcInfam3dQlg+TRc+fPIe8erDeKJnP+Uaiyemj
nDJGKmMWJoOYg1h/guimfZdUVTtMOXqSbBnJEaTMj+J5U2TL+RJGLm+ccugM
ebDZvuB9/gM8X0t6tl1Qy2YmKRfOEVd/bf+afAr7eUQOnImv+Ex3hrJ0ngTF
Zh/rdZnF/hbI0oj2Kzu+lnLaImG4fZ88egM55TH5PNvhB5tl5PgnZPrxbrVg
ETn2KRlS5muvXEH+dIkUq/9JUKxh/ehlEnFOUK8wQz60Qo542PUG9E3j/VZJ
YnjVYKQI+xWsEWmRX2XWbbxP6DNy6kFXt5l6gnLQc6KvinXY2jmG918n7ySW
qNg3cV62DFif+/VobhLOs5ABftYX+tKTByhb6YDivmXMuyzch1wHntUH+fRU
dlPm6kJGosbmJbkK56ULKwPJe24mtFBm60FMpFHJ0JnfcH56MLpLIkqvVlLW
Z4KQPVbNP34L58mEO0USuVvmVcrrTEhtKdBXFctwvvrQsNDqOW98kvKyPrTv
vSTxzuXhvA2gVJDWdsw+kfKCATQtB0yxovNw/oZw+URtjwH7GuUZQ9juG1C/
+3Yl7sMIbBzTtjqm1VGeMIKkPkM3x413cT8syPs2w6cM2igPs8DP16q/Oht9
PmQMrentyq5q9FljDMfPjZ8Ksdbg/tigagu5XJSDPnezIa7Z7VUH5gju0wTW
P1bsCPe6T7ndBOzevugqDP/PZ1PYO9ti1LYHfW42haNXc+UVLz/EfZuB1P40
R9mEfjSagbHIpKnBCX0m5iBTVJY+DEO/asxh6NK1rE+2oY+2HOBlsRNnlJTF
+znQJstyy3uOeSEHnJYPZDjPYd7LgY3ljo+0MsytuLBp+kZgxRitL47gQmBM
h2RuFs+XcyF01eoD0S3qs7iDCzUZ4lFvL+yXywP2afc31anUZ3EYD3KCnRN0
v0afpTzosRC6mMupz+JWHiwJ4004J9BntgUMu2/2GPSiPovfsoC/pluCzy70
o38W8J5q/N7182qa37UAlrRB4fA6+qzPhzIBd2fpJuqzOJAP7Kipg8z8P9FP
Pshltt3JPzfSvJ4Ph1M1pr6iavSVD8PTu9ShEQqab7eE1IJYccdQMfprCV2d
jXFlWinN71hCXYhzzYTjEfTZEj4UTenpSNxp7r0ByjMH+m3/Pot+bwAfclEt
Wsv3/xf3XOFw
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         RGBColor[0, 0, 1]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[EmptyCircle]\"", FontSize -> 11, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJx1knlQ1GUYx3eXXa7l2JMNJ2YMmCajGDRZCzneZ5gpKIyy2TQ0RggimJQF
BSowNxhGMK6VhQRkMTDACRQR2zjiiGOLO1ATKZDkWLmPlQVBiJn36c9+M78/
PvP9/Z73eZ/n80Jw5OFQIwaD8fHOy9x5WYz/ecgNEj5Wbig1O+NFuYkcX3pJ
rlrMpizXksvq2oZRr1LM+0i4z3yxZ/otyimDJKpkqeuObSN+/ydJTxdHyH3a
KR8dJhWOMZ89/agb/x8lbp3N4TzrAcqqMdLyXWjotvQe1ntEGj+532nIfEA5
YYLs10qYr7JHsf4UcSvU2VQ0jlEOeUxc59SWqcuP8LwZkpu15l0omKTsN0dM
ZSeuvCvS4fkLpLPNOCp57jHl/EWiOxUQx8qZwX6WiHMVW3eONUc5Y5n0Xogm
g87z2N8KCagy/nW3aIFyop7Y6nJsxyuRE56Ql//6LWH3OnLsKmmfDT5xRI8s
N5DolPM/lhUhR6wRK7549eYm1g9ZJ1L9D37VVsiBT8k1uac5eTCL99sgfRt6
3+hQ7PfwJhHGFAmzNHgfv2eEl7gcxxyaovzmFrn1li7VcXAC779NtMo+pl0V
zsuOAU6a05yir3Ce+QzwVsYOfB4/QlnCBKfUexfczXAfKibwNO4yfc1dynwW
3Kgsjzio+gPnxYLGWN5BZVwXZa4RxHL12ZqzbTg/I/BMuS6+Xd9AmcOGMzKt
w/GT1ThPNkzc6V8zS7lKeZsNzhUuC1CsxPlyYK467F4yN5LyOgee127wk1IE
OG9jSMgaci20/5LyijEENjdV14bk4vxNQNc5qbHgllOeM4HTbfY/G2lqcB+m
4HNbe9EhsYnylClE9gRPhz3Xgfsxg7CyvMkW6KE8ZgbO75cFXElDnwPNoSUx
b6a7Hn0eNofWq8vfRtkO4/648LZ6cLsmE32+ywU32QLLjv0P7tMCkqripb7S
ccp9FjCe5pEd/sF/PltCqmVB3tB76PPvluB/cen1647TuG8rMPR/wapvRz9a
rcDFy+fZgBP6TKxB0xMwveaPfv1iDfW9kqWTr6CPdjzYPNTdNtNAWXGMB6Xv
VAQVbGGez4N9ZUdyXBYxv8+DOJmD64YScwkf8loLXbUTtL5Cxoci5eX+1Xk8
X8WHN3gjaZ9WU58VA3zosJlucZdiv3wBlHyo7Fv8hvqs8BdAUPrDUa4afc4Q
wCGLyXiOivqs6BZA1/m95wSn0GeuEOKD7UyeSKnPCl8hMK3Vnrkrf6N/QnCo
e5iuShqieYcQDnjI1ZL96DNHBEGZJXFtu6jPCm8RMArs4/de6kQ/RbCl8gs9
9lMrzZtFcHR2yrAdUo++7uS8a5VnZTdp7iEGob2k9rWxYvR3h2MMyhcXMmhe
Jwbz73cp9uwJQ5/FUNcykuyZuo/mB2zA32VYUt77NfptA/rxsPi8zUte/wJz
g+TX
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], FontSize -> 14, 
         GrayLevel[0]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox["\"+\"", FontSize -> 18, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}], CompressedData["
1:eJxTTMoPSmVmYGAwBWJGIGZiwAEidjvk1x4VSJ3cZw/hn3YIj1+YLyq/DsJv
uuJQ+i7B/2vrAaj8bYd1Ftol+lFnIHzxhw6RQuo6m9SvQtU/ceA5KWbLeeIO
hP/2ucOxuM1HL/s8gup/7aDavJhhktAzCP/wO4fK3TLu7dUvoeZ9dPh91Vmt
I/gNmN9w5pPDq028bhz576Dmf3FgMFhV/Xjte4i8+TeHa6rXLvL+fQ+177uD
2QfJnLPhUPlFPx1C5FIufTr+Fmr/b4fK4J33E1NfQ+R5/zpo/WL4uDLkBdQ9
/xzYrSYxLzryBMx3sGFwPHRbsnbL6wdQ9zE6bnwimh3IeQvMP/CR0XHWk487
EqZdgrqXyZHrZ1qW/cPjEP3LmR0n3dz/Vuj7Tqj7WRx3ze6eYtCxBKI/htWR
4RCbz4YplVD/sDn+WsioevlmHES/ELvj6heBU6a8nw31H7ujrbXTAb/tWyD6
j3M4xtRzJ6zKPQL1L6dj3feN+3/1XIDor+VyFA2evqrj/HWo/7kdL571nj67
/z5EvxGP41XH/40Bqx9Dw4PXMXsT/97DYc8h+l/wOqZvPi7JM+kVNHz4HLlS
eY4e0oaE54G5/I6eM88dt/nzDhpeAo47bJ6FbX4OCf8FKwUcs3bkJ3I8gMaP
uKCj1Ju1zpufQtQntAg62qfwlm5lh5r3UdCR4egZr1lJEPsU4oUcveKleY7I
PYeGr5Djj4gyHoE8iHsfWAo77vHlyfsoeB8a3sKOFwqfrrcKg/h3gYiI4wG7
42tc5C9Aw1/EccpE2avV2w5D7H8v4vjqf8S9guWbofEh6tiYKGn0LXsmxP5T
oo7HjhWrhN0OgcaPmOP6jnt3ZS/U2QMASOgbig==
         "]]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 370000.}, {0, 1.000175012989453}}, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     BaseStyle -> {FontSize -> 14}, DisplayFunction :> Identity, Epilog -> 
     InsetBox[
       BoxData[
        FormBox[
         StyleBox[
         "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(R\\)]\\)=0.000035\\n \
\\!\\(\\*SubscriptBox[\\(k\\), \\(R\\)]\\)=1\\n E=10 MeV\\n \
\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \\(v\\)]\\)=0.154948\\n \
\\!\\(\\*SuperscriptBox[\\(\[CapitalDelta]m\\), \\(2\\)]\\)=2.6*e-15\\n \
\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \
\\(0\\)]\\)=0.5\\!\\(\\*SubscriptBox[\\(\[Lambda]\\), \\(MSW\\)]\\)\"", 
          FontSize -> 14, StripOnInput -> False], TraditionalForm]], {
       1000, 0.8}, {Left, Top}], Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"Probability\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Omega]\\), \\(m\\)]\\)x\"", 
         TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Larger, GridLines -> {None, None}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], 
     ImagePadding -> {{Automatic, 10}, {Automatic, 10}}, ImageSize -> 
     880.0000000000001, LabelStyle -> GrayLevel[0], Method -> {}, PlotLabel -> 
     FormBox["\"Transition Probability for Rabi Oscillation and Neutrino \
Transition\"", TraditionalForm], 
     PlotRange -> {{0, 370000.}, {0, 1.000175012989453}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Rabi Oscillation\"", "\"Rabi Formula\"", 
       "\"Neutrino Oscillations with Matter Perturbation\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[EmptyCircle]\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0]], FontSize -> 11, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 11}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.13636363636363638`] -> 
                    Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.075], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    GrayLevel[0], 
                    Dashing[{Small, Small}]], FontSize -> 10, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"+\"", 
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    AbsoluteThickness[1.6], FontSize -> 14, 
                    RGBColor[1, 0, 0]], FontSize -> 18, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 18}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.2777777777777778] -> 
                    Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "11"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\"", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"+\"", ",", "18"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"\"\[EmptyCircle]\"", ",", "11"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "False", ",", "True", ",", "False", ",", "False", ",", 
                 "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.683206675003481*^9, 3.683206941638544*^9, {3.683207372452396*^9, 
   3.683207394949966*^9}, {3.6832074251995277`*^9, 3.683207429704925*^9}, {
   3.683207545079095*^9, 3.683207549890526*^9}, 3.683215779185657*^9, 
   3.683215881494502*^9, 3.683215956419516*^9}]
}, Open  ]],

Cell["\<\
F**k why? If they are the same we should have the same detuning and width \
(for the resonance wavelength)\
\>", "Text",
 CellChangeTimes->{{3.683206689138461*^9, 3.683206716176643*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tan", "[", 
   RowBox[{"2", "thetam"}], "]"}], "k1", " ", 
  RowBox[{"BesselJ", "[", 
   RowBox[{"1", ",", 
    RowBox[{"2", "a1", " ", 
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{"2", "thetam"}], "]"}], "/", "k1"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Tan", "[", 
  RowBox[{"2", "thetam"}], 
  "]"}], "\[IndentingNewLine]", "k1", "\[IndentingNewLine]", 
 RowBox[{"BesselJ", "[", 
  RowBox[{"1", ",", 
   RowBox[{"2", "a1", " ", 
    RowBox[{
     RowBox[{"Cot", "[", 
      RowBox[{"2", "thetam"}], "]"}], "/", "k1"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"2", "a1", " ", 
  RowBox[{
   RowBox[{"Cot", "[", 
    RowBox[{"2", "thetam"}], "]"}], "/", 
   "k1"}]}], "\[IndentingNewLine]", "a1"}], "Input",
 CellChangeTimes->{{3.6832160008027363`*^9, 3.683216048250597*^9}}],

Cell[BoxData["0.00003499999987863198`"], "Output",
 CellChangeTimes->{{3.683216001074747*^9, 3.683216048483407*^9}}],

Cell[BoxData["0.42027633601951125`"], "Output",
 CellChangeTimes->{{3.683216001074747*^9, 3.683216048490512*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.683216001074747*^9, 3.683216048497266*^9}}],

Cell[BoxData["0.00008327854051960497`"], "Output",
 CellChangeTimes->{{3.683216001074747*^9, 3.683216048504005*^9}}],

Cell[BoxData["0.0001665570816167729`"], "Output",
 CellChangeTimes->{{3.683216001074747*^9, 3.683216048510231*^9}}],

Cell[BoxData["0.000035000000000000004`"], "Output",
 CellChangeTimes->{{3.683216001074747*^9, 3.68321604851571*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"1", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683216074723125*^9, 3.683216084492288*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   FractionBox["z", "2"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "3"],
    SeriesData[$CellContext`z, 0, {}, 1, 3, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {
    Rational[1, 2]}, 1, 3, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.6832160848887787`*^9}]
}, Open  ]],

Cell["\<\


For more complicated cases\
\>", "Text",
 CellChangeTimes->{{3.68320655078931*^9, 3.683206559595066*^9}, {
  3.683206694314241*^9, 3.6832066944573383`*^9}, {3.683215997903964*^9, 
  3.683215998363023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mprobRabi", "[", 
    RowBox[{"a_", ",", "k_", ",", "omegam_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]], 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{
       FractionBox[
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"Abs", "[", "a", "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "-", "omegam"}], ")"}], "^", "2"}]}]], "2"], "x"}], 
      "]"}], "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.677524373128312*^9, 3.677524381922468*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qValueList", "=", 
   RowBox[{"Part", "[", 
    RowBox[{
     RowBox[{"qValueOrderdList", "[", 
      RowBox[{
       RowBox[{"listNGenerator", "[", 
        RowBox[{"2", ",", "20"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k1", ",", "k2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a1", ",", "a2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], "]"}], ",", 
     RowBox[{"1", ";;", "100"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.6775223449979887`*^9, 3.677522371765891*^9}, {
  3.6775224027231083`*^9, 3.677522407442453*^9}, {3.677523882519248*^9, 
  3.67752388679797*^9}, {3.6775239285853577`*^9, 3.677523928897709*^9}, {
  3.677525177108944*^9, 3.677525196093835*^9}, {3.6775253198193808`*^9, 
  3.677525320174349*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "20"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "10"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "10"}]}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "20"}]}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "465.0711380672704`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], "568.4202798599972`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], "8965.270135690589`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], "13447.905203535884`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "291183.3307002342`"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], "295597.402591417`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "340310.1308081169`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "355890.73752250813`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], "632004.5286436458`"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], "6.1148499447049135`*^6"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}], "6.761924012927655`*^6"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], "1.898250661476806`*^7"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "2.315444917103306`*^7"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "}"}], "3.473167375654959`*^7"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], "4.4292515434458815`*^7"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], "2.5469894088136372`*^8"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "2"}], "}"}], "3.125850638089464`*^8"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], "1.372624999014998`*^9"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], "2.0862113828280802`*^9"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "3"}]}], "}"}], "3.874392568109293`*^9"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], "4.117874997044994`*^9"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "0"}], "}"}], "9.16121200641407`*^9"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], "1.5994287268348612`*^10"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "3"}], "}"}], "2.1954891219285988`*^10"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "0"}], "}"}], "2.748363601924221`*^10"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], "1.1910782220737411`*^11"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "1"}]}], "}"}], "1.8808770804826077`*^11"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], "2.0799116921738892`*^11"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}], "2.2411791426789053`*^11"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], "4.764312888294966`*^11"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "4"}]}], "}"}], "5.2294179995841125`*^11"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], "5.861569314308234`*^11"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "1"}], "}"}], "6.060603925999514`*^11"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "4"}]}], "}"}], "1.3447074856073435`*^12"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "4"}], "}"}], "2.091767199833645`*^12"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}]}], "}"}], "7.654476559913919`*^12"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}], "9.394130323530719`*^12"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], "1.1627508865607268`*^13"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], "2.5051014196081914`*^13"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "2"}], "}"}], "2.6790667959698715`*^13"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "5"}], "}"}], "2.836044004435024`*^13"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "7"}]}], "}"}], "6.5889216905107875`*^13"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "5"}]}], "}"}], "8.508132013305072`*^13"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "5"}]}], "}"}], "1.418022002217512`*^14"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "5"}], "}"}], "2.5524396039915216`*^14"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "3"}]}], "}"}], "4.614682629784378`*^14"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], "6.334440131567376`*^14"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "8"}], "}"}], "1.1771478231833142`*^15"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], "1.6079732641671032`*^15"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "3"}], "}"}], "1.7799490143454032`*^15"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", "0"}], "}"}], "2.2714084682074975`*^15"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "6"}], "}"}], "4.152839305602116`*^15"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "0"}], "}"}], "4.542816936414995`*^15"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "8"}]}], "}"}], "1.0594330408649832`*^16"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "6"}]}], "}"}], "1.6611357222408468`*^16"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "6"}]}], "}"}], "1.79956369909425`*^16"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "4"}]}], "}"}], "3.646600569720719`*^16"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "6"}], "}"}], "3.875983351895308`*^16"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "1"}]}], "}"}], "4.8376080614312136`*^16"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", "1"}], "}"}], "5.001873190851629`*^16"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], "5.6724897751211176`*^16"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], "9.765561944043654`*^16"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "1"}], "}"}], "9.92982707346407`*^16"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "9"}], "}"}], "1.0214829031266813`*^17"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "4"}]}], "}"}], "1.3776046596722714`*^17"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "4"}], "}"}], "1.5801935802123114`*^17"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "7"}], "}"}], "6.924603307727192`*^17"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "9"}]}], "}"}], "1.9408175159406948`*^18"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "2"}]}], "}"}], "2.05880900773354`*^18"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}], "2.201781855492814`*^18"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "7"}]}], "}"}], "2.670918418694774`*^18"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "5"}]}], "}"}], "3.5158090235402066`*^18"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "7"}]}], "}"}], "3.923941874378743`*^18"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "2"}]}], "}"}], "4.203401724122645`*^18"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "2"}], "}"}], "4.3463745718819185`*^18"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "5"}], "}"}], "6.328456242372371`*^18"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "7"}], "}"}], "7.287320623846235`*^18"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}]}], "}"}], "1.4766397898868867`*^19"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "5"}], "}"}], "1.7579045117701034`*^19"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "8"}], "}"}], "1.2971517702381781`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", 
       RowBox[{"-", "3"}]}], "}"}], "1.3121438437631104`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], "1.4524800837377748`*^20"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", 
       RowBox[{"-", "3"}]}], "}"}], "2.715506243509753`*^20"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3"}], ",", "3"}], "}"}], "2.8558424834844167`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "6"}]}], "}"}], "3.9224564065439954`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "10"}]}], "}"}], "3.9888304673750064`*^20"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "8"}]}], "}"}], "4.540031195833623`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"4", ",", "0"}], "}"}], "6.335633843111542`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"2", ",", "6"}], "}"}], "8.44836764486399`*^20"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "0"}], "}"}], "1.0559389738519238`*^21"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "8"}]}], "}"}], "1.1674365932143605`*^21"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "8"}], "}"}], "1.7511548898215406`*^21"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "6"}]}], "}"}], "1.900882720094398`*^21"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2"}], ",", "6"}], "}"}], "2.3534738439263976`*^21"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "11"}], "}"}], "4.326721603579798`*^21"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.683206964510799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mb1", "=", 
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "k2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mb2", "=", 
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "k2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mk1", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"mk2", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.677520214696225*^9, 3.6775202240635033`*^9}, 
   3.6775221971723127`*^9, {3.677522261975893*^9, 3.677522323996511*^9}, {
   3.677522463284268*^9, 3.677522543553298*^9}, {3.6775225773201923`*^9, 
   3.677522588143146*^9}}],

Cell[BoxData["0.000013668757287432553`"], "Output",
 CellChangeTimes->{
  3.6775223254979277`*^9, 3.677522375662055*^9, {3.677522483114826*^9, 
   3.6775225440728197`*^9}, 3.677522588835182*^9, 3.677936412016934*^9}],

Cell[BoxData["0.003907258164496398`"], "Output",
 CellChangeTimes->{
  3.6775223254979277`*^9, 3.677522375662055*^9, {3.677522483114826*^9, 
   3.6775225440728197`*^9}, 3.677522588835182*^9, 3.677936412021789*^9}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.6775223254979277`*^9, 3.677522375662055*^9, {3.677522483114826*^9, 
   3.6775225440728197`*^9}, 3.677522588835182*^9, 3.6779364120253763`*^9}],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.6775223254979277`*^9, 3.677522375662055*^9, {3.677522483114826*^9, 
   3.6775225440728197`*^9}, 3.677522588835182*^9, 3.6779364120288363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"msys1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"mb1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"mk1", " ", "x"}], "]"}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"mb1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"mk1", " ", "x"}], "]"}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"msol1", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"msys1", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6775225502846107`*^9, 3.6775225931114273`*^9}, {
  3.677522629196228*^9, 3.67752275729801*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "0.5`"}], " ", 
       RowBox[{"psi1", "[", "x", "]"}]}], "+", 
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6.834378643716276`*^-6"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1.`", " ", "x"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"6.834378643716276`*^-6", " ", "\[ImaginaryI]"}]}], ")"}],
           " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{"0.5`", " ", 
       RowBox[{"psi2", "[", "x", "]"}]}], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6.834378643716276`*^-6"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"1.`", " ", "x"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            RowBox[{"6.834378643716276`*^-6", " ", "\[ImaginaryI]"}]}], ")"}],
           " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{{3.6775227240221653`*^9, 3.677522758051009*^9}, 
   3.6779364120563927`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6775227240221653`*^9, 3.677522758051009*^9}, 
   3.677936431698579*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"msol1List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "msol1"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.6775227757825737`*^9, 3.677522786197648*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"msol1List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk1", "]"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67752280874927*^9, 3.6775228663947973`*^9}, 
   3.677523199297728*^9}],

Cell["\<\
We can predict what is the require B2 to destroy the resonance (slow rotating \
modes): B2 Critical value\
\>", "Text",
 CellChangeTimes->{{3.677524900477249*^9, 3.677524969390617*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mb2C", "=", 
  SqrtBox[
   RowBox[{"2", "mb1"}]]}]], "Input",
 CellChangeTimes->{{3.677524943866988*^9, 3.6775249810002623`*^9}}],

Cell[BoxData["0.0052285289111627855`"], "Output",
 CellChangeTimes->{3.677524981546513*^9, 3.67793643183311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"msys2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk2", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk2", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"msol2", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"msys2", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.677522880181259*^9, 3.677522888075528*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"psi1", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.003907258164496398`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.003907258164496398`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"psi2", "[", "x", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.003907258164496398`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.003907258164496398`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.1`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.677522889061672*^9, 3.677936431878831*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.677522889061672*^9, 3.677936452801785*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"msol2List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "msol2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mtheory2List", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"mprobRabi", "[", 
        RowBox[{"mb1", " ", ",", "mk1", ",", 
         SqrtBox[
          RowBox[{
           RowBox[{
            RowBox[{"(", "mb2", " ", ")"}], "^", "2"}], "+", "1"}]], ",", 
         "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "2.7"}], ",", 
       RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.6775229027174473`*^9, 3.677522906570055*^9}, {
   3.677524249704501*^9, 3.677524271886491*^9}, {3.677524302722937*^9, 
   3.6775243111869307`*^9}, 3.677524406277686*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"msol2List", ",", "mtheory2List"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"{", 
       RowBox[{"Black", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Transition Probability of Two Modes\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<|\!\(\*SubscriptBox[\(B\), \(1\)]\)|=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk1", "]"}], "<>", 
         "\"\<\\n |\!\(\*SubscriptBox[\(B\), \(2\)]\)|=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb2", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk2", "]"}], "<>", 
         "\"\<\\n Critical |\!\(\*SuperscriptBox[SubscriptBox[\(B\), \(2\)], \
\(C\)]\)| =\>\"", "<>", 
         RowBox[{"ToString", "@", "mb2C"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Numerical of 2 Modes\>\"", ",", "\"\<Rabi Formula\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677522910268157*^9, 3.6775229103630037`*^9}, {
  3.677523185984454*^9, 3.677523191282421*^9}, {3.677523244935071*^9, 
  3.67752327882891*^9}, {3.677524286076*^9, 3.6775242901482697`*^9}, {
  3.6775244119209337`*^9, 3.677524493851001*^9}, {3.677525003718677*^9, 
  3.677525099098168*^9}}],

Cell["Choose another mode to add to the first one", "Text",
 CellChangeTimes->{{3.6775229436455717`*^9, 3.677522957917235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mb2prime", "=", 
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "k2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mk2prime", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "2"}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.677522960797468*^9, 3.6775229836853933`*^9}}],

Cell[BoxData["0.00012182651536407812`"], "Output",
 CellChangeTimes->{3.677522984144709*^9, 3.677936453023924*^9}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{3.677522984144709*^9, 3.677936453028997*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"msys3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2prime", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk2prime", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2prime", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk2prime", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"msol3", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"msys3", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6775229969740667`*^9, 3.677523020572711*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"psi1", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.00012182651536407812`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.2`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.00012182651536407812`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.2`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"psi2", "[", "x", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.00012182651536407812`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"0.2`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.00012182651536407812`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"0.2`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.677523022532526*^9, 3.6779364530493383`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.677523022532526*^9, 3.677936474374214*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"msol3List", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "msol3"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"msol3List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk1", "]"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(B\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb2prime", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk2prime", "]"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.677523029775262*^9, 3.677523046906499*^9}, 
   3.6775232089464684`*^9, {3.677523290314122*^9, 3.677523296480482*^9}}],

Cell["Choose another mode to add to the first one", "Text",
 CellChangeTimes->{{3.6775229436455717`*^9, 3.677522957917235*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mb2prime2", "=", 
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "k2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mk2prime2", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.677522960797468*^9, 3.6775229836853933`*^9}, {
  3.677523107556716*^9, 3.67752311818012*^9}}],

Cell[BoxData["4.6895610664552465`*^-7"], "Output",
 CellChangeTimes->{3.677522984144709*^9, 3.677523119379105*^9, 
  3.677936474539569*^9}],

Cell[BoxData["1.1`"], "Output",
 CellChangeTimes->{3.677522984144709*^9, 3.677523119379105*^9, 
  3.677936474544849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"msys4", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2prime2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk2prime2", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2prime2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk2prime2", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"msol4", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"msys4", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6775229969740667`*^9, 3.677523020572711*^9}, {
  3.677523123351399*^9, 3.677523142707508*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"psi1", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.000013668757287432553`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"4.6895610664552465`*^-7", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.1`", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"4.6895610664552465`*^-7", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.1`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     ",", 
     RowBox[{
      FractionBox[
       RowBox[{"psi2", "[", "x", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.000013668757287432553`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"4.6895610664552465`*^-7", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.1`", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"4.6895610664552465`*^-7", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.1`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.677523022532526*^9, 3.677523144974338*^9, 
  3.677936474566268*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.677523022532526*^9, 3.677523144974338*^9, 
  3.677936497072852*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"msol4List", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "msol4"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"msol4List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk1", "]"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(B\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"CForm", "[", 
           RowBox[{"N", "[", 
            RowBox[{"mb2prime2", ",", "3"}], "]"}], "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk2prime2", "]"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.677523029775262*^9, 3.677523046906499*^9}, {
   3.6775231473077593`*^9, 3.677523156346857*^9}, 3.677523204631147*^9, {
   3.67752330964356*^9, 3.677523344260151*^9}, 3.677523426371326*^9}],

Cell["Choose another mode {2,0} which is large phi2", "Text",
 CellChangeTimes->{{3.6775229436455717`*^9, 3.677522957917235*^9}, {
  3.6775239683556013`*^9, 3.677523978506506*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mb2prime3", "=", 
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k1", ",", "k2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a1", ",", "a2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mk2prime3", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{"k1", ",", "k2"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.677522960797468*^9, 3.6775229836853933`*^9}, {
  3.677523107556716*^9, 3.67752311818012*^9}, {3.677523981673669*^9, 
  3.677523990834344*^9}}],

Cell[BoxData["1.4914078852689697`*^-10"], "Output",
 CellChangeTimes->{3.677522984144709*^9, 3.677523119379105*^9, 
  3.677523992611595*^9, 3.677936498272544*^9}],

Cell[BoxData["2.`"], "Output",
 CellChangeTimes->{3.677522984144709*^9, 3.677523119379105*^9, 
  3.677523992611595*^9, 3.677936498277739*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"msys5", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"I", " ", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"psi1", "[", "x", "]"}], ",", 
          RowBox[{"psi2", "[", "x", "]"}]}], "}"}], ",", "x"}], "]"}]}], 
     "\[Equal]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"PauliMatrix", "[", "3", "]"}]}], "/", "2"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2prime3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"mk2prime3", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "1", "]"}], "/", "2"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mb1", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk1", " ", "x"}], "]"}]}], "+", 
           RowBox[{"mb2prime3", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"mk2prime3", " ", "x"}], "]"}]}]}], ")"}], 
         RowBox[{
          RowBox[{"PauliMatrix", "[", "2", "]"}], "/", "2"}]}]}], ")"}], ".", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"psi1", "[", "x", "]"}], ",", 
        RowBox[{"psi2", "[", "x", "]"}]}], "}"}]}]}], "&&", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"psi1", "[", "0", "]"}], ",", 
       RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"msol5", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"msys5", ",", 
    RowBox[{"{", 
     RowBox[{"psi1", ",", "psi2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6775229969740667`*^9, 3.677523020572711*^9}, {
  3.677523123351399*^9, 3.677523142707508*^9}, {3.677523995556531*^9, 
  3.677524021346917*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"\[ImaginaryI]", " ", 
      RowBox[{
       SuperscriptBox["psi2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"psi1", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       RowBox[{"psi2", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.000013668757287432553`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"1.4914078852689697`*^-10", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2.`", " ", "x"}], "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"1.4914078852689697`*^-10", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"psi2", "[", "x", "]"}], "2"], "+", 
      RowBox[{
       RowBox[{"psi1", "[", "x", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.000013668757287432553`"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "-", 
            RowBox[{"1.4914078852689697`*^-10", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2.`", " ", "x"}], "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.000013668757287432553`", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"1.`", " ", "x"}], "]"}]}], "+", 
            RowBox[{"1.4914078852689697`*^-10", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2.`", " ", "x"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]}], 
    "}"}]}], "&&", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"psi1", "[", "0", "]"}], ",", 
     RowBox[{"psi2", "[", "0", "]"}]}], "}"}], "\[Equal]", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}]}]], "Output",
 CellChangeTimes->{3.677523022532526*^9, 3.677523144974338*^9, 
  3.6775240216505413`*^9, 3.677936498319765*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                  GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                   False, Background -> GrayLevel[0.93], Frame -> True, 
                   FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                   ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.677523022532526*^9, 3.677523144974338*^9, 
  3.6775240216505413`*^9, 3.677936519617552*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"msol5List", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
         RowBox[{"First", "@", "msol5"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"endpoint", "/", "2.7"}], ",", 
        RowBox[{"endpoint", "/", "1000"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"msol5List", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Transition Probability\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk1", "]"}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(B\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"CForm", "[", 
           RowBox[{"N", "[", 
            RowBox[{"mb2prime3", ",", "3"}], "]"}], "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk2prime3", "]"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.677523029775262*^9, 3.677523046906499*^9}, {
   3.6775231473077593`*^9, 3.677523156346857*^9}, 3.677523204631147*^9, {
   3.67752330964356*^9, 3.677523344260151*^9}, 3.677523426371326*^9, {
   3.677524024194097*^9, 3.677524039890065*^9}}],

Cell["Choose some interesting lists and combine them", "Text",
 CellChangeTimes->{{3.677523599321879*^9, 3.677523616942956*^9}, {
  3.677523956586812*^9, 3.677523963970726*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"msol1List", ",", "msol2List", ",", "msol5List"}], "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Transition Probabilities with Different Modes\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Probability\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<\!\(\*SubscriptBox[\(B\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"N", "[", "mb1", "]"}]}], "<>", 
         "\"\<\\n \!\(\*SubscriptBox[\(\[Phi]\), \(1\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk1", "]"}], "<>", 
         "\"\<\\n Critical |\!\(\*SuperscriptBox[SubscriptBox[\(B\), \(2\)], \
\(C\)]\)| =\>\"", "<>", 
         RowBox[{"ToString", "@", "mb2C"}]}], ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Only One Mode\>\"", ",", 
        RowBox[{"\"\<|\!\(\*SubscriptBox[\(B\), \(2\)]\)|=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"CForm", "[", 
           RowBox[{"N", "[", 
            RowBox[{"mb2", ",", "3"}], "]"}], "]"}]}], "<>", 
         "\"\< \!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk2", "]"}]}], ",", 
        RowBox[{"\"\<|\!\(\*SubscriptBox[\(B\), \(2\)]\)|=\>\"", "<>", 
         RowBox[{"ToString", "@", 
          RowBox[{"CForm", "[", 
           RowBox[{"N", "[", 
            RowBox[{"mb2prime3", ",", "3"}], "]"}], "]"}]}], "<>", 
         "\"\< \!\(\*SubscriptBox[\(\[Phi]\), \(2\)]\)=\>\"", "<>", 
         RowBox[{"ToString", "[", "mk2prime3", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.677523619944808*^9, 3.6775238579179792`*^9}, {
   3.6775240592422037`*^9, 3.677524133958596*^9}, {3.677524724713516*^9, 
   3.6775247359579773`*^9}, {3.6775247683792877`*^9, 3.677524774703587*^9}, 
   3.6775251287293167`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qValueList", "[", 
  RowBox[{"[", 
   RowBox[{"6", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6775264767932243`*^9, 3.67752648659968*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.677526474685145*^9, 3.677526486839789*^9}, 
   3.677936519931501*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mb2mb2CRatioList", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"widthNList", "[", 
        RowBox[{
         RowBox[{"qValueList", "[", 
          RowBox[{"[", 
           RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k1", ",", "k2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"a1", ",", "a2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "thetam"}], "]"}], "/", 
       "mb2C"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mb2mb2CRatioEpilog", "[", "list_", "]"}], ":=", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"qValueList", "[", 
             RowBox[{"[", 
              RowBox[{"n", ",", "1"}], "]"}], "]"}], "]"}], ",", "9"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{"2", "+", 
            RowBox[{"Log", "@", 
             RowBox[{"mb2mb2CRatioList", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Bottom"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "list"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{
             RowBox[{"qValueList", "[", 
              RowBox[{"[", 
               RowBox[{"n", ",", "1"}], "]"}], "]"}], ".", 
             RowBox[{"{", 
              RowBox[{"k1", ",", "k2"}], "}"}]}], "]"}], ",", "9"}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", 
           RowBox[{
            RowBox[{"Log", "@", 
             RowBox[{"mb2mb2CRatioList", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], "-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Top"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "list"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{
          "\"\<Critical |\!\(\*SuperscriptBox[SubscriptBox[\(B\), \(2\)], \(C\
\)]\)| =\>\"", "<>", 
           RowBox[{"ToString", "@", "mb2C"}]}], ",", 
          RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"20", ",", 
          RowBox[{"-", "40"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", "\[IndentingNewLine]", 
  RowBox[{"mb2mb2CRatioList", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<|\!\(\*SubscriptBox[\(B\), \
\(2\)]\)|/|\!\(\*SuperscriptBox[SubscriptBox[\(B\), \(2\)], \(C\)]\)| for \
Modes\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n\>\"", ",", 
      "\"\<|\!\(\*SubscriptBox[\(B\), \
\(2\)]\)|/|\!\(\*SuperscriptBox[SubscriptBox[\(B\), \(2\)], \(C\)]\)|\>\""}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"mb2C", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", "Red"}], "]"}]}], "}"}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"mb2mb2CRatioEpilog", "[", 
     RowBox[{"{", 
      RowBox[{"3", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], "}"}],
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.677525162486639*^9, 3.6775251671108027`*^9}, {
   3.677525243542553*^9, 3.677525457532743*^9}, {3.677525531508309*^9, 
   3.677525720375846*^9}, {3.67752575833355*^9, 3.677526083174124*^9}, {
   3.677526296386209*^9, 3.677526445821548*^9}, {3.677526489729702*^9, 
   3.677526499971573*^9}, {3.677526784362401*^9, 3.677526812797659*^9}, 
   3.677526858820264*^9, {3.6775269332661867`*^9, 3.677527268240158*^9}, {
   3.6775272999817743`*^9, 3.677527302247304*^9}, {3.677527371489925*^9, 
   3.677527386344327*^9}, {3.677527418557171*^9, 3.677527419590211*^9}, {
   3.6775274690869427`*^9, 3.677527499204563*^9}, {3.67752755055259*^9, 
   3.677527606140067*^9}, {3.677527666597146*^9, 3.677527745588326*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mb2mb2CRatioList", "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6775260895823812`*^9, 3.677526089685232*^9}}],

Cell[BoxData["1.6039753972633816`*^-62"], "Output",
 CellChangeTimes->{{3.67752607214354*^9, 3.677526089944577*^9}, 
   3.677936520597473*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<1\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}], ",", 
      RowBox[{"Inset", "[", 
       RowBox[{"\"\<2\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.677526674108253*^9, 3.67752674089017*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1276, 995},
WindowMargins->{{-2033, Automatic}, {Automatic, 27}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3683185404-9230663"->{
  Cell[1001152, 19451, 327, 6, 43, "Print",
   CellTags->"Info3683185404-9230663"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3683185404-9230663", 1216812, 24519}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 87, 1, 46, "Input"],
Cell[CellGroupData[{
Cell[670, 25, 89, 1, 92, "Title"],
Cell[762, 28, 196, 5, 46, "Input"],
Cell[961, 35, 215, 4, 28, "Input"],
Cell[1179, 41, 210, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[1414, 49, 618, 14, 97, "Input"],
Cell[2035, 65, 733, 16, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2805, 86, 287, 5, 28, "Input"],
Cell[3095, 93, 1292, 28, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4424, 126, 101, 1, 65, "Chapter"],
Cell[4528, 129, 569, 17, 51, "Input"],
Cell[5100, 148, 927, 30, 55, "Input"],
Cell[6030, 180, 566, 16, 51, "Input"],
Cell[6599, 198, 836, 27, 55, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7472, 230, 112, 1, 65, "Chapter"],
Cell[CellGroupData[{
Cell[7609, 235, 3271, 90, 329, "Input"],
Cell[10883, 327, 354, 5, 28, "Output"],
Cell[11240, 334, 356, 5, 32, "Output"],
Cell[11599, 341, 357, 5, 32, "Output"],
Cell[11959, 348, 352, 5, 28, "Output"]
}, Open  ]],
Cell[12326, 356, 545, 15, 46, "Input"],
Cell[CellGroupData[{
Cell[12896, 375, 1517, 44, 63, "Input"],
Cell[14416, 421, 2102, 55, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16555, 481, 410, 10, 28, "Input"],
Cell[16968, 493, 556, 8, 62, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17561, 506, 2121, 51, 89, "Input"],
Cell[19685, 559, 7050, 135, 547, "Output"]
}, Open  ]],
Cell[26750, 697, 133, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[26908, 702, 1383, 43, 46, "Input"],
Cell[28294, 747, 1307, 37, 35, "Output"],
Cell[29604, 786, 19090, 382, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48731, 1173, 1993, 52, 110, "Input"],
Cell[50727, 1227, 7082, 136, 547, "Output"]
}, Open  ]],
Cell[57824, 1366, 119, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[57968, 1371, 1879, 48, 94, "Input"],
Cell[59850, 1421, 38876, 740, 600, "Output"]
}, Open  ]],
Cell[98741, 2164, 136, 1, 30, "Text"],
Cell[98880, 2167, 519, 15, 63, "Input"],
Cell[CellGroupData[{
Cell[99424, 2186, 1875, 57, 114, "Input"],
Cell[101302, 2245, 2879, 80, 86, "Output"],
Cell[104184, 2327, 19073, 382, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123294, 2714, 2443, 60, 127, "Input"],
Cell[125740, 2776, 7099, 137, 554, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132876, 2918, 1897, 57, 114, "Input"],
Cell[134776, 2977, 2388, 65, 86, "Output"],
Cell[137167, 3044, 19115, 382, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156319, 3431, 2496, 61, 127, "Input"],
Cell[158818, 3494, 7109, 138, 554, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165964, 3637, 2443, 62, 111, "Input"],
Cell[168410, 3701, 39083, 747, 600, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207530, 4453, 109, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[207664, 4458, 710, 18, 74, "Input"],
Cell[208377, 4478, 185, 2, 28, "Output"],
Cell[208565, 4482, 267, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208869, 4492, 1488, 47, 80, "Input"],
Cell[210360, 4541, 2987, 85, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213384, 4631, 364, 9, 28, "Input"],
Cell[213751, 4642, 18969, 380, 70, "Output"]
}, Open  ]],
Cell[232735, 5025, 2336, 59, 127, "Input"],
Cell[CellGroupData[{
Cell[235096, 5088, 757, 18, 74, "Input"],
Cell[235856, 5108, 259, 3, 28, "Output"],
Cell[236118, 5113, 338, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236493, 5124, 1521, 46, 80, "Input"],
Cell[238017, 5172, 3010, 86, 121, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241064, 5263, 415, 10, 28, "Input"],
Cell[241482, 5275, 18993, 381, 70, "Output"]
}, Open  ]],
Cell[260490, 5659, 717, 19, 28, "Input"],
Cell[261210, 5680, 2308, 58, 127, "Input"],
Cell[263521, 5740, 4444, 112, 192, "Input"],
Cell[CellGroupData[{
Cell[267990, 5856, 1478, 49, 109, "Input"],
Cell[269471, 5907, 138, 2, 28, "Output"],
Cell[269612, 5911, 137, 2, 28, "Output"],
Cell[269752, 5915, 136, 2, 28, "Output"]
}, Open  ]],
Cell[269903, 5920, 176, 5, 68, "Text"],
Cell[270082, 5927, 3484, 90, 175, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[273603, 6022, 96, 1, 46, "Subchapter"],
Cell[273702, 6025, 447, 9, 68, "Text"],
Cell[274152, 6036, 2647, 66, 127, "Input"],
Cell[276802, 6104, 115, 1, 30, "Text"],
Cell[276920, 6107, 3110, 79, 156, "Input"],
Cell[280033, 6188, 386, 10, 46, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[280456, 6203, 111, 1, 46, "Subchapter"],
Cell[280570, 6206, 3084, 87, 114, "Input"],
Cell[283657, 6295, 2876, 85, 148, "Input"],
Cell[286536, 6382, 2926, 85, 148, "Input"],
Cell[289465, 6469, 104, 1, 30, "Text"],
Cell[289572, 6472, 1784, 51, 89, "Input"],
Cell[291359, 6525, 3006, 71, 145, "Input"],
Cell[294368, 6598, 103, 1, 30, "Text"],
Cell[294474, 6601, 4516, 118, 192, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[299027, 6724, 111, 1, 46, "Subchapter"],
Cell[299141, 6727, 137, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[299303, 6732, 574, 15, 110, "Input"],
Cell[299880, 6749, 210, 3, 28, "Output"],
Cell[300093, 6754, 245, 6, 52, "Output"],
Cell[300341, 6762, 243, 6, 74, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300621, 6773, 320, 5, 28, "Input"],
Cell[300944, 6780, 463, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[301444, 6792, 1545, 37, 52, "Input"],
Cell[302992, 6831, 893, 12, 28, "Output"],
Cell[303888, 6845, 964, 15, 28, "Output"]
}, Open  ]],
Cell[304867, 6863, 4005, 109, 284, "Input"],
Cell[308875, 6974, 107, 1, 30, "Text"],
Cell[308985, 6977, 2657, 75, 97, "Input"],
Cell[311645, 7054, 2911, 80, 131, "Input"],
Cell[314559, 7136, 2457, 73, 165, "Input"],
Cell[317019, 7211, 2730, 76, 148, "Input"],
Cell[319752, 7289, 2410, 70, 148, "Input"],
Cell[322165, 7361, 2466, 73, 148, "Input"],
Cell[324634, 7436, 2506, 73, 148, "Input"],
Cell[327143, 7511, 5373, 158, 311, "Input"],
Cell[332519, 7671, 3143, 76, 250, "Input"],
Cell[CellGroupData[{
Cell[335687, 7751, 5429, 121, 179, "Input"],
Cell[341119, 7874, 492415, 8249, 849, 152489, 2675, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[833549, 16126, 869, 19, 63, "Input"],
Cell[CellGroupData[{
Cell[834443, 16149, 99, 1, 28, "Input"],
Cell[834545, 16152, 1021, 25, 28, "Output"]
}, Open  ]],
Cell[835581, 16180, 118, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[835724, 16185, 6333, 132, 420, "Input"],
Cell[842060, 16319, 726, 10, 28, "Output"],
Cell[842789, 16331, 729, 10, 28, "Output"],
Cell[843521, 16343, 745, 11, 28, "Output"],
Cell[844269, 16356, 748, 11, 28, "Output"],
Cell[845020, 16369, 743, 11, 28, "Output"],
Cell[845766, 16382, 748, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[846551, 16398, 7577, 164, 216, "Input"],
Cell[854131, 16564, 102157, 1941, 718, "Output"]
}, Open  ]],
Cell[956303, 18508, 1248, 24, 114, "Input"],
Cell[CellGroupData[{
Cell[957576, 18536, 3923, 94, 185, "Input"],
Cell[961502, 18632, 34846, 674, 664, "Output"]
}, Open  ]],
Cell[996363, 19309, 327, 7, 46, "Input"],
Cell[996693, 19318, 154, 2, 38, "Text"],
Cell[CellGroupData[{
Cell[996872, 19324, 133, 2, 28, "Input"],
Cell[997008, 19328, 130, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[997175, 19335, 685, 12, 46, "Input"],
Cell[997863, 19349, 141, 2, 28, "Output"],
Cell[998007, 19353, 137, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[998193, 19361, 95, 1, 62, "Subchapter"],
Cell[998291, 19364, 198, 4, 30, "Text"],
Cell[998492, 19370, 2531, 73, 114, "Input"],
Cell[CellGroupData[{
Cell[1001048, 19447, 101, 2, 28, "Input"],
Cell[1001152, 19451, 327, 6, 43, "Print",
 CellTags->"Info3683185404-9230663"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001516, 19462, 650, 16, 46, "Input"],
Cell[1002169, 19480, 581, 19, 103, "Output"]
}, Open  ]],
Cell[1002765, 19502, 3190, 90, 131, "Input"],
Cell[CellGroupData[{
Cell[1005980, 19596, 3939, 98, 202, "Input"],
Cell[1009922, 19696, 42795, 832, 664, "Output"]
}, Open  ]],
Cell[1052732, 20531, 196, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1052953, 20539, 845, 26, 114, "Input"],
Cell[1053801, 20567, 116, 1, 28, "Output"],
Cell[1053920, 20570, 113, 1, 28, "Output"],
Cell[1054036, 20573, 94, 1, 28, "Output"],
Cell[1054133, 20576, 116, 1, 28, "Output"],
Cell[1054252, 20579, 115, 1, 28, "Output"],
Cell[1054370, 20582, 116, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1054523, 20588, 267, 7, 28, "Input"],
Cell[1054793, 20597, 371, 12, 44, "Output"]
}, Open  ]],
Cell[1055179, 20612, 217, 7, 68, "Text"],
Cell[1055399, 20621, 836, 27, 55, "Input"],
Cell[CellGroupData[{
Cell[1056260, 20652, 891, 21, 46, "Input"],
Cell[1057154, 20675, 11054, 391, 1885, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1068245, 21071, 1315, 40, 80, "Input"],
Cell[1069563, 21113, 216, 3, 28, "Output"],
Cell[1069782, 21118, 213, 3, 28, "Output"],
Cell[1069998, 21123, 197, 3, 28, "Output"],
Cell[1070198, 21128, 198, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070433, 21136, 1760, 54, 80, "Input"],
Cell[1072196, 21192, 2028, 60, 57, "Output"],
Cell[1074227, 21254, 18999, 381, 70, "Output"]
}, Open  ]],
Cell[1093241, 21638, 575, 17, 28, "Input"],
Cell[1093819, 21657, 1462, 34, 77, "Input"],
Cell[1095284, 21693, 195, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[1095504, 21701, 153, 4, 34, "Input"],
Cell[1095660, 21707, 112, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095809, 21713, 1996, 61, 114, "Input"],
Cell[1097808, 21776, 2820, 80, 103, "Output"],
Cell[1100631, 21858, 18969, 380, 70, "Output"]
}, Open  ]],
Cell[1119615, 22241, 1273, 37, 56, "Input"],
Cell[1120891, 22280, 2600, 61, 154, "Input"],
Cell[1123494, 22343, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1123646, 22348, 614, 19, 46, "Input"],
Cell[1124263, 22369, 114, 1, 28, "Output"],
Cell[1124380, 22372, 95, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1124512, 22378, 2018, 61, 114, "Input"],
Cell[1126533, 22441, 2830, 80, 103, "Output"],
Cell[1129366, 22523, 18969, 380, 70, "Output"]
}, Open  ]],
Cell[1148350, 22906, 2386, 57, 143, "Input"],
Cell[1150739, 22965, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1150891, 22970, 664, 20, 46, "Input"],
Cell[1151558, 22992, 139, 2, 32, "Output"],
Cell[1151700, 22996, 120, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151857, 23003, 2071, 62, 114, "Input"],
Cell[1153931, 23067, 2859, 82, 103, "Output"],
Cell[1156793, 23151, 18994, 381, 70, "Output"]
}, Open  ]],
Cell[1175802, 23535, 2533, 60, 160, "Input"],
Cell[1178338, 23597, 180, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[1178543, 23603, 713, 21, 46, "Input"],
Cell[1179259, 23626, 162, 2, 32, "Output"],
Cell[1179424, 23630, 141, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1179602, 23637, 2120, 63, 114, "Input"],
Cell[1181725, 23702, 2877, 81, 103, "Output"],
Cell[1184605, 23785, 19018, 381, 70, "Output"]
}, Open  ]],
Cell[1203638, 24169, 2583, 61, 160, "Input"],
Cell[1206224, 24232, 177, 2, 30, "Text"],
Cell[1206404, 24236, 3077, 72, 154, "Input"],
Cell[CellGroupData[{
Cell[1209506, 24312, 177, 4, 28, "Input"],
Cell[1209686, 24318, 165, 4, 28, "Output"]
}, Open  ]],
Cell[1209866, 24325, 5324, 137, 295, "Input"],
Cell[CellGroupData[{
Cell[1215215, 24466, 160, 3, 28, "Input"],
Cell[1215378, 24471, 142, 2, 32, "Output"]
}, Open  ]],
Cell[1215535, 24476, 912, 27, 28, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
