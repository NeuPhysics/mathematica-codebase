(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2062816,      43152]
NotebookOptionsPosition[   2052867,      42842]
NotebookOutlinePosition[   2053543,      42868]
CellTagsIndexPosition[   2053409,      42862]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Prepare", "Title",
 CellChangeTimes->{{3.672594346214926*^9, 3.67259435162236*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgsize", "=", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/neutrino.wl\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6725945078959703`*^9, 3.672594509953569*^9}, {
  3.675705587330755*^9, 3.675705590587934*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/neumat.wl\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.672594295880104*^9, 3.672594299034132*^9}, {
  3.675705593783924*^9, 3.675705597619895*^9}}],

Cell[CellGroupData[{

Cell["Parameters", "Subchapter",
 CellChangeTimes->{{3.675705613139237*^9, 3.6757056144249163`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"endpoint", "=", "1000000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deltamsquare13", "=", 
    RowBox[{"2.6", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "15"}], ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"MeV", "^", "2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"energy10", "=", "10"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "in", " ", "units", " ", "of", " ", "MeV"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"energy20", "=", "20"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "in", " ", "units", " ", "of", " ", "MeV"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"?", "OmegaVacuum"}], "\n", 
 RowBox[{
  RowBox[{"omegaV", "=", 
   RowBox[{"OmegaVacuum", "[", 
    RowBox[{"energy10", ",", "deltamsquare13"}], "]"}]}], 
  RowBox[{"(*", "MeV", "*)"}], 
  RowBox[{"(*", 
   RowBox[{"deltamsquare13", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "energy20"}], ")"}]}], 
   RowBox[{"(*", "MeV", "*)"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"For", " ", "10", " ", "MeV", " ", "neutrinos"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"thetaV", "=", 
  RowBox[{
   RowBox[{"ArcSin", "[", 
    SqrtBox["0.093"], "]"}], "/", "2"}]}]}], "Input",
 CellChangeTimes->{{3.671368929239464*^9, 3.671368929695324*^9}, 
   3.6718095401910973`*^9, {3.672757427121626*^9, 3.672757437562367*^9}, {
   3.67302229373162*^9, 3.673022314996978*^9}, {3.6730225801311827`*^9, 
   3.6730225802521563`*^9}, {3.675704357673274*^9, 3.6757043591535788`*^9}, 
   3.675704695953959*^9, {3.67604215811677*^9, 3.676042183204526*^9}, 
   3.676042213363402*^9, {3.6760437721387377`*^9, 3.6760437722728662`*^9}}],

Cell[BoxData[
 StyleBox["\<\"Takes [energy_,deltam2_] as parameters and calculates \
\!\(\*SubscriptBox[\(\[Omega]\), \(v\)]\). Should becareful about units.\"\>",
   "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.68331473286652*^9},
 CellTags->"Info3683293132-9230663"],

Cell[BoxData["1.3000000000000002`*^-16"], "Output",
 CellChangeTimes->{{3.673787042210128*^9, 3.6737870857395782`*^9}, 
   3.6737919810238733`*^9, {3.675704360591934*^9, 3.675704367096766*^9}, {
   3.675704691600704*^9, 3.675704696668042*^9}, 3.67570538023593*^9, 
   3.675705634360241*^9, 3.67570920870555*^9, 3.67578032820508*^9, 
   3.6760370369070873`*^9, 3.676037458523766*^9, {3.6760421666427803`*^9, 
   3.676042183686458*^9}, 3.6760422138073483`*^9, 3.6760437741920547`*^9, 
   3.6761198983174143`*^9, 3.676119967437345*^9, 3.676120023421352*^9, 
   3.676120074515891*^9, 3.6761201563015747`*^9, 3.676196668355322*^9, 
   3.676198248355695*^9, 3.6762162521654263`*^9, 3.676225380881814*^9, 
   3.6763182348653183`*^9, 3.676378408662656*^9, 3.6763811108543377`*^9, 
   3.676732190278946*^9, 3.683314732891344*^9}],

Cell[BoxData["0.15494769630192953`"], "Output",
 CellChangeTimes->{{3.673787042210128*^9, 3.6737870857395782`*^9}, 
   3.6737919810238733`*^9, {3.675704360591934*^9, 3.675704367096766*^9}, {
   3.675704691600704*^9, 3.675704696668042*^9}, 3.67570538023593*^9, 
   3.675705634360241*^9, 3.67570920870555*^9, 3.67578032820508*^9, 
   3.6760370369070873`*^9, 3.676037458523766*^9, {3.6760421666427803`*^9, 
   3.676042183686458*^9}, 3.6760422138073483`*^9, 3.6760437741920547`*^9, 
   3.6761198983174143`*^9, 3.676119967437345*^9, 3.676120023421352*^9, 
   3.676120074515891*^9, 3.6761201563015747`*^9, 3.676196668355322*^9, 
   3.676198248355695*^9, 3.6762162521654263`*^9, 3.676225380881814*^9, 
   3.6763182348653183`*^9, 3.676378408662656*^9, 3.6763811108543377`*^9, 
   3.676732190278946*^9, 3.683314732897085*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"energy20", "=", "20"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "in", " ", "units", " ", "of", " ", "MeV"}], 
   "*)"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fraction", "=", "1"}], 
  RowBox[{"(*", "0.99", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"lambdaN", "=", 
  RowBox[{"fraction", "*", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", "thetaV"}], "]"}], "omegaV", " ", 
   RowBox[{"(*", "MeV", "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.675709237104834*^9, 3.67570930894106*^9}, {
  3.6833147434502974`*^9, 3.683314754613681*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.673787063849712*^9, 3.67378708577675*^9}, 
   3.673791981057022*^9, 3.675705382585124*^9, 3.675705637563025*^9, {
   3.6757092111604958`*^9, 3.675709309594063*^9}, 3.67578032989554*^9, 
   3.676037040497507*^9, 3.676037461166368*^9, 3.676043776504643*^9, 
   3.676119898352037*^9, 3.676119967494731*^9, 3.6761200234719763`*^9, 
   3.676120074566839*^9, 3.676120156341201*^9, 3.67619666850883*^9, 
   3.676198250490896*^9, 3.676216254127776*^9, 3.676225386023127*^9, 
   3.676318236896036*^9, 3.676378409094863*^9, 3.676381112770666*^9, 
   3.6767321918772497`*^9, {3.683314734899719*^9, 3.683314755602133*^9}}],

Cell[BoxData["1.2380751188841494`*^-16"], "Output",
 CellChangeTimes->{{3.673787063849712*^9, 3.67378708577675*^9}, 
   3.673791981057022*^9, 3.675705382585124*^9, 3.675705637563025*^9, {
   3.6757092111604958`*^9, 3.675709309594063*^9}, 3.67578032989554*^9, 
   3.676037040497507*^9, 3.676037461166368*^9, 3.676043776504643*^9, 
   3.676119898352037*^9, 3.676119967494731*^9, 3.6761200234719763`*^9, 
   3.676120074566839*^9, 3.676120156341201*^9, 3.67619666850883*^9, 
   3.676198250490896*^9, 3.676216254127776*^9, 3.676225386023127*^9, 
   3.676318236896036*^9, 3.676378409094863*^9, 3.676381112770666*^9, 
   3.6767321918772497`*^9, {3.683314734899719*^9, 3.683314755608939*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"thetamVN", "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetaV"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetaV"}], "]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambdaN", "/", "omegaV"}], ")"}], "^", "2"}]}], ")"}]}], 
       "]"}], "/", "2"}], ",", "Pi"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.673787083817589*^9, {3.676038228675911*^9, 3.676038250037816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"omegaVKK", "=", 
   RowBox[{"OmegaVacuum", "[", 
    RowBox[{"energy20", ",", "deltamsquare13"}], "]"}]}], 
  RowBox[{"(*", "MeV", "*)"}], 
  RowBox[{"(*", 
   RowBox[{"deltamsquare13", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "energy20"}], ")"}]}], 
   RowBox[{"(*", "MeV", "*)"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambdaNKK", "=", 
   RowBox[{"0.5", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "thetaV"}], "]"}], "omegaVKK"}]}], " ", 
  RowBox[{"(*", "MeV", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegaMKK", "=", 
   RowBox[{"OmegaMatter2", "[", 
    RowBox[{"lambdaNKK", ",", "thetaV", ",", "omegaVKK"}], "]"}]}], 
  RowBox[{"(*", "MeV", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"thetamV", "=", 
  RowBox[{"Mod", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"2", "thetaV"}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetaV"}], "]"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"lambdaNKK", "/", "omegaVKK"}], ")"}], "^", "2"}]}], 
        ")"}]}], "]"}], "/", "2"}], ",", "Pi"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.676038232902239*^9, 3.6760382865554733`*^9}}],

Cell[BoxData["6.500000000000001`*^-17"], "Output",
 CellChangeTimes->{
  3.67603788879873*^9, {3.6760382788617268`*^9, 3.676038286977048*^9}, 
   3.67603837912838*^9, 3.676043778539619*^9, 3.676119898404772*^9, 
   3.676119967544688*^9, 3.676120023529356*^9, 3.676120074622582*^9, 
   3.676120156393965*^9, 3.6761966703677464`*^9, 3.6761982522887*^9, 
   3.6762162557231283`*^9, 3.676225387928688*^9, 3.6763182384396343`*^9, 
   3.6763784103782043`*^9, 3.676381115488021*^9, 3.676732193486712*^9, {
   3.683314737552228*^9, 3.683314758882495*^9}}],

Cell[BoxData["3.0951877972103735`*^-17"], "Output",
 CellChangeTimes->{
  3.67603788879873*^9, {3.6760382788617268`*^9, 3.676038286977048*^9}, 
   3.67603837912838*^9, 3.676043778539619*^9, 3.676119898404772*^9, 
   3.676119967544688*^9, 3.676120023529356*^9, 3.676120074622582*^9, 
   3.676120156393965*^9, 3.6761966703677464`*^9, 3.6761982522887*^9, 
   3.6762162557231283`*^9, 3.676225387928688*^9, 3.6763182384396343`*^9, 
   3.6763784103782043`*^9, 3.676381115488021*^9, 3.676732193486712*^9, {
   3.683314737552228*^9, 3.683314758888921*^9}}],

Cell[BoxData["3.6755186708817036`*^-17"], "Output",
 CellChangeTimes->{
  3.67603788879873*^9, {3.6760382788617268`*^9, 3.676038286977048*^9}, 
   3.67603837912838*^9, 3.676043778539619*^9, 3.676119898404772*^9, 
   3.676119967544688*^9, 3.676120023529356*^9, 3.676120074622582*^9, 
   3.676120156393965*^9, 3.6761966703677464`*^9, 3.6761982522887*^9, 
   3.6762162557231283`*^9, 3.676225387928688*^9, 3.6763182384396343`*^9, 
   3.6763784103782043`*^9, 3.676381115488021*^9, 3.676732193486712*^9, {
   3.683314737552228*^9, 3.683314758893612*^9}}],

Cell[BoxData["0.19893143402797822`"], "Output",
 CellChangeTimes->{
  3.67603788879873*^9, {3.6760382788617268`*^9, 3.676038286977048*^9}, 
   3.67603837912838*^9, 3.676043778539619*^9, 3.676119898404772*^9, 
   3.676119967544688*^9, 3.676120023529356*^9, 3.676120074622582*^9, 
   3.676120156393965*^9, 3.6761966703677464`*^9, 3.6761982522887*^9, 
   3.6762162557231283`*^9, 3.676225387928688*^9, 3.6763182384396343`*^9, 
   3.6763784103782043`*^9, 3.676381115488021*^9, 3.676732193486712*^9, {
   3.683314737552228*^9, 3.6833147588985777`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"secondfrac", "=", "90"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onekListKK", "=", 
   RowBox[{"{", "1", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twokListKK", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "/", "secondfrac"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"oneaListKK", "=", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", "0.1", "}"}], ";"}], "*)"}], 
   RowBox[{"{", 
    RowBox[{"0.02", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MeVInverse2km", "[", 
         RowBox[{"2", 
          RowBox[{"Pi", "/", 
           RowBox[{"(", 
            RowBox[{"omegaMKK", " ", 
             RowBox[{"onekListKK", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], "/", 
        "1500"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"5", "/", "3"}], ")"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"twoaListKK", "=", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.1"}], "}"}], ";"}], "*)"}], 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.02", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MeVInverse2km", "[", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"(", 
              RowBox[{"omegaMKK", " ", 
               RowBox[{"twokListKK", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], "/", 
          "1500"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"5", "/", "3"}], ")"}]}]}], ",", 
      RowBox[{"0.02", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MeVInverse2km", "[", 
           RowBox[{"2", 
            RowBox[{"Pi", "/", 
             RowBox[{"(", 
              RowBox[{"omegaMKK", " ", 
               RowBox[{"twokListKK", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], "]"}], "/", 
          "1500"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"5", "/", "3"}], ")"}]}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oneaListKK", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "5"}], ")"}]}]}], "}"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"onephiListKK", "=", 
   RowBox[{"{", "0", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"twophiListKK", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"endpointNReconstruct", "=", "960000"}]}], "Input",
 CellChangeTimes->{{3.67378668289042*^9, 3.673786700760618*^9}, {
  3.676119879907185*^9, 3.67611989358792*^9}, {3.6761199655956917`*^9, 
  3.6761199659391623`*^9}, {3.676120017571651*^9, 3.6761200196517353`*^9}, {
  3.676120070758851*^9, 3.676120072518732*^9}, {3.67612015429524*^9, 
  3.6761201544137383`*^9}, {3.676225406337213*^9, 3.676225411228725*^9}}],

Cell[BoxData["960000"], "Output",
 CellChangeTimes->{{3.6737866737655993`*^9, 3.673786701476129*^9}, 
   3.673786817037676*^9, {3.673787023005207*^9, 3.673787085853426*^9}, 
   3.673791981155513*^9, 3.675705386555732*^9, 3.675705641884365*^9, {
   3.675709213972022*^9, 3.6757093119544287`*^9}, 3.675780332187869*^9, 
   3.6760370486889763`*^9, 3.676037468228468*^9, 3.676038381038856*^9, 
   3.676043779771199*^9, {3.67611989398213*^9, 3.6761198984516773`*^9}, 
   3.6761199676033688`*^9, 3.676120023587565*^9, 3.676120074682272*^9, 
   3.676120156454467*^9, 3.6761966709679003`*^9, 3.676198253109003*^9, 
   3.676203082907103*^9, 3.676216256761804*^9, {3.676225388989246*^9, 
   3.676225412037847*^9}, 3.676318239258363*^9, 3.676378411579558*^9, 
   3.6763811165243807`*^9, 3.676732194223776*^9, 3.683314759796845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["twoaListKK"], "Input",
 CellChangeTimes->{{3.673894974508914*^9, 3.673894977075235*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00003573471582101408`", ",", "0.06458938982750548`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6738949774321623`*^9, 3.6757053881317673`*^9, 3.675705643610455*^9, {
   3.675709215012855*^9, 3.6757093126548557`*^9}, 3.67578033326368*^9, 
   3.676037050151318*^9, 3.6760370932010403`*^9, 3.676037469581706*^9, 
   3.6760378330612297`*^9, 3.6760383820119667`*^9, 3.676043780781971*^9, 
   3.676119898500669*^9, 3.676119967654297*^9, 3.6761200236377153`*^9, 
   3.6761200747317142`*^9, 3.676120156505272*^9, 3.6761966718266706`*^9, 
   3.676198253918334*^9, 3.6762162575862617`*^9, {3.676225390939515*^9, 
   3.676225413189088*^9}, 3.676318240038917*^9, 3.676378413248846*^9, 
   3.676381117569932*^9, 3.6767321961643877`*^9, 3.68331476076943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"qValueOrderdList", "[", 
    RowBox[{
     RowBox[{"listNGenerator", "[", 
      RowBox[{"1", ",", "10"}], "]"}], ",", "onekListKK", ",", "oneaListKK", 
     ",", "onephiListKK", ",", "thetamV"}], "]"}], ",", 
   RowBox[{"1", ";;", "10"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.6760380998488913`*^9, 3.676038108630209*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], ",", "288905.01827109867`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "2", "}"}], ",", "8.76970767766876`*^9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "2"}], "}"}], ",", "2.630912303300628`*^10"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "3", "}"}], ",", "2.1296348042340648`*^15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "3"}], "}"}], ",", "4.2592696084681295`*^15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "4", "}"}], ",", "5.818053049099088`*^20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "4"}], "}"}], ",", "9.696755081831814`*^20"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "5", "}"}], ",", "1.883807111451835`*^26"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "5"}], "}"}], ",", "2.8257106671777526`*^26"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.676038109191358*^9, 3.6760383829395943`*^9, 
  3.676038443942709*^9, 3.676043781594577*^9, 3.676119898534299*^9, 
  3.676119967686844*^9, 3.676120023669559*^9, 3.676120074764021*^9, 
  3.6761201565379333`*^9, 3.67619667333995*^9, 3.676198255596257*^9, 
  3.676216259817375*^9, 3.676318241259651*^9, 3.676381118399187*^9, 
  3.676732196879867*^9, 3.683314761633234*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", "1", "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"-", "1"}], "}"}], "288905.01827109867`"},
    {
     RowBox[{"{", "2", "}"}], "8.76970767766876`*^9"},
    {
     RowBox[{"{", 
      RowBox[{"-", "2"}], "}"}], "2.630912303300628`*^10"},
    {
     RowBox[{"{", "3", "}"}], "2.1296348042340648`*^15"},
    {
     RowBox[{"{", 
      RowBox[{"-", "3"}], "}"}], "4.2592696084681295`*^15"},
    {
     RowBox[{"{", "4", "}"}], "5.818053049099088`*^20"},
    {
     RowBox[{"{", 
      RowBox[{"-", "4"}], "}"}], "9.696755081831814`*^20"},
    {
     RowBox[{"{", "5", "}"}], "1.883807111451835`*^26"},
    {
     RowBox[{"{", 
      RowBox[{"-", "5"}], "}"}], "2.8257106671777526`*^26"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.676038109191358*^9, 3.6760383829395943`*^9, 
  3.676038443942709*^9, 3.676043781594577*^9, 3.676119898534299*^9, 
  3.676119967686844*^9, 3.676120023669559*^9, 3.676120074764021*^9, 
  3.6761201565379333`*^9, 3.67619667333995*^9, 3.676198255596257*^9, 
  3.676216259817375*^9, 3.676318241259651*^9, 3.676381118399187*^9, 
  3.676732196879867*^9, 3.683314761642017*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"destructionQOrder", "=", 
  RowBox[{"Part", "[", 
   RowBox[{
    RowBox[{"qValueOrderdList", "[", 
     RowBox[{
      RowBox[{"listNGenerator", "[", 
       RowBox[{"2", ",", "10"}], "]"}], ",", "twokListKK", ",", "twoaListKK", 
      ",", "twophiListKK", ",", "thetamV"}], "]"}], ",", 
    RowBox[{"1", ";;", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.673786727511421*^9, 3.673786768388124*^9}, {
  3.67378682349923*^9, 3.6737868458478537`*^9}, {3.673786941704859*^9, 
  3.6737869424698763`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", "128.05134950779404`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", "132.43650469497595`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", "139.96310295037955`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", "148.01726995320843`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], ",", "195.45569162821334`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], ",", "223.37793328938665`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", "237.15536826688123`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", "253.5109109059765`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], ",", "370.2264830895003`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.673786768875195*^9, {3.6737868188730907`*^9, 3.673786846255775*^9}, 
   3.6737869428945913`*^9, {3.673787019885907*^9, 3.673787085889454*^9}, 
   3.673791981199019*^9, 3.675705389227818*^9, 3.675705644936346*^9, {
   3.6757092168147707`*^9, 3.675709313410934*^9}, 3.675780334604841*^9, 
   3.6760370516465693`*^9, 3.67603709408069*^9, 3.67603747087092*^9, 
   3.676038384670796*^9, 3.6760437825363607`*^9, 3.676119898583417*^9, 
   3.676119967738213*^9, 3.676120023717774*^9, 3.676120074815654*^9, 
   3.676120156585137*^9, 3.676196673861144*^9, 3.676198255953529*^9, 
   3.676216260071149*^9, 3.6763182416190968`*^9, 3.6767321980950737`*^9, 
   3.68331476290989*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], "128.05134950779404`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], "132.43650469497595`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], "139.96310295037955`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], "148.01726995320843`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], "195.45569162821334`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], "223.37793328938665`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "237.15536826688123`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], "253.5109109059765`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], "370.2264830895003`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.673786768875195*^9, {3.6737868188730907`*^9, 3.673786846255775*^9}, 
   3.6737869428945913`*^9, {3.673787019885907*^9, 3.673787085889454*^9}, 
   3.673791981199019*^9, 3.675705389227818*^9, 3.675705644936346*^9, {
   3.6757092168147707`*^9, 3.675709313410934*^9}, 3.675780334604841*^9, 
   3.6760370516465693`*^9, 3.67603709408069*^9, 3.67603747087092*^9, 
   3.676038384670796*^9, 3.6760437825363607`*^9, 3.676119898583417*^9, 
   3.676119967738213*^9, 3.676120023717774*^9, 3.676120074815654*^9, 
   3.676120156585137*^9, 3.676196673861144*^9, 3.676198255953529*^9, 
   3.676216260071149*^9, 3.6763182416190968`*^9, 3.6767321980950737`*^9, 
   3.683314762916799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"destructionQOrder", "[", 
       RowBox[{"[", "n", "]"}], "]"}]}], ",", 
     RowBox[{"widthNList", "[", 
      RowBox[{
       RowBox[{"First", "@", 
        RowBox[{"destructionQOrder", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], ",", "twokListKK", ",", 
       "twoaListKK", ",", "twophiListKK", ",", "thetamV"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "@", "destructionQOrder"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.673786947386633*^9, 3.6737870102522984`*^9}, {
  3.673787088970126*^9, 3.673787091529512*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "3.8342288643085407`*^-7"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", "0.007462284147949523`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", "0.007131299988773205`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", "0.007462284147949523`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", "0.007131299988773205`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], ",", "0.004775165796188101`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], ",", "0.004775165796188101`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", "0.004076090175529296`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", "0.004076090175529296`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], ",", "0.0024909677301482506`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67378699287996*^9, 3.673787092024643*^9}, 
   3.673791981240302*^9, 3.6757053905970163`*^9, 3.675705645904805*^9, {
   3.675709217202305*^9, 3.675709314169195*^9}, 3.675780335344469*^9, 
   3.6760370959976177`*^9, 3.6760374725101633`*^9, 3.67603838614891*^9, 
   3.6760437835049763`*^9, 3.676119898634226*^9, 3.6761199677866983`*^9, 
   3.676120023771908*^9, 3.6761200748652477`*^9, 3.6761201566386147`*^9, 
   3.6761966744534492`*^9, 3.676198256344398*^9, 3.6762162603831367`*^9, 
   3.676732199326867*^9, 3.683314764156534*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "3.8342288643085407`*^-7"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], "0.007462284147949523`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], "0.007131299988773205`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], "0.007462284147949523`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], "0.007131299988773205`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], "0.004775165796188101`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], "0.004775165796188101`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "0.004076090175529296`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], "0.004076090175529296`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], "0.0024909677301482506`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.67378699287996*^9, 3.673787092024643*^9}, 
   3.673791981240302*^9, 3.6757053905970163`*^9, 3.675705645904805*^9, {
   3.675709217202305*^9, 3.675709314169195*^9}, 3.675780335344469*^9, 
   3.6760370959976177`*^9, 3.6760374725101633`*^9, 3.67603838614891*^9, 
   3.6760437835049763`*^9, 3.676119898634226*^9, 3.6761199677866983`*^9, 
   3.676120023771908*^9, 3.6761200748652477`*^9, 3.6761201566386147`*^9, 
   3.6761966744534492`*^9, 3.676198256344398*^9, 3.6762162603831367`*^9, 
   3.676732199326867*^9, 3.683314764162359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"First", "@", 
      RowBox[{"destructionQOrder", "[", 
       RowBox[{"[", "n", "]"}], "]"}]}], ",", 
     RowBox[{"MeVInverse2km", "[", 
      RowBox[{"2", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"omegaMKK", "*", 
          RowBox[{"widthNList", "[", 
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"destructionQOrder", "[", 
              RowBox[{"[", "n", "]"}], "]"}]}], ",", "twokListKK", ",", 
            "twoaListKK", ",", "twophiListKK", ",", "thetamV"}], "]"}]}], 
         ")"}]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", 
     RowBox[{"Length", "@", "destructionQOrder"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.6737871260528383`*^9, 3.673787164163843*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "8.783132390540197`*^7"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", "4512.8996783251805`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], ",", "4722.356342303566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", "4512.8996783251805`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], ",", "4722.356342303566`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], ",", "7052.4336050772645`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], ",", "7052.4336050772645`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", "8261.971222577153`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", "8261.971222577153`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], ",", "13519.460458385072`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6737871647199297`*^9, 3.6737919812907457`*^9, 3.675705391899097*^9, 
   3.675705647017315*^9, {3.675709219029354*^9, 3.675709316507382*^9}, 
   3.6757803365622168`*^9, 3.676037097357163*^9, 3.67603747386018*^9, 
   3.676043784455463*^9, 3.676119898685073*^9, 3.676119967836917*^9, 
   3.676120023819852*^9, 3.676120074915625*^9, 3.676120156687915*^9, 
   3.6761966759189463`*^9, 3.6761982568426847`*^9, 3.676216261084072*^9, 
   3.6767322003475637`*^9, 3.683314765174143*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "8.783132390540197`*^7"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], "4512.8996783251805`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], "4722.356342303566`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], "4512.8996783251805`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], "4722.356342303566`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], "7052.4336050772645`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], "7052.4336050772645`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "8261.971222577153`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], "8261.971222577153`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], "13519.460458385072`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6737871647199297`*^9, 3.6737919812907457`*^9, 3.675705391899097*^9, 
   3.675705647017315*^9, {3.675709219029354*^9, 3.675709316507382*^9}, 
   3.6757803365622168`*^9, 3.676037097357163*^9, 3.67603747386018*^9, 
   3.676043784455463*^9, 3.676119898685073*^9, 3.676119967836917*^9, 
   3.676120023819852*^9, 3.676120074915625*^9, 3.676120156687915*^9, 
   3.6761966759189463`*^9, 3.6761982568426847`*^9, 3.676216261084072*^9, 
   3.6767322003475637`*^9, 3.683314765179902*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"destructionQOrder", "[", 
        RowBox[{"[", "n", "]"}], "]"}]}], ",", 
      RowBox[{"bNList", "[", 
       RowBox[{
        RowBox[{"First", "@", 
         RowBox[{"destructionQOrder", "[", 
          RowBox[{"[", "n", "]"}], "]"}]}], ",", "twokListKK", ",", 
        "twoaListKK", ",", "twophiListKK", ",", "thetamV"}], "]"}]}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Length", "@", "destructionQOrder"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.673792782951499*^9, 3.6737928273859653`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"3.8342288643085407`*^-7", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], 
     RowBox[{"-", "0.007462284147949523`"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "5"}], "}"}], 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.007131299988773205`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], "0.007462284147949523`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "5"}]}], "}"}], 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.007131299988773205`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "6"}], "}"}], "0.004775165796188101`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "6"}]}], "}"}], 
     RowBox[{"-", "0.004775165796188101`"}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.004076090175529296`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], 
     RowBox[{"0.`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.004076090175529296`", " ", "\[ImaginaryI]"}]}]},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "7"}], "}"}], 
     RowBox[{"0.`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.0024909677301482506`", " ", "\[ImaginaryI]"}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.67379280529177*^9, 3.6737928276907463`*^9}, 
   3.675705394746668*^9, 3.675705647999578*^9, 3.675709221221986*^9, 
   3.6757803373906*^9, 3.676037098919282*^9, 3.676037475156641*^9, 
   3.676043785383793*^9, 3.676119898734186*^9, 3.676119967886858*^9, 
   3.676120023868855*^9, 3.6761200749644423`*^9, 3.676120156736505*^9, 
   3.676196676934498*^9, 3.676198257596293*^9, 3.67621626239221*^9, 
   3.676732201283535*^9, 3.6833147661091337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"widthNList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "/", "7000"}]}], "}"}], ",", "twoaListKK3", ",", 
   "twophiListKK", ",", "thetamV"}], 
  "]"}], "\[IndentingNewLine]", "twoaListKK"}], "Input",
 CellChangeTimes->{{3.676227747414589*^9, 3.6762277981427917`*^9}, {
  3.676228097028508*^9, 3.676228097301384*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Object \[NoBreak]\\!\\(twoaListKK3\\)\[NoBreak] at \
position {2, \[NoBreak]\\!\\(3\\)\[NoBreak]} in \[NoBreak]\\!\\(MapThread[\\(\
\\(\\(\\(\\(\\(BesselJ[\\(\\(#1, \\(#3\\\\ \\(\\(Cos[\\(\\(2\\\\ \
0.19893143402797822`\\)\\)]\\)\\)\\)\\/#2\\)\\)]\\)\\) &\\)\\), \
\\(\\({\\(\\({1, 0}\\)\\), \\(\\({1, 1\\/7000}\\)\\), \
twoaListKK3}\\)\\)\\)\\)]\\)\[NoBreak] has only \
\[NoBreak]\\!\\(0\\)\[NoBreak] of required \[NoBreak]\\!\\(1\\)\[NoBreak] \
dimensions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptd\\\", ButtonNote -> \
\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683314767123839*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.42027633601951125`", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"#1", ",", 
          FractionBox[
           RowBox[{"#3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "0.19893143402797822`"}], "]"}]}], "#2"]}], 
         "]"}], "&"}], "]"}]}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.42027633601951125`", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"#1", ",", 
          FractionBox[
           RowBox[{"#3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "0.19893143402797822`"}], "]"}]}], "#2"]}], 
         "]"}], "&"}], "]"}]}], ",", 
     RowBox[{"0.0000600394765742159`", " ", 
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"#1", ",", 
          FractionBox[
           RowBox[{"#3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "0.19893143402797822`"}], "]"}]}], "#2"]}], 
         "]"}], "&"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"0.42027633601951125`", " ", 
    RowBox[{"Abs", "[", 
     RowBox[{"twoaListKK3", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"BesselJ", "[", 
         RowBox[{"#1", ",", 
          FractionBox[
           RowBox[{"#3", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "0.19893143402797822`"}], "]"}]}], "#2"]}], 
         "]"}], "&"}], ")"}]}], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.676227800547933*^9, 3.676228097537282*^9, 
  3.676732202203281*^9, 3.6833147671319427`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00003573471582101408`", ",", "0.06458938982750548`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.676227800547933*^9, 3.676228097537282*^9, 
  3.676732202203281*^9, 3.683314767137773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"widthNList", "[", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
   "onephiListKK", ",", "thetamV"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
    "onephiListKK", ",", "thetamV"}], "]"}], "*", 
  "1000"}], "\[IndentingNewLine]", 
 RowBox[{"twoaListKK", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"MeVInverse2km", "[", 
  RowBox[{"2", 
   RowBox[{"Pi", "/", 
    RowBox[{"(", 
     RowBox[{"omegaMKK", "*", "%"}], ")"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.673787370750945*^9, 3.673787410149053*^9}, {
  3.673895284155177*^9, 3.673895319065844*^9}, {3.6763196602299013`*^9, 
  3.676319694320445*^9}, {3.676319760212406*^9, 3.676319762858048*^9}}],

Cell[BoxData["6.92269041212454`*^-6"], "Output",
 CellChangeTimes->{
  3.67378741183644*^9, 3.673791981367716*^9, {3.673895300141839*^9, 
   3.673895319622272*^9}, 3.675705399551646*^9, 3.675705667011739*^9, 
   3.67578033829213*^9, 3.676037100322421*^9, 3.676037476205028*^9, 
   3.676043786321994*^9, 3.676119898767631*^9, 3.676119967919664*^9, 
   3.676120023902804*^9, 3.676120074997858*^9, 3.676120156770691*^9, 
   3.676196678910913*^9, 3.676198258413577*^9, 3.676216263406369*^9, 
   3.6762254275781507`*^9, 3.676227639830235*^9, {3.676319665806367*^9, 
   3.676319694729369*^9}, {3.67631976061751*^9, 3.676319763216063*^9}, 
   3.676732203587381*^9, 3.683314768881856*^9}],

Cell[BoxData["0.006922690412124541`"], "Output",
 CellChangeTimes->{
  3.67378741183644*^9, 3.673791981367716*^9, {3.673895300141839*^9, 
   3.673895319622272*^9}, 3.675705399551646*^9, 3.675705667011739*^9, 
   3.67578033829213*^9, 3.676037100322421*^9, 3.676037476205028*^9, 
   3.676043786321994*^9, 3.676119898767631*^9, 3.676119967919664*^9, 
   3.676120023902804*^9, 3.676120074997858*^9, 3.676120156770691*^9, 
   3.676196678910913*^9, 3.676198258413577*^9, 3.676216263406369*^9, 
   3.6762254275781507`*^9, 3.676227639830235*^9, {3.676319665806367*^9, 
   3.676319694729369*^9}, {3.67631976061751*^9, 3.676319763216063*^9}, 
   3.676732203587381*^9, 3.6833147688870897`*^9}],

Cell[BoxData["0.00003573471582101408`"], "Output",
 CellChangeTimes->{
  3.67378741183644*^9, 3.673791981367716*^9, {3.673895300141839*^9, 
   3.673895319622272*^9}, 3.675705399551646*^9, 3.675705667011739*^9, 
   3.67578033829213*^9, 3.676037100322421*^9, 3.676037476205028*^9, 
   3.676043786321994*^9, 3.676119898767631*^9, 3.676119967919664*^9, 
   3.676120023902804*^9, 3.676120074997858*^9, 3.676120156770691*^9, 
   3.676196678910913*^9, 3.676198258413577*^9, 3.676216263406369*^9, 
   3.6762254275781507`*^9, 3.676227639830235*^9, {3.676319665806367*^9, 
   3.676319694729369*^9}, {3.67631976061751*^9, 3.676319763216063*^9}, 
   3.676732203587381*^9, 3.683314768890752*^9}],

Cell[BoxData["942404.0168537941`"], "Output",
 CellChangeTimes->{
  3.67378741183644*^9, 3.673791981367716*^9, {3.673895300141839*^9, 
   3.673895319622272*^9}, 3.675705399551646*^9, 3.675705667011739*^9, 
   3.67578033829213*^9, 3.676037100322421*^9, 3.676037476205028*^9, 
   3.676043786321994*^9, 3.676119898767631*^9, 3.676119967919664*^9, 
   3.676120023902804*^9, 3.676120074997858*^9, 3.676120156770691*^9, 
   3.676196678910913*^9, 3.676198258413577*^9, 3.676216263406369*^9, 
   3.6762254275781507`*^9, 3.676227639830235*^9, {3.676319665806367*^9, 
   3.676319694729369*^9}, {3.67631976061751*^9, 3.676319763216063*^9}, 
   3.676732203587381*^9, 3.68331476889538*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["twoaListKK"], "Input",
 CellChangeTimes->{{3.673787655210589*^9, 3.673787657091552*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00003573471582101408`", ",", "0.06458938982750548`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.673787657354701*^9, 3.673791981385233*^9, 
  3.6757054025570707`*^9, 3.675705668264689*^9, 3.675780339465807*^9, 
  3.67603710134881*^9, 3.676037477137494*^9, 3.676043787182843*^9, 
  3.6761198988179693`*^9, 3.6761199679695*^9, 3.6761200239536247`*^9, 
  3.67612007504742*^9, 3.676120156820414*^9, 3.676196680063398*^9, 
  3.676198259158544*^9, 3.676216264291051*^9, 3.676319675158628*^9, 
  3.683314769818583*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"widthNList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], ",", "twokListKK", ",", "twoaListKK", ",",
    "twophiListKK", ",", "thetamV"}], "]"}]], "Input",
 CellChangeTimes->{{3.673787962534856*^9, 3.673787963900037*^9}}],

Cell[BoxData["2.421862397876028`*^-6"], "Output",
 CellChangeTimes->{3.673787964206086*^9, 3.673791981422173*^9, 
  3.675705403834372*^9, 3.675705669473516*^9, 3.675780340224022*^9, 
  3.676037102197859*^9, 3.676037477877388*^9, 3.676043787917389*^9, 
  3.6761198988511744`*^9, 3.676119968014597*^9, 3.6761200239869537`*^9, 
  3.67612007508152*^9, 3.676120156853155*^9, 3.67619668100189*^9, 
  3.676198259873817*^9, 3.676216265238325*^9, 3.676732212117467*^9, 
  3.683314771004362*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Second Freq As BG", "Subchapter",
 CellChangeTimes->{{3.676037533193779*^9, 3.676037537873414*^9}}],

Cell[BoxData[
 RowBox[{"pltNList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", "onekListKK", ",", "oneaListKK", ",",
    "onephiListKK", ",", "thetamV", ",", "endpoint", ",", 
   "\"\<Mode n=1 with One Perturbation Only\>\"", ",", "Black", ",", "None", 
   ",", "None"}], "]"}]], "Input",
 CellChangeTimes->{{3.676042125237844*^9, 3.676042179427058*^9}, {
  3.676042225114809*^9, 3.676042264018291*^9}, {3.676042302562202*^9, 
  3.676042318318334*^9}, {3.6760423582927113`*^9, 3.676042394763337*^9}}],

Cell[BoxData[
 RowBox[{"pltNList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", "onekListKK2", ",", "oneaListKK2", 
   ",", "onephiListKK", ",", "thetamV2", ",", "endpoint", ",", 
   "\"\<Mode n=1 with Second Perturbation as Background\>\"", ",", "Black", 
   ",", "None", ",", "None"}], "]"}]], "Input",
 CellChangeTimes->{
  3.676042201739562*^9, {3.676042272200897*^9, 3.6760422809448147`*^9}, {
   3.67604232130809*^9, 3.676042333976927*^9}, 3.6760424122536583`*^9, {
   3.6760524191604156`*^9, 3.676052432876315*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameter Set 3", "Subchapter",
 CellChangeTimes->{{3.6761253024285316`*^9, 3.676125310411516*^9}}],

Cell["\<\
Recalculate using some more mobile parameters, instead of the Komogorov \
spectrum\
\>", "Text",
 CellChangeTimes->{{3.6761254570139647`*^9, 3.676125494954063*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fractionk2", "=", 
   RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fractionA2", "=", "20"}], ";"}]}], "Input",
 CellChangeTimes->{{3.676126877856173*^9, 3.6761268780575037`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"datafrac", "[", 
   RowBox[{"fractionk2Input_", ",", "fractionA2Input_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fractionk2M", ",", "fractionA2M", ",", "solM"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fractionk2M", "=", "fractionk2Input"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fractionA2M", "=", "fractionA2Input"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"twokListKK3", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"onekListKK", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"onekListKK", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "*", "fractionk2M"}]}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"twoaListKK3", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"oneaListKK", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"widthNList", "[", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",",
            "onephiListKK", ",", "thetamV"}], "]"}], "*", "fractionA2M"}]}], 
       "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"lambdaNKK3", "=", 
      RowBox[{
       RowBox[{"0.5", "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "thetaV"}], "]"}], "omegaVKK"}], " ", "+", 
       RowBox[{
        RowBox[{"twoaListKK3", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "*", "omegaMKK"}]}]}], 
     RowBox[{"(*", "MeV", "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"omegaMKK3", "=", 
      RowBox[{"OmegaMatter2", "[", 
       RowBox[{"lambdaNKK3", ",", "thetaV", ",", "omegaVKK"}], "]"}]}], 
     RowBox[{"(*", "MeV", "*)"}], ";", "\[IndentingNewLine]", 
     RowBox[{"thetamV3", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"2", "thetaV"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"2", "thetaV"}], "]"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"lambdaNKK3", "/", "omegaVKK"}], ")"}], "^", "2"}]}], 
            ")"}]}], "]"}], "/", "2"}], ",", "Pi"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"onekListKK3", "=", 
      RowBox[{
       RowBox[{"onekListKK", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"omegaMKK", "/", "omegaMKK3"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"oneaListKK3", "=", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"{", "0.1", "}"}], ";"}], "*)"}], 
      RowBox[{
       RowBox[{"oneaListKK", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "*", 
       RowBox[{"omegaMKK", "/", "omegaMKK3"}]}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Part", "[", 
        RowBox[{
         RowBox[{"qValueOrderdList", "[", 
          RowBox[{
           RowBox[{"listNGenerator", "[", 
            RowBox[{"1", ",", "10"}], "]"}], ",", "onekListKK3", ",", 
           "oneaListKK3", ",", "onephiListKK", ",", "thetamV3"}], "]"}], ",", 
         
         RowBox[{"1", ";;", "10"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Grid", "@", "%"}], ";"}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"widthNList", "[", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
         "onephiListKK", ",", "thetamV"}], "]"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"widthNList", "[", 
        RowBox[{
         RowBox[{"{", "1", "}"}], ",", "onekListKK2", ",", "oneaListKK2", ",",
          "onephiListKK", ",", "thetamV2"}], "]"}], ";"}], 
      "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"solM", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"solNList", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", "1", "}"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"onekListKK3", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"oneaListKK3", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", "onephiListKK", ",", 
          RowBox[{"thetamV3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "endpoint"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "oneaListKK3"}]}], "}"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6762010637849417`*^9, 3.676201135521757*^9}, {
  3.6762030961594973`*^9, 3.676203096527412*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"datafracStash", "=", 
  RowBox[{"datafrac", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "10"}], ",", 
      RowBox[{"1", "/", "10"}], ",", 
      RowBox[{"1", "/", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "20", ",", "30"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"datafracStash2", "=", 
  RowBox[{"datafrac", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "10"}], ",", 
      RowBox[{"1", "/", "10"}], ",", 
      RowBox[{"1", "/", "10"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"100", ",", "1000", ",", "10000"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"datafracStash3", "=", 
  RowBox[{"datafrac", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", "/", 
      RowBox[{"10", "^", "6"}]}], "}"}], ",", 
    RowBox[{"{", "10000", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.67620114784859*^9, 3.676201150125731*^9}, 
   3.676201253303689*^9, {3.6762070990706387`*^9, 3.676207114451601*^9}, {
   3.676207168864912*^9, 3.676207173345389*^9}, {3.676207317684039*^9, 
   3.676207322037512*^9}, {3.676207511381115*^9, 3.6762075116460247`*^9}, {
   3.676208053230535*^9, 3.676208063370681*^9}, {3.6762155876969547`*^9, 
   3.676215588057301*^9}, {3.676221641192658*^9, 3.6762216536566133`*^9}, {
   3.676221801495759*^9, 3.676221807342754*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6762011755032663`*^9, 3.676203113611051*^9, 3.676207115429961*^9, 
   3.6762071739239063`*^9, {3.6762073224866657`*^9, 3.676207340378537*^9}, 
   3.67620751215228*^9, 3.676207569575316*^9, 3.676208064128251*^9, 
   3.676215591330473*^9, 3.676217750561783*^9, 3.676218113641816*^9, 
   3.67622165436758*^9, 3.676221808469795*^9, 3.676225455864932*^9, 
   3.6763182513139553`*^9, 3.676378429816519*^9, 3.676381127988991*^9, 
   3.676732231803636*^9, 3.683314824042968*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6762011755032663`*^9, 3.676203113611051*^9, 3.676207115429961*^9, 
   3.6762071739239063`*^9, {3.6762073224866657`*^9, 3.676207340378537*^9}, 
   3.67620751215228*^9, 3.676207569575316*^9, 3.676208064128251*^9, 
   3.676215591330473*^9, 3.676217750561783*^9, 3.676218113641816*^9, 
   3.67622165436758*^9, 3.676221808469795*^9, 3.676225455864932*^9, 
   3.6763182513139553`*^9, 3.676378429816519*^9, 3.676381127988991*^9, 
   3.676732231803636*^9, 3.683314825140789*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"neumat`Private`psi1", "\[Rule]", 
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->(
         "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}], ",", 
     RowBox[{"neumat`Private`psi2", "\[Rule]", 
      TagBox[
       TemplateBox[{RowBox[{
           StyleBox[
            TagBox["InterpolatingFunction", "SummaryHead"], 
            "NonInterpretableSummary"], 
           StyleBox["[", "NonInterpretableSummary"], 
           DynamicModuleBox[{Typeset`open$$ = False}, 
            PanelBox[
             PaneSelectorBox[{False -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}], True -> GridBox[{{
                   PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                   GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                 GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False,
                  GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 BaselinePosition -> {1, 1}]}, 
              Dynamic[Typeset`open$$], ImageSize -> Automatic], 
             BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
           StyleBox["]", "NonInterpretableSummary"]}]},
        "CopyTag",
        DisplayFunction->(#& ),
        InterpretationFunction->(
         "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
       False,
       Editable->False,
       SelectWithContents->True,
       Selectable->False]}]}], "}"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6762011755032663`*^9, 3.676203113611051*^9, 3.676207115429961*^9, 
   3.6762071739239063`*^9, {3.6762073224866657`*^9, 3.676207340378537*^9}, 
   3.67620751215228*^9, 3.676207569575316*^9, 3.676208064128251*^9, 
   3.676215591330473*^9, 3.676217750561783*^9, 3.676218113641816*^9, 
   3.67622165436758*^9, 3.676221808469795*^9, 3.676225455864932*^9, 
   3.6763182513139553`*^9, 3.676378429816519*^9, 3.676381127988991*^9, 
   3.676732231803636*^9, 3.683314825791313*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"datafracStashFullTicks", "[", "i_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"ScientificForm", "[", 
         RowBox[{
          RowBox[{"MeVInverse2km", "[", 
           RowBox[{"x", "/", 
            RowBox[{"omegaMKK3", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "endpoint"}], "}"}]}], "]"}]}], ";"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"datafracStashTicks", "[", "i_", "]"}], ":=", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"datafracStashFullTicks", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"datafracStashFullTicks", "[", "i", "]"}]}], ",", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"Length", "@", 
             RowBox[{"datafracStashFullTicks", "[", "i", "]"}]}], ")"}], "/", 
           "5"}], "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"datafracStashTicks", "[", "i_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"ScientificForm", "[", 
        RowBox[{
         RowBox[{"MeVInverse2km", "[", 
          RowBox[{"x", "/", 
           RowBox[{"omegaMKK3", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "2"}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{"endpoint", "/", "5"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6762037986806097`*^9, 3.676203854383432*^9}, {
  3.676203941298224*^9, 3.6762039787066517`*^9}, {3.6762040102809153`*^9, 
  3.676204086144249*^9}, {3.6762042202893467`*^9, 3.67620426720442*^9}, {
  3.676206606017115*^9, 3.676206607015493*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"datafracStashTicks", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.676204186792534*^9, 3.676204192320836*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     TagBox[
      InterpretationBox["\<\"0.\"\>",
       0.,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"200000", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"1.1\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"6\"\>"]}],
       1.1374240637967417`*^6,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"400000", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"2.3\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"6\"\>"]}],
       2.2748481275934833`*^6,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"600000", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"3.4\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"6\"\>"]}],
       3.4122721913902247`*^6,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"800000", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"4.5\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"6\"\>"]}],
       4.549696255186967*^6,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1000000", ",", 
     TagBox[
      InterpretationBox[
       RowBox[{"\<\"5.7\"\>", "\[Times]", 
        SuperscriptBox["10", "\<\"6\"\>"]}],
       5.687120318983708*^6,
       AutoDelete->True],
      ScientificForm[#, 2]& ]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676204189221405*^9, 3.676204215055009*^9}, 
   3.676204251450192*^9, 3.6762066081927757`*^9, 3.676218117592718*^9, 
   3.67631825425496*^9, 3.676381965608197*^9, 3.676732236506405*^9, 
   3.683314826707947*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotstylecolorList", "=", 
  RowBox[{"{", 
   RowBox[{
   "Brown", ",", "Gray", ",", "Purple", ",", "Orange", ",", "Red", ",", 
    "Blue"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6762170278876743`*^9, 3.676217037328494*^9}, {
  3.676217096207797*^9, 3.676217121324333*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.6, 0.4, 0.2], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.6, 0.4, 0.2]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.6, 0.4, 0.2]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6, 0.4, 0.2],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0.5], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->GrayLevel[0.33333333333333337`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "GrayLevel[0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["GrayLevelColorValueSelector"], {
           0, {Left, Bottom}}, {Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    GrayLevel[0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0.5, 0, 0.5]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0.5, 0, 0.5]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5, 0, 0.5],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0.5, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0.5, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[1, 0, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      RowBox[{
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None], "\[InvisibleSpace]"}],
      "RGBColor[0, 0, 1]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676217037710985*^9, {3.676217106973168*^9, 3.676217121699647*^9}, 
   3.676217187100874*^9, 3.676218121255373*^9, 3.676225629962284*^9, 
   3.676318255318695*^9, 3.6763784408795767`*^9, 3.6763811340267353`*^9, 
   3.676381967263261*^9, 3.676732238043273*^9, 3.683314828164132*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], "}"}],
    ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=10\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=20\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=30\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Take", "[", 
     RowBox[{"plotstylecolorList", ",", "3"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676201548612167*^9, 3.676201626135828*^9}, 
   3.6762016640588207`*^9, {3.676201841175666*^9, 3.6762018968559723`*^9}, {
   3.6762031197284393`*^9, 3.676203164529635*^9}, {3.6762031957105083`*^9, 
   3.6762032191245193`*^9}, {3.676203254132414*^9, 3.67620326278758*^9}, {
   3.676203297739876*^9, 3.6762033077947073`*^9}, {3.676203645337508*^9, 
   3.676203714471939*^9}, {3.6762041033470097`*^9, 3.676204121448616*^9}, {
   3.676204152767642*^9, 3.6762041670836287`*^9}, {3.676206619744543*^9, 
   3.6762066416480494`*^9}, {3.676218345160089*^9, 3.67621837941063*^9}}],

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash2", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash2", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"datafracStash2", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=10\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=20\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=30\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=100\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "8"}], ")"}]}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", "plotstylecolorList"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67620807264704*^9, 3.676208115428475*^9}, {
  3.676208217373341*^9, 3.6762083167713842`*^9}, {3.676215600850492*^9, 
  3.676215662626422*^9}, {3.676217049677009*^9, 3.676217051452841*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], 
         ")"}], "/.", 
        RowBox[{
         RowBox[{"datafracStash2", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{
      "{", "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\
\), \(1\)]\)\>\"", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762081747387114`*^9, 3.676208184256616*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], 
         ")"}], "/.", 
        RowBox[{
         RowBox[{"datafracStash", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{
      "{", "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000000\!\(\*SubscriptBox[\
\(B\), \(1\)]\)\>\"", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Take", "[", 
     RowBox[{"plotstylecolorList", ",", "3"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6762217131178637`*^9, 3.67622175141978*^9}}],

Cell["How about the numerical solution to the whole system?", "Text",
 CellChangeTimes->{{3.676208704472136*^9, 3.676208715857929*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"twokListKK3Num", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"onekListKK", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"onekListKK", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "10"}]}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoaListKK3Num", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oneaListKK", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"widthNList", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
        "onephiListKK", ",", "thetamV"}], "]"}], "*", 
      RowBox[{"{", 
       RowBox[{
       "10", ",", "20", ",", "30", ",", "100", ",", "1000", ",", "10000"}], 
       "}"}]}]}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.676208941074194*^9, 3.6762089933048143`*^9}, {
   3.6762092716789007`*^9, 3.676209279353889*^9}, 3.676215277767503*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"twoaListKK3Num", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"twoaListKK3Num", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "6"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6762149406099873`*^9, 3.676214943906365*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00003573471582101408`", ",", "0.06922690412124541`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.676214938376013*^9, 3.676214944187656*^9}, 
   3.676215282257745*^9, 3.67621816231236*^9, 3.676732271097624*^9, 
   3.6833148633240623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solNumStash", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"solNum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3Num", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3Num", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3Num", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3Num", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV", ",", "endpoint"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"twokListKK3Num", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.67620866680687*^9, {3.676208722668158*^9, 3.676208805412757*^9}, {
   3.676208998626191*^9, 3.676209009899857*^9}, {3.676209051098771*^9, 
   3.676209082506115*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{{3.6763183060461617`*^9, 3.676318312815198*^9}, 
   3.6767322961696377`*^9, 3.683314919935042*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStash", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStash", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStash", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStash", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStash", "[", 
            RowBox[{"[", "5", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStash", "[", 
            RowBox[{"[", "6", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", "plotstylecolorList"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=10\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=20\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=30\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=100\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676208836980427*^9, 3.676208868782379*^9}, {
   3.676209097622224*^9, 3.676209132835024*^9}, {3.6762092887992992`*^9, 
   3.676209291940634*^9}, {3.676215113042933*^9, 3.676215113427115*^9}, {
   3.676215144220549*^9, 3.676215159108037*^9}, {3.676215194101514*^9, 
   3.6762152890910997`*^9}, {3.676216982713332*^9, 3.676217005597911*^9}, 
   3.67621706118629*^9}],

Cell["Check limits", "Text",
 CellChangeTimes->{{3.676221951651084*^9, 3.676221954098151*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"twokListKK3NumLimit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"onekListKK", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"onekListKK", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "100"}], "/", "Pi"}], ",", 
        RowBox[{
         RowBox[{"1", "/", "100"}], "/", "Pi"}], ",", 
        RowBox[{
         RowBox[{"1", "/", "100"}], "/", "Pi"}]}], "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twoaListKK3NumLimit", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"oneaListKK", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"widthNList", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
        "onephiListKK", ",", "thetamV"}], "]"}], "*", 
      RowBox[{"{", 
       RowBox[{"1000", ",", "100", ",", "10000"}], "}"}]}]}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdxU0og2EAB/A3y45aLTVxMJnCkkQOpLbC5EBrbBkyXuWi5aOQNaVRLNki
RWvNDrPlK8UFI7Z20KbZ1DYOZhymlRItNsnzfw6/fsJBrXw4h2GYQgJrntm/
yFBKcj8hZqLkYKJRgDfkzfSaBacXu10dPrzIs4WwtFYXxkaN6RFbHZ/0A/f5
F65Keuncb6U/Rt6qU9NH+DsveLzliH5hV2bwqYWTxc5gn+iBPLyZpv8+SUdx
2dIV3SfQzOH+cIDeG/sx44/XsTVcmXpTcdiUxFBv7cHv7lUzPpEOrOPlyztF
Lnkm1taNo4l9I2Ym+StYYeAe4amk+RhXK4QHJeTbQPwQi3U357iCp3VjPqNn
S8mm3Szd0h5vFZEdrmIZLigSyELkTlM5vfqMy+LpLj7dntmzYT3r2sZNZ+br
NHle1eDB+XkeP1bPRgL4HxGC55U=
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solNumStashLimit", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"solNum", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV", ",", "endpoint"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6762219590353193`*^9, 3.676222022001972*^9}, {
  3.676222137959066*^9, 3.67622221031476*^9}, {3.676222386921132*^9, 
  3.676222389388425*^9}, {3.676222467487075*^9, 3.676222470046277*^9}, {
  3.676222686360334*^9, 3.676222698272958*^9}, {3.67622284106581*^9, 
  3.676222856584765*^9}, {3.6762255157145443`*^9, 3.676225518823802*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676225511074305*^9, 3.676225583142055*^9, 
  3.6762256285838337`*^9, 3.676225783009385*^9, 3.676226077221735*^9, 
  3.676227175085896*^9, 3.6762272815139933`*^9, 3.676227352523584*^9, 
  3.6762275468032*^9, 3.6762292747559643`*^9, 3.6762294604467707`*^9, 
  3.676229643837235*^9, 3.67623000645884*^9, 3.676230568866385*^9, 
  3.676230711258172*^9, 3.676230868159185*^9, 3.676314403541038*^9, 
  3.676314869234733*^9, 3.676318372735573*^9, 3.6763184533388968`*^9, 
  3.676318881386648*^9, 3.6763192386524067`*^9, 3.676378535505142*^9, 
  3.6763786584948606`*^9, 3.676380637207387*^9, 3.676380690327216*^9, 
  3.67638204668911*^9, 3.676383866666973*^9, 3.676732355043806*^9, 
  3.676738172282309*^9, 3.6767383921008263`*^9, 3.6767388896751223`*^9, 
  3.676812974140353*^9, 3.683315092547785*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"twokListKK3NumLimit10Mode", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"solNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", "1"}]}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV", ",", "endpoint"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676228359904552*^9, 3.676228450103034*^9}, {
   3.676228619542417*^9, 3.676228638636301*^9}, {3.676228689141437*^9, 
   3.6762286908596487`*^9}, {3.6762287371530952`*^9, 3.676228753269508*^9}, {
   3.676228945588067*^9, 3.676228981538127*^9}, {3.676229064441628*^9, 
   3.676229084623735*^9}, {3.6762300362003593`*^9, 3.6762300364022303`*^9}, {
   3.676314853101715*^9, 3.676314864262539*^9}, 3.676318319190914*^9, {
   3.676378553489051*^9, 3.676378554191914*^9}, {3.676378614543807*^9, 
   3.676378614743598*^9}, {3.676382708915118*^9, 3.6763827134665728`*^9}, {
   3.676738932197522*^9, 3.676738940980791*^9}, {3.676739161154648*^9, 
   3.67673917426476*^9}, {3.67673928735814*^9, 3.6767393076249638`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"neumat`Private`psi1", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}], ",", 
      RowBox[{"neumat`Private`psi2", "\[Rule]", 
       TagBox[
        TemplateBox[{RowBox[{
            StyleBox[
             TagBox["InterpolatingFunction", "SummaryHead"], 
             "NonInterpretableSummary"], 
            StyleBox["[", "NonInterpretableSummary"], 
            DynamicModuleBox[{Typeset`open$$ = False}, 
             PanelBox[
              PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                    Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    GraphicsBox[{{
                    GrayLevel[0.6], 
                    AbsolutePointSize[5], 
                    PointBox[{1, 1}], 
                    PointBox[{2, 4}], 
                    PointBox[{3, 2}], 
                    PointBox[{4, 3}]}, {{}, {}, {
                    AbsoluteThickness[1], 
                    Opacity[1.], 
                    LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                    "]]}}}, AspectRatio -> 1, Axes -> 
                    False, Background -> GrayLevel[0.93], Frame -> True, 
                    FrameStyle -> Directive[
                    GrayLevel[0.7], 
                    Thickness[Tiny]], FrameTicks -> None, 
                    ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.`*^6"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                  GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}]}, 
               Dynamic[Typeset`open$$], ImageSize -> Automatic], 
              BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
            StyleBox["]", "NonInterpretableSummary"]}]},
         "CopyTag",
         DisplayFunction->(#& ),
         InterpretationFunction->(
          "                                 6\nInterpolatingFunction[{{0., 1. \
10 }}, <>]"& )],
        False,
        Editable->False,
        SelectWithContents->True,
        Selectable->False]}]}], "}"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.676228450673407*^9, 3.6762286200960293`*^9, 3.676228667464409*^9, 
   3.676228706168869*^9, 3.676228946961125*^9, 3.676228983086397*^9, 
   3.6762290860631037`*^9, 3.676229275232534*^9, 3.6762294619215097`*^9, 
   3.676229644998446*^9, {3.6762300075851803`*^9, 3.676230036875325*^9}, 
   3.6762305694702787`*^9, 3.676230711874958*^9, 3.676230869042096*^9, 
   3.676314405133634*^9, 3.6763148698814507`*^9, 3.676318453890747*^9, 
   3.676318881935261*^9, 3.676319239219797*^9, {3.676378536362733*^9, 
   3.6763785592935038`*^9}, 3.676378658921171*^9, 3.676380690731038*^9, 
   3.676382047074204*^9, 3.6763838670797787`*^9, 3.676732355478677*^9, 
   3.6767381728575487`*^9, 3.6767383927148647`*^9, 3.676738890726652*^9, 
   3.676738993213379*^9, 3.676739251167104*^9, 3.676739309808736*^9, 
   3.676739381008314*^9, 3.676813015524273*^9, 3.683315153626647*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"gridlinesCode4", "[", "i_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"plotstylecolorList", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "Dashed"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "0", ",", "endpoint", ",", 
      RowBox[{"Pi", "/", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}], "}"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.676312704978463*^9, 3.676312812400228*^9}, {
  3.676312856481749*^9, 3.6763128753486843`*^9}, {3.676313735380468*^9, 
  3.6763137640572042`*^9}}],

Cell["TEMPTEMPTEP BEGIN", "Text",
 CellChangeTimes->{{3.6763819297459383`*^9, 3.67638193407316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.05"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/(3Pi))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=100\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
        "\"\<{1,0},{0,1},{0,-1} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
        "\"\<{1,0},{0,1},{0,-1} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=100\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
        "\"\<{1,0},{0,1},{0,-1} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "9"}], ")"}]}], ",", "10"}], "}"}]}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gridlinesCode4", "[", "3", "]"}], ",", " ", "None"}], "}"}]}],
     ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Orange", ",", "Dashed"}], "]"}]}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.676737971658925*^9, 3.6767380103904657`*^9}, {
  3.676738052417535*^9, 3.6767380847746763`*^9}, {3.676738125332801*^9, 
  3.676738170635993*^9}, {3.676738847446241*^9, 3.676738861580967*^9}, {
  3.676743381407213*^9, 3.676743398815063*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1: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
/x8M2fQl
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1: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
KC/+P+ruL+s=
            "]],
           FontSize->15]}, 
         {RGBColor[0, 1, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJw9W3k8lF/Ut+/L2HdmM2OYES1a8ZwUJUqUhCSphEKSVkkplUqlqCghWym/
KLRIkqXVkiLKqGhDZEslr/d9zvP6x+d87r3Pueeec773LHcYfiGu68RERES+
iIuI/O////sjThBshYEAZZ5ZOUlfIuK/jm2RDTMh6dBsos/WoPf4KA/HbxBf
/6oOeUngeFwh4XBIx7rdm4Pzi4knkenFQ1I43+MucXLjrNPMFyxc/4BovLZR
IyoC6cSHxM3qx/8uv8P5cY8IkTeF/ldDmSS9+zHR8/EwW7Gbgd+vJga0v1Q4
GbFJ2r+W0B2zSYz9f35PiQBBpcqxn7g/p+dESYJctrMVrideElG3fJ7zb+D3
z9cRLf55K06+wv0n1hPO72yWfxTSSfp4A9FSsrDY6zbScY1E/bWUl693IB3z
ipDLsCl+GoTrdzcRIQ8eXg6j1m97TcCnymfcU0iHviEeaRSb7X+K+wlsJo61
P4l9FIPn4d9CHF7gnbvhDu7P5y1xo+J44XY2zvdoJaaJBmxZcxnHXduI9KcG
t5lncNzpHWHR3Q8JjUjbvyduDDz1v/SHkr+dcKqVPq1si7SBkMge8t0mtRDp
80JiGLpKLokhrdVBzHyTevNHDNKJHUROn98HHUWkVT4QS5sWNlzKQ/r4B+Kc
ZpvkktVIy38kari1vxyjkI77SFwwGap69A5pyU9E+KShSfJN1Hl+IuqTE0LA
COUb/0TwpWq28Ph4Prs7iRk2B1WnU/KNdhL/Leg5FbiUOu8uYtBwhoUxB8cH
uojJMnv2LL2K3wv9TPh9+heZEY7zez4TW3M3JhuaUfr4QrjnMxt/y+P45y9E
sFMAP10ex/2/Es/KvuynGeB4x1ei1DK6uWU+7s/nG9E+mvZw6VMcb/1GbJq+
ukvrHtIe34lFDS3HVCj7bvpOJOvc26JWZIz67CaU3T7Nci1D+mU3wUvdlNY6
l9JvD3G4Wfzy8+Vo/7U9RIlTq8KKtxzUdy8x99Izj9Bg/P6jXmJdj3aY7kqk
iR/E3h8pRMUxpO//IKb0e144xMT1Bn2EYPaBWLH/yO9He/URKZX+j89UIr/z
fcRT8auq6b/J+dHNE/MTlQp4M3C9Vj9xurlEYVUJji/vJxIWnX763ZdLjif2
E12lXp9eLeWT4w39xJL9EWGuwebkuMpP4ldI3jsRN3J+9JKfxMe9V7jJ0rj+
+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
5G9lCMlVs5iVMlT+bQh0/aOfl2F/L225IbwWX/CfoBPxd50hbP8lvi/+NYnn
wq0T8x3vvnwqwPvngCEEJWYa3FZE/omGYFXmXyhuhP6fYQiLnyS6XMF+r2+h
IXRsv3mk3g7975EhLNuQWBd2B+VvMATTA1OUIi8i/w+GIBn/suAG1suF/Yag
foCu9tmGyu+N4F3k8v3PS1D/KkbQd1Pm7AG8P8vpRrBNLcD/1jXUv4URWJ3I
tvPtoPq/RuC893Na/xbkv8QIzkqccHK1QP2vNoLm2weMX+H9KNxsBA19C6+4
n0b+UUZwp2D/e94lxJ/jRpDj9j7z6ADaX6oRqF4zzyk8hPFPvhG06R2pe3wE
5b9vBKkt3q80j2H888wIknL9v5W1o/+1GUG+zaPgW0sQ/74bQYT6gS/5IRyS
/x8jkPuq7dBSR+JDgiQdjiQeVLoZj/GOIh0ClzWJXl9BzrfQoMP25299vs8n
aREDOjzxKpibhP3JOjYdrE8Y/fp2kqTT+HSIP2/vMKZM0qFT6ZC8Zop8pCPG
Z3Po8Ldc3NuGTo7T5tFhaJ++QpQnSQsX0UGuu8HBFuOXAjc6hL4ec9FSx/zR
iw5TNweezFMnz8tlLR1O1h9r+LwPzzOIDv19PBFrQ1K+vi10OB/312FJO9r3
TjoUNQjNLe+S+kmIocNHQdVd5a/kfN8jdFC9OpgYsJXEa4tTdNjcGic1fJrq
39LBZ1ebMoH6r7tMh22L11/MvI72kEuHLL+Nz0cYKP9/dNAz2K83hP1vopQO
vaFjK8rw/qY9pMOFeevi8mPRXmom5DmX2b0Y84GCOjoU9jou4GxB+2mmg6PN
tcNHsX/kIpz43opDSRoXqHoKHUzY8vUCvP/7ftBh9eTg3U9/UfUVOtw6OaI9
VI3yj9MhaPTtGAPjNV9pBkR4jU1XrydpC2UGvFtNj4ydQdVfGDDZ+6dDRBjK
b8gA6TP7RvMCUX4OAxZN6TX/5UHyDzVnwNaNTawrnVR9hgGXXO6lH4ol/ZVm
wwBD51dLHjlT9RoGtPo4q0zPJekCZwaocuUbLs2l6jcMUK82a1GtJ9e7rGLA
Q+uQ3fEFeJ+sY0CT7mYl40xyvC+YARIiP+8aIj6Vb2XA6MrbBfHepP0k7GbA
t6KQeQ8JxJsDDKi5l9ls2U7il0U8A7I2iV07VI31/0QGzAqrNa+IItfXXWCA
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
FmeM8f8Bc4iS6iQaJvT9P10yj0Q=
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], Dashing[{0.05, 0.05}], 
          StyleBox[LineBox[CompressedData["
1:eJwt1nk0lI/bBvCx74x9ZzALxohKK/Xc7aJSStqklUhfpRSpJmWJQtGm1Eil
jShtKkabJKVdWixJokLKWnm9v/vuH+dz7rme67nGOR1WS/+btUKWxWI1ybFY
///zf/+YZIYpmNJ3P8NBij7OzKt32mPy3g4dms0cv345emOELd0vMsVDPyZm
qQjQ8ZeZL/OLI9JG8+nz15gHnwx/m+Tx0L43GW6evWhJKZfyxUxFxJu5lcvI
aSXMjYzKtjFq5Pi7zLBozRXsuTboqPtMzQP1ks98cmgps2pocNmSD9bo5WWM
tOTny//cyb7lzBf18XETRpA9K5iTk9do7m2zov6nzPrFE3Z83UBOr2QSZk8v
DNhETnvGTB1dM4QnIic9Z/xSo0M6HnLo/V4wov05k7hvyNEvGffI7aG3YslR
r5hZv8eXbh1ODn/NJCVu4pl4kEPfMCMOp46a9s0SHVTFjGk1W2Cygbz8LeM6
+tCcb0fJftVM2IeMa2e/W9C+d4x8AutvVjp51nvmttq9gLZCsucHpkGm5NYy
NfKkj8yTE3e37K0yp/01zNXLFmMXtJDNa5krpf7P/jLk9FrG59j7jGg7smEd
U5k+X0lJSE6rYyJPOP+nnGiG1q5nluslJY3fRU6qZx5M6jD6sZGs9ompinXy
Od1oSt/fJyZ9ZDCz8xdZoYEJSQjnllWSoxuY587SghUzyf0NTP3N6K/XAslR
n5mUPY9H3xtK7vnM5PnvrNUtM6Hvu5ExOLzpTc8nckcjc/3dgXfjssihXxj5
ZxNLznuQv39h3HmXN/UuJwc1MfW6bhdLTMlfmhhJg3TKrDfG9Pv5yiQ9sRL9
aCbXfWVW1O2fdzOD7NfMOP74fsM3iPyumcn6sLBgzQaybwuz0KTo2iFb8qsW
xvuY8wM3OfKsb4xlydnMZfLkp9+YpHdmW7JvGtHv9ztjsTJqf6GEXPadmQBn
Yr4cJE/6wRzL8De18iHf/cFsiPtSWgFkppUp+vP+ldCJfLuVGWtkN47XZYg2
b2Om9P67c+0zWrygjWk8rTbCv4Lu6W3Mj+EGyx9k0L2qjfHqzI+R3013w3ZG
71lE/un/6D6nnYm7ueKujjvd09qZcqOc7+KhdH/ezmiMaOLIGdJd+ycj2xh5
xarbAO8zfjJu7dm/nGvQrKSfTPqYfUfm3KX7459MxOvJuebn6K7WwcSoT5ky
bjfd3TuYmYnXzvqup3t8B+PicsvB24/uDzqY6TWKnp2j6a7wi2HFvjc6bUf3
8b+YA4bhI0br0T36FyPj/XHxoR/6eJf+YrScImJv1KNZ/b+YNm8l7S3ldHf7
zYS4ZSsEnaR71G9Grr2ruu8Y3Qt/M04NSQYdO+je85uZ2tT08NAiug/vZJ7O
TbB+QmaFdzLzDrjXZrrRvaCTGeo86rCLCd07OpkdB0ZI0yzo7tzFnJFcFVzu
1sN7aBczpNrBz6kaLc7tYqb+dP58t5bu37uYFe1/FgZcobuwm2kRcdfPzaB7
UDfzNXHE0ZYsup/pZl5U7o9SXU/3L93MvE2f1P2W0Z3Xw0iebxFKA+i+vIeJ
fD5l++ehdD/Rw4TkfN/5Xkj3uh5G2nxd1cSB7pa9jHnJt7Ch3bp49+tlxIZJ
VYs60eKjvczdCS+PdrfR/V0vo3E1xtqiiO7GfUzJ1bLSgDt09+1jogu1+6Ou
0v3AgJflzMiJpfurPmbhvp5tMcl01/3DDAqMGFcbRfdZf5ix9XfjKmfSPeUP
k5D5cPqsRXR/+odJM0s4EzSB7hp/Gb8z1e/nWdLd8y/z7c2qE9FCuif8ZXoD
r2sGaNC97C8ze+XSB7KtOnhX+sco639pa+pBsyb9Yyyuxa83rqL7zn8Mr+tP
W5iU7nf/MXfaSsThD+ku08+EjTJ7cOUk3Zl+5nf1PBOPVLpv7Wcc7vQ7uh2k
++1+xmPTYav5YXTv62dezJKr5AfQ3ZwFdy9HN6xciWZcWbDylLdUdQJ9fgEL
CsY6fLwwGi2NZMGhkIuaTsMon86Cb8Id3y4ZUP4GCz4WO8rsZ1O+igXPMs5G
v1OkfBcL7DN5adwWbcwbysC1vpPvLnxGM8NkIOuB+8gLVWjxHBloNSzdblmC
lq6XAdE6Of8PhZRPk4Gpk97qVJ+n/GUZKGj7lOBziPLPZYAnbVSyT6F8uwwc
mvw1aY+Y8tqysGhyz72NoZR3koUDelHsiysoP0MWRq64/7bKh/JrZEEnvWOq
izvlk2Th5Zx8rfTRlM+RBc7Upz+vOlL+sSxMXBKwysOa8i2yIEyfpcHVobya
HAzyGblbXZny9nJw8LPZzfg+Nubd5SBGtTU//itaGigH/7ld232uHs2Kl4O7
Kum1z16imWw5aD7hVv6vhPIP5EBxV5+5dxHlP8vB08DeDutcyivIg/Gh1yvy
j1CeKw/n+nPeS9MpP14e9Abnz0qOo/xSeegeUedaGE75aHlI29h5O2cj5TPl
4eA0Gb/RSygvlYes++tsLb0pXyMP+jJB+tWzKd8vD62rX6nOG015CwVIvi3K
qnSivJsCzJOeOas3mPILFUBXN2idpQHloxTgatOLDxe0KH9EAU5MCE9zI4sL
FSDiRnxh/CctzL9VgFWPK8fK1aBZPQrgcrlqa2oVmjFSBJ8l40ybj6LFwxVB
HOc5ki+hvI8idFwclR23j/LhijBFb4xPli/l9yvCbdnlnuOWUr5AEf4d4O/e
60n5F4rAPbTPttKA8h2KULdjkPQDl/I6ShD/bNRBRSXKOyvB8FGNe1e90cS8
lxKU9w77mfIFzQpVgra1J8dPv4NmkpXg3ZvBwePS0eJcJVhr8OE1+xzlK5Rg
REWoR+VWyn9Xgis7Grw0FlNeXRlmBCn8Hr6a8kJliNY1Dv3uSvmpyrC38WbR
Sh7lg5Rh0ZTKdQqOlN+lDFmjS3Vb/2hg/owymJ7M2PjxG1paqgyfb43RON6K
Zn1Rho7tq0RyxWhGUQUaSiVXZa9QnqcC1RrL3k3Op/wEFSjf3vPEZQfll6tA
vlbtupAtlN+hAraDeFPmhlH+hAqwRyRPDnWnfIkKdH08G/9kIuXrVGDawfvh
DsMoz1KFTyOslm7WprylKqxucnnyU4PyY1Rhzb7Dy3m96pj3G/i8VdwZ5Xdo
ZosqhE7sLyp/hRYfVYXoUvHilGK09KYqfLc573LtFOXfqULFIfGOVRmU71WF
jGjT1qxYyhurgbh55yTrtZQfoQb5S9v3/V1OeV81iIzZ1R05g/Ib1cD0VPKN
ZlfKH1AD81kWL584UP6KGlx9EtasaUL5V2rQ3NjlIFWm/K+B+6qtY51/q2Fe
Vx3GLj1lMboRLR2sDo0rDb8GvUSzZqnDo7tZ/pFFaGatOigLl76TXqZ8ijpc
uza+8flxyl9Uhym9lzZ2x1P+qTrc2vEvdXo05X+og6qB4au/QZTX0IDw90sf
Ns6mvIMGcMPFlrtmUt5TA4LOv5djD6N8sAbwdxoeCrCmfIIGPM88r69vRfmz
GhA/PfrTBBnKl2nADG/lN+J2Vcw3DeRfL96U1YYWK2nCOvbV8V8eo6V8TWiJ
vyNnegfNmqQJE+KWnukqpvwKTdj6scDL/TDld2rCf82mfgpplM/ShFkaw5Pb
kyh/VxOG9zaMu76S8vWaMJb7e0Q3WSyjBRV13wITF1GeowWRH8LnhrlQntGC
2QmNiZJRlF+sBZOmbRB+FFJ+qxYc3l+747QC5TO0IGqI8/5sTcrf1oIG7qkQ
014VzL/XAl/xgoxlb9DiPi2Q2/l40816tL8GG3QL1rnFPkSzzNkQGtC0QnIO
LXFgg7+TKDf9Kj3PlQ0u9tfCVh9E13qwQeb+otsjt9HzF7Dhht94Q6MENCeY
DRsNdw4zDUBLI9mgM+i/nN+zqT+BDeL7Fd42i6g/nQ2bssO3vBlO/WfZIKuS
tjlRSP03BvofeendH0T9D9lQkX9hzksV6q9iwxeD2b5nZam/iQ23X12NsyJL
u9gAP09IBn1Qxn4lbdDbNKeKVY1mGWpD6tmWuv9eoiV8bRilLtnzIx/NDNOG
+ol9lz3JtRO1oWHMmD2/T6PFc7Thy+7Cst44NGeFNjgXGFb4xqOl67VBdV7N
5d4I6t+pDccXpGXbLab+NG2Qrjp9S4UsydKGfzeuTbk/jfova0PC37D9Y4ZT
/x1tiOne17/Ahfqfa8PgVw2PdltTf702TN/LT23Xov52bfgVMEZ+hRr1y+jA
jz/GpeHdStivrQO68qufdjehJRwdmCmTcmRGHZpx0oG0w8/c9z1F147VgeGF
xeu076DFM3Tgz+4/vXOuoTmLdUCvMEr1dTZaukYHJFuOH1A4gvbfqgNzLnqW
F+6h/iQdiGtfNsF6O/Vn6MCShp9XL4VRf44OsBp3ehYtp/5bOhDCSbg4YQH1
P9aBnFOPpBqe1P9eB+bPP1N12JX6W3TA+1l3wD8X6u/TgVFvvn6x4VK/mi6c
rOD83qhP/Sa6MGTMpZFq2tRvrwubfj6v1v+jiP0jdWH1H8YspBUtdtcF9zFm
Bbbf0Jx5unCCHbLT4CVaGqgLvzNHrox4hPbfpAsz1zcesCxFs+J14cWFKaFL
L6AlB3UhbHb1qdjTaCZbF6438JsfZlL/VV3wWASjRsZQ/wNd0Kj9Ehe0g/pf
60KW1KZSJ4r6P+vC19QNK176Uf9vXRjE6Ur95k/9Cnowv8v0E8uH+vX04NQO
g9VLR1I/Vw8Un0zRezyG+ofogd+Qb10XBlH/eD2YeXqsL0uf+r314E3P9zGl
ZtS/VA+69l/ZMk6F+tfpgfRpV9+VdgXsj9YDF9GB1KxetGSvHsgmJab31KOZ
TD14vnboxY1P0bV5evDwxEjB0Cq0WKoHnd3fU9i30ZxKPdisPLKcm4uW1uhB
XlNc/sIraP9WPUiOvW1w5yD19w88v/We6+491K+pD9POV2003Ef9FvrQ1bnh
OYRRv0gf8uThblgI9bvpw8GWneVha6h/mj5Myc01L5hB/Qv1YaXBtJwj06h/
tT40e1V/2zeV+qP0QXUwsIQi6k/UB4vp9tplZOaIPkSplp09xaf+c/qQ9CAB
TqlRf6E+7EiYF1emQf2P9KHs6NuIBlnqf6sPpn3ZE9Rb5LH/qz6kBOtdivyO
ZvXoQ3L7qphdNWiJsgHkaLsUjipHM0YGA/9fnFj5+DG6VmAAz3bPX1h2Cy0e
bgAp63er/j2P5kw2gIcrP9veJUt9DOCpzpGAinTqX2kAJ/Lj2CZ7qD/cAKpm
hc4NT6D+GAMYM03QmRtB/fsN4Oh1/XLfNdR/0gD2RtQ+UV9F/QUGkFCQsHHD
POq/ZwC1/g9Hxs2g/hcGcCA3NfT6ZOr/ZACB2wOrdUdRf4cBbH8n8dnqRP2y
hhDl4R6Zy6d+HUO4NTS5bLUp9VsZgvnCSyF22tTvbAh9Le5F1orUD4bQeH66
3py/ctjvZQgJ6xxiYtrR/v4Dnt/1d2wjmhVqCEzCy1OHatCSbYYgn55akvkM
zSQbQpfm6YM2pejaYwPe35oocwctzjWE9R8HVx3LR3OKDMH27aaO6jPUX2EI
0Kuye9FJ6v9gCO+udmee2Uv93weeF2Lj659I/X8Mod/EW2dnLPWrG8HSuZNj
2tdSv6kRXHir/PfoGuoXGoFOzeXG+YHUP9oI+r0uvDw/i/qnGkGx16/JwWT/
+UYwzmiW91t36g8yApVDIZvkh1J/hBEcU4zvPTKM+ncZQc7MiWwVIfUfMoLn
1atumhtQ/xkjyFtuPLTXhPqvG4FWXbNETp36S43Abv2r7yo9stj/xgjSWv0C
ZvWjWV+M4OSh0hlt39CSTiNQY/k0PHqPZhSNQdU+M33TJ3StvjFUzf08pb8C
LeYZw1OFe99nlqA5LsbgJnOCPa0ULZ1gDC19lu1LL1L/bGNIUtLTEJ+m/uXG
0Ji3P7D4HPWHGcMF3yP+U/dS/w5jWFl+Jc5+N/XvM4b4mU/6nu6h/hPG8F/p
QXgfRv2XjCF/t7sCZx31lxhD6Rorv72h1P/MGNYzwb6D51J/nTGIfOTfiXyp
v22gP7dTjutN/SwTmD3U7JLPaOrXMgH+FeEk3hjqtzSBXivpjksu1D/IBASH
i66N41D/GBPoXLNft86G+qebgNBZb8VqI+r3M4Gza4yUaxWoP8QEosT3u91V
qH+LCUSuOz93e58M9u82ge+L3bPUvqHFR03A1mnuY98faM4FE/ir0bXYpAYt
vWkCmttm+x5+jvYvN4FXjc6BBi/QrHcm8FN79UWfu2hJswk4DdL6MO8Gmuk1
AfUjVjZHrlG/iil8aG5cPukM9RubQsb2QhNLCfXbmYLy1Yk7VY9S/whTULWz
mda8h/qnmEKTaL/znVjq9zUFsVbghmQx9QeYwo865b4h66l/oykUx81uFoRQ
f6wpbMoJrfNZQf0HBp5/3nmt0gLqPz2QP6xzcLw39V8xhTj1zNEJU6n/vilY
yYL2mHHU/8oULm+VVhqOpP4GU3g3I0B/qhP1/zIFSdaq1vN21C9nBoqnTshc
taB+XTMIG6o457wB9duYwbNo/RKuNvUPNgMje83XrvLUP84MQlq+zyz4y8L+
WWZwQ2ATtL0bLVliBm01S1gvvqKZtWaQeGy+98LP6FqxGbRumyN7sgYtTjGD
vnG7lmU9RXMkZtB7OPtrYgVaetEMAr7J/Ix8gPYvNgPv/5QXv7lC/U/N4HB+
dYnVVer/aAac+Ovr5XOo/4cZlMRclew9Sv1/zaA879urjmPUr2E+8Pfc2wee
qdRvbg7G6XsmtOygfgdz4Egjs1/HUb+rOdy/OzUjJIL6Pc0hsdxuUmsw9S8w
Bw2DQsgMpf5gc9DK26WYuJj6I80hZk57Tfps6k8wh4OfL+9xnkf96QPPa224
VTGR+s+aQ1tz8d/3btR/wxy8b17bthaov8wcnsT5Mv4O1F9lDg25M8WHBNTf
ZA6sYXmpvnbU32UOon2HPwTqUr+SBTyL4eVka1O/oQX89Xob9o1N/XwLGBa1
pVSps7/4f/3DLMDRRXlbUReaNckCTr3dLbO9DS2ZYwFOb7xN4x6gmRUWMP4l
s0r4GF273gJattnbfilCi3daAJMjrzD3EJqTZgETJ67c7ilBS7MsgD9s8au5
e6j/sgVYdO89sSyY+u9awMIX+zY1h1H/cwvQ4bAP8BZSf70F2G8O/iIeS/3t
FtA5mhXxZRL1y1jCi/b5jzKE1K9tCc7bioav1qN+jiUoy/yYzRhTv5Ml8DYb
qMn++Yf9jCXEhS0/X/UVLZlhCTEr6r+pt6CZxZaw8Ejd1q0V6No1lvC+12LF
hmK0eKsl/DurN2jrLTQnyRKgYdtJgQQtzRh4H1Wt111paP8cSzAwi3N/vYf6
b1tCqrzypq4w6n9sCeyp3CPcIOp/bwlbtkZ6LFlM/S2WMLLYbGHFFOrvswTv
R/yAl2PQKQociHfyurvKmfo0OGBTfuHoOgu0kz4HlOMXm/ToUL85BzZ8/755
sDy6ksuBVZlbr5349Rffx4ED5WMejs9sRIcO5cBPrcfWP96gGVcOrMxiJ2mX
o9kTOJAxeuKu9hvoWg8OlCzfZnLjAjrPmwMi6c0X4Zlo8QIO3B6kvcpmD9pr
GQdOQoPn/mg0J5gDp+8EJ6RuRLet4wAUK8/e7I+WRnLg4esOv9Xz0CnRHFiU
Pc9w9DS0fwIHorTGnx4/FO20jwMGqXyetjOalc6BNY45Nb7W6MpMDgSN7dxe
rEz7z3KA0WVrT1Sh/fkcsDxnJGzv/IP7b3DAQ/4Fi/8RzS7hwK9TIUXFdeja
hwPvM3nRS6tydF4lBwRTRugcKUCLqzjgNz5xx/BCtFctB/rPNYnNjqM5TRw4
/sHlvt1udFsrB064Vf9ctQ8t7eLAuFw9DeswdEo/B3yCLtncX472V7KCdTLa
htwgtJOWFWztevYkcjKaZWgFV9OEH6aMQVdaWMEhi+z8SYCW8K0gM3vvl9Vm
6FBHK2BttuiLMqL9w6xgRc+zrHJD2j/GCnTtmGEuP/tw/0QrUP34aot5Bzpv
mhVE8a2PP/iOFs+xgs4Nt/JZZWivRVYQu+etW10FmrPCCpwUDr32u4tuW20F
1vP4sQ0StHS9FaxJ6AuNPoNOibKCQcY35CoPof13WkHHxRt/aiPQTrut4HHg
5hcPotGsNCu4yfpctnANuvKIFbjrFox/742WZFmBZXxoUMxCdOh5K8hJtPeY
NgHNXLaC1qjgTWcd0eybA99v/77UCy60/44VGI3Qa6w1of2PrKDfb3uyuirt
f24FyrM99Mdp0v5qK3jXMOmRx89e3F9vBVNvTbpV/Bnd9tUKxq+SMV3aiJa2
W8E/90qPnEfolB4rOFIUqLutBO0vYw0Lai6VuxahnVSswd3b+JfWSTRL2xp0
Aq6WamSgK42s4cbiS0VaB9ASjjXYbRkUGrAVHWprDc8T5rx13YRmnKxBt1Mq
MFuDZo+wBq+on7bJ89C1Y63hyov6Ge2z0HmTraE0ZnrsiUlo8Qxr0OJveT3H
Be011xqmFa3wthXR/sXWcL7ca/NbS9q/0hq+JKxTjtKm/WusYVM+265DkfaH
W8PwJ9VLGnt6cP9WaxDleVyRfkc7xVrDo94f+yJq0aykgX3nE6a+e4mu3G8N
ZzTDzjSWoSUZ1nAwasO71hvo0FPW8H6h4/zLeWgmxxpc+G+8bp1Cs69Yw3+T
jzanpaJrb1mDn87mB7P3oPPuDezZknXDajta/Nga1m1W4WWHoL1eWsOe8uPH
U4PQnPfWML9Ak6e+EN32aeB9lqg7LZ6ClrZYg/z5ilwXckqHNQyJ8y6JGUb7
+6whd7D0YaMN7ZezAachY+708Wi/mg0sOlVVlMum/To2MNLdVXsui/ab2MBr
uRs12XK039oGbme9WXetuRv329uAYUNo8KUPaPZgG4j00vwkW4euHWkDLl6/
fr29h84DG7iUtrWx8SZa7G4DV0dvdWy6jfaaaQNJb98Y+xxHc+bZwL7h4aFP
09Ft/jbw6Fz843FkaaAN/PIv6VkZiU4JtQF+56FZw8n+m2zA9XBhun442kls
A4NEHeNcfdCseBtgLg7ZVTsPXZlsAzfjE0w3zkRLDtqAzvN7AV2D0aHHbWDy
5FzhnpG0P9sGZDumP9nrQPsv2oCFkt62U2zaf9UGfm47qilrTPuLbGDEo+cf
05Vo/4OB9xs74a1baxfuf2IDJgl7F2t3ozmvbWDTrWGbn9aj2z7YQJn5CoeT
T9DSzzZgJnX4cuw1OuW7DaSbHRCFFKH9f9vAMb+FPy7kop3+2sC6CyGZmQVo
lgIX+hQuqZ5NR1eqc8Hgh8Nwy2S0RI8LvydF7ePtQ4eacSFkmPbCcxvRDJcL
Q14u8yj6D8124MLGcZ+eupNrh3BBcJkXGzcHnTeaCye59/7O8EKLx3Oh20k1
x82T9ntwYV/VQ+H4obTfmwvnCv5rznSi/fO5UDy7NHWEHe1fyoWzqgszH+nS
/iAuHPtxc1cKm/av48LSa1YP1ivS/kguhDqdK+7t6MT90VyYM/eEjVobunIX
Fy4eTa60bUBL9nKhyXGYUdZLdOhhLhyvF0XrPUUzmVw4ktLSue0Omn2WC7XW
UfKJV9C1eVyINP1mdzcHnXedC41z1tUdyESLpVz4Omzy34gDaK+HXGg7Ovyg
2240p5ILca4508K3o9vecCGgyW2p60a0tIYLvZ7b+q8EoVO+cMEl5MAvvaVo
/1YuxG/XKb4wF+3UxYWDNzZeXOZO+/u5kHTgdZ3PeNqvyIOcitZ9l4fTfk0e
bJ7ctijKlvYb8ODo2YhHWjzab8EDxVG2PZ6GtJ/PA7uziUUiZdov4kHh0elK
6kq034UHrnsN/Hd1/sb9bjyIejla93AT2msiD64s7GvS/YrmTONBgavV0l2v
0G2zeQN/Xtd4VZShpQt5sEsavvDnI3TKch54+paVRBag/Vfz4Ju24rvS82in
9Ty4kP3nVtQFNCtq4P3nB6qlpqIrd/AgOW2P5boktCSRB/Nj+7/t34MOTeVB
sZv8TuUwNHOEB3tmHcnPXotmZ/Gg+X36qKFr0LXnePDqD/e0hjc67xIP6uzC
9wybQ/sLedC4L1J38XTaf4cHoaJgi4dDaP8jHgQs2vDjywja/4wH9vp+Xk6O
tP8tD1IiOt9P16f9dTyIKJ9RudOM9n/lwdm5eYJnGrS/nQfbmzris7t+4f4e
HgwZE/DsQz+6ksWHoZYCy/Xf0RJlPkz8e//WvWp0KJsPaZYXE57UoxkjPrhp
RPnMqECzOXyQs9WeG1+ErhXwQT2seuyE++i8QXzQTc+IPJiDFg/nw2alrxal
J9BeY/nwc7TqIrdsNGcyH3bcffB6YxK6bTofTkyJqZoWh5b68CHYJ0SuPB6d
4seHr+8DxJqhaP+VfLh4MpbbGIx2WsOHe8yiNI0g2h/OhxRG1TloFu3fwgcX
mYQ5fl60P4YPRVcjbzl70P49fChZc3ZirAvt388HJZP105KG0v4MPpx8En8t
yIH2nxx4v3px7jRj2n+BD6Z5foXzjWh/AR9UFv23rkWD9t8a2Ddu9YKjfztw
/z0+KA/znXuzD91WzofCn6kf61rR0hd82Hnde8HEenTKu4H8Aoveax/R/p/4
wNw8Exn6HO3UwoeEg35FeqVoVgcfHIf7K68qQVf2DjzP8aHv+StoiawAWuLO
JFefR4eqCuBmdVTy7yw0oyMAT7P81/sPo9kmArhvw2kMTkHXWglAKXN8XUIs
Os9OAKYi7jSrrWixswBc60xqz61He40UgNX26ufzV9F+EECu/fVWp2W0f4oA
bm+cGh/vS/u9BFCvdG1yqift9xVAryx395EptN9fAG2vt65TcqX9gQK4t7/H
Yr4T7Q8VgKPx6nHOjrR/owDyX0tsRlnS/m0CmBn6TK1Uj/bHCSD8iIJZiS7t
TxbA/kVTzMfJ0v6DAnAJGzr+U89P3H9MAHvzpj2xIOedFoCP5n39qZ/R4lwB
eDcYdZ+qQXtdFcDIwNpGwUc0p0gAETlKvOiH6Lb7Aqg6272t6z5aWiEAcc+/
JQ/voFNeCaD8tVy/8QW0/wcBTP22pv0S2emzAOzWWAf8OY1mfRfA4SUfkkal
oCt/CSDkcKfjuVS05I8Adv68tKEyAR0qbwun0pueyWxAM+q2kJ5ok3YhEs3W
s4Vyz0lx/mtov6ktfA00i9o2n/bb2IJz0pxDiUtov9AWzrUVjHo5k/YPsQX1
trzBlxjaP9oWUiuP+lhOof3jbGGq9djieS60f6otvNvuMXKXgPbPsgXjr7fa
PB1p/3xb0B7ZFmRlTPuX2sLbT79sP2vS/iBbyO+44a2sR/vX2sKGzYEP5/5t
x/0RtuCqfX9WRic6dLstmG15dtanB83ssoXNJsGTOPVo9l5bcFRerh/9EV17
yBYmfzkn8CDnSWzBqT72U0opWnzGFmxCnrxY9gDtlWcLwe9bspXuojnXbSEx
MzEwPwfdVmwLWbsitI1z0dJSW8hRWexxNRud8tQWtr36XLQpDe3/xhaarmgH
i/ejnWpsYeyerzE7d6NZX2zh3ydweboZXfnDFkJyBKPio2h/py3su5oxTbKW
9v8beP8Hsb17l9F+RTsoe6QW4kBma9rBY+vOZse5tF/fDkLzeVMPeNB+czv4
E3rpY4Q77efZwb6L2rqebrRfZAe3wx8H5A6h/S52oLTbMihhEO13tQNn/4c/
5Lm0f4IdBM+MHZRnSvs97UBRocJvhz7tn20Hqipvj81Vo/0L7aCYldy3SY72
L7cDLZXTmsl9bbg/2A6GREH64A60JMwOjsTNrW5vRodutgOF5HHM2zo0s8MO
6iUnsze9Q7MT7WDqKc1u7efo2n120Lya7brrITov3Q7Y5nseyt5Di0/Ywcvt
6yfVXkd7nbMDPdsVTbcuojmX7GBE4NFbpy6g227YwRnRiOK1x9HSEjtYP6Ts
UMxBdEqZHdQU/rMdth/t/2ygn5E53RiDdnprBzOfjjrcuA3NqrODwrzm4Slb
aH+THUz0Wp8dsJr2t9nBoEfy/i8DaX+3HfwSTNp1aAXtZ9lDtHXNWI437Ve2
B/sC740us2i/lj24lR6sg2m039AefhX+bRsxivZb2kPD2gP/NY6m/QJ7iPFl
X98zlPYPsoeLvIczXljR/mH2UDbW59wtHu0fYw9PunO3JprS/kn2oCi/9K+C
Ku2fbg8nyuQe7Nai/T72oHDqyc25srTfzx72XxDGFnxuxf0r7OHVi9Nti36i
JSH2UJL2+pPTc3ToBnu4cWP8o7TraGaLPbRsCa1VvI9mx9hDnL/t1x/H0bW7
7UFVs3hZzG50Xpo9DMqYX/LtAFp81B7i2Y4GzBq018mBvNYlkfsSNOeCPQQq
ZPTIB6LbLttDHf9yd4gbWnrTHso7JxemDEOn3LWHN5KXQv8RaP/ygX3Jv0Ze
0kA7vbCHYmGus5I6mvXOHsLPD5lkr0z76+0hVegnENb8wP3N9vDiTsAN3zp0
6E97SIhxvHbqDZrptYfBO5ujPuSj2bJCWO/ZFMxcRdeqCIF94N8dq2x0nrYQ
0relxl+MQYuNhVBfaLU0IQHtZSWEubWZge3haI6dEHrXHVBcOx/d5iSEw/Z+
feZ+aOkIIbhNDfdYOhmdwghhbce/iPeD0P5ThPD9zgb2Pye0k5cQNMb7P7ls
hGb5CiHPI2ZPlgK6crEQzlfKG0+Vo/0BQnCuyw7UavmO+/8TguiF6N36d2hm
oxCWHEg4OvwVmr1NCMsdBEd3FqFrY4Wwe1PwbKV8dF6SEMYZy7mqZaPFB4Rw
ZjHjrJiK9jomhJr9CS7WsWjO6YHvpzjnoV4Eui1HCBOPD1IMDURLrwjh+oJl
W07NR6fcFsKEL9dlMz3Q/veFkHioRy12DNqpQgg55vs37HJEs14JwfwFc67d
Al35XghtDe5JLH20pEEI8hHb/9bJ0P5vQpA0BcUO6/iG+38JYWbNqUEpLWj2
HyE0dMelV79E18o5wKcrk1tiH6Lz1BzAfJrobUsJWqzrAAZuzwIKstFepg7Q
3f03u/YYmmPjABaGMOT1QXSbvQPUnqz2vx6Jlg52AI24EnlBODpllANkit/6
8UPQ/uMcQP7V1xFDp6OdpjrAMM1t9/hk1iwH+PmAM68C0JXzHED32Zl5IdZo
yRIH2Jlf++IIHx26ygG6trRtfqlP+9c6wMzFo2and7Xg/ggHcFvRumtEP7pW
PPB+B5r6F39F58U7wOfVxyzfV6DFKQ5wvuzex7w3aK9DDnDJgL/0zC00R+IA
C/cdfTHqFLot2wGyszbtL7mIll50gHkj4ebvZHTKNQe4J6t37eQWtH+xA6x+
5mQxIg7tVOoAAp/789OWoVlPHWDRXpuzrT7oytcO4OqaodC7CC356AAlTcOd
ngxHhzY6QHlH4ZSPTmjmhwMET1SfLD+U9nc6gPEk7+H16rT/rwMkB0U18dVo
v4IItMLtrP9Tof0aIlh4xeJwX30z7tcXgeFTDc0tn9EccxHUiQOHr/qIbuOK
4P3o8Y2OhWipgwhcWV7vDxajU4aKYK1qt9T5MtrfVQT/0opzN+5DO00QgZJ+
yNkxh9EsTxGo3MqW6MajK71FUMPRNbgRjJYsEMH5m2FVU9ehQ5eJ4KrD3a2+
i9BMsAh0XWy9iyai2WEiCJs23uzCVHRtpAj2rk3yGTcEnRctgiqHN7cnc9Di
BBFYFOr7r7Gm/ftEMLjOI05Blfani+DCo0Zv9b6vuD9TBGX7t70u6EFLz4qg
NOr0U2kdOiVfBIHOgkn3XqH9b4hA59WagIJKtFPJwPefONYoshDNKhPB9uWG
7U556MpKEYg2i+7lZqMlVQPfx/m3PMs0dGitCKpHeVjyE9BMkwgqcpobWrai
2W0iCNbIGRe/Bl3bNfD7aLV8u3sZOq9fBGObU4tyfdBiJUdoCH1yc7M72kvL
Ec6u8axa7ormGDqCxHjqEdEg2m/hCG8ebV57hUv7+Y6QqLP9Wqke7Xd0hIcf
2I5JyrR/mCMM0lPpbetvwv1jHMFa9Vd5/Tc0a5IjjJpWnVpTj66c5ggOPw+o
/ahGS+Y4gtZzRb2Oe+jQRY7g05XcYliEZlY4wjq5ApnNV9DsEEeYomhr4JqB
rl3vCJ885QIN09F5UY6wtyndIyIZLd7pCAUvsj7JhDcV/x/DKex8
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
          StyleBox[LineBox[CompressedData["
1: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
            "]],
           FontSize->15]}, 
         {RGBColor[0, 1, 0], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
          StyleBox[LineBox[CompressedData["
1:eJwt1Hk41Pv7x/Gx7/sydjOMMZullUp87hZFhaSkJLSnJIrSNooKLYoQJRKR
UynSojStSAtJaZHRYm2xRNb8/L7v+/xzrsf1ds9rnnOu6zADt3iukaTRaK1S
NNr///t//1DHqbg5Dqcyv1mJiM9Rcslh/HhTPnHIRSrbTOl2eRwX369S2fx9
B8O8OcSHi6isnCwjxQhL/Pub1F7pHYKgx2zipaUU9TGHG6KPpu5TxVWJv4JT
LIiTHlAyo9mBziz04UeU/qvU+PMFLOLdTygFju64bk90SDkluLO+JWLYnHh1
JbW+8od1VQZ6aRXlPb95SdAK9PwX1NSJZwvjddHUK+rs0J5k/2dmxGnVVHbV
hIvlKeikGio7eEn94mXoY6+pGdcWaQ0YoA/XUttlT92062YS739D/V28aMvw
HfTuOmpzsPTLmzHo8LdUmU6zS/oqdMg76pZUGPOjLXpjPdU4vMalXQq9+j3l
fr9KakIzg9jvAxWn0DlN6SZ66UeqcuIPfeMTaM9PlLb6yFFBOHp+A/XeNjtj
kiva+TO1ssldyoaHphqp082MXR/V0cZi6kJf0dX2V6b4e4ip8cs/VhadRtOb
qH3SrssL16OTmijp0e2tSsZojS+UYtmlgy9+meDv9YUyNgeHrWVopa/UzZR/
m1V3og9/paJSWy0VFqJlvlF7hqoZ7xjo/d+oCZd5lY+ajIlHv1Gtm/Um+pSh
d3+nntkvG5p+DD3wneKeOzNrzWJ0eDO16u5yefNJ6J5myn7JmyQfGXRIC/Xx
5su0Ha+NiH+2UJdCg3+xitEbW6kPBf5qhjHollbqVsGBhjJv9Oo2ivN1Vpj/
VHRTG/X7+jXXs8pov3bKyDf3s+U3Q+KP7VTfj/qZKuXopR2U9fB1VaN0dF0H
dcERjr0IR3v+oJYvi35+xAf96gfVJp9/ptkGPf8nFWO/JvGHKrryJ7V8stuX
lV0G+N/7FzXtj8tdv2foR78oeS+3cd8L0NRvKne8cwDjGPreb+pLqt2r7g1o
407q34uZV20XEAuXd1J2D//NiLDB97ROamZGeaKxKr7Xd1KBw6vfrunWJ+/0
Lop5eYevTh2xcHEXte0wVR1Ygu9JXdTAKM/TJh3fX3dRwaXQVLQX3zW6qeiY
DD+vQHx376bydCa9mT8H3491U7dlP39SEeD7826qgPvq0XENfFfqoQQt52Lj
+vTIu0sPZXPRMaThEzHtcA9lvLjmd9kjfH/aQ60IyPIR5eG7zB/qmEJ/XkMC
vs/8Q2lNfpdwege+7/9DeYwLn/N8Bb6L/lADy+0dn83B99E/1E5edVKzDb5P
76VyfBIiTujg++5eavuBgEI/CXy/00uVq2uP39FGJ+8DvZS+W/HjrlfEQrs+
6kQ+O8L3Hr6H91GR1nHBVjn4XtxHKSz4vePlEXzv6aMeNM//HLML38f9pVoX
H2P9DMT3kL/UtgydKpn5+H7lL2WkGW+ROw3ff/6lqqYIOnPN8J3fT715/N0+
VAXfN/ZTfYo/w4+P6JL3vH7Kqy9sots3YlpLP3XJQ2/7j2p8txigKL6HktED
fF89QKX0KwfWX8T38wPUjIiFr1yT8b1pgFLNUdhlcxDfTQepoKy0uimb8d1v
kCpc5XMicAW+nxmkGjMPyZXMx/ePg1R87I4Xayfiu/4Qdebbhl5FNr4vHaJ0
Zp/sz9LG9+Qh6vjg7PgFIzrkvW6Ieu35pdy4k1ioNUxZ3Spd9LMB3z2HqeM1
mls+lON7wjBlOvvSmp2l+P5qmDpfEBWRmIfvKiPUHbVbE/4k4vv8EervJcmN
EofxPW6E+uIzMz1xG75XjlBfp5z1Ewbgu9w/SlE42JW1GN+d/1EtIxGfOwDf
o/9R4ta3Yn9bfH/0j/qttaTblYXvEqNUZ0LHz1R1fKdGqaDChooIGr7vHaUW
uT42/9OjTd7vjVIbNySEJYqJhUOj1JWIzbp5NfhuTIP/2vWs0h4TUw40aFlW
farmGv79choo7ZqQ8y6bWBRJgxcZMvbTk/E+jQZN09zvzYrG+9s0gJ09r3+H
4309DUo3qVo0rsf7vzTw3naj7YM33tMlQBAf8bTRFe8nS0DH4ljlAw54v1gC
HtpVS+wT4P02CVi0d+qONFO8T5IAjSUB+7kaeF8kASUNgUIDSbx/LQEVVSd7
9Hq1yH2XBAwJPv+ubiamaUjClwfdMin1xJStJCTFXO9bWkUsdJeEh/+KTbff
w/tgSaCvCrJrvIr3xyTBM1jGefl5vL8sCULPZdYqp/D+uST8/TF7i/gQ3ndI
QkCdMMg8Eu+VpGDfK5v5RzfjPU8KIHmvyxF/vHeRghzm0q4bnni/Xgq8YHhS
szPeH5YC3glrXv0UvL8oBaKbbEVdAd4/lYKqiUWecky8/y4FixpGZMu08F5G
Gl4sXHpjtizes6ThY9Xblw1DmuR+pjT8jPUZnvaLWBQoDcqtvRIzm4hp+6Xh
m7HkoaXviKksaShY7qHmVYn3ImnQcbJoVbiH943S8CPpw/x1RXg/Kg29qRNS
FXLw3kQGzonGbzxxGu+ny4CtsoFo+Dje+8pA8XFBf0AU3u+WgZzmZzUvw/E+
XQbaxC1ctc14f0cGpDK4vQF+eP9eBmZMclxW7IX3AzLw0b504WlXvNeThRvM
YydUHPDeThZcrMy+jp+A90tkIdLyZNJpDt6Hy0LNl6u8tQZ4f0oW1t+7OGGa
Jt4Xy0JSyNFqdTm8r5UFb/7m2g0DGuS+RxaOWmi9LusipjTlwPXGredSzcTC
cXJgxVv/Ues9schDDsRhxs3XavA+RA7eNMfmRTzB++NjfnRIzvc23l+RA4eK
fmfF63j/Qg4EG/ofhObg/U850Mw1um6XhvfK8jD8MUD54Um858uDjAs3eyAG
713lofGZpF7aLrzfKA/VVy78ehuG97Hy0H7FZkRtHd7nyUODc8XX8BV4Xy4P
qeVP3rssxvsWeVhqrPeqZC7eyyrApFVXSkROeG+hALc30LVM7PB+lgL0DSgu
6eDh/WoFuLk8/1GQGd4fUADVBHmfpfp4f14BPoVuW5+ngvcPFGC65CbtLTJ4
36QA/3ihP/8NqZN7miI01bDnNHcSC00VwfZMc8ujVmKRoyLMPOZ2kN5ITPNT
hPEP3tinv8H7PYpAidanrnuO92cUYWD7aq/ch3hfqghv18+JK72F9x8VoXF6
8sjSQrwfVIT5FwxCL+fivb4SpCoXTXI4i/f2SpCocs8/PQnvlyoBzeRggyAe
7yOUoDFgjqfWfrxPVoKs/9LUJuzE+xtKsHCR5yRmCN7Xjf39Le4Ou3V4/0cJ
rpcUqlv44b2WMtg8m+cVvRjvxyuDusd01vn5eO+pDCztGW4RM/F+qzKYl8iV
u03D+wRlOFMRNuQ+Hu+vKsONit0p1ly8f6UMur1TxOFMvP+lDBLXvmhReniv
ogKdnUK2mxreC1RA7tJqiR45vJ+vAszYUnrbsBq5D1KB18++sC53EAvjVCBt
+As/tIFYlK8Cs+da/GiqJKZVqsDIvzj+0dt436oC55dtm7e/AO/lVIG+rmN4
ewres1XhW6cLb8JhvHdWhVyHEbpCJN6vUQWrCcZdV9fgfbQqZHxMqTjhjffZ
qnB57wn+v7l4/0gV6ku18k9PxPsvqnB91vEPqZZ4L6EGx88HZ/vp4T1DDZI8
1/RNk8Z7Sg10lfrG2fWrkvuVanAvq3OlVSuxcK8aWGWpdZ1+Qyw6qwY+4zbk
+lQS0+6pAb+9TWfrLbz/pAY9eROERTl4P6QGtz/Fz/udRuyvog6JI46D42Px
3lgdtshVcw5EEGcK1OFsw6UVHZvw8xzUITnN02jfMmLxPHX4Nki/+88FP3+5
Oqw+uMJllhMxI0gdxm8o0fMX4PeNVIfHI5L9esa4H6cOUZ8znvZq4H6aOvhN
Xb268Z8K2c9Xh9eO0XYPOomp2+pwTa5yLu07sbhCHZxLujKlXhML69WhVv15
YMtjYkarOkzrWja0/hax6K86zHBZvPBlDrG/nAYkPKALI08T0+gaoKpSPDz5
CO6zNeDVkx5wiMT9yRrwyCD76aZg3J+tAc0dfNF2f9xfrAEPEpdYznXH/TUa
oDbZsqx4Ju5vG7vvjrpmMwn3ozVgx3JNlWYW7idpwPOBe6Xz9HE/WwOCzkao
b1HE/SIN2DW1UVdhSJnsP9SAF28ji2x/Ewtfa0CJosXEaWJixhcNuODC/ZtV
Qyzq0oBgfwmptU+I/SU04WRFT3hKCTFNQxPWv/sjcT6POJOhCa/Kdgl70okp
W00wV8g7Hn0U9500Yavb7cND+3DfXRMuP21UbArF/ZWakNwSEzuyGveDNUF5
TlXgBW/c36sJlkW9X+xdcf+YJnhLnW4ecMD9s5qgu1Hw6pQN7l/WBPnQg74y
Zrh/VxNyt0/R3aKD+8814V3t2+rncrj/SRP2b2m4smBQiex3aMKUm9+3uv0i
9h/ShHCb+7GuYmKakhZU7pr4SLeWONNAC9IKd16OKyemeFog2pxsqHObWDxF
C2bkfXkV+B+x0EULcngXLtGziBk+WhAm7Z888STur9eCC9znO60P4v4OLeBz
qV9tkbh/WAtqJZUSrwfhfooWJIteqm3zx/2LWpCyYnvsoBful2hB3/KBO6mz
cf+pFuyfIPuJMw3332rBmSzG3dk2uP9dC6x7p9J+m+J+rxasvrB40dj/dMi+
jDa4xplLPVfAfW1tWHy8/eLdQUWyz9KGuUaRxVe7iMUTtOFrWOOlhG/Ewpna
sAl6D0q9JWYs0oa4VG3T9S+IRYHasGtVzOQz94n9Q7Vh/bPa1EfXiGn7tUHi
3kmZlfnEmSe0wVgQ0tiXhvtZ2hDe6Hvh71HcL9QGhtusyvgY3BdpQ9C3+qhL
4bhfrQ2HFJv2pmzE/UZt2NArJ2wLwP3f2sD82Jsq8sT9UW04bSNinJ6D+6o6
EL2j3yXCEfdNdOBpBeceZYP7VjowR7lldycL96frwLPqLfftDHF/gQ64rlw1
aK2M+7460JTYLXlCEvc36cDrJ04rbPsVyP5uHShjV3w70kacGa8Dak8fDwSL
ial0HfC1KAjZUEcsvqQDc385pnuXEwvv6EDxzmd7osqIGc904Gi9fVnHdWLR
ex0od3H7cTiH2L9NB1oczus8PIP7AzrgMzj/oigB9+V1QUpqdp5eNO7r6cK1
hpJ51rtw31IXniVpf+oMxn07Xfhel+oyHIj7c3TB6ekf3XIf3F+iC9cHJJ2j
FuD+Wl34uHTRbcsZuB8+di8sNU6wx/0YXRj61pO9TYD7p3QhanrB3AQm7l/Q
hS3fG3wS6LhfrAucr0eVnynh/mNdSH7I/iqQwP1aXVgXlvy1uk+e7H/VheYw
sc7eDmJaz9jnn75zvk9MnClJh7AMmOvzlpjSpAPvYSA9topYzKRDbJF1epuI
WDiODv96LJnjS4gZQAf9BaP1TQXEIg86HJgS/U4mC/f96WC/Z8O5gGTcD6FD
gWqH6d4juL+PDkaPeyi3KNw/Toc05VCdjnDcz6DDr2kT7BZtxv0rdPisvvZH
eQDul9Eh23GVwitv3H9BB/h38L23G+430MH7tM/nyBm4/5MOATMXxCpOwf1h
Otwr6pKMscF9ZT1g+d+7vsUc9w31wMtgpnSqAe7z9UBy59K7deq4P00PktWO
9lyWxn1XPTDZZf80eFiO7C/Tg/U7Ts5x6SambdSDv+7+Nx2aiTN36oF8Yvv8
mM/EVKwe/EpcvrepllicqgduAVYJjApiYZ4eBFT8TqgRETNu6cGdPFn97BvE
onI9mFuq8W7ZJdx/pweX5+f2u2Tjfose7HWP234qBff79ECt0rK+/Qjuy+rD
AH91cnMM7uvoQwSHayLaifsW+jA59UDzsy24P0kflMrV7M6vx/1Z+kA97JMS
+OK+lz50mWbb9Xri/mp9MF41xSlyHu6H6UPvnUmTxY64f0AfvvpoX105GfdP
6oNnavbJYGvcP68PM1smjTYxcf+6PuiEvtSSMMD9B/qQknIy4YAG7tfog6oz
o32iDO436UPlI1bpqxFZst+pD77qGpvv/yGmaAbQsy9f7n0rsVjNACbP9+Y+
aiIWmhrACDuunlNPzLAxgAnLtmlUPScWORpAIKus5c0TYn83A/A4Ih1SUUpM
8zMABZl5xTLXcH+zAcw7V58mcQn39xjAo+LrqrnncP+IAcSU/b4ddQr3zxhA
9e+h3XOP4f5/BpBVe3d1+QHcLzUAiczzjpMicb/KAJa0x+dcCsX9jwaw9/Of
rbbrcb/dAKpeyATSV+L+oAH0u9bcsvLGfQVDYE05MOXrfNzXN4Q5tgOxjFm4
zzWEr9c6o+qn4b69IRheXOj0eRzuzzWEK0tu27hwcX+pITjrGIivMXB/nSHE
3fVRNabjfoQh0FfljR5Rxf2DhjBl00J4IIP7yYZQlF+z8vSwDNnPNQSbNaZd
bT3EohuG8MAv96NyB7H/E0OYwbg84vqFmFZnCNMOuqcGvCfO/GYIynLnq05X
E1N/DIHRMHKGW0EsljKC302N/L9lxEItIwjS03LeWIL75kZw6X0EzeoK7o83
goJp37cUXsD9GUawT9zybM8Z3Pc0gt6Q2qluSbgfYAT9+Xt2JcXh/lYjYKuq
uNTsx32hEXTya+iHI3E/wQgS89cEXgrB/UwjkD3yfsBvA+5fNQKXBull9f64
f98Imk22fu1fgvuvjGBQ9J85wwP3PxtByNYL2k5zcP/X2Ocnr6PHTMf9ESO4
UuMpoWyH+yrGYGG0qLvMCveNjeGkUYSGJwv3Bcag+Fttp4EJ7jsYg/v9MtcV
2rg/3xiMdwU7+yvh/nJjWGPtFzNLBveDjMF1AZXGGJIm+5HGsGxyB1zpJhbG
jb1PuBEe/YOYkWYM8Qp+P9W+EIvyjWH54UUpkz8Q+982hta1ytFva4lplcYg
XT6VGl9JnFlvDHKuPw/3PCCmWo3hYvkeq6mluP/XGBylnUuPFuK+nAkEu+S+
+ZSP+3QTEBcIFK+dx322CYgEzY0Wqbg/2QQuKcWebj+B+84mwP4w0cMpDvcX
m4B/VZfryD7cX2MCnqyMhTqRuL/NBDJuKta0b8X9aBNI9HgWqrke95NMIK7D
2XhJIO5nm8Cm71m8Oz64X2QCubOPOAZ64P4jE3gfvWwkzxX3X5vAoa8e64oB
97+YQJhHa3yLPe53mcDWkeKfShNwX8IUYg608cVc3NcwhXu2pcvSmbjPMAWJ
uwcC9hnivq0p3DRxtZmhifuUKdxa9KF/uyLuu5uCiSXdQlYa91eaQnT4sdpP
g1JkP9gU9h93e7ylh1i41xRWZ0Rb5vwgZhwzhb9tuzoLvxKLzppC/6fNM/Z/
Iva/bAqjNvIhgXXEtHumUM1WmHn3OXHm87H3tuI9eU+IqU+m0J30rnRWGe53
mILZwRepgzdwf8gUej8WpzVeIU6QYYDT0m3jPS/ingoDovZo6K49R2yrw4Dh
7/RZlqm4b8yA7gtTWAkJxNUsBqQM+n34exi/j4ABM1YE2UdFEYdMZEDa2bvF
EpH4/RwY0MrZsikvlFh9FgO2xfFOdW3E7zuPAWpV3pPyVhEXLmJAUebmZVt9
8fsvZ8CR+7Jte7yIPVYxQDa57vH+Bfh7Bo3tO6Q8WOBM3BnKgAc3JjsJHPH3
jWRAxYmo/KN22L+fAY6rrhdOscX+OAYsL4nvk+Rg/0kGqBQ5sx4zsT+NAQLl
/dETDbA/iwHWoys3yWlifz4DPhyZrmqqjP3XGOBZP4npJI39txkgUb/p1vRh
SdL/gAF7ro4WpPQRiysYEFLads/3F3FhNQOC6rW5F5uJhfUMKD0fZmjZROwh
Huvh5W8/WU/MaGWAj01a1cwa4s7fDKhPe/62vIpY9JcBPUsYi5ofEieMMiB7
R/OA+l1ifzkmnI1m924vIbZVY0Lz0xOtfpeJaXQmqD58n6Z4kbjahAmdnbaR
NlnEmWwmTKoIiZNIJQ6xZoJwir8B7yQxNZkJS0oGkv7EY78jE+KTDk+v3Y/9
s5kwbVnu0/V7sH8BE1zf1ojKw7F/MRMaxv878nYz9q9gQtedOh3Reuxfw4T/
zvyLuByA/ZuYUPliv56yD/ZvY0LZm7AYrhf272ZC4bxN4kvzsT+aCcUF+SWh
s7D/CBM6jj88mOmE/UlMYCkntT+1w/50JigtX3ha1hb7s5lw1HYmmPGxv4AJ
FQFfu2XNsb+ICc4rvf8+NMT+Uias+lSje0UX+x8yYeFLibgQVex/xgS/EmmT
LDnsf80EwZ7Nf2ZJYv8HJmhNyXkmOyhB+r8wIY2huTWth7izjQlVp2ccbP9J
LOpiwsY3/PSq78QJA0xQcVRvyGsk9pcwg0Jb6R3Z74ltFcwgRdb2V1kNMU3D
DG59WLK9vIq4Ws8M1gxIMMOfEGcyzIA+MUjr8z3iEI4ZLFS0X9d9k5iyNYN/
gcqx664Rq9ubwZm0nvOsS8RiJzMYfi404VwgLpwztk+XWbznLLHQ3Qx6rzup
H00m9vA2A/v9GiPrE7B/pRlcVJQdXxqL/WvNYK9zupbGAewPNgPHyFW5N3dj
f7gZnPYRnjUPx/69ZpCYvj//0hbsP2gGCmxzdb0N2H/MDPY8f/+wJBD7T5nB
xrdzn3r5Yv9ZM2iJWpl3fDH255jBzdphtzB37L9sBpt+9NkouWD/DTMoWnO2
2XwG9t81gxfj/ixb7ID9j83gQhGl83wS9j83g907S0bfW2P/GzNQbxucuJSL
/Z/MQDZnMj3FDPu/moFPS8O6EkPs7zCDnFrTK9t1sb9n7O/XTzEJVsP+ITN4
KXbuL5XHfilzkLtZaJInhf1K5iBF/0hbPEwj/Zrm0J2tn9XRS5xpYA4ftsLb
tk7iELOx+/Eubh5txBTPHHrelzvM+kqsPt4cDikdiJ/8mVg8xRysN/ZdXvOW
uBDM4ffc7L8Pq4mFLuYQYTbuVHwVscdCcyj2N3mU9oiY4WMOVoyUkFVlxJ3+
5rAyV/9Fyy1i0XpzKD8a97CnkDghZOzvT0R/N/2P2H+HOURmXkyZn0tsKzSH
dj/RyW0ZxLTD5vD2+vVd3aex/7g5aGrJ37mbiP0p5sARPr1ocgT7z5nD3olM
57pD2H/RHBQn3M90iML+q+Yg+Wf3wu6d2F9iDkc8Hic82o79ZebQ/Kz2Wk0w
9j81h/FesWo/12H/S3PQ/a1z5/Yq7H9rDrZTD7hH+WJ/gzkcj1wQrrQE+7+b
Q2N6hULJQuz/OdZrsDLAwxX7e82h0Dtx19xZ2D9iDqplqlK3nbBfhgU+5RXr
ZtpjvzIL7qcc8ssYj/3aLLh8TD7ssRX2G7HgE7ftvi8b+1ks6H6Te0qOif0C
FuRdvKTwyRD7J7BAvu2jy1lt7J/GgrCHAYN71bB/JgvYI9q7pRWxfx4LAm5v
/y4lhf2LWLBmjkUZbXj0/v/6l7GgYOWbmzGdxKLAMd9a2WPwlThhIwsubtXU
0XxP7B/KgidSjhPsXxDbRrLgX1ZOapCImLafBdSuLbXjSoirY1kQtGDfL+4l
4swTLKhasc+y8yxxyGkWxCXqtwckElNZY/3/3XfzP0Ssns+ClE2uC8/uIhYX
smBA6+uRvBDiwlss8Er1Nm5cTSwUseA9nJTb4EPsUcGCqF1uk1XciBnVLLB8
v/tr9gzsf8eCs5G6wa522N/IAoX+TtM0Pva3sCDx13bBfwzs/80C4359Twcd
7P/LgtmKMlwfBewfZcEGnqTb73//SL+sBZR0D36e1kOcqWoBKzTOfvVsIQ7R
tQCFvVt5axqIKRMLOJKvx5tXQ6zOtoDonJpTx54Qi60sYLzabBfJu8SFkyxA
usa3f/NVYuH0sc83H5itdoHYY7YFtHnWvStNI2YssAC5DrP+gqPEnV4WIEwe
jarbTyzytYD727xt4nYSJ6y2gGfO5pmqm4j9N1nAm3eH5RoDiG23WcAG9RM+
a5cS03ZbQMGhtv5zrth/wAL4r3+P/UrYH28BNmVL++fbYX+iBeR/XGm1gYv9
6RZwOSykI4OB/dkWoOrL5DvqYv8lCxj3+PnNrfLYf90CiqV0/wEN++9YQOmS
Y98dekdI/0MLWLLsSlZZCzHjmQXM/nFfTVpM3FljAbP+8ZPd3xCL3luA3f6q
LQvLiROaLOBRRqfnx/vE/m0WsOOQouK+ImLbLgs4XMB/y7lITBuwgAWsF133
zxFX09jw4edambqTxJnybDgWtHsbdYg4RJ0NQZKBBlf2EVN6bPjtfi5veSix
OoMNu2YqayesIxZbsqH1yY052SuJC23YELDzlLuhJ7HQjg2d1lkNqnOx34kN
fmaZ4847Yf8cNkyfvf69/njsd2NDf51lyjUO9i9hQ1agy6krptjvxwa22dKd
yzSxfy0bAkdL7gcrYH8wG2KN9p2rHh0m/eFsSPdlPm/oJq7ew4bB5NPjHduJ
M2PYkK1eG68hJg45yoaEx5sWZ9YSU6fY4PpO+bJ+FbH6WTZ8jg/QjxQRiy+w
YZO/0/v0YuLC/9jw6XHR4n8FxMJiNsxIkvHVyiL2uMsG2TO2WhWniBmP2XBh
QvqpH0eIO6vYYHji66FvUcSiWja4u1veM4wgTvjIhp+hWg9bNhP7f2XDCvsX
rV2BxLYdY/exW1SOLsX+nrHf33hjS68b9g+yQYVbt9FhFvZLWoK+j6O71lTs
V7SEl16y+01tsV/TEkw0T0k9ssB+A0uwzvlyIc8Q+5mW4Bb5MmWzBvZzLcFW
39hfKIf94ywhxOfOtrkjQ6R/iiUsKhlkt3YTM8ASQr+9u7CpjbhzriV8nPlL
sfszscjDEkRH+k1T3hAnLLUEnrVr9r4qYn9/S1gdnDFyUURsu94SfE3qXu4t
IaaFWIJzttzNq5eJqyMsQUJnmsWW88SZ+yyhfW+E9PlU4pBDlqDhLNnSc5yY
Oj72+fkbY92jidVTLOHDTjlD2i5icYYlVBsnxcwOJS7MtYQlJ6KnLFxLLLxi
CWc58geSVmB/iSXkvn6w+pwX9pdZQuWeI0l75mL/E0vYG/nHxYfC/heWoCg9
fRXNDvvrLKEzLlrrEw/7GyzB59jNztnm2P/dErJYX7w26GP/T0u49t7+aagK
9v+xhHvpN3gLZbF/2BIeVJgbNA4Nkn5pDrwfdyxkdicxpcyB8zk+uVvbiNW1
OaA0mXZt3WdisSEHyuLFMYtqiQvNOZB8WvnCuefEQj4HHsLQG6UHxB4TOODN
yNyRXkLMmMaByjq/Q3VXiTtncGD84ukf3mQTi1w5UDDqs5meRpzgyQGFvxmt
aonE/ss4ULLzsuGzg8S2gRxwyt1y4f4eYtpGDtTUO/e7hRNXb+WA7+sncj0b
iDN3coAZNFwWF4D9URxo82uvSvLB/lgO7D+67ceiBdh/ggPqGw6vCJmN/akc
iNrn6NbqgP2ZHDBXXbD6ty3253EgTJb2fR0X+ws5kPlT/MKdgf23OHDd+K7v
I23sv88Bz/Q8l40q2F/Ogd/PbFe/kcL+VxyozzKd+7x/gPS/48AMv2dzwrqI
bRs5sLBYbvzeFmJaCwd8pIp0pBuIq39xYGphU1tUHXFmHwdWXVv03KuKOOQf
BxJXSLoHPiCmZLkw+JZ+LuU2sboqF35p3zu34iqxWIcLUx0X6n7OIS405sKm
5W+4t84SCy3G3tVG6tMTiT2suGDzx+faljhixiQuNBmbvW6PIu504IIkf+UM
tR3EollcCM07tVBtC3HCfC5ojmsJm7wW+724cGFAo6HYF/t9uWDh2299axH2
r+bCc1sV62xX7A8a+/uHtIWHAPvDuPDupbXEenvs38UFH2vRL3sb7D/Ahadn
tor3sbE/nguxP+KsTI2x/yQXPlyKVx/Rwv40LqiFmBw6pYT958d+P+sB+yYJ
7L/EheU0W68//f2k/zoX/jMJPfGgk7jzNhfkzu3uKGomFj3ggoz/z3aTz8QJ
lWN7+xzmDNUR+9dwoS/wiXNGFbHtey4ocWMMdz0ipjVxYXJUJGd6KXF1KxeO
NMx7fLGQOLOTC2bBOSrS+cQh/VyojbY6F51JTNF4oHZkU0L9KWJ1eR7MjF52
rOgYsViNByE8Z52aGOJCOg9knXJc7HYRC015oCSwTYnaRuxhyYNPwfr5rCDs
t+HBd3qzdoU/9k8e+/ztbsVrlmG/Iw9OdimvifbAfmceHFyt8t8RZ+x348FS
7Zu93hT2L+FB7cG05r5J2O/Hg6mZAxIxAuxfw4MnqaLlnmzs38yDpoY+j2hD
7N/Og/P/pTtf1sT+PWP7nq9rPZSxP4YH7ev88yZKYP8RHvjkcB6O9v8l/Uk8
+CzT98+jm1h4hgfJ39d6qbYQe1zgQZZ8WNK2RmLGf2Pv8dIrveqJO4t4ABsn
ZtNfEItKeRATHUOXfkqc8Gjs+yt0mKwsI/av4sEp1Zdei4qIbWt5QDsR2Jjz
HzHt49jvMTd5Q/gF4uovPCg3vjry4DRxZjsPBtkVtZ6JxCHdY7/nqpa2rDhi
apAHVKRtZICQWF2SDyvEGRKykcRiBT58ir9d2xaC/Rp8KKlcfMBqHfbr88H7
T2rGXX/sZ/LBi+NU5uWN/Vw+LPy0R8bUDftt+XDK8M+48DnYb88HqzeXN7RN
x36KD0zlpx3Wk7B/Lh901YY2TbLGfg8+xJ7KfFrAwv6lfBgumuy+2Aj7V/Lh
Ze72U6Pa2L+OD5VvdKvPKmH/Fj4kzVfRjZfC/gg+aHqnnvkw1Ef69/Gh/qxa
wb1uYvFBPmhYKMVVthMXHuOD79fjG198IRYm8+GN/fHV8h+IPTL44P524jWV
18SMXD4sS0kPbawk7rzMh4G+7sgdD4hFN8b2mHWnl9wmTrjHh6ziTn/6NWL/
J3xY47RiSDaf2PYFHw5vX96dk0lMq+NDBddaITKVuPoTH4K+54wWJBBnfuND
AiPJZPQQccgPPkxl5DMVhMTUHz78cjq2w38H9g/zoVX2On39FuyXEsCTV5U/
H6/DfiUBOIz63DTxx34tARydmzzcsgT7DQVwSH1v0yV37DcXwJq//jeb5mA/
TwDH7VmJMY7YP14AdOW3u2/YYf9UAWRHmwXk2WD/DAHYho2rnMPGflcBOC93
5TeaYr+nADZ9j/AOo2O/jwC8dT/3T1DF/gABZE7YNI0hj/0bBDAvJSB69mgv
6d8qgLz2UPqCPmL1nQL48qLhQUgnsVgogIfi+CmsFuLCwwI44KTYmPiZWJgg
gC3px5Kf1RN7pArgZO9fA91XxIxMAbx4qieWLSfuvCiAisXyiZwHxKKrAnC6
N+JudpM44ebYfYtqRdZVYv/7AgiNDtI+nE9sWy6Ai9XCDPdzxLRXAvCf1ubt
l0pc/VYARt1Km1pPEGd+FsDmVdV2Fw4RhzQLIMAuRmZyFPb/EsCkA+Hd8yKx
v08AJ24fusQKwf6Rsf9+s14PMTZiv4wVqKnyzG8GYr+KFdR76659vRT7dazg
1v2NR/UWYb+xFUyXXv3OZh72s6zATCLo73+A/QIrOLfunK+uA/ZPtIJNkq7n
707AfgcrGOde5nKNh/2zrGCd0wlpugX2z7cCn5f3pq4xwv5FVmDMKvj+QQv7
l4/dN9pK6Kti/yor8E3JuGIjg/1BY3sdV0VmI39If5gVFP0L+GP0l1gcaQVv
pparMH8RF+63gm0cvvL+ZmJhnBXoGNV4scXEHiet4BAVYuHwjpiRZgXvXCpi
u14Rd2ZZQeUT+/4plcSifCtw4wwZRomIE65ZAffTfvWg28T+t61AFWYE+l0n
tn1gBavF14t/5RPTKq3gG7Mgov08cXW1FbznuU1KSyfOrLeCr/GWZ4SJxCFi
Kzj2a9/szUeIqVYrmP9pAfNPNPZ3WoHwd1DuuD3Y/9cKLJuOhvdsx/7Rsd9n
RUTo1mDsl7OGK49c6wbXYr+aNSy4YOW9byX2063h48iwkc5S7DexBr6XJr/O
A/vZ1vBUOK9L2wX7ra3B1vZ4rBiwf7I1VG1Qkr4zFfsdreFA4ejA7fHY72wN
eRrZ/a/52L/AGoxKNq/NYWH/4rF9728B242wf4U1XM64JNWmg/1rrKFHcYpB
kir2b7aGXL2MwgWy2L/NGgw2OX02pmH/bms4++poUEx/D+mPtobMApH03M6e
+/8HGk9Fbw==
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, -20.60813658229671},
      BaseStyle->{FontSize -> 15},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Transition Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         
         FormBox["\"Distance (km)\"", TraditionalForm]}},
      FrameTicks->FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
              ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"1.1\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {400000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"2.3\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {600000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"3.4\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {800000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"4.5\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {1000000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"5.7\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}}}}, {{{{-20.72326583694641, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{-20.72326583694641, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
            FormBox[
             TagBox[
              InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
              ScientificForm[#, 2.]& ], TraditionalForm]}, {200000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"1.1\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {400000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"2.3\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {600000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"3.4\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {800000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"4.5\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {1.*^6, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"5.7\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}}}}],
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->NCache[{{0, 1.*^6}, {-Log[1000000000], 
          Log[10]}}, {{0, 1.*^6}, {-20.72326583694641, 2.302585092994046}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=100\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0},{0,1},{0,-1} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0},{0,1},{0,-1} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=100\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0},{0,1},{0,-1} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", "0.05`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, -20.60813658229671},
   BaseStyle->{FontSize -> 15},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Transition Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      FormBox["\"Distance (km)\"", TraditionalForm]}},
   FrameTicks->{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
          ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.1\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       400000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.3\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       600000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"3.4\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       800000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"4.5\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       1000000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"5.7\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}}}},
   
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Resonance Destruction (\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/(3Pi))\"", 
     TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJw1mnlUzP/7v6ddm6Z9r5lqptnKJGu21x1C2myRLIlISEi9kTYhoUK2slRC
lojKljTZ06pNiZoWirRpV/Tr+3neP/8417nn8brmmo5zpnMwPXcu9ZKk0Wit
UjTa//39vz9UDGV867/B6kSBiPBVquT6m/t767iE/W5SegVz5zgt4OD9PiVn
xrH5dtaccGQG5RL/JOV2Fhtf/5gKyVN9szKTRXhVNrWq58IG4aAZ7nOpqVce
zVObgxyXR22nW/Srl5ni815RZfq6bQ5vkYPeUN13nuy5EIbs947Kj/r+1kcL
eVM+laKn57vghAn6CqiZf8zojjLIDkVUlcS5mMocJvpLqE17PR3mpCHHl1Lu
m77IX81AjvtIVXP5pYqRyNFllLhwRd1JBeTIcmqeOWNt02MG4fAKapfqdffi
9chBlRQMLDsyexpyQBVV1VBiuc8X2e8T1SfkxWfaIvtUUwteGq+a+8kYe2qo
b2mlqz+kI6/7TB10rvfamGWEfbWUeaT27Us+yEu/UHEziq9Gf0N2+Eo56hu9
/m6LbFdHueZ62trLI1P11B+HOQsGLJANxZTkemGtoZYhfh5iql8gUPlCR9Zu
oHj/nTYS2CPHNVCJ1+un8ncbEFZtpJbMZzAPRiJHN1L+++nCyrPIik1U5fMp
L2aL9PHza6Jykzwa8pTwLtNMZdR9bc3twHt4M2VyYYd6OA95tJnineXO4s1D
DvpG3bs8fae7CvLQNyrm44P63EQ9/Ly/U1kbS70VpfHe853aKNXf6v4K734t
1KenXSUnFiC3t1CiyV9Tj1oh+7RSnjeC976o1iXc0kod9NZrHbiNvOkHxXti
G130DbnhB3VxKMylKAd53U9KQsNPpuUwcu1P6niV5oc/dsir2qijgWF/bQd0
CFe2UfRJ9HePKpGX/qKO8Pc5fv+KXPKLqp25QX9fFbJDOzU8kbG0Jhs5v50q
mcEsyNmPbNdBzfaf9plvh/yqgzqR5pPvq4dMdVJbL87a8UIOOaeT0vpVd+79
/2fDLipx0CBW2Kn9Pw5176KsX0XYsF4RpsV3Ue8OhszgJOG9uouSYyfX2vnj
XbubqligZn3RHe8ruqkuy4HQAie8x3VT1YaBG8XWeC/rpl46Br5/qo131d9U
1Y3fTYHDWuTu/JvqzbrR0fGVMC36N1U+/6Hf1Td4L/xN2YvtbHfcwbtiD6Xa
/qfmZizeF/VQE2K0u7P34D2yh0q4EVMo5Yb3tz1U5PlXapOc8S7TS/Wd2PVg
0TS8z+2liphLlH4b4j28lzIShu7dScO7qJe6vad09aoaTXIf7aVai7/zZ+cS
Dp3VR318cu+l9Qu8B/VRtwon5Tvcx/uzPupK6uKXdYl4H+qjfD9Mbzx2AO9T
+ynlWc/keUvwHtBPzVe8KDo2Ae+Z/VS8QrBqsznee/qpsud7RM08vFsNUKGP
rBUTzPDuN0C5vUrtWjWiQe73BqhHuznbTosJ09oHqDOLd89+nYp3/iBVv1Jp
ZPEFvPsMUrdUyo9+u4P31EGqPyNl2a6LeG8ZpKwe1wkmheKdNUTdXD/de30Q
3jcNUZtHBh3yuXhPHqKe/45hPWLivWGIare6xw6aiHfjP9SpwbMV6dJ4X/eH
muuhbfVRFu+X/lAaZT92lCnivfYP5Td5ltX2h+rkrjtMSU/QWPnjDWHaqmGK
mzO8+dALvJ8bploX6qQoheK9cphad7xwcdIpvKuPUJkF+0ZLDuN96Qilemh4
ieVcvMeOUC5Wt296+uK9ZIT6sifRqdEZ78p/qct34zed1ce7w19qSwIr9pUJ
3qP+UlkHLF6nj6qRe/5fKqV4v4bXF8Khcv8o4Xo2FS2De7sxrlt44Px3vEf8
ozommXrnFuD+1T/KsdPmdG423iVGKZudrYE7T+GdGqUC/ouuKjmI9+BRqktG
Wcbp/99zRqllq8Rxp8LxPjxKBccweS/34d2QBlKZc449XEOYmkkDlTPBxY0z
8PXuNOjVKOq9zSYs2k+DjzY5jk0s3MfTQH1+eVySKe6f0sCufuTlFUPcV9OA
83K5MVMa9wM0UDhzIF7UqUr22hKwOOekhnwVYWqKBBzt21kxqZBw6AoJ0HhV
a1GaT1jkLwFKEYejK3NxHycBh32Oz0i4j/sMCejXOCwWJuG+bOweEZySHYX7
bgmovuVdQg/Bvaok9NrU2f/ci3uhJHgx+2tWbcW9syRQCy5cf78G976SIKnQ
uF3SGffRkvAv/cKpg7a4T5ME/37B24lTcF8oCYc+bFXw4OK+TRL+2/to9wt9
3CtKgZT6k1xQxD1PCsb5Bk7tGKGT/SIp+GF6IWbJEGGRtxR8eJz8aEM7YVqk
FEjvv5+5pZkwdVMKvuuUzlOowP1bKTA/84xj8AL336RgZaiP/9E03MtIQ1up
jGLQHdybSYOh86bwBSm4nysNvd8uXMlMxr2nNNjuzXH4Eo37cGnYXBsj7bwf
90nS8K3l1F2DDbgXSUPWngyvlNW4r5cGgz0GMY3uuB+Vhmk2d0M8kCkjGaio
yJquZY/7WTJgx3KjSVC4XyMDYuWuA9rauA+SAZfNvntHVXCfIAPHneuC/mng
/pkMzM7Y4REmj/saGVAdrW5qkcb9kAwYeeqdlpfBvY4s8CYYHfO9okL2U2Xh
1uThbbE3CYtcZcGqKOz576uEaQGysNLqjETwNsLUWVnI+6/2siAE95my8Nu7
drB+H+7LZWFh/kmvn+q475EFw0u5F0sA92pyUDBlTclvXdxbycGIsde5B3Xj
yd5FDtrGX5gS0E+Y5icHR40ko9UrCFMxcrBDh6G3NpZw6D05KMlObo4uwX2R
HGg1x78xv4D7djm47hvx9uEe3CuNg3nM6PP+u3HPHwc7L/dsPjgd9/bj4P3x
28njNXHvMw68Mz4qb52L+2PjQFWd/uyuHu5Tx8F/NNaSGDXcvxsHt8edf2jT
p0z2LeNAa5LNDMVcwpSsPKy5fMVqdjLhUJY8TEvqTF/4gLBonjyIe77zwpJw
v0keJr0/c7H0Gu4PyYN7lnuBQgjuk+XB8C5vWNEd93nysO1Z5qJpU3HfIA/P
sprHvRXinqYA9PKJd3MEuDdWAKuODqkuDu5nK8CiSs3TC8fjfp0CzI9hSn0Y
VCL7gwqQYaTYJCojHHpJAVKfzPmi9YawKFsBGhrGfzLMIUyrVYBlc7+WfUnH
/R8FGD7ZV7ouEfe6ijBHi12iGIP7aYpg63bx9bvduF+lCHvLJ+VGbMR9oCJ4
sWfOdF+O+3OKUGMv3WI8D/dZisCRocQHrHFfqQjMUaaHPBP3vYowfknrfD91
3KsrwVaGVOYhSdxPVIIDmrYphr2KZL9UCc5ZeWtsaCBM7VKCRZ9bLdTzCYfG
KoHbX6Mu+0zCovtKkO3yOf3QfdyXKIHWyu+iaVdx36EErnmMd1nxuFdWBq/N
vVU3DuFeoAw9EX83ZG3GvYMy/Dsc5j1sj/ttyvD1nXjCrXm4j1KGw/6FQe9t
cH9LGTaHqO9NnoP7fGUoTtvo2MvGfasynLNL9+ar4l5uPBiFmB33b1Yge/Z4
eCTR8S6zhjDNbjyYHNnuOFRFmPIaD1M/tuVXfSIcGjEe6D3/Yhfm4/7aeJhb
7Hso+yXuX40H93PB+5NCcN84HhYOX2lcEYR7CRVIifii1+GPe4YKrP7Y+/HT
RtxTKuCr5uHI8MH9ehW4MFtR9Gwr7oPH9kkDl7wNcH9ZBWxDjr7WtcJ9jgoY
6xwwtdHE/RcViPJ2ulbTJ0/2wyrQmXnGhadA7h7KdHhT57EmcJjcaYZ08PlK
e9OeTThRQIft4q2BJq2EqZl0UM6erMB/Qli8mA6nB+zXNV3B57vTgVtkdXDg
NmHGNjq8DK+913OYsGg/HeR/zV9UsJ6wRxQddrNMN7ucRH88HZw6L0bUrkX/
LTrYHzm+wMwN/U/pcEY2doqnE/rf08FW83lcNwP91XSYesI9w1oe/a108NUs
qb9ggv4BOshejr65QBb9cqowsX/Bg9cq6NdWhV2rr5Sl9o0jfrYqfJLIbrMp
I0xNUYW4jIKF658QFs9XBePuoEsvsgmHrlCFhVnJla4PCDO8VMH17LVUjaeE
Rf6qENMv/FqYSNgjYszvsnayywnCtDhVcJ6VuujBdvRfU4UJdumh0l7ozxh7
/q+fEyevR/9LVSgaGez0Xov+MlVQ/mo67o4T+htVweJL0kVZW/R3jz1ft6Dr
hxn6JdRg/I1jGml66FdVg3j3j26ZdPQz1GBewsCUQjn0C9Xg8H9FOYV/5Yh/
jhpYar0NvtRNONRZDe72SBh+qyPMWK8GPU5NAzvKCYt81cDPoWMd6x1hj2A1
+DbCE7OyCdOi1WBT8brtbWmEEy+rQfTltm3vrhKm0tRAd/miW27n0f9cDVRP
+ZwyikJ/oRqc2M1s/R2O/i9qMKBjNrrcH/1tanBfc2vGrg3oH1aD+pGTkhou
6FdUB81wf47JYvTrqUN7leO2kNno56nDwvqrjd8o9E9XB3bYVc89E9C/SB30
S77qxBug300dVk+hEpok0e+tDs5ye/OmDcsS/3/qcOY6bwnrN2FapDqsy15y
bOsQ4cTz6pCRX7llwk/C1E11GIg8cWa8mLD4kTrILoNFKo8Jh75Vh8A8zflh
9wkzqtRhTsIOW98bhEXf1EFNqMkZRfboUwebrWFad66hX0YDdKc8s/6TjH4N
DZB89k54Zxv6zTRg5+nDN4/6od9aA7zkZh0xXYP+uRqw98znMJYL+pdpADdB
6VezO/o9NeCpeMdtq1Xo360Bv8IMFRsY6A8fu/ulanywQf8pDVD1y0/KVUd/
kgY4GR5LOyiN/nQNKMtx1QnDe6hIAwTzolbYjMoQf6kGaBxbEVX3ibCoXgM4
6dkJf/4S9ujUgPiZj0tOFBGmjWqAu6yO7PoPhBPHa8Jst7fN1wsIU0aaoCv0
2fg5lbDYQhOu3DxhrXeacOgsTdi5aEuCTzr6HTXhTM3Fu5eOoX+NJkT9hdUv
z6J/uyY0bGgLOnoY/UGaEP/b6eL5jeg/rglpBxctj3FBf4ImBCUsidBfg/7b
Y+/vk877sgXof6YJWVsDT+avRP8HTSh2uPboK6C/RhP0d52UUhag/4cmHOrT
vrNaHf1DmiC5w2LGRzr6x2nBcq3wLUrj0K+jBTuLaasEeBeba4HzVTu/EBr6
p2rB+fZPbov6pIl/gRZ8pT93L64hLHLVgnddVHtUGWGPzVqQfHjl/eAPhGkB
WtAVlfLz93vCiYe1YEa/+cTLIsLUWS349ZeKi31CWJwy9npV0c64ZMKhmVqw
/t/mZ8nx6H+tBadXP1zYFIP+ci1Q39DB/xyJ/iYteP/kl1dcGPp7tCDiiZEH
4z/0S2rD4Zmii7Hb0K+mDZprD5RZeaKfqQ3JasvDR1ah32qMnyk9dnNGP2jD
V/mhcvV56HfRBsfv4WVLp6HfQxv6u2d8Np+Ifj9tMA48PY9ujv4QbShXXaNN
Z6E/RhvyJfqbWnTQf0UbPoU26GUpoP+eNix7eMe8/Y8U8b/QhsaGoxa6fYRF
RdpQe9vsis1Pwh5fx/rOTxs26iJMa9cG8YGlER8aCSeOaIOp8iT1nk+EKSUd
mHAsutwhl7BYXwdSH3Fqjz4mHMrXgQrJNUqcNPTP0AHjFIND7pnot9eBzTmu
VMUd9K/WAe73IqUpt9DvowORrdz73Aj079OBKym3fySHov+YDhRGVHQU+qH/
gg7M8Fh1m74L/ak68M9z8YcPe9D/RAfsHrxz6PRH/zsdWLLp+cDnhej/pAPO
rH+3c5ahv0UH0l/MET2bjP5+HchInpUbNQH9srrw0PFlfYsN+jV1oYZ/fVyU
NfpZurDx3e6jz5TRP1kXvh0YHe/HQf88XcihDQk9RiSJf7ku1GVfv5z1hzBt
ky6UZ0Yyn0ugf48usF18ina0kTt1SBd2XDz6qKecsPi0Lhgdy9CJ6yYcmqwL
aTVP6HJvCDMe6gLr+4cND0oJi/J0oVL5/EeNfPR/1IV9ZQHCr3fQ36ALryUU
nYsvEU7s0gXhiPOw+z300/Tgq/VHjewY9KvowaT+ly0mKeg31oOBK2L/jFPo
n6AHYpnLzTX70T977PVhkgNqW9HvpAdb1dy+39+G/nV68Eywv8NlDfp36MHU
z+WD1jvQf1APGr+7vet0R/8JPZAVRDy3dEH/JT2I/bz8UuY09N/VA1tFvaqH
1ujP1oPFx+7vuslDf4EeLBx3s9reCv21evA7w678jDn6f+pB64Wj7CEm+v/o
ga9wf0iPAvrl9eHs2jivMmn06+qDj6pB668/EsTP1Yd2uDYyeYiwaJo+9LQp
tbB6CXss1IfpdxosT3QQpq3SB/f4A+3b6ggnbtEHXb+FO5WrCVOB+mDev/fs
nSLC4iP68MQ0u7ryHeHQc/rwVutPT1Ie+m/oQ/OehN3FT9GfpQ9K1pvZwgfo
f6MPLafPT9G6hf5KffjdGV0lfQ39zfrwadqTvfnx6O/Vh1Bp6YcLTqFfygAy
J/0wbz+CfnUDSJi57FFIGPpNDaB7i9/f54Hon2gAnTsMAl33od/WAJobjJ52
+qJ/qQHc0Y5etdwL/RsM4EXnhQoHV/TvMoAw37i0V87oDzWA+q2xX7zmoz/W
AGLaJk8454D+RANwCS6bedkW/fcN4Ch3/dTFs9GfawD0QcriFRv9JQZwl3oa
YslAf50B/DRdJiVUR3+HAUSf7p+5Uhf9fw1gtdHtKds00a9sCGsKmPke2ug3
NISGgsvXOQM04hcYgpvEvsEhZI+ZhuB0j343u4EwzcEQwvOUd11tJJzobghv
y/U+HGghTG0zBFXvl0G2rYTF+w1hp/Smeo13hEOjDEF+UoVmXiVhRrwhHDyx
JibwAfpvGYIRM6i5EdnjqSHUbXNsN3qK/nxD+HzPX0bxPvqrDeGJ/MkoufPo
bzWEnzF2f6bjXTxgCD598VRJOPrljMDi5LKTG06gX9sIeOobZF5HoZ9tBFZr
Nxx6tBf9U4xA4mb3RV1v9NsZwZmTfZsCgtC/wgjiN6zpprui38sIOj7/vtLu
g35/IwiN3fNvcA36I4ygSHR1otcC9McZwVcZacp7BvqvGUFQ+PVVMnPRn2EE
7xc+GLblo/+VEag+6FZdaov+MiO4GOfSyBGiv9EIPk6Z+2auKfq7x+6HfMoP
q6Jfwhievsl5IaGCflVjCEpat2+KJPoZxsDVDL82C1/vITSGdRW7Q3ZLo58y
Btf4hMTro6O5//M7G8Oj5RGLj1cQptYbQ7HCd9+yfMJiX2Pou2OvciKLcGiw
MUzUaWGMvCDMiDaGiDXB66gMwqLLxuAlzb6+/x5hjzRjsKzJG0o6RpiWYwwP
hx0XyYWiv9AYfPzNj3N80P/FGJatPjHOdzP628Z8v3c/UFmP/mFj8KPFLQhx
JRwrw4BeyjYldg76lBng8aWsomsSYaEmAwoeLgh+YYJ+QwbMvMe/fVeHcKkZ
A3wuv2m0Vcb3I2CA8vIr9x6N/vsf+01igOsOu4+WPYSpmQxwphv4XW0mTJ/H
gNNdG54tryMsXsyAPuenkxNLCKcvY8C/E/8N5YgIh7ozwDqmWupuGmGXjQxw
O9j2uCWZMGMbA3q8Lzi0xBLu2s0ATzu5hycuEBbtZ8A8n9S65COEY8MZoB+c
M+gXRNgjigHT5zf8XbSesPD02DfE7fQKvaWEafEM8ILogG0zCZcmMWDUpe7J
eXvCibcY8DTHeK0u3v0eMGDaRd/xqbOw/ykDVqS/TWhXxf48BgS0uHLt5bH/
PQNqPB01b7T+Jf2lDFjierSq4Dfh0GoGxO53D7PqIuwiZkBZ03aX94OEGa0M
WGATtfLxK8JdnQxYFj7S5FtEWDTAAM6WTsMV5wjHjjJgfo3wwacEwh5yTFgm
+fdu5DXCQhUmZBrLscOSCdO0mXBIvo++0p9wqRET/FvfH70RRziRzYSi2b/l
p9gR9rNkgtS10cHq5YSpKUy4l0x/ketKmD6bCeecLipfowiL5zOhOXCzaMAM
+x2ZcOSEw9LOxdi/gglbBiINJw6NkP61TKg8OF53lyH2ezGhZLGtTaQC9m8f
e96RTOdVreT1In8mCOp3DyR+IhwbxITgvzfOf+sg7BHBhIxrRVca7xMWnmBC
4mQLy7uNhGlxTJBOD6oKzyVcmsCEj26fI+ZfJ5x4jQk9jr/ncaMJ+91hworc
bZ5RMYSpDCbcSCv57ORDmJ7NHPv9iFsddY6w+OXY53Hsbb5iAOH0D0zoPXMr
KWM74dAyJlxo1ihwXIT9n5mgLfFhWeUcwoxGJowqKRUrcwh3/WBCmPDtDCaF
/d1MeLvHX6Bpif1DTPin/FhojuwhYTL2/f5Yif847Jc3Ac8Q+dyNo8OkX9UE
7qTnLC1pJVyqYwJnZq6vqOggnMgwgQznfZ5rWgj7cUygz2pXSts3wpTQBK4e
0HCtzydMn2YCdgOGMekvCYvnmMCuXcI/yXcJpy8Y8w38PliVSjjU2QT4KzSn
MJIJu6w0gWIrJk82gTBjvQmoVTx5Of444a7NJrByVaNKYRhhka8JLM/9bbhy
D+HYABPo6bZIsfch7BFsAqYmgXN71hMWHjGBs265ReXLsD/aBLLSQ/RLF2H/
WROYrJPe4zoT+y+bwNOpIw86bbD/ugl4b0yV32mB/WkmIN85nR9siv1ZJqC9
tvurmyr2PzeBZ64/Xu+Uxf7XJvDvXEDfcO8f0l9oAqOXRH0P/xF2qTCBRrtt
1is6CTO+jO2Ns5tOtRPuajKBb9Oyzmz/SFjUZgJat5KGa94Qju0xARNLxpXs
NMIew2M/n5So4mnPCAulTOHPNvfVWfcJ0xRNYcu6bQdinxAuVTOFSTzz3ZdP
EU7UM4WR4psljdGE/UxM4a7x47q1WwhTPFOImfBzymE/wvSJpnB2olvznJ2E
xdNN4bZxM3/JPsLpYAqbLeNux7lg/yJTuGRnn5Xmgf1LTMHaKf2yiwn2u5nC
t8fPR6stsN/DFGqr+KxsS+z3HttfXalvx8d+P1NYR72U3jEe+/8zhbas7QGB
uBeGmsI7ddrFlfVDpD/SFHrvczp//iFcGmMKQ7uzFzzvIJx43hSUg/LUsj8T
9rtqCtd1XGo9CwlTN00BGmNsn7UQpt83hVV7e0rWXyUsfmQKLq6z5AuKCae/
MAXjwCM1j+4TDn1rCvM9jI1tLhJ2KTaFRrW4u3NOEGZUmcJiz8Ij6mcJd301
BdrcvcukNxIWfTOFJINPP/aeJxzbbgoZNatTu3YR9ugzheKBhI1K3oSFf03h
+MT6yzudsV/GDJyPrHmeuxD7lcygfMkOK+Bhv4YZDDO2qx5xwX4DM1gv/J6+
YzL2m5nBxiLBgZ3TsF8w9jx/xSXuWthvbQazbAKXnVLC/hlmkHi9N/x67yDp
n2sGVbdXPwyVxf7FZlC94XHYyBC5M5aZgeeq9wt8Rwl3rTaDFqtZg1PFhEWe
ZsD4pPGqqoZwrI8ZBHD/NZXkEfbYbQazmyTtlr4hLNw/1iNuqziTS5gWbgZX
vD51xyGXHjODTyqtC+3vEE48ZQYhvaU//l4n7HfRDNxUDS+FnyJMJZlB3kPn
MyUnCdNvmYHk7pTCtiOExelmUKljc+BhKOH0J2agU5cYHLkX+0VmYG9stcZ4
B2GX92Yw/UWyXIMn9peawZ3FExN3rMb+T2aQK1iuWbME++vN4J8BqN+1w/4W
M/hlGH6vZhb2d5rBBZ6StaIV9g+YgSl9XfNUa+wfNQNp7wmDqWzsl2WB526/
3bNNsH88CxK/21Wl0rFfiwWSSrdm8mSx34gFM1wz4j16B0g/mwWnpJ1oq/4R
FluwwHS/2XdON+H0ySxQl67cmNVPOHQWCx5t/KJk9IWwy3wWVF/KcqoqJ8xw
ZEF35cxB1yeEu5azoC2ucnXFS8KiNSxgin+xg58Rjt3Egvm52pub3xH22M6C
D0eMdFVvEhb6s8Dkq0Hp3duEaUEscAxzVOcdJFx6iAX14qoY86OEE4+z4Jlm
/s9zhwj7nWHBvMI5gdRJwlQCCzoMDz985If911jQn04tyIvA/tss6PX22cKd
i/0PWfA6pmfqFFfsf8aC0Y1LPKY6Yv9LFuzPf+PYthD7P7DgafKRwe3Tsf8j
C+ZUnx6oW4b9NSy4OrRSaKyI/Q0s2GEt+X6VFfb/YMGmpM97mrSxv5sFC4vi
XlTJY/8QCw75stf6SmI/jQ06hQ4T1dSwfxwbwnfunC5R1U/66WzoT7t3N00B
+3XY8FPD+21FE7nTGWzwO6tk//0zYbE5G0aaK9unFRFOn8CG44Fh+3ILCIdO
ZUPpmVra5hTCLnPYsPXBCgG3kjBjARtUpPrWKz4g3OXEBvM0hWTbLMIiVzbs
vde1qSaecOw6NphWNSsonCLssZkNhp0UY3oAYaEvG7rfefI/xxGmBbBh4fM2
oXMI4dKDY31NCsEnoggnHmbDiRSDPK9t2H+SDXHzff2KNxKmzrLh0/I1Atpi
7L/MhvlzHPuOrsT+FDb8OWzT6u2E/XfZsMZIrnSlK/ZnsmH/eWru0Czsf86G
pg8W59bZYP9rNmzQW/IcTLC/gA2au58eEpphfzkb2lyiTGKMsL+WDTLJEzeO
Ins0jT2PZ2gioYr9bWx4Y1295K8S9vew4df3mFCv4T7S/4cN76c/da0cIJwo
aQ5KbZZSH7sI+ymYg22AO9+yjTClZg4Sh4yZik2E6XrmUJoTlWRWS1jMNIdP
ypvDeysIp3PH9lfEj8oLCYdamcMG3//+fHtL2GW6Ody4Xz9/yXPCDDCHNTnq
NtxMwl0LzSFAdrlGyk3CIhdzSHNOfTN8h3DsKnMY8cl7TiUS9vAwBz/e9eGI
JMJCb3PwOaVxwCeWMM3PHKacsDLfdBT7A82hblFBQIg/9oeYQ7zysfqTB7H/
qDlcnXJRNLIL+2PMQX/vssUOeKefNwe37PGe472w/4o56Ljf5m7YgP03zOF8
2nCOpS323xt7nlOP/dzF2P/IHP6+1s9Rmov9L8bu/GWpN5di/xtz4MY9qKqe
hv1F5lD05fBTe3xebKU5vAg8/OQCHfu/mkNJTK7XMkPs/2YOyzj/erdrYH+7
OdD3ycnp4b201xw2J53K8FfE/hFzmB0QESliYL80Bx5dKAlQEveSfiUOdH79
uHj0D2G6BgeiE/Ycrv5OWKzPAVGVoZpxM+F0Uw4YH//wd+dXwqF8DmismiRn
003YxZoDm+XPHvR8QJgxgwN1V9eLW+sId9lyYJNcwvyHzwiL7Dlw33t6z7ks
wrFLOfBcy8Go6T5hj9UcGDWuyQvEu9CTA3skpQ+cPUyY5sMB2qfWPbPxeaW7
OGPfpzdZKcUSTtzHgX1ZA92pcYT9wjjgsn2ioXQE9h/jwFTDbcUZQdh/igNB
e2S0eWux/wIHJh53LZA9iv2JHFivVN90ezP2p3Igck/xqey92J/OgYYYz5sh
q7H/CQeOziiQXroE+3M5YK1fmTI8FfvfccBH0yBP2hn7S8Y+f5s/+6xnY/8n
DnQsqRUqOWF/PQd+Sk95N9Ea+1s4UKT7NX3UEvs7ONCmtfj7EU3s7+dA/fzq
JE0j7P/HgaZiJ7tgLeyX5YKXYPCEjDH2j+fCBVuHxebK2K/JBdm+jE3Nithv
yAWOv026SV8P6WdxYaCV9nZGP2EXCy50684rH+wkzJjMhb22gS2eXYS7ZnJB
KONloNVCWDSPC4X1mi4VTYRjHbiwKJNh1FBJ2GM5FxaX2d7aUkZYuIYLq3zi
t9QUEKZt4gKM9HCvviVcuo0LEqLBO3NEhBP3cGForWlT0hPCfge44Pyz/q04
izB1iAtZF/rcfqURph/nQsT6yZu33SEsPj3mH3mSw08inB7PhQS7EKf8i9if
zIWA2+0SgpPYf5sLbSsjVvucxv6HXMgzShnwPor9T7ngEpdmKxmN/XlcmHZ8
f+fJg9ifP/b5+pmXTgzE/o9cqKSFG1z3xP4aLnR+t5651gf7G7ggLWU+48J6
7G/lQo9a1qtfvtjfxQWV8lrXGjfsH+SC5pnM2mB37KfxoGbh7avt07B/HA9o
9OXTiwH7VXhw81Byc8JU7NfmQdA3ZlDeAuw35sELqrBuwmTsN+dB1rxi8dS5
2D+BB+seNEa+UcH+KTzYrR/e9o6B/bN5cClt2Y3tdOy340FBRG7PTR3sd+JB
cNpD6hLuha48EP5bSGWYYv86HmhHNgxFtvwm/V48WLPibfs5eezfwYMEpYLa
uz/J3W8vD1yNyrM5vwhTB3mwqZNx5PkPwvTDPNBN8e6Y2U9YfIIH6fsWOZvl
EU6P4439PvFDlfmbcOglHgxZyk5IfUvYJYUHskXfF00pJMy4ywOTll7f8NeE
uzJ4cHH658qil4RF2WOft67Z5KjLhGNf8UApcomHQTFhjwIe3Fqu+3xhCmFh
OQ9EqiuGf2YSptWO9bpX3CtNxP5GHoyMBMS+PE848ScPlrzvjOEexP7fPCgs
Wffx5RXs/8ODCT3XnASHsF+SD5t2zzY9dBH75flgL3KPlwrBflU+3Gx2f9Hy
H/br8mHPx+kxxeuxn8mHnoSf01b6YT+XD1p9EWUtntgv5IPR0jY47I/90/iQ
tfmv0od12E/xYaF18zJzZI+FfPgtcUuudh72u/DhcnD1uI/22L+KD6k2gQu3
zsX+9Xy4s/xLXNBi7N/ChybXcs8Zc7B/Jx9YCU6fbyBTgXzoS9GiBfGxP4QP
j+6c3zNdgP1H+DArWLHCnoX90XzYbt4y6Thy6Dk+zG8T3/A1xv4rfOjcb7n2
pAH23xh7/wWnM/aoYX/aGHcqThwcj/1ZfPATDBs9lsf+HD6IZjqceyGN/W/4
cF4opbFztJv0F/HB8rZkescAYVolH/bOOqHyDLn0Cx9mty+a39BJOLGZD3PL
V0rYdRP2+8WHH+Gj9ye3EKZ6+XCLxZ3MbyBMH+GDV6pdgE4FYbGUAF5Y2r93
rCGcriiAH5rs5xXFhEPVBXBc44PyCN5d9AWwM81tf9QHwgxTASjTulo63hHu
4gmAq73v3fYHhEUTBWDHztCWfkI41kYw9u93b9jAXcIetgKoq76x9PoL7LcX
QLdv3p2Nadi/VACpA5kB2zKx300AjUIPZe8Y7N8w9rwda/uPXsT+rWPvZ3Hl
Wd/j2L9r7PnHZ8+bn4D9+wSgklTr6IV7cagAHvlk6zknYn+kADSUf7Df78D+
WAGwDQf3dB7C/gsC2PrNT52+DfsTBaAdsNJ2sj/23xRA08DWc2V+2H9fANZP
+ibVh2H/YwG8WdHpIOOI/bkCEJqFvPbBvfCdANY2mfD9HbC/RAD+8anXA5dj
f5UA5IVfRpyWYn+dAE7ufpwiWIX93wXQ7yE5U8sS+zsEUAydjA/rsL9fADPU
PzWUTsD+vwJoPePf6UVhv4wFfGRNHDk/CfuVLeBsNntuCz7PRdMCMi6oaNWr
Yr+hBbS1H9C6PwP7zSygsNT51g8N7BdYgElJgqsk+mInWYDEmgk1U3Wwf6YF
RC9peP+Yjv3zLODezwvz7g92kX4HC5DUXf7AWA37l1nA0q2pl2yGyT3R3QIM
zucK9mti/0aL//v/KH6L/pI7tc0CckTe0n74evqesfdn6aY7s5GweL8F7Hm2
nFPbTjg93ALOTJB+vg7voVEWsOtMtURhD2GX0xbglv66xqOJMCPeAr4GlCXU
fCPclTS2nx9WXFZEWHTLAnxZx0WrywjHPrCA0rkL5m34QNjjqQUs+rA1LPoj
YWGeBYTKr3R9no/9+WPPP9CUxy8gXFpqAeGvfc7ufob91WO+2YOFqtmE/cQW
kClB//MrA/tbLeD8uqijUpnY32UBvTFG7Nb72D9gAaLrj05x07B/dOznHTDv
z80b2C9nCZffpUVrXMN+FUs4enRyXNdV7Ne2BKWTVsaaCdhvZAnpeRs/3DiH
/WxLmMVrf8WIwX5LS/jhHe8UGYv9Uyxh6WvBr1eR2D/bEnaazOWxorHfzhIc
jyXeoiKw39ESIk+6yq4Lxf4VlnDjckLb4d3Yv9YSXv2NtLQMxH4vSzgt3S/f
uB37d1jC6rvBhyMPYL+/JVj/eHEvegf2B1nCONtZMwJ2Yn/EmP/tdvvxK7ty
/x8M2fQl
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1: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
KC/+P+ruL+s=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 1, 0]], 
         Line[CompressedData["
1:eJw9W3k8lF/Ut+/L2HdmM2OYES1a8ZwUJUqUhCSphEKSVkkplUqlqCghWym/
KLRIkqXVkiLKqGhDZEslr/d9zvP6x+d87r3Pueeec773LHcYfiGu68RERES+
iIuI/O////sjThBshYEAZZ5ZOUlfIuK/jm2RDTMh6dBsos/WoPf4KA/HbxBf
/6oOeUngeFwh4XBIx7rdm4Pzi4knkenFQ1I43+MucXLjrNPMFyxc/4BovLZR
IyoC6cSHxM3qx/8uv8P5cY8IkTeF/ldDmSS9+zHR8/EwW7Gbgd+vJga0v1Q4
GbFJ2r+W0B2zSYz9f35PiQBBpcqxn7g/p+dESYJctrMVrideElG3fJ7zb+D3
z9cRLf55K06+wv0n1hPO72yWfxTSSfp4A9FSsrDY6zbScY1E/bWUl693IB3z
ipDLsCl+GoTrdzcRIQ8eXg6j1m97TcCnymfcU0iHviEeaRSb7X+K+wlsJo61
P4l9FIPn4d9CHF7gnbvhDu7P5y1xo+J44XY2zvdoJaaJBmxZcxnHXduI9KcG
t5lncNzpHWHR3Q8JjUjbvyduDDz1v/SHkr+dcKqVPq1si7SBkMge8t0mtRDp
80JiGLpKLokhrdVBzHyTevNHDNKJHUROn98HHUWkVT4QS5sWNlzKQ/r4B+Kc
ZpvkktVIy38kari1vxyjkI77SFwwGap69A5pyU9E+KShSfJN1Hl+IuqTE0LA
COUb/0TwpWq28Ph4Prs7iRk2B1WnU/KNdhL/Leg5FbiUOu8uYtBwhoUxB8cH
uojJMnv2LL2K3wv9TPh9+heZEY7zez4TW3M3JhuaUfr4QrjnMxt/y+P45y9E
sFMAP10ex/2/Es/KvuynGeB4x1ei1DK6uWU+7s/nG9E+mvZw6VMcb/1GbJq+
ukvrHtIe34lFDS3HVCj7bvpOJOvc26JWZIz67CaU3T7Nci1D+mU3wUvdlNY6
l9JvD3G4Wfzy8+Vo/7U9RIlTq8KKtxzUdy8x99Izj9Bg/P6jXmJdj3aY7kqk
iR/E3h8pRMUxpO//IKb0e144xMT1Bn2EYPaBWLH/yO9He/URKZX+j89UIr/z
fcRT8auq6b/J+dHNE/MTlQp4M3C9Vj9xurlEYVUJji/vJxIWnX763ZdLjif2
E12lXp9eLeWT4w39xJL9EWGuwebkuMpP4ldI3jsRN3J+9JKfxMe9V7jJ0rj+
+E9iLCA5nl2N33/2kxg6uh1yliJ/+QFCavB3zv1S3P/CAaLqsd2iIkvcf9wA
wS0JybNMxfVVA4SHiGqUgR+et+Qgsabt/PmK3aQ+o+0GiVUX50sr0pF/zCCx
eaZJAJeG4+WDBCG86H7uMGWvg4TnJvXtRDPytx4i7qqtGlDKQf3tHiJmSe/5
bZxL0tF3hoiiTZ63/ftw/egQUeMhdufPIdzf9GGiqa90T4kX8t82TPRkeHA1
7HF90TBRk0s7dbEa7W9gmDCwGdc81Yn8LUeI8hkdH30pfAgdITbkb7je7orr
r48QolMv+63ro/xhhMh3WlI4t4fcT7TZL+KVosoJX1HKP34RmoT4lBNvcX3O
L+IOEfto8VIc//yLMLftynz4EseNR4n3fpNiPHdS/jNKjGrFfQh7jePpo0Ss
W++GP7NwvGOUaI3rHCwUQf5Gv4nc9JrLhytwfz6/ifzk1qj3iE/RKb+JbXo6
5p7BlL/9Jmr++U3eQ63X+UN4mqr/cHSn/G+CfvDLWXkDrj/7h5BtPRFsvQfH
m/4QdQH2DRt2kXS02l/CRcd97ZUfOO76l3g9XnA7shD1n/CX+KHstXJhFe7/
5V9C6znD7q4qrlccI2KJ52O3ulC/TmOESOCdHI/puL8jY4RyzxapsiOov9ox
Yv3xsLsi83F/0v+IEINF11/U4Hr7f4R8fNe14fP4/QP/iLhZdk2Kx5H/o3+E
o1/QE20a6l90nJhnq6gZTOEPMU6ILtD0ljmI66PGCdlZjyVGD+D4/XGCf2qH
/2R90h+i/4wTW8THzdoo+zAQAc7id7/4XiQ/Yo4IWDc5ndDTQHm8RKBiXH5r
eCDJv3ynCEx6NTVwyhOU77wIPF8+xXY4hZxPlIrAQo3vpZXmuN9mEeid/fNs
YDyuHxGBxudG3Oo3uF5LFH5EudPeHiTHCStRkNX5PTubhvtdLgqLq3rVP8/D
9VtFYXnOzESTYvTvRFGYMsVAtU6LjBeIQlFgNc1enjID+TeIApPWrEq7juv7
ReGJIE+weieuVxGDfRWfV+2SJ2nCQgzknILK5udzyPVLxOCqYOUYP5UcL98s
Bnu39d7Jo/DzuBjMvPS18ts33H++GHzcW3vq+37k/0wMZNIsn3/xQ/7fxeCm
6vFJCoDyy4vDNJ9xo1JxkiZMxcH3Vfevz0nIf6E4sI7utbUqxvUB4pCWHSnt
dgDtJ04cbBiZCcN/SDwhssWhUme/xMw5yL9KHDIfXOIFVJPzyzvFYVDMNNpt
GvKXlICj+gdPXK5D/bMlYLN1WPXc76h/OwlIUpV7/DgB1/tJwDP128sc3HF9
jAS8WrDV84Iyyn9ZArRSb9x6nYfryyWgLcHK1jGQnF/eLgGG+60CxvMofJUA
x3kjdLlpaD+GkuAt47Q8NgDXW0uCMDA4ubyF3F+5tyRs2xzdkuhDxZOSEGOv
dCRJGtdfkITgPyWfHuyl8FgSIkM2y0mycf8tkrC99PHiGV8pfJaEvOgbf1Qf
o/zaUjB9jd+lRbfQn6ZLgQ9b7L4jxkfl7lLA2ndvxjRzXL9NCuaEb3cxWk7O
J85IwWpr80fr3Cg8lwLD+iuHXhUYkesbpSB3l93aU07ofwNSIFHutHYXkOOE
qjTkXLMPZelReC8Ny5edL7o7H9e7SINSYIvJ2AeSFgmVhrWiswMeVeH6E9Iw
MhYyQ0MCz++6NNwdiLjiEEHyK38uDbrXOpibES9FeqTB6G4Tx8cb5VeQgYRl
M22qMZ6KNpOBTY+vPGvdiufnKAPOvQ9+aTej/gNl4Kjfou13eGi/h2Wg4l3T
lKU3cH2ODIzJ67hfKcT11TIwO6QyLNcO13+WgRlBqeYBPchfShbOdksvu/eI
um9kIUX35TmvW3j+82ThrcLpYrcWPH9/WfDNF16N56P+98sCq9/Yuv8Lyp8u
C7u3NnUW/UD+D2UBbsYzXlDxXYcs9MQ1qlXjfU2IyMGJoch895t4HxjJwYxp
j3uiknC9jRyIB6/tm3aUig/l4MFpwdTKnSj/HjlQN2Cp3XVB/EqRg31BNWo2
MiQ+ld+Vg+Oa/JpHn3D/rRPj/Px6Cp+J33JwM3xOV7geme9E68iDpLJ/gy8T
/WeGPGyN89+j4Yz8PeThq7799m6MH4lIeVj3Ip35HvEy+qw8FKgQD8Qo/Lsl
DwY6p5bOWor41SQP+Ur9nqnJuH5QHvwkNHe6TML9qylAi5734sMcXD9ZAWT2
5bbPXIvrXRXAbluUTwHed0SYAsitLj6jM5m6TxXAeHKm6q4lKP8NBRiDC9la
VlQ8rADPOaezdmF8QvQqgEid032xbowXFRXh/Pr3g13RHHI9XxHGuDyhSAnK
76QIC2asmH/WHvkHKcKi7wf6XnRQ97EiuDCjd7xswPPLnfjeqiAJ2WE8/1pF
4LQPXhW3xvVfFOFRdhj/Xyyul1YCocKt0JXeqH+OEtxZ/m3rHCo/sleC7P37
KndjvkesU4J141lWayzQfg8owZKHKxdn6aP9ZihBnc+i5IMe1P2uBLevX9AN
l8fz/6AE1Z62I7/1kb+oMkxuX3Fg8Tn0X7oyrBjv0HphSOXfyqAVaJaVr4nn
t1oZXm7WvvIQ7SM6Shn6XDvOTNuE/FOVwTzud8XDZVS+oAwf7HUDr89G/GpT
Bof2D/tip+L+/yiDyhbz2OPTyf35KtJA1v9K5cVAKn6ggWCjf4r4AIk/aXwa
hObftvccRjyaQ4M3mnXbAn6R3xMuosGsG2lz5FLJ8WgvGvxLMv8ysJ0cpwfR
4IPj/ec5ZYh3O2mwOs/VaP9Rkp/vERqI6X6f2mmF/M/TYG3qu+V8HVLetFwa
pL9tmXylFuUppYH98pLQijGSFtbQYB39p+bN9ShfMw0aC9c3dxDkedC/0GC4
TUw7qgbPa4QGp7If/10gRo77SquAjsHUg/cqqHxaBZSMPEIS/MnxNI4KVOj3
dGdmI55ZqUB/4m+PbwbkuHC+CuTtvtnlQOl3uQr83lT9Jz6R3D99nQoEZOtk
Rt9He92qAtHeFZWvf5Lf8z2gAim3JZkls6n4RwUa2lLXCaVIOi1DBZZ5rZUw
e4/2UKgCNSkFvfeQn7BCBeSddCydalH+BhVY/XzaZ+5qUr/0Dypwes3kJfYZ
aO/9KvBf4GzNJdPJ/fiKqoI/zYjtNwPzFxVVOMCpfz51FOWnq0I4T+TGtDK0
ZwtVmJlTEzj8gtyf0FYVIv6j/3i7GO1ziSrYVizvf3QK5V+tCou3lsyyrkC8
2awKUFAyMKcX7S9KFZRGTBSCMV4TOa4KDMNDhcY6KH+qKjwogzWTf3JI/vmq
MEv8k0JuIYmnwnuq4Co8Litrgvj2TBUKs0uGhLUkTW9ThZCwhLyyPRjvfVeF
IfufyYxLyP/PxPqF1jFVl8nvi8irwbebdj5OS5G/rhqcNtrxsPExym+qBmta
LNNF/pHyCWeqwXrT+tRJqSj/QjXwKYlp7PBA+VeqQcuJg+KjAuQfoAbN8gO7
FgDy364Gcn1DvJYRqv6iBsoBKbqlLuR4WpIaVNz2HKX2Q2Srwf2g5yce2aL+
b6uBSIZDsfk/vJ+r1GCHw8xM6TaSpr9WA+JnTZ6eM55/pxpcOfJ59zpr9L8h
NXj6sc654T76n6Q6KLyPvSOD+JGmrg5rMqZJLPj/eFIdbOrr24ZxvnCKOgxX
jfE/4Xi0nTrkvy86/joD/d9NHTx9XrLW2iLe+alD6KLiynqsj/luUYfmstZx
Cy7ePzHq8LHjmLU65u9pJ9Xhb29kj/ck9P/L6tCQ+XpTViTKX6AO7bO4hht/
IP9ydfg3MOeP1iXkX6cOA+m+8i5YHytvV4cbamEZ6crofz/UYaWc4WyPNyj/
uDq4mguDPLE+lKakATczw1+UWFPxrAY8s/u40APHhQINWNMVdMxrFfK31oCk
/3IH3XWQv7MGhIbKGt4rpeJdDRjsXbXkxDnkH6wxEZ/xZMwfUfUHDTAt0OFs
bSPptKMacJvdKLUonIqHNaDYx63sTALib54G2DWtu7DUkoqPNeAwJ3mevBTy
f6IBssZRdz9nov5bNGCfV7Desgeo/68akDiwIfkalT+OasBo38GTAXhfpMlo
QnIHQ6xiM+Yj2pqg7FUbv5GN9s/VhO9Fhz8WMJH/dE1IH5BuubqJjA/oDpqw
y4coCI8QkPzdNeFBYYc3Yx/iz3pNuNJ6a/UmKj/epgk3If5qfRfyj9WEmtrC
1AZ75H9mgo6YGahThvrP1IQhTa9UKSo+LNIEe88DRl+wHkOv1ITZeRHn/mL+
Vt6oCb73G2IY70h/8v2oCevWvXsvlsUh+Q9owsvfqzwyddH/xbRAfZVzeXQX
+p+qFtj6Scr1xJHfFzK0oEVs5b7FHzC+sdSCnqjEmjkmJD7RQQv2B579xT5M
0uUuWjDsrl7ekGBK8vfVgt4spbsRYlQ9XwuibB4eCFcg6bS9WmCWEfNeWpLc
H3FCC2TORGfbYj4tvKgF80qKfq4SIv/rWrA5U+BscBTxv0wL/lx3D+1agPI/
1wJfR30vzmHEn3daUEFr/teniPFDjxbsDOipkVmE+P9XC7YafhRENFH5hDb0
hLpddHUj1wv1tEF8h3jGmbWIf2baAEtV9E02o/3N1oYr/N1bL08h91/uqA3J
x9kS3/+i/3tqg1eIxOHKKVT+oQ2fnZJH5vmg/ndow6muJNUwc+R/WBtWaYoE
6Qaj/SdrQ8PDnRc3AJWfaMOa+nVZy7HeRy/RhotTB3tpQxh/VGvDLosulbIA
tP832rDdNf30LxOqnqwNAbd/jnV3I/4Ma8Nqbu3JNymIP1I60OHbug4Oo/9r
6MCZYfdtRwyp/EYHThdpHNdB+6VP04Fco7Lg8B1UvqMDM78s1WMlov8v04FJ
v9QuHYyg6m86sDRjhJVnjfKH60Ac27V1Gwvl368Dm6xUPAqwXi88pQMundM0
VyHeR6frwGEHz5qvDcj/pg4kvDSLfoN4Vf5QB47J3Avp8ET+9ToQca3oX+E4
VS/XgUtnk+/rOSD/Ph1oSM+YTUtF/iK6cH88PvP+U/Q/ZV240DHvlEElVQ/U
hV19az8n4PnQJ+nCwJmqk9sw/yq30YX+gWnnBkfQ/hbrQs0XkzSbUqqfoguP
rVJYesmIv5t0ITZKeLsF90vs0YU3F2pDJtHR/uJ1oXF9tZlHOsqfogvDBrtX
B2K8Tr+mC9nCTvOalyj/XV2I5/oWbKxH/HmqC0OCW3qJnlT+pgu19qqcRa9Q
/m+60Fbht+L2GcSf37rwx/6yim4A+p+sHkg7RkVY9mB+pqMHxZtV15rsQvvj
6UGM3OWimWJUvqcHrPDx863yZD3dd4EeXCzLWlRmjPefhx4sWXdr5qsteP9v
0AMtZ/WKX1+xHhapB2HOeiFSfhj/HNSDUjGH6D325Hj0WT1wjAzrMQgl+4X0
rIn52f2ySn2Iv7f0YNfS9wE2Csj/sR58977OL0rG/mKTHqyIYcQUPSfxKe2T
Hkz5sN/bbQTlH9SDnHus4Ff5iH/i+jDrlzvtL9b7otX0QWk0i325HeMflj5U
DqZ+OQ1kP6F8sj6clHm4tHsEz3+uPtj4Q5tlEtUv04echze2P7cm95O2Rh+k
9b4Wm7zD+CtMH+5+M+FlYL1CGD1BS8wdL7BC+0vQB/G5uz6dx/4WPU0f6D2O
ndtk8fxv6MMxDVWHXMwffB/ow4uIh0+D6qj6sD68dArrdR1H/b/Xh1cGUw7H
dlD5rD5YZTvmtWH8JhzThxOxsS/yGej/igYwff/ypsBFiL8GBnBOdv3X8Hzk
zzeAzFkiw/4OiH9zDGByV81Nu0fof04G0PG0YZUc9hPTvAzA8sHdk+f8qHzY
AA66vc66l4/4s9MAYpz8nk5XQf5HDODtLo9h7evof+cNwE/8KLGgFfEn1wAE
vtuDLn9B+UsN4PyrU3qGp1D+WgN4nji4e6M28m82APffF+yGMX4hvhjAzMRt
2TRNxJ8RA6jSW/HkSD/6n7QhBJszPlbWIX8tQ7B5+mxz6Xwq3zaEjK4+s2Y/
5G9lCMlVs5iVMlT+bQh0/aOfl2F/L225IbwWX/CfoBPxd50hbP8lvi/+NYnn
wq0T8x3vvnwqwPvngCEEJWYa3FZE/omGYFXmXyhuhP6fYQiLnyS6XMF+r2+h
IXRsv3mk3g7975EhLNuQWBd2B+VvMATTA1OUIi8i/w+GIBn/suAG1suF/Yag
foCu9tmGyu+N4F3k8v3PS1D/KkbQd1Pm7AG8P8vpRrBNLcD/1jXUv4URWJ3I
tvPtoPq/RuC893Na/xbkv8QIzkqccHK1QP2vNoLm2weMX+H9KNxsBA19C6+4
n0b+UUZwp2D/e94lxJ/jRpDj9j7z6ADaX6oRqF4zzyk8hPFPvhG06R2pe3wE
5b9vBKkt3q80j2H888wIknL9v5W1o/+1GUG+zaPgW0sQ/74bQYT6gS/5IRyS
/x8jkPuq7dBSR+JDgiQdjiQeVLoZj/GOIh0ClzWJXl9BzrfQoMP25299vs8n
aREDOjzxKpibhP3JOjYdrE8Y/fp2kqTT+HSIP2/vMKZM0qFT6ZC8Zop8pCPG
Z3Po8Ldc3NuGTo7T5tFhaJ++QpQnSQsX0UGuu8HBFuOXAjc6hL4ec9FSx/zR
iw5TNweezFMnz8tlLR1O1h9r+LwPzzOIDv19PBFrQ1K+vi10OB/312FJO9r3
TjoUNQjNLe+S+kmIocNHQdVd5a/kfN8jdFC9OpgYsJXEa4tTdNjcGic1fJrq
39LBZ1ebMoH6r7tMh22L11/MvI72kEuHLL+Nz0cYKP9/dNAz2K83hP1vopQO
vaFjK8rw/qY9pMOFeevi8mPRXmom5DmX2b0Y84GCOjoU9jou4GxB+2mmg6PN
tcNHsX/kIpz43opDSRoXqHoKHUzY8vUCvP/7ftBh9eTg3U9/UfUVOtw6OaI9
VI3yj9MhaPTtGAPjNV9pBkR4jU1XrydpC2UGvFtNj4ydQdVfGDDZ+6dDRBjK
b8gA6TP7RvMCUX4OAxZN6TX/5UHyDzVnwNaNTawrnVR9hgGXXO6lH4ol/ZVm
wwBD51dLHjlT9RoGtPo4q0zPJekCZwaocuUbLs2l6jcMUK82a1GtJ9e7rGLA
Q+uQ3fEFeJ+sY0CT7mYl40xyvC+YARIiP+8aIj6Vb2XA6MrbBfHepP0k7GbA
t6KQeQ8JxJsDDKi5l9ls2U7il0U8A7I2iV07VI31/0QGzAqrNa+IItfXXWCA
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
FmeM8f8Bc4iS6iQaJvT9P10yj0Q=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0], 
          Dashing[{0.05, 0.05}]], 
         Line[CompressedData["
1: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
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 0, 1], 
          Dashing[{0.03, 0.03}]], 
         Line[CompressedData["
1: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
          "]]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 1, 0], 
          Dashing[{0.03, 0.03}]], 
         Line[CompressedData["
1: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
+/8HGk9Fbw==
          "]]}}}, {}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, -20.60813658229671}, 
      PlotRange -> {{0, 1.*^6}, {-Log[1000000000], 
         Log[10]}}, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, -20.60813658229671}, BaseStyle -> {FontSize -> 15}, 
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& )}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", "Distance (km)"}}, 
      FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
           ScientificForm[0., 2]}, {200000, 
           ScientificForm[1.1374240637967417`*^6, 2]}, {400000, 
           ScientificForm[2.2748481275934833`*^6, 2]}, {600000, 
           ScientificForm[3.4122721913902247`*^6, 2]}, {800000, 
           ScientificForm[4.549696255186967*^6, 2]}, {1000000, 
           ScientificForm[5.687120318983708*^6, 2]}}}}, FrameTicksStyle -> 
      Larger, GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> 
      "Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/(3Pi))", 
      PlotRange -> {{0, 1.*^6}, {-Log[1000000000], 
         Log[10]}}, PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 1, 0]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0], 
         Dashing[{0.05, 0.05}]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1], 
         Dashing[{0.03, 0.03}]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 1, 0], 
         Dashing[{0.03, 0.03}]]}, {
       "\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=100\!\(\*SubscriptBox[\(B\), \
\(1\)]\)", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)", 
        "{1,0},{0,1},{0,-1} Mode with \!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\
\!\(\*SubscriptBox[\(B\), \(1\)]\)", 
        "{1,0},{0,1},{0,-1} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=100\!\(\*SubscriptBox[\(B\), \(1\)]\)", 
        "{1,0},{0,1},{0,-1} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\)"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}, {False, Automatic}, {
         False, Automatic}}, Joined -> {True, True, True, True, True, True}, 
       LabelStyle -> GrayLevel[0], LegendLayout -> "Row"]], {Center, Above}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6767379872829037`*^9, 3.676738011020623*^9}, {
   3.676738059713125*^9, 3.676738085334098*^9}, {3.676738173331109*^9, 
   3.676738173738302*^9}, 3.676738393141553*^9, {3.67673889117903*^9, 
   3.676738892046509*^9}, 3.6767389945154676`*^9, 3.6767392525807247`*^9, 
   3.676739382168174*^9, 3.6767434064583683`*^9, 3.676813016985437*^9, 
   3.683315154579371*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{{}, {{}, {}, 
        {RGBColor[1, 0, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJw123k8lO/3MPCx74x17MY+xlhKSlLdJ5EipFRSmor4KEx7oZpQ0YKkTapR
KmmTtGgzpGhREpWEsRQtMmSLyuP5nuvXP73er+PMuWe572s3XRkTECZJo9E6
pWi0//////5RaVTKx0Hnn6OWQvQZ6rKOddZOPQs07yIlaN+9UXDfjMSvUw37
LtCmO5qik29S486rLLGdyCR/f4fK4r69k7zWBL34PrXNJfjqLgtjkl9CXZt+
L9PjsiE6s5Sqe+5yoOuJAXm9x5T5Qb8oRUvi+CfUq6qdnRZT9MnrV1C2zjr1
JwL00KHPqLcF1z+rVOiSei8oj52VG1R8iX2qqNWXLnT3HGOQ+q+pYWll+cfD
OuisasrcIvm2yTnizDfUbNZKad/JxKk1lN+7h/ct8rXJ9b2lwv3NNkkBcUIt
9fNoWc2BUS1yvXXUophivuZZ4s3vqLO3z9TvsifmvaeiRhi5de2a6MgPVLJo
renpa8Sh9VSFV7jx9gDikI/U/Nc2Wdx+DfL+GqgbcUZ8xUfEAZ+oaY3cf/lJ
xD6NVLS2RtxdDrFnE7Vp3XKuc7M6ef/N1LZ3+zWrC4iNRNQAo8rdYyNxloj6
c0t20yQmMaOFuj5ZNNTeRiefTwtFvznioH+PWL2VKtEayS+KJU5tpQ45zwuu
HU+s1EbNPKG8qVWKOLmNilxY/jznnhpapp0KdnGOZFPECe3UvxArX4tKVfRo
O5V+7P1S+STi+M9U6otzjU8mEv/+TI13rjT9VaZCPu8v1JTHT0zsVxP/+kJ1
NajVTbYj5nVQgvQrbW2NyuiuDkq8946ItoE4spPq0HY9bM0i7uik8kM+7LjS
p0S+n6+U39aQil/ZxC1fqbzrWw54TiEO+UaJXaprhP8U0Q3fqAV2jrNCy4kX
f6d+XHutkhpBXPedSpC5YLNKnTjgB7X1n+8s6U8K6Nc/qKgtPmY52cQ+XdTM
DVd/zZhO/KyLcks1EtoPypPv+ydVmxYvt6uS+PFPas2fER+7RGKqm9p55ZoM
OBA/7Ka0y9SyAwbk0EZiapXkKh/FF2h+sJgKLte++WU3iWeJqfFFrKsmbiT+
QUzxrusc3aFO4owe6tgOd5kPn2UxHthDadcHaUadQdMyeyihG9+3fiWJ1/RQ
yYq+jyZNI3H1XspwylpeqQqJ+/VSxWqvLIoqZTCe2kv5B91Nm5GJ5r/spVgz
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
98yG0YNFf0r+H2IZNKY=
           "]],
          FontSize->15]}, 
        {RGBColor[0, 0, 1], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1: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
uQ==
           "]],
          FontSize->15]}, 
        {RGBColor[0, 1, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1: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
           "]],
          FontSize->15]}, 
        {RGBColor[1, 0, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], Dashing[{0.05, 0.05}], 
         StyleBox[LineBox[CompressedData["
1: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
cGvwpmQ9kq+gDkmWgku+dc2Yb6MOmzMiNq2/0Ezab3VILt679HQ0mtqoDpP7
hsx/LWwm7bk6fD/5MemuOsnPVIdbpbf53R+aSPuuDrE79iV8LUBTzeowJalo
uPNgE2nvNWC6+2kH57loIUMDdni+cdxlRvIpDVBdL5KqHxFj/noNEOW7toe8
QnP3aMAqYW7zmVS08IIGbJv0yO5OBJr2UAPubn+admopya/XgNDDNcH5ZiR/
SAPCo+lyN+sa/2e2Gh2YmcF2zEw0zZQOd542DwyuRfMd6eAX2D5zZVcDvt50
OvgnTBDL/4cWz6ODzPodN24FoLlr6dCwmLt/pjqasZkON29zZjy9+Bnf7y46
tEkmzn6+HM0+TIdpZ1rZgcZoWhodgmq6an/er8f6OXQ40jEuxscHTT2gg57o
cbq2JlpcToeviW6+u19/wvofRv9e8KhwWjCa0U4HkwOSN5tV0cIBOiiuHb/Y
+30d1lfQhA2vleUWHEPT9DXh+HxxQJUdmm+jCX/2ftSya/qI9SdqwkrLZbf9
76DFszSh/c+G7JBANHe5JsQ9oDkoK6AZGzXBNHz5vviqD1h/uyYclm94kJ+O
ZidqwgBTa99vbzQtVRMuqC4oNex/j/UzNSF3qbZlfRmaytOElom59+emoMWP
R99fzomvi8ajuTWasPnK6zeN7e+wfrMmKK4IWlpdhBZ2a4J1WpnW3yg0W0oL
1Lfn2NsZoWmaWkB7qlVqVPcW6zO0YPzeWQHTr6MpFy2QuivfneOLFrtrwabN
J2wy5dDcRVoQ9tnowebqN1h/vRZckDl3//RFtHCrFrB2fUtZtQDN3qMFH+Zv
PKwhg6alaEEAg6lb87EW61/Qgttac78aZqGpm1qQtan124WlaHGxFtSamDBD
DdDcl1pwbG/gkGlfDdav14LqgctXVjxAC79rwZqyzFPeYWj2kBa8ibCP8nFD
01S0obdD8nalIZpvpA3etdlXL7ytxvr22rCxpXim4TG0eIo28I58Wz02GM31
1gYrt3ZlzlQ0Y7U2cCbM8tCSiLB+iDa8dug06xSg2dHakBQxLlYrGU07qA0n
g2VkdVag+We0wbV30pWjymgqWxu6arwWR15/jfXv/X9ftNENRHPLtOGzpvRD
j+9VWP+dNrTGuvq7s9HCFm1Iq37a/kIdze7Thucet1tbyl5hfTkdOPZQ/8Uc
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
C/6W/D+ypliU
           "]],
          FontSize->15]}, 
        {RGBColor[0, 0, 1], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
         StyleBox[LineBox[CompressedData["
1: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
+aA=
           "]],
          FontSize->15]}, 
        {RGBColor[0, 1, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
         StyleBox[LineBox[CompressedData["
1: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
EsWHGrDbx8D9rD45n1avAYvDjs7POoP2ql0DRrX7VanByL8hDZi58Qdl1we0
X9KakFXLbmptIdfL0dQEMcF9hbn7UH+mJkja+goHG3H/J2tCSsvw7Mo2PH9O
mqC2Y/m+jHJyP2gLNKFonuLQD1nEf6UmTD601S33Jzk/YKMmKD2bm+s+Fe1f
nCYceSSmcSkS8T+gCV/Ln4i3mGE8nqsJdndqr0reRvkFmhC6njk7tB39a4km
5B/8uFy3gYyvaDWacMDRPbbjPvq7Zk3w3XQjbtsfsh3wUxOiC90HlgnR/oxr
goLN/J4xX8RfRQvcDeukVh5Af2o00U4fWDnrEdnfYqoFx0xeh4Mq6u+gBbHc
ZW/bfMn9pc3TggcBtCNfQ9Hf+WmBQ8bUxulBuP/rtGBT17tuQiiqP2hB2Jto
5wBrEo+cfVpQ+FJvq44Y7v/xiXb/3FR2OeJ/SQt2vFumtn0m4n9XC65+1FdX
akT5L7TgQNbl3qBXeP4bteCpRkzT03PIv+9aoLm5YDytCfEf0YIttksPqaN9
zZHTBsULhzz2a6E/1NUGr/GVkacCUT5HG2iK2bS3KRif22jDqJHDooXV5Hja
bG0QzvjgU12O/FuoDU2hrjLvRPxfpQ3S53KWUHRE9UFtaNtgEnAf48mc3dpw
StYL5r9H+3tIG/hBUyIVsP7VclYbqLk/Oy9Ek3yIvaUNz6e7UhbbIP+eaoNJ
2wH5ZTcw3nqjDanXC0J8xcn4PuCLNgyb+VhJ12L+N6AN65eUv4roIPmQI6ED
kvuypunWof1R1wG5HE2FjEUkH1roOhCT71+gwhLF9zrw/rlyhV4Y6V9poAO/
plRc32CP9sdTB5ye8vyik5D/ATpwKW29r18L8i9CB+ze3t669Qnyb6cOWFyj
97goYz6bpgM+nsodvPXIv5M6YMks0FgUhfzP14H86hsRjl2I/0MdMPq5fatG
NeJfpQNPDr09YX6K3J+AjzqwpIn2s2Ij4t+jA1LZG0trsb6V80cH/rC+ME5j
vZxQ0gU7exf72YD+x0AXwssrPcTkMT4S6IJsa9mfcEm0P3a6UHCS8vuNAcY7
LrrQ/uNd+oWjiP9SXVC4f7ZFzBvzv7W64L6n/lHzb7Q/W3UhZv3KimV7kf97
daEvinWkKA/lH9WFdXc8p44WivITXdhy4FygYB+5X7Q7unD2ajCD0oLnr1wX
ujhWTVW5eP7e6YLAe/RVgKje36ELZvqfDpzB+nXOsC5YriecrK+hfBk9qE++
eFCiBvmnpQcbJH6O/KvB/WfpQf7RjWKLVqL/sdKDLQp5nJGVyL+ZejB6ru7D
tasY/3jrwdz+V7RKN6yfBumB0TvninlbSX7mbNKDrPeZlYfZyL94PeARiXoJ
7xH/g3pwRXPsafF0lH9aD8p6DzN6MN6j3dCDHzeXBz+LxHi9VA90st/6RWB9
M+C13kR+2PtVbpoof9ID96T2kx99ye/N6dWDjAhOg5Qbxl9i+rBl5DLtD+aD
Lar68HY7sfIe1vdjjfWBOkT7ld+F/s9cH/xXznatwnysZLo+zG7s38n/ivGH
uz7ciegfnXEW93+5PshQnY6//I3nP0wffF6oTUtFe0XE6MPL4x4NS4+g/92v
D4mO27VuTEL7c0IfXq07ZnHsMvLvij7Uft3/6bQa+t97+vCcvani+GeU/1If
At7bRgxboP1t0ofDy+K+/JyE/O/Uh2Iq1Uaog/ZvVB8ga29p6TGUL28AO/4K
+IN1aH/1DIDLOaysF4n2j2cAii93/fQ6L8r3DMC2kyperYnnf44B/Hej1So8
VpT/GcDB/NQySgHyb7UBXLxB7z64i03K32IAzVkrJS6Eof1JNIDEBS9kmRWi
eqkB/JwSQrF6j/YnzwDyumPvRzpivlA4sV7Yr0ExW4y/ygwgoWJJ0YZVyL86
A/AybryV5Ib+t80AXH+c+nrsuiifNACHr1N+Dw6S41skDeGSIy1uayzyT8MQ
voUep3cVk/rRGIawJ75hmlczyp9kCBWjy8S9DMn9CJhhCG8YOt27FTH+8TIE
I7EeWRsq+p8VhqD+b/nxA2tF+agh8Ay8dw1gvbQl1hCc4oRDLRjfxKYbQqJe
Sdf1MNz/HEP44Z+qbXYf8b9mCNN6lRPWipPjAx4ZQkJ27/4KccT/lSEonKH1
Nwkw/v5kCFObr7cUHkP+/TCExV7AS2Sg/L+GcP2p9TmXL8g/ZSrodK1+cWwz
8p9KBdPC/M3zbJH/QirM+dQlt3EXnj97KhzeLV7T4ojxjxsVZK4od86dg/J9
qWAVq5vckIL8C6VCid9dd+5ajL+3UYEvf+Bsjug+JJkK5gbJj893ov5ZVLge
czPzhTvmHxepUOdT1V66Du1PMRXe/TFgWH9D+RVUMPE2X2Qhgee/gQq7FixI
HeYh/t+oUF/+L7bJ2ZSU/4sKf6a8t4xcRNqrWFkj0LuUNNiVifZHxwgMhh8r
ev6H/o9tBLdolGUuqSjf2gg2u53fuCYV/Z+zEUj2aCf7vUX5PkZwe3Qk4NhU
xD/YCOyS1mw0tyb7WyKN4L3Pjw3zbqH/TzCCE4G5xPgn9H+ZRqDupvqspRL9
3xkjmHr4w1g91vMDbhrB97ZIqaO/0f49MYIlHXqvvlWg/ak1gr2ds9NkLqL8
ViOoiQmkXZbB/e8zgtVef42jCkT5vTE8K26a/i4Z8z81Y/gY7+Ag54ryacaQ
cvbCxWGslwZYGENzptAt5SPW7wljiKOv+FZAQ//nYQz0plcZc5A/hL8xLB9S
makYSPK3JdwYPoi9cQsQ3QfsMIaqb0eLb+B5oqUaw+q8BfPS/FF+tjEcf1tG
0RxB+VeNoXPbTdWdw6L7RmPIDLx74sM8tD+VxlCrVf9oJwXjjw/GUCe8ej5e
Bfe/yxiO1L1NKNohqi8YQ4lD1dx960i+pEvTQOlHc+S/fNxvZRqcebg6KUJA
jrfQosE1Oekq/nuMv6g0WLS0zK07jZRfw6SB7n3v9dRcUT1iYrxfaK+1Mu9/
7YgpNPj5WmHHFqyHEfY0GDn5bUdYOclHykwaMFLMN5z/IapX0MD8aLTU5yHy
ewoW0KBm6VBez360X7402Bj1bujQT7LtGUiD7Et5TrNpeJ5DadCi1dsRfJ/E
o3cjDRxtPln6J+H52kYDtcbwoYRQcj/T42jgv3Om+VAL2ptkGsxwiTsTs5Tc
f4uDNKB1juu+WYr7n0UD56Cabfewvl2TS4NNs6bO5IrisYs0uLxiWJhYTsqP
uE6DnjWRkpadovoIDd5s6VLXukzOp5TSYGm/h8NUV/TXz2nAidr5s5JG8reg
hgYxb+L1bovqow00+FFV2bzrFDnfs4UGfXMMUv2wvkf7RoOm8geNxC+y3ftz
Ao9qObmeTaL6Cg0UUo+daBsk2+njNAj//CnOKR/zbVk6UHnd/mqLyPkWqnQQ
XzTfDqZg/KlDhylXHVziHpLja4zoQJhzdN66IR/ZdLiv1ObHMCH5F2FGh/SB
g2Pbb4num+iwot68mPKexJsynQ5X6gYas+rYpP6z6LBkf5LTSjOSHwXz6FBl
LNtoivF+rA8d1OLXHcg4jfgvo8OxRvvPAheSf7RgOkwPGIhqziH52ruODuGH
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
           "]],
          FontSize->15]}}, {}}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, -20.60813658229671},
     BaseStyle->{FontSize -> 15},
     CoordinatesToolOptions:>{"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{
        FormBox["\"Transition Probability\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
        FormBox["\"Distance (km)\"", TraditionalForm]}},
     FrameTicks->FrontEndValueCache[{{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
             ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {400000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"2.3\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {600000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"3.4\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {800000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"4.5\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {1000000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"5.7\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}}}}, {{{{-20.72326583694641, 
           FormBox[
            TemplateBox[{"10", 
              RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
           FormBox[
            TemplateBox[{"10", 
              RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.907755278982137, 
           FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {0., 
           FormBox["1", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.605170185988091, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {2.302585092994046, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}, {{-20.72326583694641, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.907755278982137, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {0., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.605170185988091, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {2.302585092994046, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
           FormBox[
            TagBox[
             InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
             ScientificForm[#, 2.]& ], TraditionalForm]}, {200000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {400000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"2.3\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {600000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"3.4\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {800000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"4.5\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {1.*^6, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"5.7\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}}}}],
     FrameTicksStyle->Larger,
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->800,
     LabelStyle->GrayLevel[0],
     Method->{},
     PlotLabel->None,
     PlotRange->NCache[{{0, 1.*^6}, {-Log[1000000000], 
         Log[10]}}, {{0, 1.*^6}, {-20.72326583694641, 2.302585092994046}}],
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}},
     Ticks->{Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}], Scaled[{0.5, 0.5}], Center, 
    Scaled[{1, 1}]], InsetBox[
    TemplateBox[{
     "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\
\\(B\\), \\(1\\)]\\)\"",
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=100\\!\\(\\*SubscriptBox[\
\\(B\\), \\(1\\)]\\)\"",
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
      "\"{1,0},{0,1},{0,-1} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\
\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
      "\"{1,0},{0,1},{0,-1} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\
\\)=100\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
      "\"{1,0},{0,1},{0,-1} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\
\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\""},
     "PointLegend",
     DisplayFunction->(FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]& ),
     Editable->True,
     InterpretationFunction:>(RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                   False]}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                   False]}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                   False]}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", "0.05`"}], "}"}], "]"}]}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
          ",", 
          RowBox[{"LegendMarkers", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
          
          RowBox[{"Joined", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
               "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                ",", "True"}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               RowBox[{
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
              BaseStyle -> {}, BaselinePosition -> Baseline, 
              DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
    Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, -20.60813658229671},
  BaseStyle->{FontSize -> 15},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->False,
  FrameLabel->{{
     FormBox["\"Transition Probability\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
     FormBox["\"Distance (km)\"", TraditionalForm]}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
         ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.1\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
          AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
      400000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"2.3\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
          AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
      600000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"3.4\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
          AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
      800000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"4.5\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, AutoDelete -> 
          True], ScientificForm[#, 2]& ], TraditionalForm]}, {1000000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.7\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, AutoDelete -> 
          True], ScientificForm[#, 2]& ], TraditionalForm]}}}},
  FrameTicksStyle->Larger,
  ImagePadding->All,
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox[
   "\"Resonance Destruction (\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/(3Pi))\"", 
    TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJzsvQuYXllV5/126pak7zQ0ILcG5I4RQS7e4Iv3mU8MjPcxyqASBZUpGbzE
EcX4IRMcwcAApYABJYBERgI9BpCMGAEDQ9FtjVADxO5wCUiAACWaboK9Z/3O
2b991vumUql0GJ/H+frdT6e6Tp33nH1Z67+ue+3HPvHpP/Wkn33i05/840+8
5jue9sT5n3ryj/+Ha7793z8tLk1dNBpNXTMabfita0b8fxmN/Gfic2/+OePy
P8fVV3b/v6mU00fLfNe7reXA0VP9jSuLZTvXtu0tK3FXd+3n05f3df8/V04f
O1i2dl/eUZZOl7K0sI1hlj2LJ/sbfyF96VXd/8+WlaW9pZ+PLf3P7d1bzrj/
1d3/T5cTh/fU+0dlYbnv4S+ecd9MKScPl231vq27D5XT9ny1TsS4y8GdW7pO
7NjR93rH3qWz3D9XTh3d33di56Huu/t39C/adfDYmdPTf2ljWdq3s2zZuqMc
On66H97pY2VPvGzL1p2lDqQ8/Zwr1T9tqpw+tVJWVrqvjTZ4bSWuneqePjrj
cfZ9sa7KzgNHu+vHD+3uft+y+/DZ+j4X/5wsC9v6Qe7cvatsYfBbd5fjq9FD
W4KVIz3hdP9tK4dPrLIEr6l9P7m0v+zYtr3sPXJidMairj4V/yKvfqq7MFUg
m5MnT5STK6dGXzt50/XtppWyN6Z9657F0ZWrXJvqrs2W08cPlx1bnOlYyx0L
5djp8tD+uT+7yiufWq+dOnkyrp3s2GNmlWuzfjfI7cSJk0Feq9+32rUfWud3
13rHub77+DS2le76yrq/O7vKvJz/e0/1383vPcfz1nzvOb77fYkKFraeSRle
6yEBxj1ednVUsb0cWDpWFg/sqpB4ZFTJ42fWJqIntl4syc0Bw/XfrQsVrE+U
ffNbN3SXZ/uXHRXFJ/48lf9cKXimLB/Y3V7cgcw+xzDr19Pfu++f48/DCtVZ
WVi8kLdNr/HVC3jsNif/xJEyv3X46iiEwpETZcOFdvisy3oBT7bPxw/vrfLe
Ps+Xw8dPbbj1L15Xn2/Vk793FR6ZqTxy4nDcv2VXOVrlcjmJ3NpS9i2dTHw5
yVuBB0f3dc/ffeRku3Z415ZO1i2ulNHX9Pz10+tgxZ7J7tTBicrEaPvusm/v
3rKwsBD/7SkL+44U5P3inirA9x8px5YPlR3dM3eWY7X3a/y97+UdQ8vbVydu
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
8umTx8rhuL27fHzlVjxpdvWluIA+nTy21D3p4KEj5dhKmT7/F8ys/pVb8aSf
r6zRJxzsapx6aGEPcPygM8m39y0Pzru1UhUa05aX1/e0XJ4wSHbNb+lE8fKp
cs73bFxX5Da9aroRJNN8/FQZ48SN+RX1e+eMBg2vuD4/a26VZ036KMf912d/
0Mp6HrT17A/6lu7H5nJyebEsd89Yrngz/sA1TPo514Dk0ZWVISm0lB07dnT/
PJd/HprfeHlZ3N2j1+6F3Z3pM7zx3IbFEFJbKvMtha1Ltm9ehO7d/SfGd+a1
u67z2t0u4Ltf7uf939yX1dboId2/lWRmOiP+wO7BFZ9RZS31tqfQ3rTdsvNw
9/cTh3d1+HW8VBS8jWL+pfVlDYpRLhyr2zJ2j0VI1tbAl/fhU90Sf9u6dWsA
/5bQzPbWaMnxxYNlz+6FcvDIwTD4tuJiWi/1/PI/w7V1zAgovXToYFk6cXpN
NalFME4eL0ePHuW/uMa/wWsrp8O2qTO7b3/ZvX3I5PsXMh0/2P2YDSm0tWzf
V/2Tp46UGmBebRSlfZ6zvue2IMnK4U69v/DnzrQ9U9trLGv7wuKqEm9dD3Vr
CWFtdN4jyydaRsp5P+zHbvvibV+87Yu3ffG2L972xf/Lvzid/1LKb7ZrD/2X
OZ7bvnjbF2/74m1fvO2Lt33xti/e9sX/P33xufUPPxPt52sFlpsu4DkPivao
aBf6nAdEe2S0C33O/aM9PNqFPud+0b62fO0FP+e+0R4W7UKf85XRHlqLs1zI
c+4d7SHlIRf8nHtF++poF/qce0bbEu1Cn3OPaF8V7UKfc/doD6rx1vN8zp/w
74ZyS7nlaP3r3aI9sDzwVj8sru2PNor2lvKW0YfqtbtGg18u4LGvjcZj31re
2h77FdFgnwt47Gui8dhD5VB77J2jwQUX8NhXR+Oxf17+vD32TtHuE+0CHrsv
Go99W3lbe+wdo8FrF/DYV0bjsX9R/qI99g7R7l0LO93Kx/5hNB77l+Uv22Nv
Hw0OuoDHviIaj317eXt77FXRrol2AY99eTQe+47yjvbY20WDTy/gsXuj8di/
Kn/VHntFNNj2Ah77smg89kg5MlKq/nK0DdE+Uz7TthZdHg3uu4BXvTQar3p3
effYq7j2qfKp9qrLot0l2gW86vei8dj/Uf5He9WvROPaJ8sn26sujQbzX8Cr
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
ty9s3mJZMpm68kCbk2IMj23VXks2UyNTHcahObase3xLXMPjJXkqYNB1JU9T
hH6t/Fod73RTaisLi5I6lkFYidOADi26IXHqiMEVJXESZeLa5eXyRpxkfnMN
4HWEbn0PhmzEaVZYMHgjTq1RHP2NOJ///IEMZ2clTlVv7PF/+qdGnM45LgrX
0A0SsLU90jUSOlx/Xy6u1ndxrqycOFaWl492Z5HyObF0uBxaPNbVH18rEyBv
+JUwVdTxokqYKuBoBxKmUYa7l7s3wnSnL75KB6X2F4TYCBPCd9v/5nSNbQP8
9hX1Gs53iBjN0aknsiWTXDXxXgwErxFV5xqOe4lV7wuTLrFujcY1tgxLrIow
9DiJ1WBUmISNWN1sVXUZiTUrwRKrYeQKPhKrYd8s0k3t3FQ2NWIllZxroLsj
zFqKxCpqsqfNGRNWSGFvxPrc5w7EOjOjaiiS5qCME473xEUV2NnSbXfMoXta
edq5YXRTOTZ2Ysh8oS7GUt1Yt3XXoY52V/P2b64jWF4u5d8s/7IyQvJVNIE9
ku+roqmRSL6CR4jyRr7ZU+9I5fT7lfu1GcFXawqk5MvuYoyNTL6SPrqUi2Gc
CFZy5gz34cnwWs4RkHw1JbBlJV9UT66hTki+oTJ012JFGvniw5TQJF/Nykqr
PhLDFPOa33Rf6MlFbkrSdpEWZrYkHQzS3i5Jm/XKbiVJmkATOSqIXUd9OJq4
Kkmj9HCNPX/OooCEv7+RNLtnJenp6cvq5cDcdjUsnxwJcC5da9ZP1cQeqUKh
Oq5B1UMuS3+A4pb5PWVv3UPZHZ916mhZ2NFv9zxw7PRahP3oR8ePZ/dgEyaY
hC1SwHIStl7KYNFG2IY9QtA3wmZaKeqETuxgndbQRRthYx+ZxCxhg7/sNOI3
bV8Im9R73HZSjTo2oRqXSccrjDdpiITd067lHAOJXeoiYd53sB1IxUdij2cX
9X2JnfQn9dPL6jUca3gChnFMt70TtBvLjTOp20xFZgCxAftaBnCqq7iUAfQT
o6vM1lslo6pwXFpvRdvBi41H3Dd9RzT3NKw2QfKFKWPsT3TCdaFwn6cCsRfn
v0XDh9p9nvWsUecBgIymphr96WjGMAJBILQN9Rk5H5n/gqlGajLoTPi3CN5I
XBAM/SBO4RjcfReEuC5Oqh6nha6awXI6k7C08yDPkqIkJ33bt8WP3b2TLixQ
OUmth4i2nKTDPhiucZIaBMCjJflH0bh273LvxjXk5FoRR64ht8LkCLnGIA8T
K6mpcKJSu4hu94Srr5r4LpqQ1zQNgqMq18w0JzY7gPCyoNU4RraeCW9yj25A
VBW5h0w2rpHKcFnqE4ucucctqLRAgpl0qyUiJsNjGNZyj15YWihmco9u6U+X
Tzfuyam4p8opucfd4Pg1fROmMc5A3EhOlOFAIjSTAR52o145cY0sC7nHGBME
0n2e+cyBezZsOIN7jGexoHLPP/zDOPd88YuDdpXdBj5DZQ8rxDHoCsMdcB7c
0yf4nW5HN3ZnxtU0tHNwz3d9V/z4racrJeUe1wf/m5Tl8m4PLpV7DMWwYVY1
AK0CNyphMd1AKmf3LPdsk4LD3i2FchRbQ5mYzFFGRaDomYnnESh0YYUjuPuq
ie8SfPCaIE9kV44ylV7Zg8rhuEmV4xobs+Wo7OqSo8xSxIiTo9juyjVyTeUo
nXm0WHCHBJC4/0s6F/0xeeQoAYsW4CBHGeIII7hxVE4G/nz5vJ0iyIhA5TcX
g+0J3IaFf9XEgHAsTUbQITQn3kpfZD/IUXIICkj3+ZVfGTiqr24wxg16JNEJ
5ajPfW6co9gIlo1LDUmfwb5VnhFysC0UhExlK/RP97ybcRHW+fq0vRNlT91h
s+vQsXL84M7u/7fv3lcW5tvhqGtx2fdGR0e/3acThwSVsgmMsqWM3zTOjDfh
kpECddMgfFXrDY3Rbi43TypohLVkPvMJiDg4f3iO3foq8xHyfmzxVOmhi3yX
ELnv0DmPqSkNOPeAg/Rj9COsq3ZNxiHqL/Pp2JfRSM9y6CZrA0SuqQon+tSG
1HfyKD5YPtiYD+WV+1h7mS/vK/9A+cBM6r77ZnNOJ+SD/iuZaHkjoWVIpTEt
rCoZ0ngcUVYZMqfKfqp8yo4ic91q7gIpx0lYcvJAR66FbtOuofDhikAHuKq+
xtQj2pfKl1S2JSMkpHyq5UuAovv80i+tyafSF5s35NO8B4b/Pv/5YRh4RBh1
fgY2Ic/ApeGaus74peVTo+S4ds/pa+CooIOd/jh/MFTg08ts9Gq7OrYvHJn4
2uqMun17/HjefPfaENhyAUhTJ7MxqtsDkN9SqxOPOSOjmltKWykrUpz+Gr4u
o6qf4m3Ts4jxgOccf9HRclR6B8MlWPkXnIOQM/8aTRokyIDheB3kX3kFiJG0
9HDh2ZjUskJwN/7VK01UXtpwRnIuk2utX4kcQMdDsEXBL1votItZa/ybqyjE
9x1SNqdyzpMzLPm4GAxJ/lX5owXPy786o3m7/JvTL4Px7GiOS/eEP9ulJ3Fb
Det2fw+bUV7Ek8SfUb+dW3VlMuZlZbcPVZj36+Ymkn4wU0edprqn6qc/vZgP
Ej8dl14VUFYO/ru/G+fgz3ymNLcCU8v97MZ0BUkl4xp+frlV6xXAWoNbTTJk
L9vy4mJZPnZy9LA1OPIX7v3HZbSn36H86PJo6Zod9HVOGkcaqMXpIP05f8gb
OVKXakVhaUhlKyRrGwB5uRSTxkcsm0EE6JAfLx9vOq+68V3LXWt3Njbxh4Tn
J444Ax9B7hfX3iCFvy4aqx9mjwxpgCOEY2Nc4YVsSe8zDAPkSEhGR/HSeM2w
Q4BEY1yj8WzU5ye7HSfdqeghLrvBFHaMybjZBpYfviFandzWdwoEWN7btTVg
Q3tfeZ+3Yt1Z3kZmVseMtWuLk/2IMrPXaNeV6yR6A1OIF5k5Z2neWG7U3gQ2
yNkKC7fq4bOdOcNtoB8ftM/opdxI4884xZ1vUQW7XWZ2lxQt7Gq/bvI3SQQy
s9fwYHef+fmidzMxsxgHlMvMH/vYODN/8pMDM7MKTpmrqpOU1ZKZ9csRDliD
mVdLC3Zxd9/1+WX0gp/pHvOw8jAZF1LnEinQMi5eS669obyh0Z9WGpv1ZVyN
BNpHy0ellyxj7KwGLHv4ZVz1H+6TcY2ywhbSGlU8EBTsb52u66Ec1U6idomB
oduX28vMZC0lipZJXc1BbRyQCbS/rNIZDP4T/SHm3SZ6/v495XukKX1auB28
pjAlxCFf628iLMxPouuTUT4UAilAVwR1E+Xr7BGWr0mw5D5yhRwG6/ngena0
S58rzoSJmqMYlgVwrl0TDPTJkj54d+Rro9K0kDTSv5APNcnXOeUuVHz5Wu2E
0hfyNalDXKu+mU4Rj3mXMc3kySFzO4L3QL7Wb1cRxq9LwkS+5eu0/6Hnl5/5
mWJSfuPrzU2eEPPkg7J5h9N3NmzX/Tx+vMjWihiqPU1aSeQjyNb6DoiHrMHW
X1npKJe1JG1t77ZRTNr6MnWkhed9ZWDei/pQVcCoMEBijdqVMGBEC3tRchUy
Q69tMKDYooVKLHmpPWMqOjitaczCnj7mOvZGnGBe8FGXgiOEBWPNYVaesceP
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
8Ivj10f6XfSGmiLTNqGZyUd7d3m34IZZWg9gztjL5ttJhsUFQIAzYy+SfZyD
5sbOmcDUTI6ehr1KNyrk+KwsSOxe5sZQmR20OfTDoOc6QqjqY/eRNahhL76g
kdYuN+zNG/kC070VpwdwROqVPUyPb2tiRY8MxsacSgJjPBBoVUOXZ5vLnWcI
fc8tzxWMyVSy+p/86tZ0WvTctUnL2Fa81s/suhHc4SDM0s1L6ymTeJAnS5yS
FiAWWxeJHLUNdcieH0ALTL+sjjCfks1mEHP9qJnd37OpS28Bg6UQN2qZEYVC
M5mYY0PMhCYqLk+mtYRwb7jsZhJSdstDAqYe/vBSrruux+UXvUhcNrygsOoT
/yuv3XJRGd3zhnL7bW/vOIuaajKw2i0tiHCqfsWohh9O3FiNbXyMtZBooUO4
4MYgcYDHPK2W3CspmowRC7++whJ17/aoG+G69mwL5LueclV55b8dppuouSuV
edYuBYUL5O4FQL9UG8GdhK6EaWEKKpsWJ48L5mBOgTxVA24+/aBLgVxYJVBt
EChe7VylpOkxgOM23MoCuXvp8aTE151+5MDkAubs+lA8BGN9E+wZ8e0q9hnI
3fBYJoAcFOh1n/41uRZi2CwiJZpxxRcuC+TtaKw0TvwNNVOgUWSqndKA3NM7
K4q2+WGzlD5DwxRo+28tb/Vx2e1sDy0ORgs54rizbujOIXyGKXTZP3U214jp
PlX++4Ic3/qx8mNTdXV0a5JPqkIey682nW0aAZwYhH0SDzGdrLQggOvr5xkW
zQ20EcBRIixRJj9nORz2YY5teryEK02ovJ6wB4Q6tx7KlJeUVGYmjMN1Jg/L
IKNBANefEh1uAG4tZlo8RwA3R0nw0TlBJTMBPNdRo1niSOZD5E9mEtmYz+BA
AXwyC5ZcTQE8He3dl1qluhinqwPgz32uAJ4UsW52kAFTDnLmdLn66tK99Zpy
jTzrbmFaGBViN/yZP5R3dvrr3vQ6qv4xOajbzgwZzDriVU8oT8jpm3hKSsJu
EQxj4Jw+5elysDsslf+2lvmdO6fWuWNd+H7ge+fKvY4Ok036luvUtn6VIZAW
5CJ8p10PzUmpV4nZVHUnbDxZog1TT/i2Fifbe3VsheUpfAum8IDZJsEfThfE
qCInD+iVYXekuwnchqyvSrcrATgto6w6fKF8QeyFp7EpSQnxtclGabjdDq1O
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
iAKBBXVfLSKn7xATOvYtWlauXd8i5fk7X3FemXz5AeW2P75lyHMVIpGVypKM
C+2i8hrlOfoX88MHV72tz+7KKV+vqo8ZWVzTt5/TIzGeO0JXKT1nYhXzJD4j
hRbiUdExFrU3jZk0MYm7PB/8vao1SnTzXUciWjZV13V+dfzK9F3p1Bl+Ml/q
AhQs4NRftazxMOL/PTBGWHqgKpjzQzvHXT3Xpl6eYgh9OHJmp2xknDgBnUfL
IfaAmn4NNZs4WaoX+wx0fPIdTGYYLddLoiMXxy/LL0UzYjPJMZtGKj8JQAAh
ETlkvUyGZHSRcz0E5MV2UC+hv30lQAGBnnQP7OKWXIy+IL2d1QAmY7/m3OMq
8QUEqX1wAAICeRg0c1GlTo6+8Htlzbm3fIRlz2T0EVRuN/OSQIHJ4ZwvLC+U
HWnLRgcIht9dKKSDc0i4rbty/1XOr6yT4coaLOQ5su9pn5QTlWNvq4RS4LOR
Bi9Y+HOjTNRscxrizh3KlbTuCM5nTmqtSr5bkwz9TLo4VuqAfCKYEJmNmMPW
jU+1/215dl02u7OgxmreYyGDhS3Nirtey6vfl0IMAwuk8IjIgMMagLzguRQV
WChm+dXl1WKBHItcmZYjSJQcT8hVhKugVRnP9XZbZcr+G2N68nelEMNQxnM7
VPYK314f6WOsgEFYzPKBtrVS+DdQAAwXht7iVidN+DMTHPBdyKJv+j6S7ML3
Vao61FFS+GN+Y1TiSIgA92U588zywhNiNiXm6Ev5yAPKhTdvIwzhnxhyjzf+
bV34W51XDnnKpyeuxn2e8MP2+8N+c9tuHemXxXacVUVU/hu8mqYvYhokIWyU
RitjH2nIpYw2QY1lRCx5DXRPnYISAm9JVP8Ca1dSu0YAgCjfW7ZurCS8bl1Z
v2FDSw1rQWwVBKzfUMXNxo1lrYFtk9UYvRZ1mX/2w78ok3PuUJZetjRAwfyy
l8anGl8ET/yX8i/KRCLo2f2PK48b6G/llPcW641pZOwX8vB18FH8IrvXHJ6S
bP8k4KVN/+KAMzo0+EWvr9x/B54ZjC0hUPHxehjuWSWea2sYJpFXogL0IQ+t
+bZVqYTrDCDVHblEq1cFuQsqHYtWzcTbK1oIRS970kIqLGR96w59w6b9WZWt
vnm+pbbyswijz3YpMyB0DNQJ8BGWDrUXUK4XmeqdjDHS3YGGzoLy2gd/aDgC
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
kfuFG+8tF+48o2zpH7bEzd7rTbab7r7AU/yOH71kU/nPyYPLG4/+4ELf8fu/
31n+z34W4/uTP+nj+4u/SN9RWWu7eNxxcd9rXjMS2iLfIdDYu/u8su2kzVTC
GBZnpqxeu6Fs3X4em2jBnXIj56CKn/vMfK0cNndJk1ZxCA7LpZd2FvTkJwdX
uuEN+/h+9rP0Hb/8Zb942GHxHZdf3h2IdRoW+w6JbB9pxFtPLOvWHBnfMVl9
bNl80rZy3u59k3st8AiV4k0P+mB7+6dPODstRnzEUGS9vPe9I3L+dr90u9uN
foNyo94mtG6PuI8NxqXPfKZMjr76j8i7fvOR7vojy7pNW8r2XZfcd5Gx/3TH
hU3c/dHN/3OhsT/rWR1XJNCjWK5Mahz7U57SL77xjXHfli390kMeci3G3gum
b920sZx0xi78Bwv9QhD8h7f6Slk6ubz87NsXpTGrZdSxVnZ7fUTdMJYl8C+6
WJeZmSYmY9hVMrQxHn540NfSpXHb5H5XP+yFsJrj2/q6r7envuVJ2xYa30Mf
2l/6sY/tB6Uf+chUh+DGN+4Xt22L+9as6ZfqJv2fDu6qK64stzrwgnKXFeem
wWk3D7l60EExI7e6Vb901llpcAK3u90tBnfOOf1SHfd1HZzGjtcc/fH2iFP/
Oe+keOlzntPf8JKXxEu/+U13/hh31lANFxN7vuMd+6VTq8q80H64xsEtKZd8
/Udl2WRvOeb628oUvwod2RX7+c/jvQ9/eL/05jen8R13XL/48pfHfR/8YL9U
d/x1HZ9axtr7fq0cgIrwz6elyQta/+pX5TmxLX71q85eMXvWLRLj+/73+603
vWkQARtqpnPkyUK5MddifN8985dtfP/Prf5jofFRdoOXbt4ck/KmN/VLJ500
xiqVO9yhXzzxxLjvne/sl/7xH6/z4G4+XPuDW2yvfPDy8oMzLk6DCwHz0Y+W
AQXE5P3mNx38MO5KDTpWype+1G/tk6pR7corS7ntbTterWLv3v+zUX7mzd9s
zz7q0PMWGqVT87nPxdT8y7/0S3WKws5UHvWoMh/mvP3t/VK9f3IdB6dt5NC5
PU1F3f5PZ6TBRbOkiy+WPcQUVh6LCGwcpk5KjE8mdJObxK31z23uhvlbSBxf
iyG+4y172oPvsvz7Cw2RSm0diMe8/NM/lVBCA8M7z0miO3/13wtihTy4po86
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
EtjvrftvezKrZw==\
\>"]],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    GraphicsBox[{{{}, {{}, {}, 
        {RGBColor[1, 0, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1:eJw123k8lO/3MPCx74x17MY+xlhKSlLdJ5EipFRSmor4KEx7oZpQ0YKkTapR
KmmTtGgzpGhREpWEsRQtMmSLyuP5nuvXP73er+PMuWe572s3XRkTECZJo9E6
pWi0//////5RaVTKx0Hnn6OWQvQZ6rKOddZOPQs07yIlaN+9UXDfjMSvUw37
LtCmO5qik29S486rLLGdyCR/f4fK4r69k7zWBL34PrXNJfjqLgtjkl9CXZt+
L9PjsiE6s5Sqe+5yoOuJAXm9x5T5Qb8oRUvi+CfUq6qdnRZT9MnrV1C2zjr1
JwL00KHPqLcF1z+rVOiSei8oj52VG1R8iX2qqNWXLnT3HGOQ+q+pYWll+cfD
OuisasrcIvm2yTnizDfUbNZKad/JxKk1lN+7h/ct8rXJ9b2lwv3NNkkBcUIt
9fNoWc2BUS1yvXXUophivuZZ4s3vqLO3z9TvsifmvaeiRhi5de2a6MgPVLJo
renpa8Sh9VSFV7jx9gDikI/U/Nc2Wdx+DfL+GqgbcUZ8xUfEAZ+oaY3cf/lJ
xD6NVLS2RtxdDrFnE7Vp3XKuc7M6ef/N1LZ3+zWrC4iNRNQAo8rdYyNxloj6
c0t20yQmMaOFuj5ZNNTeRiefTwtFvznioH+PWL2VKtEayS+KJU5tpQ45zwuu
HU+s1EbNPKG8qVWKOLmNilxY/jznnhpapp0KdnGOZFPECe3UvxArX4tKVfRo
O5V+7P1S+STi+M9U6otzjU8mEv/+TI13rjT9VaZCPu8v1JTHT0zsVxP/+kJ1
NajVTbYj5nVQgvQrbW2NyuiuDkq8946ItoE4spPq0HY9bM0i7uik8kM+7LjS
p0S+n6+U39aQil/ZxC1fqbzrWw54TiEO+UaJXaprhP8U0Q3fqAV2jrNCy4kX
f6d+XHutkhpBXPedSpC5YLNKnTjgB7X1n+8s6U8K6Nc/qKgtPmY52cQ+XdTM
DVd/zZhO/KyLcks1EtoPypPv+ydVmxYvt6uS+PFPas2fER+7RGKqm9p55ZoM
OBA/7Ka0y9SyAwbk0EZiapXkKh/FF2h+sJgKLte++WU3iWeJqfFFrKsmbiT+
QUzxrusc3aFO4owe6tgOd5kPn2UxHthDadcHaUadQdMyeyihG9+3fiWJ1/RQ
yYq+jyZNI3H1XspwylpeqQqJ+/VSxWqvLIoqZTCe2kv5B91Nm5GJ5r/spVgz
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
98yG0YNFf0r+H2IZNKY=
           "]],
          FontSize->15]}, 
        {RGBColor[0, 0, 1], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1: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
uQ==
           "]],
          FontSize->15]}, 
        {RGBColor[0, 1, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], 
         StyleBox[LineBox[CompressedData["
1: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
           "]],
          FontSize->15]}, 
        {RGBColor[1, 0, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], Dashing[{0.05, 0.05}], 
         StyleBox[LineBox[CompressedData["
1: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
Wg==
           "]],
          FontSize->15]}, 
        {RGBColor[0, 0, 1], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
         StyleBox[LineBox[CompressedData["
1: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
e4HOd7cA65i8kng2+fzoZQGuI3eiCw+jPVb//+tP4TxvJ58nN1pA0+W1QaJ5
+PwpCbIAF2fXwbJraGGIBQzNqz9yQQWfZ5MjLOCrwdcvO7aTz7uxY3kmcwu5
9Wj7RAs4/v1RdeMUfD6mpFqAcIdW+94MtCjdAhY6KL1WkcHnbUGWBST+jFhx
bAuad33s8/nsO0f+Ffl8ftsC6ioLtu50wud36gMLmE1feu7lZbS43AKcK49e
sdbC+YD8agvI2fZ+UUgkml9vAUbHt6+814n2+GABkfuzU3tX4PwCrdkCHPr+
VNs+Q0s6LED3n/4Ln+k4PyHssYCyqpad0Tno5MGxvM8RR6+YkPMdUpYQ7b5g
qOoY2l7JEhbQpM+2yeB8CUXTEs53FcyVDUeLDCxBdKay07wbLaBZQpej0TbH
AJx/4dlYguWM30XLP5PzM/aWsLtG5eN9Ns7fUKdZQsr5wPE1gWjxTEtwDIzw
Xn0ZnT/XEtRzRit3fkXzF1uClkWErJIVzh95LLccu/8uSbRaR84n+VnC6tUl
TWUX0JIASyDk38V/bUILt1uCrO8VhURLnL9KDrUE7xSDb/fW/2++yxJmcVRy
t15C2x8cu54rXp3Zbf+b/7IEJ68a9kYWzp+JTlrCRpdZoze2oQXnLMFj4dmB
iAI075IldDo/vNrQR87P3bSENovCq3cdcP6OescSJmefPWbFR4tLxl7/bN6A
4VN0/mNLcMj225+uSs4fPh/7/EZmPbq6FO3x2hKCL1mtmZVOzid+tAS9ceqD
gS1oScvY9/UnimXKwflJYaclzJtZleS3G5382xJcFq1/bP+InO8cGnt/wbpB
x5VwPtRexgoKDNttopehKSpW8Gh0gkBGgBZpWYEgIytc7wdaYGQFUy7O9nsw
DedfeZZWsOhq3PCvOHJ+lmUFHcOzZB6+QlMnWMG7C7UWppY4vyuebgX31v9W
1dyJzgcraOEq7EsTovnzrSAivIN+n4rzyR5LrMCni/qUtxZNW2EFt2xOmDy6
hZb4W8GJ+9yOS7I4Xy0MtAK3uYu7GcvRyTwrsPxI65uZQ85377GCDcHHKnqH
0fZ8K3h91Yvp6onz45R4K1grkPsx/gpadMwKjpprf3vwDy04bQXRjZ/aWzxx
/p133goo/x7U5Fwj5+evWIF7g+xmTSmcz6fmWUH5e+NMgxVocZEVHHi8z62s
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
/h/p/xRC
           "]],
          FontSize->15]}, 
        {RGBColor[0, 1, 0], PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
         StyleBox[LineBox[CompressedData["
1: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
8HOfW9GF/wf8ela4
           "]],
          FontSize->15]}}, {}}, {}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{0, -20.60813658229671},
     BaseStyle->{FontSize -> 15},
     CoordinatesToolOptions:>{"DisplayFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Part[#, 1], 
         Exp[
          Part[#, 2]]}& )},
     DisplayFunction->Identity,
     Frame->{{True, True}, {True, True}},
     FrameLabel->{{
        FormBox["\"Transition Probability\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
        FormBox["\"Distance (km)\"", TraditionalForm]}},
     FrameTicks->FrontEndValueCache[{{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
             ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {400000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"2.3\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {600000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"3.4\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {800000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"4.5\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {1000000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"5.7\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}}}}, {{{{-20.72326583694641, 
           FormBox[
            TemplateBox[{"10", 
              RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
           FormBox[
            TemplateBox[{"10", 
              RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.907755278982137, 
           FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {0., 
           FormBox["1", TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.605170185988091, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {2.302585092994046, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}, {{-20.72326583694641, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-6.907755278982137, 
           FormBox[
            InterpretationBox[
             StyleBox[
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {0., 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
            AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {-4.605170185988091, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}, {2.302585092994046, 
           FormBox[
            InterpretationBox[
             StyleBox[
              
              GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
               Baseline], "CacheGraphics" -> False], 
             Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
            AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
           FormBox[
            TagBox[
             InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
             ScientificForm[#, 2.]& ], TraditionalForm]}, {200000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {400000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"2.3\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {600000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"3.4\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {800000., 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"4.5\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}, {1.*^6, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"5.7\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
              AutoDelete -> True], ScientificForm[#, 2.]& ], 
            TraditionalForm]}}}}],
     FrameTicksStyle->Larger,
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImageSize->800,
     LabelStyle->GrayLevel[0],
     Method->{},
     PlotLabel->None,
     PlotRange->NCache[{{0, 1.*^6}, {-Log[1000000000], 
         Log[10]}}, {{0, 1.*^6}, {-20.72326583694641, 2.302585092994046}}],
     PlotRangeClipping->True,
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}},
     Ticks->{Automatic, 
       Charting`ScaledTicks[{Log, Exp}]}], Scaled[{0.5, 0.5}], Center, 
    Scaled[{1, 1}]], InsetBox[
    TemplateBox[{
     "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\
\\(B\\), \\(1\\)]\\)\"",
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=100\\!\\(\\*SubscriptBox[\
\\(B\\), \\(1\\)]\\)\"",
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
      "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
      "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \\(2\\)]\\)=100\\!\\(\
\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
      "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\""},
     "PointLegend",
     DisplayFunction->(FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #4, 
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 1, 0], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {40, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
            GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {
         GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
        StripOnInput -> False], TraditionalForm]& ),
     Editable->True,
     InterpretationFunction:>(RowBox[{"PointLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                   False]}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                   False]}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                   False]}], "]"}], ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[1, 0, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", "0.05`"}], "}"}], "]"}]}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 0, 1], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}], 
              ",", 
              RowBox[{"Directive", "[", 
                RowBox[{
                  RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                  ",", 
                  RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                  RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                  InterpretationBox[
                   ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 1, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                   RGBColor[0, 1, 0], Editable -> False, Selectable -> False],
                   ",", 
                  RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
          ",", 
          RowBox[{"LegendMarkers", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                RowBox[{"{", 
                  RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
          
          RowBox[{"Joined", "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
               "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                ",", "True"}], "}"}]}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               RowBox[{
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                  True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
              BaseStyle -> {}, BaselinePosition -> Baseline, 
              DefaultBaseStyle -> {}, ButtonFunction :> 
              With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
          RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
    Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
    BaseStyle->{FontSize -> Larger},
    FormatType->StandardForm]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, -20.60813658229671},
  BaseStyle->{FontSize -> 15},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->False,
  FrameLabel->{{
     FormBox["\"Transition Probability\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
     FormBox["\"Distance (km)\"", TraditionalForm]}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
         ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"1.1\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
          AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
      400000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"2.3\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
          AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
      600000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"3.4\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
          AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
      800000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"4.5\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, AutoDelete -> 
          True], ScientificForm[#, 2]& ], TraditionalForm]}, {1000000, 
       FormBox[
        TagBox[
         InterpretationBox[
          RowBox[{"\"5.7\"", "\[Times]", 
            SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, AutoDelete -> 
          True], ScientificForm[#, 2]& ], TraditionalForm]}}}},
  FrameTicksStyle->Larger,
  ImagePadding->All,
  ImageSize->800,
  LabelStyle->GrayLevel[0],
  Method->{},
  PlotLabel->FormBox[
   "\"Resonance Destruction (\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/(3Pi))\"", 
    TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->False,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Input",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJzsvQmcZueY9/+ka+vOvhARWwQZEmoIETK2RoyxNUasPXlFqCFvREkILWJp
BmWJaVuKGRqjeUfH0iHK1pa2TFsKqUENStLGtEhNpkKJlCjJ9b9+59zf61zP
U09XVafyzucz7z/P/UmervOcc597ufbtfuxpL3ruc55/2oued/ppR/3l2acN
P/d5p59z1CNecLZf6tmn1eo5qtVadcZRLf3bWi3+1/G5k/634PJ/x9UPVf9e
YzY/ZcPV6Nbatqm5+sbZcVuva+s226zfVV17cXp4S/XvAZvfNWZrq4eHbGLe
bGJ0naZpm8Zn6hvPTQ99uPp3v81ObLZ6PQbr7/XVWxbc/5Hq3702vWNTub9l
o5P1CF+y4L4+s5kdtq7ct3Zku80z8m6D8Hnb2IbBahBDQ/WohzZP7OH+AZub
2loPYsP26tmtQ/WLNo7tWrg89UOrbWLLBhtcO2Tbd8/X05vfZZv8ZYNrN1iZ
iL1oyZ2qe+ux+blZm52tHmut4tqsX5urem8t6I6xj5dd2bBtqrq+e/tI9ffg
yI49jX3A/zdjo+vqSW4Y2WiDmvzaEdvdDR5iC2Z31oBT/bfOdkx32YL/U8Y+
M7HVhtatt807p1sLNrX7UvyPvPqf1YUeE9jMzEzbzOxc6z6dN/0gbpq1zb7s
azeNtw7pcq2nutZv87t32NAgK+17OTRqu+bt+Lrf53d55Vnl2tzMjF+bqdCj
r8u1fp51cJuennHw6n5ft2tPW+azi71jqWefkOY2W12fXfaz/V3WZe/fO1c/
m9+7RH+LvneJZ09JUDC6diFkcK0mCULc3baxgor1tm1il41v21hI4s5WAY8z
Fwei02IUE2Czk+Hy/7WjhVhP25bhtauqy/31y6ag4h0/9+SfCwT32eS2kXhx
RWS2MId+Hk+/V88v8XOzQ2VVRsdX8rbeRR5dQbfrWPzpnTa8tnm05Uxh57St
WumA97itK+iZMe/esbnwe8Y8bDt2z6268S9e1phvVM9P6oIjfQVHpnf4/YMb
barwZZsR3xq0LRMzCS87ccvpwdSWqv+RnTNxbcfGwYrXjc9a6141fv3vZaBi
jWRHVOQEYaK1fsS2bN5so6Oj/t8mG92y08TvxzcVBr51p+2a3G5DVZ8bbFcZ
/SK/16O8lUt5W8rCbbbJ3VOxyZuLHLKCV7QenyjZ5grvJsrqHLSS97aWO/aV
vOOx5R3mf20oUsvW8Smb3LmlFiYHRxwlVvaOVfGOPYLDTTaP+d3bCmZutB2T
u2xq59ZCw9nLGz2GZc9jJe/460WxtigCazfZ5K6dRW3x55bA2l1jGwJDuTYz
vqm+NteBtUsjeY25vb7URfkZHLbxGeuJERRIGh4Lsjo3MVp1OToxm38PstL8
XB7Z13aMaFGGbBISZUVPG97maNbRxV694THVtcOcAU1U1GbLli3lv1FbLxq7
btg2bxuvKM8yR9Ha80wOXaKPZb+j2ysey27urCFjdJzXHmDT2wV1g7Z9+qaY
RjewOCCDxYrewTxq/XnQxqYtYGeWufnOpjFAYJc/hPqzcBr9bX0seMV+e/OK
1hO74GEt/fa59DBaq5Gt2tywdXI2ScYL8bZejbW2M+HtbFm1rVNznXi7FJo/
q+Dt7OTWMoyK4XOrjB5C5407phtxyCVgcYH1Wybz7/XPq9t/rj4z1SRa67cI
e5BOtsvOMLjJJfy9fENP/rngrS/BeAg7RSzvq7tvf3tr6dcvcwb9TRd7O8H2
GQDm4ws21gnY5OYCd5et5BV7pvn9CRhukllMjK6vRrwjzwKk9vemISxrBANp
mevP4pOwvX5DT37DoqgaFsAkYiyGqpNbhqp7G8LVoKooTQeqLoXZpxfwlI40
BJcfL8tStmfT+GxGIo3WR7Tw54H2n+suYgIoctWIBl23bR5vLav7nvxzwdH9
KkvfxoqXjpbdrLdjMESkvRnCXk5hr/puH38nbG8KLtFnU1uHq2vbdl19o/vf
M2nvSwDwnysc/36+SzXTHBrdbjPOl+ZnJm3T+lZgzt69fyCtbf1Z+Hx/BuD8
+9Ld9+TuizbV50Oesp0Tle5RaVWDSRJu8GKtbRptjLP+5liybs8Hum5eH2yx
XR4ZrGy2zdI25uW7t6PwUhj/bCB3dqII6i7WyA7uqnZFXZP8gcBaQXfze2PR
Sj/vEfjX1iu4t9335J8L/Ozr6FurUUNbZTKf43Wdr1/67Xs5+r2aWfehg7r6
b+PmbbZ103DRmkSK9mLo7d3vmdL3pX3/9xs9/MeBCpvXhXSzqkg3tVJje/nu
gbSstofn+zPM5t+X7r4ndx9Yi3C2bsPGIEpg7WSZ2pbJYkEt+uzwtl2xXN2e
70SvbbvnY/q7tg5VVGC8zHFiy3ALq+vajWNWvEytYzuwdwkC8BxQZ7r41CTe
z41X/940kRhvfamC7c6fV7f/nEC/tWFMygJziHVsemgt6w09+ecCQfs6nxoq
85ixLesqwnfj3r7MCfQvQN9lv6F9AjCv2s6zzkY2bQx9ae3QqNXe2bZXtPb2
HXvmAP0JAG6SaciWPLq+MKmtY0GI1o/WMtBeD6ELQi/aRdvvy3pDd5wWA5gc
a3TXdYHTtTdo9+7asxFK5+5p1O3Yn2591L8dWDmuRRoHN2ytZzYzXrPM2v1e
bHrrbGclSdYk0xf/uHaUXkgdejJ1aD0ztmXOxkbW27rhrVCHCqo2DdaWtZnZ
mlCv2zzRYKGPcLCiVFOVj7f8jg2i7efqM2db1tfG05n0isqfLAfS3r6iJ/9c
EP2QqsvqNWuHK+dAg6V7+/pb7f0U9vod7XOokeTQ2hMhcCwgXcHN7G6bmJja
m3d0e8We2cYBCTBuimn0xI6JlbGj2+TVKNpsGgNAs+whcGXBNPrbuN+CV+y3
N69otOGZOoTBNbXGzZqu9ZQVnCpG7ea/dRHnUTPxjTH0saHBSu5pw9jVS+H9
aQU0xzetrWYxNlWPfW7Xjlo3r1T7ggKtIds5PV/NatvG+v4dM9agSPffA/xr
Y6mLOduLk6ARTZbqY8l31M7D3jabgpM/4GAFr17m8G1F7wgP0dxkWfZRq/d5
2javr70csobeFPNYihPcNPMo6rJLh9U7fF61qWJzzQ9u/BiWPY+VvAO/7uzU
Ttte6bcWiJqv9RSwm909advHxmz7jnHb3RjKZifqLrdM7LaZqdqTs2VqrqAo
ttYciHG78uQeMP9ZiVgMdSgwgpEdBIHVInUVFaHfhrdieu38rb/9t+rjIu1Q
PKrIuZmujy7WbU/+rWBn40IRjWv0s+p17VPZ4zv3brj1T8uYSvtww+MzvrlD
TexN9y1zldq7rme9ZlHKvtJhj48OLRj26HizKP7u6HqPr+3Jrw1euIdh7/2s
2rs/p/p/X21RW7fBNg6trQSWTWNTmIROBlxQDMZnQ5/tFplRI9ICzHx2eUSE
a3LnDhsrP83MN8hsc9M2vmO7/7bdJnbN9Ha/3Bc9zduu8bqnHeNTlVdk73pq
bOTzNrVzu43vaqa2F70vPaC96u4J5fL8zC7b4bdXl3fP3oie+rtvxQrGNLNr
ouppbPtO2zVrvXv/gr7uj9yInl5cUKMOONgYmLp9dJPI8XELwbe2LTfGu8VC
FQJp7f3lPRHL4wrJxuHBihVPztmS71m9LM9telVvAKSWefectWHi6vyK8tyS
3qDmFT/IfQ106avTRtluv95zR7PL6Wjtnjt6WPW1r81Mjttk1cdkoTftHS6i
0g+wBwoenZ1tgkLNhoaGqv9doP8dn994kI2P1NRrZHSkUn2aNy6tWDQutQkb
jhC2Ktg+rAjVu+uPz2/htdsu89rtVvDsTd3f/8tj6bZH96z+X0Cmr1Lit400
pvhMVRYTb2sIrVXbwQ07qt+nd2ys6NduK1TwZoj5nzaWRSAGvrCrpGWMtHlI
FpfAJ7fIpjrov61du9YJ/6BLZpuLt2T3+JhtGhm1sZ1jrvCtlYlpudDzsv+G
a8tYEVHpie1jNjE9v6iYFB6Mmd02NTWl//ya/u+4Njvvuk1Z2S1bbWR9E8n3
P2Q5nlp99TsXWmvrtxT75NxOKw7mbrOw+Lxxef2Gk2R2RyXer7zfvsiZWl98
WetHx7tyvGV1SmqJ3NqSeXdOTkdEyl539qybH7z5wZsfvPnBmx+8+cH/xx/s
zb+YvS6uHf8/cz43P3jzgzc/ePODNz9484M3P3jzg/9/evCC8sOZ3l5cKrD8
YQX9HOftft5W2s/dvJ3obaX93NXbCd5W2s+febuP3WfF/Rzj7d7eVtrPnb0d
X4qzrKSfO3m7p91zxf0c7e3Pva20nzt6G/S20n7u4O0e3lbaz+29HVf8rSvp
53bejrVjV9zPbb0JN1baz5HehBsr7efW3gTTK+3nCG938bbSfm7lTbix0n5u
6e1OpfLSSvq5hTfB9Er7OczbUd5W2s+h3oQbK+3nYG/CjZX2c5A3wfRK+znQ
2228rbSfA7wJN1baz37ehBsr7Wdfb4Lplfazxtvh3lbaz2pvwo0l+ukW7XjY
Un33exO+LNH33gaHHbrUe/u8CS/24r17E9VzyFLv7/V2iB1y49+/ZLTPwUsN
Qe3gctuSQ7hR0UBLDmEfb6IGyxrC3gcRLfl+H32F/fprM0s9MmJ2/vnVX09e
xpj2Mh5pj2N6S/nhBm8a1/62f+v9jOlEl4qPPnqpMd0EoU2ry7W52VmrU3ZL
KN1AvHCkY6BO9pqB3sfF5SNrUvr4eOz/RhyUQhqGBwPpVUFzj15hlvZP3jRi
J7DNiO91L7NDDlne0t4EATnbhkoOLRlZa5VXtkcvOUOf96ahOy1uhj7oMvOa
NdVff1muSab6X9701/57ns7/jWiR8U2+HRua4k3De44WaZvaH71pagM20Ezt
OBe/99mnbWoi2U+0Jy53ajdV2EeFHa1hG3eWNlUt13pVfOsa9tE2r+u8aV7O
4pp53fWuGqPZH/7QekS5Bh6tc1w9YM/zIh5ifMRv3DBSF7IbHLKxqdmlIX/O
m97ha9iM5S53qcdy9dUxFu57tD166bH029QWx4QSXqacwtGRLcpqWXJprvWm
1zgLaoYj+qbhXHFFDOc33nTfI+2RyxmOklDEAQeHN9ZFEWvWtORwfu9Nr1ll
q5rh3OEO9XAuuyyGc6U33XeynbzYcOogE3/r/LSNOwRu3zmpYexxk55dfni9
t3NLkdtjyrVrvOmVzimbod32tvXQfvzjGNq/e9N9a50ZLTK0brLem8s14aEo
pP76Ybn2IG+oRAxJ+cmtujVDuvWt6yGNj8eQfuZNd3kfiw3pznTha7RjdKON
bt/V+otFhumbZKeVtDaG+QBvaFzHlNX/rbcyTKHYZl5z+OH1SL/xjRjpj7zp
tjfaG5c3UudJg0pyGV90pOoSWsxIT/KGLsZIgXK16+36GOlhh9Uj/eIXY6Tf
86bbLrQLlz3SIox0G+mbyjV/a9Xt39jftH5UrsmiJwtGHunV3hipg0qM9OCD
65F++tMx0n/xptveZ+9beqS9MdLBkR0ud8wN2NzcnGDNlYj5tie6TwAe8gx7
Rkzgvt5QD5nAf3ljAs5SYwIHHlhPYOvWEND83SKN1V/3Lte+4k2PbrEty13+
zXX1a+eTJSumDrdbckZ/8KZXPd2eHjOSMRIFkxld5Y0ZOceJGe23Xz2jf/qn
1kFc+9OfbLJ1V7v86S8rpaN77HPe9OhFdtGyt0kzGlxvwxuGB2x4eLh6YoRS
5ItOCkL7VHtqTEoWTbRdJvWf3piUL0RMavXqelLveU9s0xH7/Noee+vvtG2T
KNR3vc3YzF5hyejEoljyO28a0ZPtyTF62VHRjRn9tE3H6J2hxuj7+urRv+1t
Mfrb9l5hf3VoJTMVEfMmwWcoypPsSTFSWVhlUcoj/bU3Ruo8OUa6alU90je+
MYDnNa+xarQn7/v11sOXN9JNkpFHdi46UhDSBbsYqWyv6MaM9ApvjNR54vvK
Zbvhhnqk+u91r2Owp55qdkTrV/bgVV9dbLB3KT9N75q0qem6/MJJiwwWsHy8
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
dcc/ugmPHRvW8Prr7tLQoZuwhljRD2BlZsDNXBQBUbcnm3iaJZbHZbwjA1KW
yrr2jtjcKd7Lllui+KX9F+e+fe+l0jdaJmvvuFss1T3llGBiBzxlZbmXHJbk
xZ2ApEXGoStBTUtwHrTUuKw3lFROtukUsh781Rt2m6Y88LHadG4i+bsUF/uJ
Z8qCBSKpUbuhsM+4308+WSxYd3SEzT/gAPfYe+9twgIw5RXy/G23SPl7nyM+
iVEK0t4sNZXV3s3fZnC9Ndqvi7V8XfONfetluW8nW4vXheTtt8Na/vQnd6ms
v6/ic+ed7sLMmYEv3Hefu3TtVmVmEm3JsDBuOaCArVIS4onzpLisUhqaQzOn
tnqX/FhW32YArPNotEsf3HOubJe60OyrqOWQL1mb4rbbogBdWM5WW66XNHM0
Lbc95G5G+AeozaWXhuW0GSzsGa2UgyOjRU2c2MVyGH3R2lQn4430lRdioDMl
d3SRlFfVSYs9mhZD5PMDuHW1pjuPrrSbOWPiQrWm0OBy8mS31zffHEDp668l
iJEhhBFMGVab1tZw396D2ux9n558eVJK2cln2iZN9TVS7haWRpR3uav2pmSc
nev47Ilp9m1XHjc72Tp+9SuzyUZaWLIkzO+PnkRddZVax4QJHv7KwvlQGbsj
7QbQul9seCkUnNtaGqV6fClizP35pEpeQbFU1jbaFqDJUGZzbsPatXJQ6izZ
NqPZsq3woahjxXjQol//OpCngQPdFJcsUUsBXOG+M84IS1mzRqRXjxWGJ8wW
ee65LpZCUGtHhGVlmRTm54alRHmjpXR8tTS2tEdDkgxBU0HJ0OfsrF5/4FN1
JGEdL77oJv3UU+FIPv7YXRo0KFbpVE480ZHjgFapcmDuDw5oD7k0qAGQNH0w
ZbRtklklIQmloVVcrhSWlEttQ/PBXaxncV2TZEQ/yBnbTE22nnPPdXKHEoAA
dT53I7YeUr133gnn8vTT7tIVkSFt335LHwzCxRGxA1lyo0tyFUUqS8bJ+JoG
BNYmO11a0E7fYYZkRmtkydxFailB2WwxGNe3LzhkmKKheZKR4Ryj69ZJWA2Y
D6Z+8cUBGjdLXyabR82yduw94YXQDeCbzZf8aLsNLyWZ2MchKsd+aN90/2nV
yeZ87bVuIq+/Hrb/wQfdJcPoY3HZACeIgF99FdY2alSH4fxL5b0tfgWmyfNm
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
AKZ9AbKSYoTT9GXZkvldH8n5aoD0athC+nyyjRx47VkyJXuYTMk5Wd7Cn574
M1ze6jVc3u493ID6271RIuKdPqeYP8Olus/J9u+z9vxQTtvjYxmxxzwZtnuD
7Pu7pyXj3isl/e6/SNq4ayT1zjGSckeRRLcXAV3+eh1mczv+fZ1EuD72WonM
PZG5NzLPRPdcJdF9V0hU8meJHrxUoocvkuiCx7xhuJ+12W7ZZ7U0p2wpjem7
Sn3OEPmo/9Eyc+sR8u6g0VK93yXyzhHXSfUp42TaOY/IjCuflQ/HvSG3vVck
KetT+nkLEiK30FcRdIsdr7uITN0gAGTibldyaT/LCSBCI55h4kQnFMBQAlkE
FB8CITgABAWoQBCbcQ1SO67DXAV5CCgMExWULKAs4hJRNBDa1YE7vy/9d3tP
eu/3juQcPkkyjntFUn81QaIzn5bovDKJLnpYoivvlej6v0p02w1uT7GPj/5B
oid/J9FzZxhlM1+i14ZJVHWMRFOPkPTL7olyvC0D1gdERSH9CSGTiBUDNwKZ
6HPfzQP9/h3+9RmWHyLlz/BEl0UywCpkwEZ4syFCoN0N2MBd5gu0Q4AJUA8a
GNAPdl4Ioej5hyxWKHWMX+0X9ndIwiG0do2F9r/O4JktP6xeJyuW/CBLmtrk
uy9WStOnrfLlx8tkwUfL5PMPWuSzGUvMcj59b7HBqfnvLZYl8xdLS8MSWfpF
iyxrXCrLv14uKxatkNWLV8maZW3SvnqtdKxbH/Jr4R6GkAir9RJZkoIl2Abr
ZkexGhQWxm9LzRc+FHR4gOCFVcL/zoJXXdS0Z0ZJS32t1NuMjnovanexfvu5
a+OD1o5zVYzHlY6zxf5/lkGltUkqxo0WX4H/pw3KY2+sciXwx9X8DIOhEUNd
VaXUNbf/+MGSKaX/e/B/D/7vwf89+L8H//fg//cfTJaakCwG8ue+1s2UiP9N
8/8P0xT3i/nPfUrql/jPoJ/raiivbCTBlpZmaWlt8xnCuNYmLUa1aWlpCzVV
9H2n+2utLS3SbP4YhSUUgmwz/24xf9Cq5Vx9X7O7b6sk953mr7W3tbr3trUn
Hc9FdEaXJJlSAa8pOzzzQFHXtQwN6/JLUeGV1fVdj6zRUtsmody/ftzdlyHt
TdVSEJqdRJJbUCqN7a7qPRZXW8qfItd3J0vyS2sT32o/DVWlUN1CL5j8Yqlz
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
kA2dk1iWmY9LLL37HQT2e5/4f7MGJtk=\
\>"]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.05", ",", "0.05"}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(A\), \(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \
\(1\)]\)\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "9"}], ")"}]}], ",", "10"}], "}"}]}], "}"}]}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"GridLines", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"gridlinesCode4", "[", "3", "]"}], ",", " ", "None"}], "}"}]}],
     ",", 
    RowBox[{"GridLinesStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Orange", ",", "Dashed"}], "]"}]}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.676733139043264*^9, 3.676733143409711*^9}, {
  3.676733245891674*^9, 3.6767332681839647`*^9}, {3.676733300704505*^9, 
  3.676733305222665*^9}, {3.676735696598935*^9, 3.676735857710463*^9}, {
  3.6767360982614317`*^9, 3.6767361702237997`*^9}, {3.6767372823070517`*^9, 
  3.6767372825969048`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJw113k4lP37PvCRSNax78wwZjBDJNqk+yqVFtKiVUypCBWlslXDoxKFUAox
lgqVRCmtE5Ula1EpZWihJFJIi75+n+v9e/55jtdxzjXXnPfc877D3LRz+ZZx
NBrtkySN9r//B5RR49f8mn3yObtbzlLZgfb//qPiqW+bK6oNN+YSZ1KpVZdd
zzk8RAdcoBY9emKV7vec5FcopcsffgVfa0dHl1BysiYuKxO6yetvUA0FpSvn
Of9Ar7lNOQROWbB52V8yf5+SF4Q42stJzf6fkx9QEeo1vo4TZdHRFZTvho59
G3KJwx9RqiU7lrbsU0QHVFIdnvu3ylSpoDdXU35cawvtM1roNU+op8vnGi0e
x0AvqaOOzDi5e7KPEZpqoAYOH/mwTtIYndpI8dsymo0qSZ7cRH2Ubcvk7WKh
455Sn6y4134ampPP94yqV/L83VpiiY5spq6U3go+P3My+bwtVOdU57tni23Q
e59Ts59FUi03rMnnf0H9Sv7onrWE5L4vqaNKGikxYjvSp5XyrvGkKkRT0R6v
qMC7l3ra3R1Iv9dUp97SmtcrKfTyNuqp4fkb14btSd83VJ/TXabFL5LPf0ut
aG16cm0QSP92CvzizgysINYXU4V+hbXqj+eT6yGmun/K39R8T6zZQa31mnpL
/9w8cn06qOK0q+FetxahlTspj+lGBm1s4rhO6sC/738tGxei5d5Rd+UeGjTV
LiXX7x1VciaeXxrpjJZ6T621v/bC08uFXM/3VN/CoRlu3svR/95Tzpz5xg8G
lpHr+4H62hTh8OUDyUc+UI+b4n3LFdzI9f5IdcjMDS7QXYH+/pFaPLRud866
leT6d1GZIxeOLv25Ct3bRZU1x25lBq8m30c39WVFltSy02vRXd2UbNyLZW8r
1pHv5xMF/z2cunAeyTs+UcWx7IZ/80nu8ZlqnNFku0O0Hv36MzXV3q/7UuQG
8v31UCq9lRudP3qiW3oo7wLOZ6MwPvk+v1CalzMdYtcSN3yhFNekHB4XTLyk
lxIe2Lib3kVc3Uul5U95aSC5iXzfX6kfU/VZE4aIK75SfsnbpF9Ve5Hvv4+y
s/pmbMrZjL7bR6nfje//wSbW76c8F8UnueeiBev7qdduP46mH9tC7o9+6o9p
rlnN/K2Yv+yndsR+/rhovje5X75R0yt3Xch6gRa4faO4E2Pnbmf5kPvnG1VU
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
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJw1m3k8lO/3/2XfjX1nzGKZRdPyFknuQyRtKhWFpFRSQlJKNVlKK+3SYqmI
Ei2SlEak0jaURNvQYikaWdIiP9/PuX790+P5uJz7Nee+r/uc676uc6xC1s0N
lZWRkemQk5H5v/87oxmRDvdLXI++sm5Xs9eeLPN//6hUSr7gmrtlfjvhTIo/
uzO2s0DZ9X8cmUc1Py2SHTxtikwVUZ8c7ynr5Noip1yjdrnAjzkTx5G/L6W+
dUxTLz/hjOxXTu3JPNEQ9tmN2N+l5D7snnv8tBfykUrqGvzxm6Y3m1yvitrz
iyYp8JiHHH+femIcO1XFaSG5/gMq8pD56X8nFyMvf0Sppb+QuzEtmOg9ptbl
XM03fB6CPOMptf6JNmN+eijRf07R2T+D9+evQs4QU5KrGdWXi8PJ76mjGoYi
qu7qrkM+UE+5hNvL8YOjyO97QU1omvx6ne165ISXVMgAKyeTu4H83gaq6kZC
zTGvjcixr6jYk6pm5bPjyO9vpJwHS4wv5WxBXv2a+lFfU1yruI3400TJ+dzf
4MsRIgc1U7uSEtq7t+0g/r2h1KdsSl5el4A89y0VHqgY9dA4ifj7jtJwnP1c
eCwZ2fM9NX/69Z+2yruI/x+on+rTVUJiU5DNJdTHo3srUs33kPshoZZ5U+L3
l/YiG7ZQyTrJQUqwn9yfFurHI+2VXzVTkbVbqbvHD59YG5hG7lcrleLPHf7t
fBBZ7SOlorVEo/W/Q+T+faQWlV6w/WZ8GFnhEyXouyC7WeMIuZ+fqC8nWb8n
GR9FHv5EjUlnwRr1Y+T+fqayPEwsz+gfR/71mZpdszBPfUw6ud9fKBcF1pWL
Y08g936hZFKlv3TmZJD730a1eZlfiow/idzVRmWvFLd8Tj1Fnkc7NXHtoltu
1aeR29qpT/mffOr+niHPp4OqUNBaYk7LQm7poBIop44H1wgHdVJh99nWzIXZ
yG86qaUx2QFTewn7faU8Vy1ftzo7B7nhK7XGMinZffpZ8jy/UV27A54ESQk/
/0al2Ou1WeaeI8+3i+q9cHlt0YLzyI+6qCvToxO7FXPJ8+6m3p1YuE6thnBV
N6XkGU3RtuWR5/+dyvPs+D044QLyne8UXWG9lskQYXMpdcdzW+KK2/n/Y+Fi
KXXy7krdh8ICMj+klNW3Mru2mRdx/LWU6pxzPFrV4BKZLz0UI1LN4slHZOH8
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
kj3YZPHccided/1/yo8UwA==
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], Dashing[{0.05, 0.05}], 
          StyleBox[LineBox[CompressedData["
1:eJwt2Xk41Ov7B/ApW/ax7wxmmBljbaOFz60QqaRVwpS0IjottDAJIaFCJcso
hVZFSptB+0plCWVQ0qIoJSI/39/9nH/O9bruebw/78/yPOe6jvHqzd5B42k0
2icJGu1//3683Jx72nrIKaPBrFveSsWR9r9/qFRqRX235gFBAXEeVdz5dn/y
0rvosEIqdIKf/e9Fr8n8ErXUp/e70Zv36IRSqnv7keuFlt/J769RuyzL3m2P
6Ecvv0mFx63+p8CgOeH6Sqor6vwLy0wJdHoVZZt4nK7tLoNOqKF+BhxZcO0g
Hb37HtX5YxbrlrUqOuwBJc1xXZf1Tx295hHlWP82ebaMPnr5E+rP/IUnfv0l
9nxGucywHX/uHIPkv6C+y0nObbdiobNqqbMy+2WS1InT66jVHVe9FTex0Skv
qb03zc9Ov2JJru8VNW3WuKBNHTx0zGsq/eDzlq4PNuR666ndG0qyRismorc3
UGsDR4xnD9uR62+kvs4tjwrfMAW9sYlKjn44+ZalA+nzhpponMZ7P9Ue7d9M
ib6qB8+4PYP0a6GOLm/wzuA6ob1bKRt7p7PNdo6k71vqzobpUh5fAe36jnKu
eJwoqncm/duoroV9TK0oYgMxVVdz/Y9kowu5H2JKpeHz5KvLXdFa7dTk9Jkf
Z3gRp7dThWp+k5w0PdAqHVS48RPPJ8bEKR3URq09w6NHiOU7qZHo4qXm+fPJ
/eukzHyD91+aSiz1njKV+jMa4LGA3M/3VIj0etOaawvRo++p1LdPZuQvJN79
gdpzi6r3t/dGD36gUmmPn+TOXEzudxf17+i8WXOuLUL/7KJuZ45CCm0Juf8f
qVlG7uWXxUvRPR+pKNfPnhULiTd2U3tClzU6DS5Df+ymrgy7fgzO9yHP5xN1
9vImapBJ3P6JCm6IdZEw8CXP6zNFOUW9mBSzEt3ymdq+87pt3kTi5V8o3XmK
823W+qPrv1CbFr8/4r0/gDzPr5Sot/G0WxTxi6+UmSJHvvMjnzzfHkrv18Bv
W99V6Ec9lIZjQdyZvcSu36ilaxjqf86uRtd8o8Kvu2y4LxdInv93qjTKdVp4
APHt75TDD5nP23etIe9DL2X347+GHfVogW8vZZQmu+3ekiDyfvRS9xcFGxb5
rMV5Uy9Vptrx9fbtteR96aNabJ9en71qHc6X9FF+jjEpSm7ryfvTR7U2cUy4
99CCl31UkYSuz5aoDeR9+kFpTT//ytl1I84X/KCqlHuHVL5uJO/XD+rD7rh4
ztlNOH/6gzoQo2p7Z0Uwed9+UpesqnsEtiE4d/9JnV6+coV6Rwh5/35Sf4On
feEnhOL8/k+q73LINsaRzeR97Kf4mjOoKNUwnM/qp0Jl+h5s3RBG3s9+ynnO
7tZK6XCci/qp25L3Zh12CCfvaz/1l7Z79/1cMp/5i2JP8+tzmL+FvL+/qBDF
LY+Z69CCG78oFZYi3/IDmQ/+ogpXhOQ/zPkP51N/U/tdFKVrsv8j7/dv6u/7
tikSM7fivOw35ZOqcjPg51byvv+mMvNORsa3krntAGWi7Sr7+PQ28v4PUCrz
eQuD5m3H+cUBKkC2srKJvZ18DwPU1KImuoPhDpxb/KF+nQ3+9v3sDvJ9/KEy
Wt7Um8SSedEf6gNPx3J+QQT5Xv5Qhmtvf2uVj8Q5a5CyrnpWGtlL5msGqahK
57nJk3fi/OQgdfoelI8P30m+p0FK7tRJ1eDNZG40RJUffjBu5otd5Psaorx3
iB7KtKIF2UOUwvHb7lfH7Sbf2xBV+ox9qip0D851/lJKXu/fuSzYQ76/v9TR
pnu1uoVknvmXuh5SJ+hTiSbf41/KaEaMTtKzKJyrDVNqd1ysw/zJ3HuYskoo
0jvnK8B52jDlU9pX0cYTkO91mEp2aH9ad5jMFUeo3ONyJZOt95Lvd4QKG1n2
1+0vmSeNUIrvTbeN7ibzRyPUSv+ciW8lYnAu84/qyoxIk31F5q7/qDZpCYmp
wWQe+4+6odrSH9gcQ773f1SUbcezh2VkPm6Uyu2w//vdfx/5/kcppg+vnFaG
FkSNUlkVsU1ZQjK/PUqNe/94Z92iWJz/HaUGP8sX2xyOJfsDDfZvc5FSyERT
M2iw1dD/Srt7HNkvaLAwvrju6Ha0aCcNwirGjzNMjyP7Bw3oeiXRQioe11fQ
wLV0en/V6niyn9Dgjez1/LDjaNEADS7rFc/m2O8n+8s4yDM04wwvQ1NTxkEx
/dtZn4L9ZL8ZBz6j++eY2ybg+q3j4E2o9xnDZQlk/xkHi1f6XGOVoqnSceDR
vK3oKS+R7Edjv39fr/sfHy3qGwdfRJm3nO4mkv1pPPxY+HnfRV4SrrcZDz3K
dyTz/ksi+9V4yFouafBfA1oUOh5Ufj5iH7Y7QPav8WCrXClXloqmLowHeg7t
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
7zvZWYYWxFpBQ/Qc+0NP3zr9H1csxaA=
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
          StyleBox[LineBox[CompressedData["
1:eJw1m3k8lO/3/+1LkbHvjDGL2USLtN+nSGkx75SiYlLaqKZop4bSJpJokYT2
RWiTFqZNKIVkiWpkiUqNkgj5+X7O9eufHs/H5czrPvd93edc93WdYxe4fm6Q
ipKSUpuqktL//b/5c/lUn6e3JydVsVuHOupPUvq/f9RhqjZh1ETrK62Ez1DF
zfnOQy5pTf4fSy5Sl6uG2LuctkSmsqh2/tVbGtcdkPffpJY8v863nTyS/H0u
5VV1YwmkjkdeeJ8ynB6gl9MyhdgXUKMv7pw+7vR05MRHlO7w+mlthl7k955Q
J0XnonJneCOHP6POuN4pmDx5Afn959Ssu2uftaYvQl5eTOmkF79MmCkmei8o
pm/z8yuvA5FnlVKG2VI3yxNBRP81tUu2bcfia6uQk8uolnglr713gsn1lFPD
ubkxMRbrkeMqqJfQoHEicAO5vjfUtqrDF4q4ochRlVShy/q3nfxN5HrfUt6O
mzQaZ2xB3lxFCZuXnQLvbeT6q6m0fh/W+Ys7kNfUUAmFp1Uqhuwk/tRS3nm3
+a/5UmT/d5RWX5bOg12RxL86quS/Wd2WFVHIc+spvTFBE0Is9xB/31OODx1W
W5yMRp72gRK1uhXsHrKP+P+RcrQbO3TV1v3I1nKK+tEczLM9SO6HnGqvV94w
4noMsmkD9Uwv5mPSlFhyfxooR5bROHX9w8j6nyijKO2MEP94cr8+UeKFB1rL
JhxBHtpIMfz3vq9xSSD3r5E62vbos7XlUWT1Jmqejv/TyGGJ5H42UZMy5S+t
LJKQB5qouVmZVy10j5H720yt3vXzyIDxceSeZqrLbDu9zvkEud8tlP+ZSULR
qJPIv1ooX6vgSWVzk8n9/0w1TPyVei3iFHL7Z2pD2nF6WnwKeR6t1PbXDnkB
T08jf26lduu816b6U8nzaaMKOb51CloackMbVTZ/bLfmbcL+XyhHSaEfd2E6
ct0Xym3iiZzmX4QXfqXmtTh4nkzPQH77lXpmudLed+ZZ8jy/UWXFPq79CsKv
v1Gip9MNj1w8R55vOyXgLNpttfA8cnE7lTB6bNdvzQvkeX+nylzSkjIKCT/5
Tr0S3P8YsPMief4/qHuMvOxw10vID39QZ4XnFfv/EbZWUOycspO6+Zf/x9JF
CireSDtxZNQVMj8UVGeTT8wQr6s4XqOgzk/qMlAxvUbmSwc1/sm/KzlNyNL5
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
PxyvFDw=
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.050000000995},
      BaseStyle->{FontSize -> 15},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Transition Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         
         FormBox["\"Distance (km)\"", TraditionalForm]}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, {{0, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
             ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {400000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"2.3\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {600000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"3.4\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {800000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"4.5\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {1000000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"5.7\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}}}},
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->NCache[{{0, 1.*^6}, {
          Rational[1, 1000000000], 10}}, {{0, 1.*^6}, {1.*^-9, 10}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1001\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1001\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1], 
                    Dashing[{0.27, 0.27}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", "0.05`"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.050000000995},
   BaseStyle->{FontSize -> 15},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Transition Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      FormBox["\"Distance (km)\"", TraditionalForm]}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, {{0, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
          ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.1\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       400000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.3\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       600000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"3.4\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       800000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"4.5\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       1000000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"5.7\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}}}},
   
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Resonance Destruction (\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/10)\"", 
     TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJw113k4lP37PvCRSNax78wwZjBDJNqk+yqVFtKiVUypCBWlslXDoxKFUAox
lgqVRCmtE5Ula1EpZWihJFJIi75+n+v9e/55jtdxzjXXnPfc877D3LRz+ZZx
NBrtkySN9r//B5RR49f8mn3yObtbzlLZgfb//qPiqW+bK6oNN+YSZ1KpVZdd
zzk8RAdcoBY9emKV7vec5FcopcsffgVfa0dHl1BysiYuKxO6yetvUA0FpSvn
Of9Ar7lNOQROWbB52V8yf5+SF4Q42stJzf6fkx9QEeo1vo4TZdHRFZTvho59
G3KJwx9RqiU7lrbsU0QHVFIdnvu3ylSpoDdXU35cawvtM1roNU+op8vnGi0e
x0AvqaOOzDi5e7KPEZpqoAYOH/mwTtIYndpI8dsymo0qSZ7cRH2Ubcvk7WKh
455Sn6y4134ampPP94yqV/L83VpiiY5spq6U3go+P3My+bwtVOdU57tni23Q
e59Ts59FUi03rMnnf0H9Sv7onrWE5L4vqaNKGikxYjvSp5XyrvGkKkRT0R6v
qMC7l3ra3R1Iv9dUp97SmtcrKfTyNuqp4fkb14btSd83VJ/TXabFL5LPf0ut
aG16cm0QSP92CvzizgysINYXU4V+hbXqj+eT6yGmun/K39R8T6zZQa31mnpL
/9w8cn06qOK0q+FetxahlTspj+lGBm1s4rhO6sC/738tGxei5d5Rd+UeGjTV
LiXX7x1VciaeXxrpjJZ6T621v/bC08uFXM/3VN/CoRlu3svR/95Tzpz5xg8G
lpHr+4H62hTh8OUDyUc+UI+b4n3LFdzI9f5IdcjMDS7QXYH+/pFaPLRud866
leT6d1GZIxeOLv25Ct3bRZU1x25lBq8m30c39WVFltSy02vRXd2UbNyLZW8r
1pHv5xMF/z2cunAeyTs+UcWx7IZ/80nu8ZlqnNFku0O0Hv36MzXV3q/7UuQG
8v31UCq9lRudP3qiW3oo7wLOZ6MwPvk+v1CalzMdYtcSN3yhFNekHB4XTLyk
lxIe2Lib3kVc3Uul5U95aSC5iXzfX6kfU/VZE4aIK75SfsnbpF9Ve5Hvv4+y
s/pmbMrZjL7bR6nfje//wSbW76c8F8UnueeiBev7qdduP46mH9tC7o9+6o9p
rlnN/K2Yv+yndsR+/rhovje5X75R0yt3Xch6gRa4faO4E2Pnbmf5kPvnG1VU
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
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJw1m3k8lO/3/2XfjX1nzGKZRdPyFknuQyRtKhWFpFRSQlJKNVlKK+3SYqmI
Ei2SlEak0jaURNvQYikaWdIiP9/PuX790+P5uJz7Nee+r/uc676uc6xC1s0N
lZWRkemQk5H5v/87oxmRDvdLXI++sm5Xs9eeLPN//6hUSr7gmrtlfjvhTIo/
uzO2s0DZ9X8cmUc1Py2SHTxtikwVUZ8c7ynr5Noip1yjdrnAjzkTx5G/L6W+
dUxTLz/hjOxXTu3JPNEQ9tmN2N+l5D7snnv8tBfykUrqGvzxm6Y3m1yvitrz
iyYp8JiHHH+femIcO1XFaSG5/gMq8pD56X8nFyMvf0Sppb+QuzEtmOg9ptbl
XM03fB6CPOMptf6JNmN+eijRf07R2T+D9+evQs4QU5KrGdWXi8PJ76mjGoYi
qu7qrkM+UE+5hNvL8YOjyO97QU1omvx6ne165ISXVMgAKyeTu4H83gaq6kZC
zTGvjcixr6jYk6pm5bPjyO9vpJwHS4wv5WxBXv2a+lFfU1yruI3400TJ+dzf
4MsRIgc1U7uSEtq7t+0g/r2h1KdsSl5el4A89y0VHqgY9dA4ifj7jtJwnP1c
eCwZ2fM9NX/69Z+2yruI/x+on+rTVUJiU5DNJdTHo3srUs33kPshoZZ5U+L3
l/YiG7ZQyTrJQUqwn9yfFurHI+2VXzVTkbVbqbvHD59YG5hG7lcrleLPHf7t
fBBZ7SOlorVEo/W/Q+T+faQWlV6w/WZ8GFnhEyXouyC7WeMIuZ+fqC8nWb8n
GR9FHv5EjUlnwRr1Y+T+fqayPEwsz+gfR/71mZpdszBPfUw6ud9fKBcF1pWL
Y08g936hZFKlv3TmZJD730a1eZlfiow/idzVRmWvFLd8Tj1Fnkc7NXHtoltu
1aeR29qpT/mffOr+niHPp4OqUNBaYk7LQm7poBIop44H1wgHdVJh99nWzIXZ
yG86qaUx2QFTewn7faU8Vy1ftzo7B7nhK7XGMinZffpZ8jy/UV27A54ESQk/
/0al2Ou1WeaeI8+3i+q9cHlt0YLzyI+6qCvToxO7FXPJ8+6m3p1YuE6thnBV
N6XkGU3RtuWR5/+dyvPs+D044QLyne8UXWG9lskQYXMpdcdzW+KK2/n/Y+Fi
KXXy7krdh8ICMj+klNW3Mru2mRdx/LWU6pxzPFrV4BKZLz0UI1LN4slHZOH8
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
kj3YZPHccided/1/yo8UwA==
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0], 
          Dashing[{0.05, 0.05}]], 
         Line[CompressedData["
1:eJwt2Xk41Ov7B/ApW/ax7wxmmBljbaOFz60QqaRVwpS0IjottDAJIaFCJcso
hVZFSptB+0plCWVQ0qIoJSI/39/9nH/O9bruebw/78/yPOe6jvHqzd5B42k0
2icJGu1//3683Jx72nrIKaPBrFveSsWR9r9/qFRqRX235gFBAXEeVdz5dn/y
0rvosEIqdIKf/e9Fr8n8ErXUp/e70Zv36IRSqnv7keuFlt/J769RuyzL3m2P
6Ecvv0mFx63+p8CgOeH6Sqor6vwLy0wJdHoVZZt4nK7tLoNOqKF+BhxZcO0g
Hb37HtX5YxbrlrUqOuwBJc1xXZf1Tx295hHlWP82ebaMPnr5E+rP/IUnfv0l
9nxGucywHX/uHIPkv6C+y0nObbdiobNqqbMy+2WS1InT66jVHVe9FTex0Skv
qb03zc9Ov2JJru8VNW3WuKBNHTx0zGsq/eDzlq4PNuR666ndG0qyRismorc3
UGsDR4xnD9uR62+kvs4tjwrfMAW9sYlKjn44+ZalA+nzhpponMZ7P9Ue7d9M
ib6qB8+4PYP0a6GOLm/wzuA6ob1bKRt7p7PNdo6k71vqzobpUh5fAe36jnKu
eJwoqncm/duoroV9TK0oYgMxVVdz/Y9kowu5H2JKpeHz5KvLXdFa7dTk9Jkf
Z3gRp7dThWp+k5w0PdAqHVS48RPPJ8bEKR3URq09w6NHiOU7qZHo4qXm+fPJ
/eukzHyD91+aSiz1njKV+jMa4LGA3M/3VIj0etOaawvRo++p1LdPZuQvJN79
gdpzi6r3t/dGD36gUmmPn+TOXEzudxf17+i8WXOuLUL/7KJuZ45CCm0Juf8f
qVlG7uWXxUvRPR+pKNfPnhULiTd2U3tClzU6DS5Df+ymrgy7fgzO9yHP5xN1
9vImapBJ3P6JCm6IdZEw8CXP6zNFOUW9mBSzEt3ymdq+87pt3kTi5V8o3XmK
823W+qPrv1CbFr8/4r0/gDzPr5Sot/G0WxTxi6+UmSJHvvMjnzzfHkrv18Bv
W99V6Ec9lIZjQdyZvcSu36ilaxjqf86uRtd8o8Kvu2y4LxdInv93qjTKdVp4
APHt75TDD5nP23etIe9DL2X347+GHfVogW8vZZQmu+3ekiDyfvRS9xcFGxb5
rMV5Uy9Vptrx9fbtteR96aNabJ9en71qHc6X9FF+jjEpSm7ryfvTR7U2cUy4
99CCl31UkYSuz5aoDeR9+kFpTT//ytl1I84X/KCqlHuHVL5uJO/XD+rD7rh4
ztlNOH/6gzoQo2p7Z0Uwed9+UpesqnsEtiE4d/9JnV6+coV6Rwh5/35Sf4On
feEnhOL8/k+q73LINsaRzeR97Kf4mjOoKNUwnM/qp0Jl+h5s3RBG3s9+ynnO
7tZK6XCci/qp25L3Zh12CCfvaz/1l7Z79/1cMp/5i2JP8+tzmL+FvL+/qBDF
LY+Z69CCG78oFZYi3/IDmQ/+ogpXhOQ/zPkP51N/U/tdFKVrsv8j7/dv6u/7
tikSM7fivOw35ZOqcjPg51byvv+mMvNORsa3krntAGWi7Sr7+PQ28v4PUCrz
eQuD5m3H+cUBKkC2srKJvZ18DwPU1KImuoPhDpxb/KF+nQ3+9v3sDvJ9/KEy
Wt7Um8SSedEf6gNPx3J+QQT5Xv5Qhmtvf2uVj8Q5a5CyrnpWGtlL5msGqahK
57nJk3fi/OQgdfoelI8P30m+p0FK7tRJ1eDNZG40RJUffjBu5otd5Psaorx3
iB7KtKIF2UOUwvHb7lfH7Sbf2xBV+ox9qip0D851/lJKXu/fuSzYQ76/v9TR
pnu1uoVknvmXuh5SJ+hTiSbf41/KaEaMTtKzKJyrDVNqd1ysw/zJ3HuYskoo
0jvnK8B52jDlU9pX0cYTkO91mEp2aH9ad5jMFUeo3ONyJZOt95Lvd4QKG1n2
1+0vmSeNUIrvTbeN7ibzRyPUSv+ciW8lYnAu84/qyoxIk31F5q7/qDZpCYmp
wWQe+4+6odrSH9gcQ773f1SUbcezh2VkPm6Uyu2w//vdfx/5/kcppg+vnFaG
FkSNUlkVsU1ZQjK/PUqNe/94Z92iWJz/HaUGP8sX2xyOJfsDDfZvc5FSyERT
M2iw1dD/Srt7HNkvaLAwvrju6Ha0aCcNwirGjzNMjyP7Bw3oeiXRQioe11fQ
wLV0en/V6niyn9Dgjez1/LDjaNEADS7rFc/m2O8n+8s4yDM04wwvQ1NTxkEx
/dtZn4L9ZL8ZBz6j++eY2ybg+q3j4E2o9xnDZQlk/xkHi1f6XGOVoqnSceDR
vK3oKS+R7Edjv39fr/sfHy3qGwdfRJm3nO4mkv1pPPxY+HnfRV4SrrcZDz3K
dyTz/ksi+9V4yFouafBfA1oUOh5Ufj5iH7Y7QPav8WCrXClXloqmLowHeg7t
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
7zvZWYYWxFpBQ/Qc+0NP3zr9H1csxaA=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 0, 1], 
          Dashing[{0.03, 0.03}]], 
         Line[CompressedData["
1:eJw1m3k8lO/3/+1LkbHvjDGL2USLtN+nSGkx75SiYlLaqKZop4bSJpJokYT2
RWiTFqZNKIVkiWpkiUqNkgj5+X7O9eufHs/H5czrPvd93edc93WdYxe4fm6Q
ipKSUpuqktL//b/5c/lUn6e3JydVsVuHOupPUvq/f9RhqjZh1ETrK62Ez1DF
zfnOQy5pTf4fSy5Sl6uG2LuctkSmsqh2/tVbGtcdkPffpJY8v863nTyS/H0u
5VV1YwmkjkdeeJ8ynB6gl9MyhdgXUKMv7pw+7vR05MRHlO7w+mlthl7k955Q
J0XnonJneCOHP6POuN4pmDx5Afn959Ssu2uftaYvQl5eTOmkF79MmCkmei8o
pm/z8yuvA5FnlVKG2VI3yxNBRP81tUu2bcfia6uQk8uolnglr713gsn1lFPD
ubkxMRbrkeMqqJfQoHEicAO5vjfUtqrDF4q4ochRlVShy/q3nfxN5HrfUt6O
mzQaZ2xB3lxFCZuXnQLvbeT6q6m0fh/W+Ys7kNfUUAmFp1Uqhuwk/tRS3nm3
+a/5UmT/d5RWX5bOg12RxL86quS/Wd2WFVHIc+spvTFBE0Is9xB/31OODx1W
W5yMRp72gRK1uhXsHrKP+P+RcrQbO3TV1v3I1nKK+tEczLM9SO6HnGqvV94w
4noMsmkD9Uwv5mPSlFhyfxooR5bROHX9w8j6nyijKO2MEP94cr8+UeKFB1rL
JhxBHtpIMfz3vq9xSSD3r5E62vbos7XlUWT1Jmqejv/TyGGJ5H42UZMy5S+t
LJKQB5qouVmZVy10j5H720yt3vXzyIDxceSeZqrLbDu9zvkEud8tlP+ZSULR
qJPIv1ooX6vgSWVzk8n9/0w1TPyVei3iFHL7Z2pD2nF6WnwKeR6t1PbXDnkB
T08jf26lduu816b6U8nzaaMKOb51CloackMbVTZ/bLfmbcL+XyhHSaEfd2E6
ct0Xym3iiZzmX4QXfqXmtTh4nkzPQH77lXpmudLed+ZZ8jy/UWXFPq79CsKv
v1Gip9MNj1w8R55vOyXgLNpttfA8cnE7lTB6bNdvzQvkeX+nylzSkjIKCT/5
Tr0S3P8YsPMief4/qHuMvOxw10vID39QZ4XnFfv/EbZWUOycspO6+Zf/x9JF
CireSDtxZNQVMj8UVGeTT8wQr6s4XqOgzk/qMlAxvUbmSwc1/sm/KzlNyNL5
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
PxyvFDw=
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0.050000000995}, 
      PlotRange -> {{0, 1.*^6}, {
         Rational[1, 1000000000], 10}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.050000000995}, 
      BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", "Distance (km)"}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, {{0, 
           ScientificForm[0., 2]}, {200000, 
           ScientificForm[1.1374240637967417`*^6, 2]}, {400000, 
           ScientificForm[2.2748481275934833`*^6, 2]}, {600000, 
           ScientificForm[3.4122721913902247`*^6, 2]}, {800000, 
           ScientificForm[4.549696255186967*^6, 2]}, {1000000, 
           ScientificForm[5.687120318983708*^6, 2]}}}}, FrameTicksStyle -> 
      Larger, GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> 
      "Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)", PlotRange -> {{0, 1.*^6}, {
         Rational[1, 1000000000], 10}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0], 
         Dashing[{0.05, 0.05}]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1], 
         Dashing[{0.03, 0.03}]]}, {
       "\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\
\)]\)", "{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \(1\)]\)", 
        "{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\)]\)"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True, True, True}, LabelStyle -> GrayLevel[0], 
       LegendLayout -> "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6767331457557697`*^9, {3.6767332492473373`*^9, 3.676733268839905*^9}, 
   3.6767333060543203`*^9, {3.67673571886587*^9, 3.6767358196625223`*^9}, 
   3.676736100452923*^9, {3.676736160270982*^9, 3.676736170822795*^9}, 
   3.6767372832820053`*^9, 3.68331519983829*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"twoaListKK3NumLimit", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"twoaListKK3NumLimit", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676736906405204*^9, 3.676736914833263*^9}, {
  3.676737115358316*^9, 3.67673712056886*^9}}],

Cell[BoxData["0.006929613102536665`"], "Output",
 CellChangeTimes->{{3.676737116739361*^9, 3.6767371208244343`*^9}}],

Cell[BoxData["0.006922690412124541`"], "Output",
 CellChangeTimes->{{3.676737116739361*^9, 3.676737120830516*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "thetamV"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}], "/", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "thetamV"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"BesselJ", "[", 
       RowBox[{"1", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"twoaListKK3NumLimit", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          RowBox[{"twokListKK3NumLimit", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}], ",", 
      RowBox[{"BesselJ", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"twoaListKK3NumLimit", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}], "/", 
          RowBox[{"twokListKK3NumLimit", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "i"}], "]"}], "]"}]}], 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"widthNList", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", "twophiList", 
     ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"twokListKK3NumLimit", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.67673683469036*^9, 3.676736860256508*^9}, {
  3.676737167749784*^9, 3.6767371876345043`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.00003294351748960847`", ",", "0.06014862075242365`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.00003294351748960847`", ",", "0.006014862075242365`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.00003294351748960847`", ",", "0.6014862075242366`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6767368446549273`*^9, 3.6767368606680326`*^9}, 
   3.6767371883365173`*^9, 3.6767385129764338`*^9, 3.676743622842211*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.000016471758742569687`", ",", "0.9990957403486908`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.000016471758742569687`", ",", "0.9999909553790054`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.000016471758742569687`", ",", "0.9115782869486544`"}], "}"}]}],
   "}"}]], "Output",
 CellChangeTimes->{{3.6767368446549273`*^9, 3.6767368606680326`*^9}, 
   3.6767371883365173`*^9, 3.6767385129764338`*^9, 3.6767436228884163`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.916430502506351`*^-6", ",", "6.922627799013499`*^-6", ",", 
   "6.310574266960363`*^-6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6767368446549273`*^9, 3.6767368606680326`*^9}, 
   3.6767371883365173`*^9, 3.6767385129764338`*^9, 3.676743622896262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Test", " ", "Theory", " ", "and", " ", "Prediction"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"probTheory", "[", 
      RowBox[{
      "nlist_", ",", "klist_", ",", "alist_", ",", "thetamatter_", ",", 
       "x_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"widthNList", "[", 
         RowBox[{
         "nlist", ",", "klist", ",", "alist", ",", "twophiList", ",", 
          "thetamatter"}], "]"}], "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"widthNList", "[", 
           RowBox[{
           "nlist", ",", "klist", ",", "alist", ",", "twophiListKK", ",", 
            "thetamatter"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nlist", ".", "klist"}], "-", "1"}], ")"}], "^", "2"}]}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"x", 
         RowBox[{
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"widthNList", "[", 
              RowBox[{
              "nlist", ",", "klist", ",", "alist", ",", "twophiList", ",", 
               "thetamatter"}], "]"}], "^", "2"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nlist", ".", "klist"}], "-", "1"}], ")"}], "^", 
             "2"}]}]], "/", "2"}]}], "]"}], "^", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solNumMode", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solTheoryMode", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"probTheory", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"twokListKK3NumLimit", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"twokListKK3NumLimit", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"twoaListKK3NumLimit", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"twoaListKK3NumLimit", "[", 
                RowBox[{"[", 
                 RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "}"}], ",", 
             "thetamV", ",", "x"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "endpoint", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"twokListKK3NumLimit", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"solNumMode", ",", 
       RowBox[{"solTheoryMode", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"solTheoryMode", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
        
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
          "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FrameTicks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{"0.05", ",", "0.05"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Blue", ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}]}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
          "\"\<\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
          "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\"", ",", 
          "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\)]\)\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
     RowBox[{"BaseStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "9"}], ")"}]}], ",", "10"}], "}"}]}], "}"}]}]}], 
    RowBox[{"(*", 
     RowBox[{",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"gridlinesCode4", "[", "3", "]"}], ",", " ", "None"}], 
        "}"}]}], ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Orange", ",", "Dashed"}], "]"}]}]}], "*)"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6767362420505257`*^9, 3.676736518599491*^9}, {
  3.6767365511534777`*^9, 3.676736660922223*^9}, {3.676736724268433*^9, 
  3.676736757254567*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJwt2Xk41Ov7B/ApW/ax7wxmmBljbaOFz60QqaRVwpS0IjottDAJIaFCJcso
hVZFSptB+0plCWVQ0qIoJSI/39/9nH/O9bruebw/78/yPOe6jvHqzd5B42k0
2icJGu1//3683Jx72nrIKaPBrFveSsWR9r9/qFRqRX235gFBAXEeVdz5dn/y
0rvosEIqdIKf/e9Fr8n8ErXUp/e70Zv36IRSqnv7keuFlt/J769RuyzL3m2P
6Ecvv0mFx63+p8CgOeH6Sqor6vwLy0wJdHoVZZt4nK7tLoNOqKF+BhxZcO0g
Hb37HtX5YxbrlrUqOuwBJc1xXZf1Tx295hHlWP82ebaMPnr5E+rP/IUnfv0l
9nxGucywHX/uHIPkv6C+y0nObbdiobNqqbMy+2WS1InT66jVHVe9FTex0Skv
qb03zc9Ov2JJru8VNW3WuKBNHTx0zGsq/eDzlq4PNuR666ndG0qyRismorc3
UGsDR4xnD9uR62+kvs4tjwrfMAW9sYlKjn44+ZalA+nzhpponMZ7P9Ue7d9M
ib6qB8+4PYP0a6GOLm/wzuA6ob1bKRt7p7PNdo6k71vqzobpUh5fAe36jnKu
eJwoqncm/duoroV9TK0oYgMxVVdz/Y9kowu5H2JKpeHz5KvLXdFa7dTk9Jkf
Z3gRp7dThWp+k5w0PdAqHVS48RPPJ8bEKR3URq09w6NHiOU7qZHo4qXm+fPJ
/eukzHyD91+aSiz1njKV+jMa4LGA3M/3VIj0etOaawvRo++p1LdPZuQvJN79
gdpzi6r3t/dGD36gUmmPn+TOXEzudxf17+i8WXOuLUL/7KJuZ45CCm0Juf8f
qVlG7uWXxUvRPR+pKNfPnhULiTd2U3tClzU6DS5Df+ymrgy7fgzO9yHP5xN1
9vImapBJ3P6JCm6IdZEw8CXP6zNFOUW9mBSzEt3ymdq+87pt3kTi5V8o3XmK
823W+qPrv1CbFr8/4r0/gDzPr5Sot/G0WxTxi6+UmSJHvvMjnzzfHkrv18Bv
W99V6Ec9lIZjQdyZvcSu36ilaxjqf86uRtd8o8Kvu2y4LxdInv93qjTKdVp4
APHt75TDD5nP23etIe9DL2X347+GHfVogW8vZZQmu+3ekiDyfvRS9xcFGxb5
rMV5Uy9Vptrx9fbtteR96aNabJ9en71qHc6X9FF+jjEpSm7ryfvTR7U2cUy4
99CCl31UkYSuz5aoDeR9+kFpTT//ytl1I84X/KCqlHuHVL5uJO/XD+rD7rh4
ztlNOH/6gzoQo2p7Z0Uwed9+UpesqnsEtiE4d/9JnV6+coV6Rwh5/35Sf4On
feEnhOL8/k+q73LINsaRzeR97Kf4mjOoKNUwnM/qp0Jl+h5s3RBG3s9+ynnO
7tZK6XCci/qp25L3Zh12CCfvaz/1l7Z79/1cMp/5i2JP8+tzmL+FvL+/qBDF
LY+Z69CCG78oFZYi3/IDmQ/+ogpXhOQ/zPkP51N/U/tdFKVrsv8j7/dv6u/7
tikSM7fivOw35ZOqcjPg51byvv+mMvNORsa3krntAGWi7Sr7+PQ28v4PUCrz
eQuD5m3H+cUBKkC2srKJvZ18DwPU1KImuoPhDpxb/KF+nQ3+9v3sDvJ9/KEy
Wt7Um8SSedEf6gNPx3J+QQT5Xv5Qhmtvf2uVj8Q5a5CyrnpWGtlL5msGqahK
57nJk3fi/OQgdfoelI8P30m+p0FK7tRJ1eDNZG40RJUffjBu5otd5Psaorx3
iB7KtKIF2UOUwvHb7lfH7Sbf2xBV+ox9qip0D851/lJKXu/fuSzYQ76/v9TR
pnu1uoVknvmXuh5SJ+hTiSbf41/KaEaMTtKzKJyrDVNqd1ysw/zJ3HuYskoo
0jvnK8B52jDlU9pX0cYTkO91mEp2aH9ad5jMFUeo3ONyJZOt95Lvd4QKG1n2
1+0vmSeNUIrvTbeN7ibzRyPUSv+ciW8lYnAu84/qyoxIk31F5q7/qDZpCYmp
wWQe+4+6odrSH9gcQ773f1SUbcezh2VkPm6Uyu2w//vdfx/5/kcppg+vnFaG
FkSNUlkVsU1ZQjK/PUqNe/94Z92iWJz/HaUGP8sX2xyOJfsDDfZvc5FSyERT
M2iw1dD/Srt7HNkvaLAwvrju6Ha0aCcNwirGjzNMjyP7Bw3oeiXRQioe11fQ
wLV0en/V6niyn9Dgjez1/LDjaNEADS7rFc/m2O8n+8s4yDM04wwvQ1NTxkEx
/dtZn4L9ZL8ZBz6j++eY2ybg+q3j4E2o9xnDZQlk/xkHi1f6XGOVoqnSceDR
vK3oKS+R7Edjv39fr/sfHy3qGwdfRJm3nO4mkv1pPPxY+HnfRV4SrrcZDz3K
dyTz/ksi+9V4yFouafBfA1oUOh5Ufj5iH7Y7QPav8WCrXClXloqmLowHeg7t
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
7zvZWYYWxFpBQ/Qc+0NP3zr9H1csxaA=
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJwt13lcTO/bB/Bp3/d9n7aZaWZKtrKU77nKUlGyl4pBSJui7GmKEMqoFJEm
JCFCIkWTLUkUEkIjRUWpSJv09Huu2z9e79fdNZ/zOXPOfZf56o0L10rSaLR2
KRrtf/8/iV+ienrJ8H/H3jDalOw0ZtD+9486Qp38s/uT8rmzxNnU+8gsE+Vz
D9AReVTfkouOh/XfkPWrlGSmnqHCuS/oAzeo2qBzhR6FXeTnb1ELEkTpe/X/
oH1KqetR5v+Za/0j8+XUrU4p5ZGzUv/9v9MqKLfN3xr3NcqjDzygfJieLraF
quhdj6iiXJ2CfoEmOqKSur7YTmudvi46sIqaFlDrtqrLAO1TTd1u87zVpmmK
nldDLXrZ93HExRxNvaBuhXW/enbWEp1ZS+VWcsRiDoNcTx21ea5D9tRGFjr5
JdX3MSPvzTUOub5X1NXOusRbV+3Q8a+p3xXj2sI67Mn11lP+l97H5ggmoLe8
oUY76XO3eEwi199A5VxxkP2h54AOfku5ynoGSw46kj7vqD/KKbYlnVPRK95T
zq32Uup/ppN+jdTrygUnZTVnoBd+oH7JJS14TqdI349Um+XS5iAXQM/+RFkY
pb16GeZC+jdRw9FL+pXOuqJNxFRjENNUu3kmuR9iamujjt539my03mfKL+LS
VUHMHHJ/PlOXDvfckH7vhtZopgx4EV2zKQ9yv5oprU471rLCuWilL9R0jRus
yWxPcv++UNrJEsXiAi+0TAv1Q37+08sm3uR+tlCLhY8ezG8nHm2heldYs96V
LCD3t5VqyQxvcDuyED3YSiVP/Fx4esMicr+/UqL0vynv3Rajf32lyh7F+v3l
LiH3/xsVt3zDNyndpejOb9TUpH7NHqll5Ptoo05NvVDy4A/xtzG3TCne2eVD
vp92yuj++Wb9777oz+1UyR07/ZM/lpPvq4N6Guk5TvKXH7qxgwqdWz7q+c+f
fH/fqdxNfN5u1RXo+u/Uw6ZnzFTLleT7/EH5jRPoPDbloV/8oJ55nMyedIV4
Xid1OUHGWIdaha7qpBwzQqPWvyae3UU126qmcEJWox90UR96KwNWSa8h3/9P
SpCkJ5IXEt/9SXnlGeaYzwgkz0M39bUrue3SJzTfr5sKM34Zkxe3ljwf3ZRs
3+c52sx1uP62m8r38rftfb6OPC89lK52rDZsX4/rS3qoGjfWFxojiDw/PdSw
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
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0, 0], PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], Dashing[{0.05, 0.05}], 
          StyleBox[LineBox[CompressedData["
1:eJw1m3k8lO/3/+37MvadGcyYMUOjUKK6z7tSSjWiksRESpsUpUUaaZEW2kML
aS+hRUrLCCklZCkkSyqpGGUL5ef7Odevf3o8H5czr/tc932fc93XdQ4jaP38
EBkpKalvslJS//e/vtyWaSFl96acqGW1q9prTZb6v39UInXomVRZ4/l2wuep
L8v16kvPK035H4dfoc58H8pMu2OCTGVR3cc/aOw8z0aOv0M9etheH+Y2jvz9
ferlBFFN821XZN98SqC+7N6Ouv+I/VMq9vLUb/POzUQ+XkDF7b82rcZmHvm9
QuqoHr96eKI3cnQxdXTZyGzvaYvI75dQywr0zrZkLUFe/pJaLDdRv2yykOi9
oo55bzW8XxuE7FlGnTlxv+7y+RCiX04J78SUHEsORU6poEyMD+dFFq0h11NJ
OXf2/ZhCX498+C3Vq2C2b9PCDeT6qqhL3XdOOTlFIO+qpu7LpK/w420i11tD
mfmM+droGoW8uZbi/7xc8CB4K7n+d1T6TKH314ztyKvfU0Pi97cCh3cQf+qo
8u5PZYecRcgB9VR/dcor5e2xxL8Gyuz1i2/nX+1Cnv+BmrIsxNSTvZv420hZ
LHEcq3JkD7L7R+rhxbfVNfL7iP9N1NgrhfHX98YjmzVT+Xo7M+N0Esh8NFPP
uDt3+N88gGzQQlX5z9Pgex0i89NCsTanCv5IJyJrtVJfTlvELw5MIvPVSsWZ
cQdvTD2CrPqJ6vC6PKXb7iiZv09U/ueofSzzY8jybVRR/ZTOmbrHyXy2UdWh
wpgFtBPII23UCyNFvof2STK/n6loM+dvdONTyH8+U/U1ZTvqbE6T+f5CxaWc
zFrvmoz8+wvlfXeWfbNPCpn/r9SqpLRTNpGpyD+/UudsF0T9l3yG3I92KjDL
eYZd0Vnkr+1Uqs+Y9W0958j9+Ub1OF61vK2XhtzyjSoq79xbfYdwQAel99/N
He980pEbOqg8U3eDBwOEfb9TG7I8l0Sdv4Bc8526aRQ7k+aRQe7nD2rG5obq
2F7C5T+otZZHfr68eJHc35/UIguTqC8LLyG//EkZJLrNqVG9TO53JyXvqTz1
eCHhwlFO/WHJiLlC7n8XFTaQdWur61Xkx13UppHY86lDhM0klMPav5d2P7n2
PxYtkVCfxvNXj919nTwfEiq7/MKBC543cPy9hIoJCUx/a3CTPC/d1IjfHxfx
Z2TRgm7q1fPjDaG5meT56abW63TKlu6/heNvu6nFecvYLYFZ5Hn6Rc1QGKxf
YJqN4/N+UbuSb8brJGST5+sXtTgpZjb7Dxl//Yvqb9xTdnRVDnneflM5CY/u
ejUgizx+U1qNchnBc2+T5+83lZRo51zyDFn0/Df1QLtPcfuEO+R57KGkP2jf
2pGFLJraQ9WIHR6W2dwlz2cP5Rrw78GqdGSRuIfKPMgaLzC9R57XHmpec8D9
naeRRZN6KT+nlY/69HLJ89tLXZipWXTnOLLoYS+1yt915j3d++R57qUUvrU/
+XMCWTS+jypdPC5lp2Eeeb77qJs1vjOnn0EW3e2jenWejvNgPCDPex91yW3g
2f4ryCKHfqq6usRXfsxD8vz3U/G5Nj4P7yOLbvVTIbpzaFcgn7wP/dTX+My2
l6+RRdwBytJBjslY/Ii8HwPU0NuFjBtfkEVXB6hyjSHmik2PyfsyQO0/k7pd
IP8Ex5l/qGfHJq0MPfmEvD9/qOin021vsp/i+IU/VPLwDhnjR0/J+/SH+u6l
rufLFuO4xSA1fqRpjXOEmLxfg5TMp6kWV56Q8TOD1OlFsjOuqRSQ922QOjLC
/uO6CFlkNER9OSEzK+AiGfcdorYWWnlq/iLjJ4eohj+htLnUM/I+DlHB3oOX
jBKRRTrD1J4tc403fCTj84epgAS7rd72hTieNEwt1777+mlMIXlfhynP/gVm
98rJuPpfanBzy4axjCLy/v6lDjB3lTtHIIsS/lJruwtdCorJ+Mu/VDDv5O0K
w2IcV/xHnU2eO3H52mLyfv+jzolulm8Tk/Hd/yij4ob1OnrPyfv+j0qT3aJv
txpZJD1Cse8kPn7+lIxTI5TH7CtLm/RKcDxmhHJf/+jnprUlJB6MUCVmHsH7
C8n40Ajl/Nn9tqHJCxIfpOCx6dgyywhkyk0K6hjqly6/ekHihRTsTQnmZFi/
/B+Lt0nBm/w5Mw1iXpL4IQWS4xGd0u+RqQdS0BZAUwwaW0riiRRMqejd7nwI
WdwvBVGbEp1i2ktJfJGGbepfjCdMe4X2ztIQ1XFBKzjtFYk30tC5UOff32Fk
caQ0DP3jFir6vSbxRxouLT343877yNQdaVhjv8s/WK+MxCNpeNaqJrkdgSzu
loYbJi31a9+WkfgkA3Nt1v5JdHiD9vxR3vWOZXLkDYlXMjB/qdok9W5kcZgM
sFn3dUO8ykn8koEa3dl7GLeRqUwZsP2463aacgWJZzKQMm9r0bKJyOLvMlAf
HBXkvaaCxDdZqHSo7Y08g0zZykKHw5KvxWXE3kMW4jUnnp8+QuxDZcEzWn/P
b34liX+yoCavIFUehExdkYWd7Uc2vzteSeKhLGR05c1VK0EWf5aFZzO6f679
Q+zl5cAkwPbBAPct2lvLwYTHb3SzAt6SeCkH5d+LlyceQRYHycH4OZvVkove
kvgpB5tkS8Je9RP7dDkoeMvoZHKrSDyVg8sKm35cCUAWN8nBFl+nV4KjVSS+
ysHyd4HfLZ4jU+by0F65PVN3kNhPkofz4jMb7O2r0d5fHhLGLj+1NqiaxF95
yH0oG/PmJDKVKg/8psm7vV9Vk3gsD3OV1ykNjRD7OnmYEbU9tMixhsRneTAc
0yWdtQqZMlSAc7++ODw8V0PitQIMOJot+FyFLF6oAMpaHSVjlGtJ/FaA/2D6
l9OTkakTCnDQ8IUqPbKWxHMFmBSddazoGrK4SgEWNDW+39NE7H8rwI3JjU7B
eu/QXlsR3M1b5PxnvyPxXhEy9r04vz4WWSxQBHNluvDs/Xck/o/+fa7V+baf
xD5RERw4BfemWb8n+UARsnYnDz/yQxaXKUJClOxrzyPvSX5QhCOUevTvEmRK
TQl234lZnv2P2HOV4Nvkhg+7nOrQfpYSJP8Kdlu9to7kDyWAfUb1IRnI1H4l
2Lziidqm+jqST5Qg+85721Na9WhfogTDC+4mvJpZT/KLEsyQCdmlJUKmFJRh
nfuLlaH360m+UYbO4/uSyjuJ/TRl4HsZz3dnNZD8owzbP5RIv16KTMUpQ1DG
tZ7AEw0kHylDEzdzp3QZsrhAGVqsTvZnyX0g+UkZ5oZL5ax2Q6akVCDLLUjK
IfIDyVcqYKCqMVHmJrJ4sgqcK3K83fiJ2AeogGPp10fPTBrRfocKNMmb3Mr2
biT5TAX+G75cd/kAsjhfBY58nHXsYmEjyW8qkHfmlv21IWI/qALN/ctH7oz7
SPKdKvBO/PQtWoMsnqAKObT7h+syPpL8pwqnaIyeXw3IVJQqHPaN+aCp20Ty
oSqMa9RPHeOJLL6nCoXvOHFeu5tIflSFj3VdXyMfIVM9quDZcsY0uYfY66hB
n5PDwwD9ZrQfqwbPiyekh49tJvlTDXqi//2InYtMbVAD6qTZjKOrm0k+VQMX
R8fF6XuJfZYa2Kxpe33rArEvV4P3s2pmP3xC7DvVILL9zs7CemKvrg52oY7a
pX3EnqcODQo6mWXaLST/qsNhK73BMntkao06/JypklE6q4XkY3VIcC7zKlyB
LL6mDkod07Lv7yL2L9WBcTUk9Mo5Yt+uDtvlx1offUjsFTUgoCv/UFQtsWdp
AO8uc96iX8TeXQNyVTO0HTRa0T5EA+ZZbNslZ9tK8rkGXDoi51E5HVmcoQHh
e7Npp5a1kvyuAaXXpHcv2EHsWzVg6fijc9SSib20JnCldQ3z7xJ7uiY4b/Y6
vKyC2FOa8PSq/ZKR78Q+UBPG+1znHFf8hPYxmtDX+vGihRWy+KwmxETIbkmf
jCz1WBO2NK6da+SHTH3QBJ/cw1V7NxH7IU3Yt2D49rckZKE6DZa/X3UabhJ7
MxqkMTPHHC5BTuPRYLbkiXV5K/k9NxocfZhvJfcPuXk2DZrftb3nGbXh7y+h
wc2wdMlMR2T6GhqUbt1p4DsPWbyNBv+9dBxcvBpZmECDXJm06XP3IEul0MA5
/eVlxzTktGs0uNXTVqqWj0w9oMEjuldgbQ1y8wsaKJikaB2REP33NFC8tjXR
TfUz6rfTYN7S93vfM5HF/TSwO/7m0nIKWaioBZXrL6U0+yFLGWhBWdU7Hc9N
yGksLZAT6ogvJyJTzlowsNplruQacvN0Ldg6FLiOXYQsWqAFTwrevp77keiH
aMEzTV3T4AGiH6kFqpWNKiHaX1B/txYUx1p6+PCQpY5rAYOpsY/vjpyWoQU0
V8VNfwKRqTtaILiXVXhrK3LzMy1I//7ZSnAMWfRWCyITi90bbyLTW7Xg6rmr
jQueI4u7tSBzATvlQRPRl9aGWrq5vdIfoq+lDc0HL84G7a+oT9eGh86Gl5Zz
kSm+Nux7aPhzwzTk5ina8Dh9f23oUmTRPG2IFRzT9diMTA/UBpdfGX7aicji
MG3ghYT7F11BFsZowwpmb1mAGFnqsDZcdo4KbnlP9M9qQ4z6nsrZ3UQ/UxsO
RvW/PqvcjvqPtOHNrl8q7xjIotfaILv8C9Xvgkz/oA3gn2T9zwtZ/F0bNp0d
WvN9FbJwSBvU7XeVPYlFllLVgYevykaikpHTjHVAs+z9A/0cZMpWBwJlum6n
vCD6LjoQdeLWBdlmou+hA+valcCrn+gvHh2PmOoep/EN9UN14GL6wOpkJrJw
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
ilTJAXL+IG8NFXqzTYLCkSvUrOF9hmnaLx9yHqFrDXNTYz9tcUEON7WG2VPU
JvaakfMJa2t4EbhuYKUMMo1nDf98IiIqv+B5SvM4a5gzqCQ19hVytqs1tF11
/L0/i5zPTLUGtbEGF+qOIQtmW4NKXccyxhZkurc1/PSUiV/mjyzxs4aa9JJV
KRQ5zwmyBvVZ+f6vrZGTVlvDJ42I3H4lZOFGa5ionPza9CeeN/G3WUNJckeP
ayU5f9plDTOXjd+z4B5yxf5RniCsWpWMnHbEGupYC5227kAOT7YGaX8j6d3L
yHlXujXIMvMOJkxHpl2zhn1tc+wPcZCbs61ht7KM20F15Ow8a9BRUFSL7ybn
c2JrYLon94hqkAUvrEGR9W921ANkeoU1VLXvCl1zFlnyzhpabm1PWxpLzvOa
rGFwzX+z5oYgJ321hsRGp0eTPJCFXaPzJ8rz5Nkh8/tH52P/mPnGWuT8cMQa
Ft6Qdad14HllhQITfryx4/7IQU7TYEJ11g2pl1uRw/WZ0H5mZsQVIOed5kzY
/LN0TLwyMo3FBLef3a1rKvE8tdmOCT0vIly8k5GznZiQsG2oafIycj47iQnp
91hxYzjIgulMCKiOK2d243kufQ4T9IsSN1g+QJb4MOHgrzt6rFhyHuzPhDGu
00IdPJCTljPhUnW03nQtZOFaJlydLHq5rA7Pm/mRTKD4C/jx6eT8OZoJ2nvb
evNWIVfEMSHKob+4xwE57cCono2jp9sgnn+HHxudH4G5Y9Izcl6eyoTnW7U5
3QnItAwmTP1vem2gN3LzdSY81iz48sEEOfs2Ezj/guVXtZHz+YdM4L1t/CCX
iSx4xgTx90yDnE3I9FImzHJhCMMmI0sqmZDIFQgnKZLz/Dom6F43fWZegfUC
SS1MYCvxx+gkIwu/MeHp4IDAJAiZ382Ez4evVYznkvqDP0xopDstWtWD9QoV
UiyY6DP3UPZj5DQlFiSohZho7EMOp7GgZcXFa7sEpN7BkAXUXUmThjEyjc6C
G5GfQ+58wnqKZhsWbPauag3PRM4ewwJL6yd/Z0SR+ozxLPBs9lvqAsiCKSxI
uqx+dboqMn0GC5Y9/Bq3rgbrPSRzWfBi96WTOedJPchCFqw4eXOP9mrkpAAW
wHXlviRHZOEKFjy9FnbQbgTrT/hhLHicw//Z/pLUr2xmQZqh+6PC48gVO1hQ
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
J2AY7p18d8r/A71uC8E=
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.050000000995},
      BaseStyle->{FontSize -> 15},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Transition Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         
         FormBox["\"Distance (km)\"", TraditionalForm]}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, {{0, 
           FormBox[
            TagBox[
             InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
             ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"1.1\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {400000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"2.3\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {600000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"3.4\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {800000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"4.5\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}, {1000000, 
           FormBox[
            TagBox[
             InterpretationBox[
              RowBox[{"\"5.7\"", "\[Times]", 
                SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
              AutoDelete -> True], ScientificForm[#, 2]& ], 
            TraditionalForm]}}}},
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->NCache[{{0, 1.*^6}, {
          Rational[1, 1000000000], 10}}, {{0, 1.*^6}, {1.*^-9, 10}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1001\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=1001\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\)\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.0625], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0], 
                    Dashing[{0.45, 0.45}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.05`", ",", "0.05`"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0.050000000995},
   BaseStyle->{FontSize -> 15},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Transition Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      FormBox["\"Distance (km)\"", TraditionalForm]}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, {{0, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
          ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.1\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       400000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.3\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       600000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"3.4\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       800000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"4.5\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       1000000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"5.7\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}}}},
   
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Resonance Destruction (\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/10)\"", 
     TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJwt2Xk41Ov7B/ApW/ax7wxmmBljbaOFz60QqaRVwpS0IjottDAJIaFCJcso
hVZFSptB+0plCWVQ0qIoJSI/39/9nH/O9bruebw/78/yPOe6jvHqzd5B42k0
2icJGu1//3683Jx72nrIKaPBrFveSsWR9r9/qFRqRX235gFBAXEeVdz5dn/y
0rvosEIqdIKf/e9Fr8n8ErXUp/e70Zv36IRSqnv7keuFlt/J769RuyzL3m2P
6Ecvv0mFx63+p8CgOeH6Sqor6vwLy0wJdHoVZZt4nK7tLoNOqKF+BhxZcO0g
Hb37HtX5YxbrlrUqOuwBJc1xXZf1Tx295hHlWP82ebaMPnr5E+rP/IUnfv0l
9nxGucywHX/uHIPkv6C+y0nObbdiobNqqbMy+2WS1InT66jVHVe9FTex0Skv
qb03zc9Ov2JJru8VNW3WuKBNHTx0zGsq/eDzlq4PNuR666ndG0qyRismorc3
UGsDR4xnD9uR62+kvs4tjwrfMAW9sYlKjn44+ZalA+nzhpponMZ7P9Ue7d9M
ib6qB8+4PYP0a6GOLm/wzuA6ob1bKRt7p7PNdo6k71vqzobpUh5fAe36jnKu
eJwoqncm/duoroV9TK0oYgMxVVdz/Y9kowu5H2JKpeHz5KvLXdFa7dTk9Jkf
Z3gRp7dThWp+k5w0PdAqHVS48RPPJ8bEKR3URq09w6NHiOU7qZHo4qXm+fPJ
/eukzHyD91+aSiz1njKV+jMa4LGA3M/3VIj0etOaawvRo++p1LdPZuQvJN79
gdpzi6r3t/dGD36gUmmPn+TOXEzudxf17+i8WXOuLUL/7KJuZ45CCm0Juf8f
qVlG7uWXxUvRPR+pKNfPnhULiTd2U3tClzU6DS5Df+ymrgy7fgzO9yHP5xN1
9vImapBJ3P6JCm6IdZEw8CXP6zNFOUW9mBSzEt3ymdq+87pt3kTi5V8o3XmK
823W+qPrv1CbFr8/4r0/gDzPr5Sot/G0WxTxi6+UmSJHvvMjnzzfHkrv18Bv
W99V6Ec9lIZjQdyZvcSu36ilaxjqf86uRtd8o8Kvu2y4LxdInv93qjTKdVp4
APHt75TDD5nP23etIe9DL2X347+GHfVogW8vZZQmu+3ekiDyfvRS9xcFGxb5
rMV5Uy9Vptrx9fbtteR96aNabJ9en71qHc6X9FF+jjEpSm7ryfvTR7U2cUy4
99CCl31UkYSuz5aoDeR9+kFpTT//ytl1I84X/KCqlHuHVL5uJO/XD+rD7rh4
ztlNOH/6gzoQo2p7Z0Uwed9+UpesqnsEtiE4d/9JnV6+coV6Rwh5/35Sf4On
feEnhOL8/k+q73LINsaRzeR97Kf4mjOoKNUwnM/qp0Jl+h5s3RBG3s9+ynnO
7tZK6XCci/qp25L3Zh12CCfvaz/1l7Z79/1cMp/5i2JP8+tzmL+FvL+/qBDF
LY+Z69CCG78oFZYi3/IDmQ/+ogpXhOQ/zPkP51N/U/tdFKVrsv8j7/dv6u/7
tikSM7fivOw35ZOqcjPg51byvv+mMvNORsa3krntAGWi7Sr7+PQ28v4PUCrz
eQuD5m3H+cUBKkC2srKJvZ18DwPU1KImuoPhDpxb/KF+nQ3+9v3sDvJ9/KEy
Wt7Um8SSedEf6gNPx3J+QQT5Xv5Qhmtvf2uVj8Q5a5CyrnpWGtlL5msGqahK
57nJk3fi/OQgdfoelI8P30m+p0FK7tRJ1eDNZG40RJUffjBu5otd5Psaorx3
iB7KtKIF2UOUwvHb7lfH7Sbf2xBV+ox9qip0D851/lJKXu/fuSzYQ76/v9TR
pnu1uoVknvmXuh5SJ+hTiSbf41/KaEaMTtKzKJyrDVNqd1ysw/zJ3HuYskoo
0jvnK8B52jDlU9pX0cYTkO91mEp2aH9ad5jMFUeo3ONyJZOt95Lvd4QKG1n2
1+0vmSeNUIrvTbeN7ibzRyPUSv+ciW8lYnAu84/qyoxIk31F5q7/qDZpCYmp
wWQe+4+6odrSH9gcQ773f1SUbcezh2VkPm6Uyu2w//vdfx/5/kcppg+vnFaG
FkSNUlkVsU1ZQjK/PUqNe/94Z92iWJz/HaUGP8sX2xyOJfsDDfZvc5FSyERT
M2iw1dD/Srt7HNkvaLAwvrju6Ha0aCcNwirGjzNMjyP7Bw3oeiXRQioe11fQ
wLV0en/V6niyn9Dgjez1/LDjaNEADS7rFc/m2O8n+8s4yDM04wwvQ1NTxkEx
/dtZn4L9ZL8ZBz6j++eY2ybg+q3j4E2o9xnDZQlk/xkHi1f6XGOVoqnSceDR
vK3oKS+R7Edjv39fr/sfHy3qGwdfRJm3nO4mkv1pPPxY+HnfRV4SrrcZDz3K
dyTz/ksi+9V4yFouafBfA1oUOh5Ufj5iH7Y7QPav8WCrXClXloqmLowHeg7t
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
7zvZWYYWxFpBQ/Qc+0NP3zr9H1csxaA=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwt13lcTO/bB/Bp3/d9n7aZaWZKtrKU77nKUlGyl4pBSJui7GmKEMqoFJEm
JCFCIkWTLUkUEkIjRUWpSJv09Huu2z9e79fdNZ/zOXPOfZf56o0L10rSaLR2
KRrtf/8/iV+ienrJ8H/H3jDalOw0ZtD+9486Qp38s/uT8rmzxNnU+8gsE+Vz
D9AReVTfkouOh/XfkPWrlGSmnqHCuS/oAzeo2qBzhR6FXeTnb1ELEkTpe/X/
oH1KqetR5v+Za/0j8+XUrU4p5ZGzUv/9v9MqKLfN3xr3NcqjDzygfJieLraF
quhdj6iiXJ2CfoEmOqKSur7YTmudvi46sIqaFlDrtqrLAO1TTd1u87zVpmmK
nldDLXrZ93HExRxNvaBuhXW/enbWEp1ZS+VWcsRiDoNcTx21ea5D9tRGFjr5
JdX3MSPvzTUOub5X1NXOusRbV+3Q8a+p3xXj2sI67Mn11lP+l97H5ggmoLe8
oUY76XO3eEwi199A5VxxkP2h54AOfku5ynoGSw46kj7vqD/KKbYlnVPRK95T
zq32Uup/ppN+jdTrygUnZTVnoBd+oH7JJS14TqdI349Um+XS5iAXQM/+RFkY
pb16GeZC+jdRw9FL+pXOuqJNxFRjENNUu3kmuR9iamujjt539my03mfKL+LS
VUHMHHJ/PlOXDvfckH7vhtZopgx4EV2zKQ9yv5oprU471rLCuWilL9R0jRus
yWxPcv++UNrJEsXiAi+0TAv1Q37+08sm3uR+tlCLhY8ezG8nHm2heldYs96V
LCD3t5VqyQxvcDuyED3YSiVP/Fx4esMicr+/UqL0vynv3Rajf32lyh7F+v3l
LiH3/xsVt3zDNyndpejOb9TUpH7NHqll5Ptoo05NvVDy4A/xtzG3TCne2eVD
vp92yuj++Wb9777oz+1UyR07/ZM/lpPvq4N6Guk5TvKXH7qxgwqdWz7q+c+f
fH/fqdxNfN5u1RXo+u/Uw6ZnzFTLleT7/EH5jRPoPDbloV/8oJ55nMyedIV4
Xid1OUHGWIdaha7qpBwzQqPWvyae3UU126qmcEJWox90UR96KwNWSa8h3/9P
SpCkJ5IXEt/9SXnlGeaYzwgkz0M39bUrue3SJzTfr5sKM34Zkxe3ljwf3ZRs
3+c52sx1uP62m8r38rftfb6OPC89lK52rDZsX4/rS3qoGjfWFxojiDw/PdSw
8pvd4+vR/Jc9VG7O+Wcv920gz1MvdSPU51rLtGBcn99LsUfcNdb3BJPnq5cK
V9tR63sxBNef9VLbj+5/WbY2lDxvv8b6XBs6YhmG6+6/KJ+rDZxXX8LI8/eL
apq93W3f+XBcf/yLSvYqnpAfspE8j7+ppK3Mr1kGEbju+ptqfb5g+PTuCPJ8
/qbOCpZXNbSQddFvij43hXKbF0me19+U7R2DBd1FaL5zH7Wl6nPHC9NN5Pnt
o1QzLo18TUTz7/RRL6Llt0/+Q9YH+6jBn77zStdsxnXHP9Sdqrp1215uJs/3
H+qa1KZboS5RuF70h8r6qGx7/EYUed7/UBLvZhYPWUfj+vh+6k7pYUg7EU2e
/37qXgrzbqDqFly/0k81FbH0QvduIe9DPxX5aLPzxWGyzhmgOLfKTMyitpL3
Y2DsfuzPfdqJ5l8YoKLO29y/HLSNvC8D1IFxlbxHLWi+9SB1rHhJuPbq7eT9
GaSutGY2nBCj+WcGqaOV3MQlvB3kfRqkjjyN3DjnM5pvNkSlPRBu2bhmJ3m/
hihuj+hgzVc0/9QQlfUvP2NVyC7yvg1Rw7LSiZweNN9gmJpxfI4HZ1sMef+G
qejiu495tN24nj5M/fwU216duJu8j8NUkNK2rFDtWFzX+kv53OTVuAhjyfv5
l0oLbR6fp8vHdcFf6s7f2NzKAD55X/9S/2lkF8fnknWVEerGH+flbzvJ+rwR
qhpcE544xOH6wRFKvy6Gu4gfR97nEUr0/NzMbU/Jutw/yu76svuOOvHk/f5H
fQTTzKM8NH/vP0r3WJAo4TJZf/CPKtE5YqM9SNYlRqm/cS+rnGbvIe//KOXW
5XdsNBXN3z1KSVU68f2byfrdUWrFy/Ddi8bvxfXhUcpxwus9Lfy9ZH+gwcBa
x71qdWjKiQZr583d/No8gewXNBBYX5o5cTNatIMGZWnvv3MeJZD9gwauZ2b5
39Pbh/MlNEi8SyV2BO8j+wkNvt+TX1d4Dy3qp0Fh+/1WNa39ZH+RANWuXcPy
QWjKQQJMv3MzT97dT/YbCXgfca2oUusAzkdJACO+zjkp+ADZfyTgbboT60cF
mrohAeVZB9e1GCSS/UgCrv+b/j16E1rUIwHnTpVcEFYnkv1JEkQNi48GWh/E
eXtJ2HhkTkZF7EGyX0lCslXR5Vvv0aJwSdi9M/fBbIdDZP+SBM9/qs/DU9BU
gSR8PP3s7rifh8h+Jgla787sTZx3GOe/S4LEzRnauy4eJvubFBhWTV4hp5CE
82wp2Ogku5gTlET2Oyn48ET327dKtChICrzvFss7s5LJ/icFajTTi+xENJUn
BR3qYWWFHclkP5SCNKUC+xfzjuB8qxS05b/oT7h6hOyP0mB+dllcsIIA562k
4VO4nPmK6QKyX0rDXAXPV1lhaNFqafDK2CSwEQrI/ikNhSnF3hKvyHyONPhV
z1W2lj1K9lNpSAryLU2bihY1SYN0x9AS77CjZH+Vhuk21OtlOWjKVAZOL7e1
u1RP5p1l4IlqqZ+HYgrO+8vAnYlvFk/+L4XsvzKgrcvTCI1CUydlYNVqu8Su
/BSyH8uAJ0OpqKyJzL+Tgc66osQ3Oqlkf5aBkSmfJJzmoSl9WRifZqfdGZ9K
9mtZ2BgPt9tL0KKlsmChmNc6vofMb5GFfZlfUh+x0nD+mCx0KUfcOcdLI/u5
LBidL/F+cRwteiULh/QsvGbVpZH9XRYq+KP5sorHcF5TDi5GnPLTcj1G9ns5
6PjquDxkF1rkLQcTl8hkqRYfI/u/HOQIuUYjP8n8ETnQtnxa7cBOJ+eBHKRf
7sotDUSLauTg3N5s4aHsdHI+yMH5kDfXz79HU8ry4Hkq7pWybgY5L+Sh7dme
wbsL0CIPeXhnX2R0JymDnB/yMLr9k73EUzSVKA+q7++PS5U9Ts4TeVCU1lWL
cEWLKuXhhm3cowz+cXK+yI89r2fcFe+hKVkFsO9UTKkcJvPWCiCf6HLsxdQT
OD9TAbZPfOhuse0EOX/G/Gg0t7wYTe1RgIizvsK8vhPkPFKAi/fY495PysT5
CgWoTRe5LYvKJOeTAoRND/hiWoSmaIqw1tOxz/53JjmvFGEbbUdU0qSTOD9D
EaqNZy2bFH2SnF+KsJxWkGpdjKZiFCFDeMdsVf9Jcp4pwodDIT1fp5zC+VJF
oH2/9q94xylyvilCfXyUc10ZmhpShKc3k89OHj1FzjslCEyoZbRAFs5PUYIP
qf/KPuzNIuefEhRYv/Qze4KmtiqBteXgwCWl0+Q8VIJBA92D8fPRoptK0DpD
JH029TQ5H5XAeeOeFSpv0dRvJUicID5cYZxNzktlMC+bm1C+Ci2aoAxvf4xz
lsvLJuenMuxe/D3/+A80FakMdSeCxFMNhOQ8VYaj99Kmz3NCi64qQ0eI/qo9
K4XkfFUGA+/Dc5vi0VSXMvyL2tO38jyZV1GB39QhX5mnZJ6rAjlbOZtedJL5
eSrQMO3r1HsaOTgfogJrlKZcqpucQ85jFWivyhApLEeL8lXg3q0tUet255Dz
WQUqtlIV386Q+TYVmKTml5NUSeblVCHrK0PN5weZZ6hCztN/0nM0zpDzWxWa
fjjGLHdAU2tVob7FfFOK3xlynqtCcaHspy4+WnRWFZYUs0s3nifzD1Rh6MEz
KZ1nZL5ZFRZqMK5/6iHzEmrgRgWLnumdxXm6GrQFVLKanM+S818NvL6sbdUJ
RFMr1SCuOKg74iCav1sNlnM6XbsLyXyWGkRJK71PbSDzd9VAJer1Zb9/ZP6D
GnQaLy2eY30O54fVYJFWRveyeWieijp8+3h8yeHNaJqJOqRtWdbUkokWctUh
fm7V/lX30ZSTOkhQTW6SHWjxXHWIKthrXKmRi5/vpw6ugdl/r05F00PU4cll
tS9lq9CiHepAuRVWdSaieQfVoTRy6UWX62hapjpoNdXtLn2PFuarw8eKH5SP
1HnML1GHgCchHfpctPiJOmw2VY0eWYzmv1WHM+FJ72V2o+lt6tDbnKU9IQ8t
6leHYesu4/haNE9OA6rXMDv7BtE0PQ346dG5O8kyD/MZGrBK5VO1myeactCA
g6tSaphb0eJZGuCwJyuGnYPmL9GArElJ9d7VaPpaDfAub3+e2YcWRWnArL7J
a+TpFzB/rwY8H//z0AkPNC1NY+y8THLxikYLz2rAfXE8nyFEUzc0IL/C6T+L
arT4vgYwD1hsgz9o/ksNiPBMt9prno/5zWPrd347d8xDi3o0wE/u2N3N29A8
CU1IHn1yin4OTdPQhJLRD6+7X6CFdE3wG9Bb2TKMpuw1ISa8dNIw8yLm/6cJ
Rbuk5k9ejObP14Rprxl5KXw0faUmfL+71EGrAC0K14QFRuV9xe/QvN2acGf9
vk8xspcwP1kT/iupaV8/ES3M0oTnFYXq0Tw0VaAJrrWz5uUmocVlmhBal3Vs
4A6a/0wTGAsetoa3oekfNGHFzvLJ8rqXMf+7Jow3Eex+6IrmDWvCUO74krOR
aJqSFqxlZX7KzUYLDbVgn9+db09r0BRbCzpPxtRo/kWLp2rB9R9VB2LYBZjv
rgVnB2I1lXzRdF8tmKW1c03pfrQoSAtGph6NSi5G87ZpgbFO6oy9rWjaAS2Q
Gpx755T2FczP0IKp3+LEDa5oKk8LDh7py5+8GS0u1gLzBavVis+g+Y+1IH/6
bgXfl2j6Gy1Ypz4kMJW8ivmtWuDjGndadgKa16cFAX9L2Bqr0TQZbZinP8tu
RgpaqK0NWux7OUn30ZSVNvzeWRoz2osWT9QGZ/n1H6s0CjHfVRta6kQsazaa
vkgbli61yzrqghat1oZPdt0Oan5o3iZtcF80szdrM5oWrw0bDddVOx9GC49q
w9Npyfe6zqGpHG3Qru6tLLyLFheOrbtUftnzhuSLtKF+h5Nq0E+SX6sNKlf4
rgHy1zC/SRs+bi+PXWOO5v3UhlefzMt3TEPTRrVhIjwfObMILVTVgVMb2hw/
hKIpUx04mnB0A2MfWmyrAwastuS4bDTfWQcWeMif67yNpnvqgPY8pdzglyTf
XwdifsslD3wn+aE6kLpJ0y9D5jrm79KBjwFO8nPM0MJDOjBYnHZUbiqaOqkD
rm3MX28XosUXdYD3eJRVGorm3xmbF1iOu7IPTX+qA429GRLXhWjROx3IkFp5
6vEdNK9dBzTnbBv+/prkD+rA5StiQ4ufJF9eFypOpPwJUriB+fq6MOdNwkGR
JVrM1IUNOVdfsmag+Y66YH9BsjrHB02fowt68hs3cjajRUt1oWh+c+mjJDRv
nS64x865HHEBTduiC9sV9jtxH6CFCbrw5tW+oIGPJP+YLggc2dz6AZJ/ThfU
JRfuua9VhPlFunA8+sMGkR2a/lAXvrvnNj53R4te6ULb5YTXnYFo3hddmOS6
2NuEj6b90oVmVqtHwEm0UFIPpHoVRAXFaEpTDwIvHb2k+hItNtcD40Y3BX4n
yR+vB7PiBl9LKNzEfNCDI/ohimlWaJG3HnSmr851oNA83tjPh5/JafdD0yL0
QDapY+jyVrQwVg8+rxi4zE9FU0f0YFnNvhuBV9Hi03oQS3kp+laj+Vf04ES2
dEHAN5J/Tw+KFwRkbJIqxvwaPdg0Q+FRhhma91EPkp8Xj6+ZjqZ16oHwh8Y7
TR+08K8elMk8LA6KQlPK+qCtGPX4uQAtNtIHUdhjqVkFaD5HH1xsAoKrq9D0
6fqw6E5D36qvJN9DH7ZavcqRl7qF+cv1oaKnfUO5GZoWrA+BE4vc9zmhhdv1
YUt8pVOAL5pK1IdU2q0ZM7egxcf1QeCjNXd6Kpp/QR/Y5cEBLoVo+m19yP/l
FulbgxZV6kMW5RjP7yD5Dfqwf1fZoVtytzH/mz4kKAYk/rNCC//og2Zj5pYl
LmhK1gBOh/Z5la1Ei3UMYPGzdpWJMWi+tQFUpPdeKclE0ycbQMLAflvv22jR
TANQvWqW8KcezVtsANMUbK9d/kXyAw3Aso1esEmjBPM3G8DV8g1RbuPQ1B4D
CM7YLGnniRanGICJ0oWFliFo/hkDSJobzmMlounXDcDejMN0zkOLKgzgSzN1
ZtUjNK/OAE4dVKs59gVN+2wAxmd+n3kncQfzuw3guudcM1s6mqIZQqtHqLNg
BlqsZgjsnoIByQA038wQCiYEzkvYiaaPM4SuU+KJeplo0QxDSPPddPH2bTTP
yxBUx627tKEBTVthCEviZCew/5D8MEO4uvDk1CHtUsyPMYSFM4PvvpuIFh82
hOkZxbefLETzTxnCE24FozISTb9sCIf2P5GsF6BFpYbQXy3v1nsVzas2BEZF
aY/pCzSt0RCS6vSHl3ehhR2GcF1pycrzKmWYP2QIfy3OGkjYosUKRuAXMdE6
ZB6ab2AEmr8mxrSEoOk2RrBxQa1x2CG0aIoRxL8bPyp9Cc1zM4JfcbFml5+i
aT5GkNXxcdvqDrRwvRFEBmyUZSnexfytRqD/YtGDvzZo8T4jeNB04aLYHc1P
N4KOxsRbrzag6eeNYLRMrbU+ES26aQQUe4Hdt3w079HY9W1fnSz3FE2rN4KM
q0tojh1oYYsRVMRNi41WvIf5v43gyRJT2QdstFjKGPRclQVmc9F8LWPw1VLR
PxSCplsaw2pX5gmZw2jRBGN4ILVS9chlNM/FGO5OLd7ErEHTFhrD+1huxfNO
tHCVMbxilP/eq1qO+ZHG4OawQd5jHFrMN4btYZb9Jt5ovsAYmDNbSmmRaLrQ
GOB79oLeo2jRVeOx59ntRu91NK/cGMZr1DRKvEbTXhjDQLrRY7M+tPCTMXjt
PuLAUBJhfpcxrFQVtz4wQotHjKG/clNXEBfNVzGBojclnjrOaLqJCbTMYkhU
eaJFXBMYpbFk965A85xMoO+V7fLZG9G0eSaQG5I7pMZHC/1MwGHpcItYQPJD
TCBB6qRuSQ7J32ECcY+6Dh+/TvIPmkB67cpZsQ9IfqYJ6DktdQ57TfLzTSBT
cuqm1a0kv8QE1kuGf17xh+RXmUDDiO+B1XIVmP/WBMpP8gLD9NFUmwm8Wd+y
KdYGLe43AcNXs68dn4bmy5nC1EltxiVz0XQ907H7w7wh9keLGKaQcm1NpFo4
mudgChOHBxbPikXTZpuCW7qrX7yA5C8Zm/c7Hfc4h+SvNYU4lTWPNG6Q/ChT
uLS4wzLwIcnfawrMh4cy79aT/DRTGGzIYph+I/lnTeFrX/SjhAGSf8MU6sKC
on4r3Mf8B6bguOOJfbARWvjSFPZSbf1fuWiq2RQO1ulXBs9Ai3tM4bPNxZN9
89F8CTNYPuH7prE/mDFfwwx4IhsP+ma0iG4Ga9Ovm4r2onn2ZrAosK5zXTrJ
p8ygo7K2SPsCyZ9vBhM8hyKqSkj+SjNoDU83S6gm+eFm8DL9x905H0n+bjMI
MHV11/hJ8pPN4LlX073PtAeYnzXmVTLGJZpoXoEZ1MUNBGRYoWl3zWDn06G4
XQ5o4TMz0HT3TAhyQ1MfzKDl77i1fsvR4u9mcK/hs+mSUDR/2Axc7wmvLtmN
FsjQIfpAvnaAgOSp0EFBcsrckDNoex06NHbs8+YXkXwTOgT1vzA/9Rhda0UH
i7q5Zffekuvh0mFQd4JJWwc6YhIdCgJKQH+EXJ8THRbb6zHnqz38f6vPpMNN
df7Tw+Zo8Vw63N3KtKmbiC5cRIc/9f9RxrPRfD86NKUOKYf7oL3X0CFK88Dh
x8Foeggd9l/SK7OOQXdvooPz9Ybjh46gRTvGfn5zn9lADloQT4fJDlleIUVo
3kE6sJyGzFsfo+1T6NBf4ZCx9h2alkmHZ6M7L/34jq7NoUORTa/fjn9oYT4d
dCJEuaoaj7D/NTrQaSr78i3RVAkdpkiPDHo4oNUr6BBxruhfrxta/IQObbLL
jub4oQtr6eDjLXt1aTia/5YOq859WawZh/YWj/0Gy1Djv05F09voEDKQZ5t1
Ht39kw4pM54tDy1Bi/rpsM/4hLTLM7RglA4bbrFZpk1onpw5SDmcuk/rRdur
mQOnQq6uXfox9tczh2l793m/00PXmprDngL7GS/YaCHDHErDTTKqndERduaw
fWS1z3NvNOVgDhmpurENa9DqM8zh5sZ58t+2oMWzzOFsvV7P30R0oac5vFY9
5GCQheYvMYf64Fv10wvR3gHmUPZfQXXgAzR9rTlkd+zUSXuD7g41B9na8YVV
7WhRlDks9/9wXGYELdhlDuukDzybo16J/feaw61ZlJvAEm1/2Bys8tQUmhzQ
tDRzmFgyqjTJA1170hyydA28jgSghWfNoTBwzbPuCHTEJXN4vqh1j89eNHXD
HL5mn4t8nIFWLzWHT+rnU6ZdQovvm4Puzs4vRffQhU/H5stjVk9+iea/HOtX
46NU1or2fj/2feXENroNounN5nBxZu+LRuUn2L/dHFRfXm2NoqNFPebQEFls
oD0JLRg0Bz9/qQ0lc9A8CQtQfp9SG+iHtlewgB5XnqfuRjRNwwKspNd9qIlH
1+pbwH/pWTsOpaOFdAto2D9qNf8iOoJlAd3b9rzVv4em7C1glzE9pa0OrT7F
Ap5Oqfa614oW/2cBI3nblTIH0YVzLMb+fjB7tFOlCvvPt4Bbnle3rTFHey+z
gL5sI8sFk9H0lRYQHbOkYqY7unudBaSzPb1nBKBF4RawSrL3mXMkWrDFAga2
TJjkmoDm7bYAI82/8V4n0Pb7LCA1enrxygI0LdkCyvw+PN1Sga49ZgHfM6ru
ptajhVkW0Kvbeai4HR2RawHCpnETmkbQVMHY/dPaUaCi+RT73xxb77w+BAy0
uGys72OR7q5p6MKHFuCtkfiv1AvNf2YBhwO6r0isQXu/tgDRsvdWnlvR9A9j
96fKJuD0IXT3Fwv4nSla3JeNFn23AJe6WPmFRWjBLwugH50TXfQEzRu2gOmm
/RnGH9H2UpYw2BgadrAHTVOyhM+e+3pHZKqxv6YlWOjTrbYaooWGliBH0x3t
s0NHWFjC9h8u/B2uaIptCdFf+eekfdDqEyxhv0F+UFooWjzVEha+Tq2yiUMX
giUMH9B/+PAYmu9uCVdqVJasvYj2XmAJxgHu25XK0XRfS+jRFdreeoXu5lnC
UtrX8KA2tCjIEoJmdk01G0ELIizh3qRDhxo1nmH/bZbwzj2Zl8VA2/Mt4arl
k5uB09G0A2N5B+UPjPdG1x6xhDVhpq+l1qKFGZZw/WtDeuN2dES2JaRPkay5
nYym8iwh7sWGzSfPotWvWsIMl/f79txGi4vH7tdCU+nIGnThPUtw7Bz9tqYZ
zX88dn84buP8+9Hezy1BamH5G1/lGuz/xhLmv+I2+pujuz9awnGvZVPXOqBF
rZagcFS6a9NctKDTEtjpg30JPDSvzxJcDgx5no5G249YwoDoaW/pQTRNxgru
VHE/f8pG1ypbgat/s47cTbRQ2wr01lxOmvQUHWFsBTpDHrPWN6EpKyt4Fx4z
Nfs3Wp1rBQtBcv0HhefYf6IVOFhlPDU1QxdOt4LDIwO8dZPQfFcrYH/7wrjh
jvaeawWscVoGMivR9EVWEOkDk/yj0N3LrWC6ESv6diJatNoKDq7lvzXIRguC
raDYT9KPX4TmbbICsc/awe9VaPsdVrDt58pC/yY0Ld4KKtvzdr38ja5NtIIA
j97lnoovsP9RK7gy79ecGjN0xAkr2LJ2BbVwMprKsQJv16/UBw+0er4VWL1w
mh3CQ4sLraCaq+U5Go0uvG0Fa0oNFh4/hOaLrGBAh7bQIQft/cQKOrWi3d8V
o+m1VpBcxZgc9wzd3WAFggP3Neya0aImK9gn/t3Y1I8WfLOC0heT3Kpla7H/
TytgtLfq5Gug7fvH7k/z6iWJxmjaqBVkxNNkQpnoWllr4IzTslwwAS1UtQaf
n10FU5zREbrWUBb87ayFG5oytYbB9vlSaovQ6gxr6F268+lIAFpsaw0qzmX9
XUHowsnWsKMqMLF5M5rvbA3rqx/HvN2N9p5lDcuLJr6qTUTTPcfyj//dX52G
7l5sDU52mzKfZKNF/tbw40WL/JOLaEGgNQh3nKurukn6h1qD7QvarxoR6R9l
DZM13UNeV5P+u8auh/tsysc3pP8ea9C+9Na37TPpf8ga7pWXPev7QfqnWoMG
PD4iM0D6n7SGFxddcvSk6rD/WWswMo0d5aiixRfH5lc9ueBigC68bg3RzcEn
/azQ/DvWYH3jev2WcWjv+9bASvq+JG0amv7UGpJqeYZFs9DdddaweG+A+Rtv
tOidNdxfyt0w5IcWfLaG5Cy9bvp6NK/dGhyXbihy34S277EGihFSFBWDpg1a
Q7jfuq6cA+haGgP0f5zl1aWihfIMWL41VEEqGx2hzoCQWfLfHC6iKX0GPJtT
3h96k/SnM+C0wbupuSLSn8mAj6OnLjVVk/7jGHCmfcFc4wbS35EBoREz9Pya
Sf//GLDi7QWVU52k/xwG7FVv4DYNkP5eDKDfUN1sJf0S+y9lwCeZY59C1NCC
FQxgDV0Ju2mI5q1jgJ9tjqkEA20fzgDd9qs/vcajaVsYsMPSrOm0E7o2hgGR
sRO+d89BCxMY8H2ereasReiIpLHPT1y48OQKNHWMAbSmlvxfG9DqWQwwzmPo
eUWjxecYMKfN9/hFPrrwMgPOLxNxFA6j+UUMkPM9+WJDBtq7jAHWo5z4Z2fQ
9IcMaFK6AeOvoLurGSDojlA+XkL6v2LArOe5Ytoj0r9x7PO2HC0LqSX9vzDA
asPm028bSf/vDAh/d3DvnG+k/y8GxObrht3uJf2HGDAaumQp5x/pL8mEnqCE
GUKFV9hfkQmdqS2WejpoSpMJQemF0gI6Wt2QCbRqRpMiFy02Z8KNGXuv7XdE
F9owYfI1mR2yrmj+eCbYHPvmsN8L7T2VCeHq674qLEfTgQl+f8v2Ja9Fd7sx
QeUrU1cnEi3yZkKBanNK1i60wGfMIYxh5gE0j8cE7bxxnkWpaPsgJlSYTdnv
ko2mRYxdX/v2vJcX0bVbmeD93O5yYDFaGMuEc/MEqQMVpP/+sc8/0eCXXEP6
H2HCKaGzFOMd6Z/BBFOp4f3lLaT/aSacN3BrW95N+p9nQt4vf4uBYdL/ChO+
LYuclCH3GvsXM6HkYZnxFC00/R4TFkRseffeFN39iAkjbvVBsWy0qIYJm/rU
qqwd0IL6sftT7z9QA2jeRyaY03p/b/VE27cywdlN5q6lL5rWyYTAKc+86gLR
tb+ZsFZn1wV+BFr4lwn6n9yfjN+FjpBmwfm5wZdb9qMpZRbU1WksOpGKVtdm
wfTsqDvzs9FiIxZczHoslruELrRkgcem6Q8ritF8DgukdsuuiblP+k9kwfWP
y0unPSf9p7NgY3BI9eA70t+FBc0lwUfvtJL+HizYbHpIKaaH9F/Igit5/xxh
hPRfzoJIi35tOYV67L+aBVMMzgufa6NpwSzY9NrpXQYdXRvJgqLlP8pWc9HC
7SzQimx1HzcFHRHHAv+TPrtHXNFUIgvWGm/xqZmPVj/KAvc/YW9O+6HFx1lw
r2Pjn8j16EIhC5buvFQ8ezOaf2FsvX2+jkks2ruQBapTDqv3HUTTb4/l2xw5
/zwd3V3OgiPU/vr8M2hRJQsSHpw5ue8KWvCCBTtvq/UH3kHzGlhQ/W24deZj
0r+JBR8b09YxXpL+31iw97PcVoVPpH8XC2zk43W62kn/PyzgWNhTr/tI/38s
MH00o69U4g32l7UBOY/3E3JV0OqqNnC/xq7/iAFarGMDjPFB1C5rdKGJDawz
uK4cPB7Nt7YBr27H5b7OaG9bGzjYYsX0cEfTJ9vAUPvZSKcl6G4nG2gvaXK0
X4UWzbSBwFeS26zD0IJ5NrB5p6O98XY0b7ENRN7NW6GdgLb3twH3kBgJ1aNo
WqANPDJp1lXIQteG2MDzSaOnZPLRws02cKdh5KjUTXTEThtI75P9LVlB+u+x
gfBZrhVSNaT/IRtInN3YL/OO9E8Z+3yq/5hCK+mfaQM1M8tPqPaQ/mdsYCvX
T0JnhPS/aAO/MnufGis0YP/rY/dv5PJvax10d4kNdCRe22VvjhZV2ICvC3OV
ky1aUGUDhr2ThO5T0bw6GzgzTmKKzyy0/Tsb2OV/nRG0AE37bAOZueHB2wPQ
tW02cErKX+LwBrSw2wa0pgvbs6PREQM28OQDz/xmHJqisUF99oPz1UlodXk2
qOb82PrlBFqsxobBFonUv7noQj02bHjD/KN7Hc03Y8MZuT3ZE+6hvZlsaHjr
mDT/Kek/jg3R24Lvhr0h/R3YsPnLDLukZtJ/BhsOt779WNBF+s9mw0kD/6cv
hkh/LzbUtn/v6ZV9i/2XskFRcGmhnhaatoINRrr3OpzM0LVr2aC0dPbtNRy0
MIwNQUPrSg45oiOi2XBwt8uPIlc0FcOGNrthr6b5aPUENsy3udGk6I8WH2bD
1IDDpxyD0IVpbNA5fGHP2ig0/xQbEtxtUtP4aO9zbCgfHlf18DCafpkNtxs/
Wv45ju6+wYYDfYtyWLloUSkbclk3/vO/hhY8YIMdy3hEcBfNq2bDtJ1XGx5X
kf6vxvrGJNWM1JP+jWwoDHjzYXIz6d/Mhhzzi1Ibu0j/DjbcOcOi8odI/142
MAWRghbZd9h/iA2Pws/10rXQ6pIcWHdCHLjCDC1W4IApzGo9xUEXanAgJawn
8oMjmm/AAccRKQWTmWhvcw7k5p68sMIbTbfhwLtfb7xy/NHd9hxImPd6sCUI
LZrCAf8f1/JsotECigNL25KWboxD89w48Md2n3RxEtremwOn99y+OnICTfPh
QMMBl6Wzz6NrV3Igoxj+HLmOFq7nwJGVr5Le30NHbORAWKG2EaOa9N/KgYmF
Fqc2NZD+sRzYRBmqib6Q/vs4cMFEf5NqN+mfzIHopikPAv6S/ukc+DlwnHZF
/j32P82B7tuLWaPaaPp5Dvh5HJiywBzdXcCB9UXzx52zRYtucuDr+8eKA1PR
grscOLFboWrebDTvEQdCnScGnVmItq/hwOuUlV8HVqBp9RyQeZsP3iHo2g8c
mDnTdtuFrWhhCwemd0ofkNiLjvjBAfvKuRv9BGjq99j3nWvMLT6FVv/LgcXT
Uso08tFiKS4M6FWaht9EFypxgVFY711dgeZrcaFi8Vtvm+ekv9HY+pR24wPv
SX9LLniGWdz49pX0Z3NhaluWhtsv0n8CF5i7ox3yR0n/aVz40XrfTEm5Efu7
cGHi7ezqMH20vQcXXm60nlJnhaYt5IJicNiayePRtb5ceP1VMDfTGS1cxQUH
hfyuUXd0xAYuxDY891i3FE1FcuHcdKMVNavR6tu5EC6Vx5i8ES3mc6FFfPBM
1k504QEuHAhueiF7AM0XcOG40d3LEWlo7+NcCF3s5NgoRNOF3LHfR6LDZheg
u/O4cN+X73m9BC26yoUvq6PrTR+jBbe4cDIsVOrwS9K/nAs/l8XUD34i/Su5
IPpa7h70nfR/wQWZx3NXNPST/m+4YJ44RWOO9Afs/2ns/l7K4t1SR0d85YLN
kRQPlgma6uLCDr5dzQkbtPofLqjfOPBVyQEtHuHCDdfbabtd0IUytrB8yuv6
Hi80X8UWQvm/8tb6ob11bEGrj6vwfj2abmIL+30z+r2i0N1WtjDPzz3yIR8t
4tpCeopv1LQktGCSLWyO//Sv8ASa52QLk050qbLOo+1n2sIle+GZ7Oto2jxb
2JKscFuvHF27yBbcWyhPQTXp72cLTt7+PIW3pP8aWzD8GPkzvoX0D7GFvPiM
gb/dpP9mW/hm/WX71hHSf8fY9ZwIjuxV+Ij9422hLMv1Y5gumn/QFlZ/3lPa
boH2TrGFCAlQXDcOTc+0hcuJgsrm6ejuHFv48Xt/z0o3tCjfFhYVOO37uBgt
uDZ2PcoP9/itQvNKbCHTf2LbuzC0fYUtqDdkX/PZgaZV2UL4edNPDfvQtbVj
19/6MGRZKlr41hYe5eT5NGSjI8S2cLOh8cyyy2iqzRZ0tm5xe3sbrd49dr9X
HZ7j+wgt7reFGxsmnH5fR/qP2kLp0hgP/0+kv5wdeH2O8/jUQfqr2UHWzcWn
eP2kv54dzNmsOOOL1Cfsb2oHFwtu2a5TR4sYdmD3I2JDuzFaYGcHyRc9foba
oHkOdsDw9b3bPRltP8MOpgVcq4tyQdNm24G3xnr2oBe61tMO1j9KfhTjhxYu
sQOPcqccySB0RIAdtE5LKN0fhabW2sHe4F2aKnFo9TA7YG11OJeShBZH2cEj
fmW4fia6cJcdZJ92jTh9Hs3fawcHmu6dt7rx6b//A+BsysQ=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0], 
          Dashing[{0.05, 0.05}]], 
         Line[CompressedData["
1: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
R8fF6XuJfZYa2Kxpe33rArEvV4P3s2pmP3xC7DvVILL9zs7CemKvrg52oY7a
pX3EnqcODQo6mWXaLST/qsNhK73BMntkao06/JypklE6q4XkY3VIcC7zKlyB
LL6mDkod07Lv7yL2L9WBcTUk9Mo5Yt+uDtvlx1offUjsFTUgoCv/UFQtsWdp
AO8uc96iX8TeXQNyVTO0HTRa0T5EA+ZZbNslZ9tK8rkGXDoi51E5HVmcoQHh
e7Npp5a1kvyuAaXXpHcv2EHsWzVg6fijc9SSib20JnCldQ3z7xJ7uiY4b/Y6
vKyC2FOa8PSq/ZKR78Q+UBPG+1znHFf8hPYxmtDX+vGihRWy+KwmxETIbkmf
jCz1WBO2NK6da+SHTH3QBJ/cw1V7NxH7IU3Yt2D49rckZKE6DZa/X3UabhJ7
MxqkMTPHHC5BTuPRYLbkiXV5K/k9NxocfZhvJfcPuXk2DZrftb3nGbXh7y+h
wc2wdMlMR2T6GhqUbt1p4DsPWbyNBv+9dBxcvBpZmECDXJm06XP3IEul0MA5
/eVlxzTktGs0uNXTVqqWj0w9oMEjuldgbQ1y8wsaKJikaB2REP33NFC8tjXR
TfUz6rfTYN7S93vfM5HF/TSwO/7m0nIKWaioBZXrL6U0+yFLGWhBWdU7Hc9N
yGksLZAT6ogvJyJTzlowsNplruQacvN0Ldg6FLiOXYQsWqAFTwrevp77keiH
aMEzTV3T4AGiH6kFqpWNKiHaX1B/txYUx1p6+PCQpY5rAYOpsY/vjpyWoQU0
V8VNfwKRqTtaILiXVXhrK3LzMy1I//7ZSnAMWfRWCyITi90bbyLTW7Xg6rmr
jQueI4u7tSBzATvlQRPRl9aGWrq5vdIfoq+lDc0HL84G7a+oT9eGh86Gl5Zz
kSm+Nux7aPhzwzTk5ina8Dh9f23oUmTRPG2IFRzT9diMTA/UBpdfGX7aicji
MG3ghYT7F11BFsZowwpmb1mAGFnqsDZcdo4KbnlP9M9qQ4z6nsrZ3UQ/UxsO
RvW/PqvcjvqPtOHNrl8q7xjIotfaILv8C9Xvgkz/oA3gn2T9zwtZ/F0bNp0d
WvN9FbJwSBvU7XeVPYlFllLVgYevykaikpHTjHVAs+z9A/0cZMpWBwJlum6n
vCD6LjoQdeLWBdlmou+hA+valcCrn+gvHh2PmOoep/EN9UN14GL6wOpkJrJw
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
ilTJAXL+IG8NFXqzTYLCkSvUrOF9hmnaLx9yHqFrDXNTYz9tcUEON7WG2VPU
JvaakfMJa2t4EbhuYKUMMo1nDf98IiIqv+B5SvM4a5gzqCQ19hVytqs1tF11
/L0/i5zPTLUGtbEGF+qOIQtmW4NKXccyxhZkurc1/PSUiV/mjyzxs4aa9JJV
KRQ5zwmyBvVZ+f6vrZGTVlvDJ42I3H4lZOFGa5ionPza9CeeN/G3WUNJckeP
ayU5f9plDTOXjd+z4B5yxf5RniCsWpWMnHbEGupYC5227kAOT7YGaX8j6d3L
yHlXujXIMvMOJkxHpl2zhn1tc+wPcZCbs61ht7KM20F15Ow8a9BRUFSL7ybn
c2JrYLon94hqkAUvrEGR9W921ANkeoU1VLXvCl1zFlnyzhpabm1PWxpLzvOa
rGFwzX+z5oYgJ321hsRGp0eTPJCFXaPzJ8rz5Nkh8/tH52P/mPnGWuT8cMQa
Ft6Qdad14HllhQITfryx4/7IQU7TYEJ11g2pl1uRw/WZ0H5mZsQVIOed5kzY
/LN0TLwyMo3FBLef3a1rKvE8tdmOCT0vIly8k5GznZiQsG2oafIycj47iQnp
91hxYzjIgulMCKiOK2d243kufQ4T9IsSN1g+QJb4MOHgrzt6rFhyHuzPhDGu
00IdPJCTljPhUnW03nQtZOFaJlydLHq5rA7Pm/mRTKD4C/jx6eT8OZoJ2nvb
evNWIVfEMSHKob+4xwE57cCono2jp9sgnn+HHxudH4G5Y9Izcl6eyoTnW7U5
3QnItAwmTP1vem2gN3LzdSY81iz48sEEOfs2Ezj/guVXtZHz+YdM4L1t/CCX
iSx4xgTx90yDnE3I9FImzHJhCMMmI0sqmZDIFQgnKZLz/Dom6F43fWZegfUC
SS1MYCvxx+gkIwu/MeHp4IDAJAiZ382Ez4evVYznkvqDP0xopDstWtWD9QoV
UiyY6DP3UPZj5DQlFiSohZho7EMOp7GgZcXFa7sEpN7BkAXUXUmThjEyjc6C
G5GfQ+58wnqKZhsWbPauag3PRM4ewwJL6yd/Z0SR+ozxLPBs9lvqAsiCKSxI
uqx+dboqMn0GC5Y9/Bq3rgbrPSRzWfBi96WTOedJPchCFqw4eXOP9mrkpAAW
wHXlviRHZOEKFjy9FnbQbgTrT/hhLHicw//Z/pLUr2xmQZqh+6PC48gVO1hQ
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
J2AY7p18d8r/A71uC8E=
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0.050000000995}, 
      PlotRange -> {{0, 1.*^6}, {
         Rational[1, 1000000000], 10}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0.050000000995}, 
      BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", "Distance (km)"}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, {{0, 
           ScientificForm[0., 2]}, {200000, 
           ScientificForm[1.1374240637967417`*^6, 2]}, {400000, 
           ScientificForm[2.2748481275934833`*^6, 2]}, {600000, 
           ScientificForm[3.4122721913902247`*^6, 2]}, {800000, 
           ScientificForm[4.549696255186967*^6, 2]}, {1000000, 
           ScientificForm[5.687120318983708*^6, 2]}}}}, FrameTicksStyle -> 
      Larger, GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> 
      "Resonance Destruction (\!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10)", PlotRange -> {{0, 1.*^6}, {
         Rational[1, 1000000000], 10}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0], 
         Dashing[{0.05, 0.05}]]}, {
       "\!\(\*SubscriptBox[\(A\), \(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \
\(1\)]\)", 
        "\!\(\*SubscriptBox[\(A\), \(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\
\)]\)", "{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1000\!\(\*SubscriptBox[\(B\), \(1\)]\)", 
        "{1,0} Mode with \!\(\*SubscriptBox[\(A\), \
\(2\)]\)=1001\!\(\*SubscriptBox[\(B\), \(1\)]\)"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}, Joined -> {True, True, True}, LabelStyle -> 
       GrayLevel[0], LegendLayout -> "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6767365817059927`*^9, 3.676736590783463*^9}, 
   3.6767366640327578`*^9, {3.6767367264399014`*^9, 3.676736758124989*^9}, 
   3.683315209024824*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.676383330714385*^9, 3.676383332741053*^9}}],

Cell[CellGroupData[{

Cell["Calculate Widths, Q values, and more", "Subsection",
 CellChangeTimes->{{3.676743926334651*^9, 3.676743939111027*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BesselJ", "[", 
   RowBox[{"0", ",", 
    RowBox[{"10001", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}], "/", 
  RowBox[{"BesselJ", "[", 
   RowBox[{"0", ",", 
    RowBox[{"10000", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6763833671764917`*^9, {3.676383718364338*^9, 3.676383772812264*^9}, {
   3.676736936935338*^9, 3.676736944186063*^9}, {3.6767375396388206`*^9, 
   3.676737545187416*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.05732942925706433`"}]], "Output",
 CellChangeTimes->{
  3.676383367536235*^9, 3.676383443084902*^9, {3.676383720260418*^9, 
   3.676383774618743*^9}, {3.676736931941777*^9, 3.676736941782187*^9}, 
   3.683314979546996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"BesselJ", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1001", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}], "/", 
  RowBox[{"BesselJ", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1000", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676383272328742*^9, 3.676383308294042*^9}, {
  3.6767369516073017`*^9, 3.6767369604067307`*^9}}],

Cell[BoxData["0.036757391318074095`"], "Output",
 CellChangeTimes->{
  3.6763833093567057`*^9, {3.676736957509798*^9, 3.67673696068434*^9}, 
   3.6833149803937798`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6763829539409103`*^9, 3.676382963266573*^9}, {
   3.6763830796797047`*^9, 3.676383090138686*^9}, {3.6763832067518263`*^9, 
   3.676383249275734*^9}, 3.676726026462267*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"qValueOrderdList", "[", 
    RowBox[{
     RowBox[{"listNGenerator", "[", 
      RowBox[{"2", ",", "20"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK", 
     ",", "thetamV"}], "]"}], ",", 
   RowBox[{"1", ";;", "10"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.676739130407378*^9, 3.676739132801324*^9}, {
  3.676813183907558*^9, 3.6768131846625023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "18"}], "}"}], ",", "155.73338219926057`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "19"}], "}"}], ",", "167.27536489181534`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "18"}]}], "}"}], ",", "174.66374303864805`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "17"}], "}"}], ",", "180.51877011878756`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "19"}]}], "}"}], ",", "188.81107327677188`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "17"}]}], "}"}], ",", "201.17314270455998`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "20"}], "}"}], ",", "209.02460872371174`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "20"}]}], "}"}], ",", "237.44793354655926`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "13"}], "}"}], ",", "271.10191131515364`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6833152179608727`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "18"}], "}"}], "155.73338219926057`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "19"}], "}"}], "167.27536489181534`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "18"}]}], "}"}], "174.66374303864805`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "17"}], "}"}], "180.51877011878756`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "19"}]}], "}"}], "188.81107327677188`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "17"}]}], "}"}], "201.17314270455998`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "20"}], "}"}], "209.02460872371174`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "20"}]}], "}"}], "237.44793354655926`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "13"}], "}"}], "271.10191131515364`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.6833152179669657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"twoaListKK3NumLimit", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "3"}], "]"}], "]"}], "/", 
   RowBox[{"twokListKK3NumLimit", "[", 
    RowBox[{"[", 
     RowBox[{"2", ",", "3"}], "]"}], "]"}]}], 
  RowBox[{"Cos", "[", 
   RowBox[{"2", "thetamV"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6768134515602407`*^9, 3.676813463836*^9}}],

Cell[BoxData["20.049540250807887`"], "Output",
 CellChangeTimes->{3.683315223263575*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10000", 
  RowBox[{"widthNList", "[", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
    "onephiListKK", ",", "thetamV"}], "]"}]}]], "Input",
 CellChangeTimes->{3.676813656235474*^9}],

Cell[BoxData["0.06922690412124541`"], "Output",
 CellChangeTimes->{3.6768136408629093`*^9, 3.676813710041133*^9, 
  3.683315005056182*^9, 3.6833152245698566`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"widthNList", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "n"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"twokListKK3NumLimit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"twokListKK3NumLimit", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"twoaListKK3NumLimit", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"twoaListKK3NumLimit", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       "twophiListKK", ",", "thetamV"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "1", ",", "30"}], "}"}]}], "]"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"10000", 
        RowBox[{"widthNList", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
          "onephiListKK", ",", "thetamV"}], "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.676813234980216*^9, 3.676813312273221*^9}, {
   3.676813564749951*^9, 3.6768135995846786`*^9}, 3.67681363152036*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQEf7N+pRe7qsJeyhwo4tCkKnD0SYw3lczi4G89u
f3wfxhdwSJS9zit31hXKF3HwX86TLscbCOVLOJSWsH35PMUCypdx6DGycNim
GQPlKzjcebrk5e5+HyhfycHcw2hdVXI4lK/iEOSxPcFpegqUr+ZgvZ/5n+is
AChfw+FW6KGE1u5YKF/LwSuU27Dvew6Ur+NgU7PGU8giHcrXczjh/lt9pZQq
lG/gwCe4X9I7LwPKN3T4sD1qcXRZKZRv5FDPXykZd7oCyjd28HS+41HEWA7l
mzhMqb2XrhFZBOWbOpR+j87qYsmC8s0cXh/aH2ezOwHKN3eY897hX+GJYCjf
wmGGHefek9tg4WfpkHzQ6dF7TzMo38rBzyrKpaoV5l5rByYX/UcsS4ShfBsH
dgZrTWMmRijf1uHZ6auVRjxv7CB8O4fDoX5prKLX7AAhnXET
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, {0.06922690412124541}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 30.}, {0, 0.006053321434197899}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.683315225969904*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"widthList10000", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.676739937254385*^9, 3.676739988740533*^9}, {
  3.676740191372284*^9, 3.67674020789843*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.131959795453533`*^-6", ",", "0.00010012886067403321`", ",", 
   "0.0004175167533167146`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6767399449326973`*^9, 3.676739989227263*^9}, 
   3.676740208592205*^9, 3.676813148614499*^9, 3.683315227398755*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"qValueOrderdList", "[", 
    RowBox[{
     RowBox[{"listNGenerator", "[", 
      RowBox[{"2", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK", 
     ",", "thetamV"}], "]"}], ",", 
   RowBox[{"1", ";;", "10"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.676738656171371*^9, 3.676738672997159*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "4595.2025751382735`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "4624.5499589359115`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "7470.333308360508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "7518.042791264022`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", "74156.27149102217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "75106.50785713796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "182467.6003211286`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "184805.73499236818`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", "291830.4378135638`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.676738673470818*^9, 3.676738892330832*^9, 
  3.6767401161805773`*^9, 3.683315229036709*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "4595.2025751382735`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "4624.5499589359115`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "7470.333308360508`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], "7518.042791264022`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], "74156.27149102217`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], "75106.50785713796`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "182467.6003211286`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "2"}]}], "}"}], "184805.73499236818`"},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0"}], "}"}], "291830.4378135638`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.676738673470818*^9, 3.676738892330832*^9, 
  3.6767401161805773`*^9, 3.683315229045957*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"widthList100", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6767400806513844`*^9, 3.676740101397917*^9}, {
  3.676740212597275*^9, 3.676740224529607*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.8532947247870774`*^-6", ",", "0.00013343673702250516`", ",", 
   "0.00001339918771936396`"}], "}"}]], "Output",
 CellChangeTimes->{{3.676740089819971*^9, 3.676740117537634*^9}, 
   3.6767402249337463`*^9, 3.683315230158448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{
   RowBox[{"qValueOrderdList", "[", 
    RowBox[{
     RowBox[{"listNGenerator", "[", 
      RowBox[{"2", ",", "10"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twokListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"twoaListKK3NumLimit", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK", 
     ",", "thetamV"}], "]"}], ",", 
   RowBox[{"1", ";;", "10"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.676735956503159*^9, 3.676735992416624*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "795.1895408514112`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "800.2680400613252`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", "1049.2510895319429`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "1062.696163325608`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "1292.724491760507`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "1300.9805112033846`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", "1902.2723288796606`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", "1938.9533319669708`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", "2581.7685354421023`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.676735994390245*^9, 3.676738892437277*^9, 
  3.676740143261348*^9, 3.683315231340197*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "795.1895408514112`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}]}], "}"}], "800.2680400613252`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], "1049.2510895319429`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], "1062.696163325608`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "1292.724491760507`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], "1300.9805112033846`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "1902.2723288796606`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], "1938.9533319669708`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "2581.7685354421023`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.676735994390245*^9, 3.676738892437277*^9, 
  3.676740143261348*^9, 3.6833152313466997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"widthList1000", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"widthNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twokListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"twoaListKK3NumLimit", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", "twophiListKK",
       ",", "thetamV"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.676736008031249*^9, 3.676736082634573*^9}, {
  3.676740146467857*^9, 3.6767401588532248`*^9}, {3.676740228395393*^9, 
  3.6767402384253483`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.5301532008981743`*^-6", ",", "0.0007710977145490911`", ",", 
   "0.0009469933481027606`"}], "}"}]], "Output",
 CellChangeTimes->{{3.676736028974382*^9, 3.676736082883502*^9}, 
   3.676738892493401*^9, 3.676740159237637*^9, 3.676740238749385*^9, 
   3.683315232375057*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"{", 
   RowBox[{"widthList100", ",", "widthList1000", ",", "widthList10000"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6767402400994263`*^9, 3.676740251944458*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"6.8532947247870774`*^-6", "0.00013343673702250516`", 
     "0.00001339918771936396`"},
    {"1.5301532008981743`*^-6", "0.0007710977145490911`", 
     "0.0009469933481027606`"},
    {"1.131959795453533`*^-6", "0.00010012886067403321`", 
     "0.0004175167533167146`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.676740252238305*^9, 3.683315233302446*^9}]
}, Open  ]],

Cell["TEMPTEMPTEP END", "Text",
 CellChangeTimes->{{3.67638193919379*^9, 3.676381943563449*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Abs", "[", 
               RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
              "2"}], ")"}], "/.", 
            RowBox[{
             RowBox[{"solNumStashLimit", "[", 
              RowBox[{"[", "4", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "endpoint", ",", 
           RowBox[{"Floor", "[", 
            RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ","}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
    RowBox[{"(*", 
     RowBox[{",", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
             "2"}], ")"}], "/.", 
           RowBox[{"twokListKK3NumLimit10Mode", "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "endpoint", ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
     "*)"}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"plotstylecolorList", ",", "3"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"plotstylecolorList", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"plotstylecolorList", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"plotstylecolorList", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "Dashed"}], "]"}]}], "}"}]}], 
     "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \
\(1\)]\)/10\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\
\)]\)/1000\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\
\)]\)/10000\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\
\)]\)/20000\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/1000\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10000\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/20000\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "9"}], ")"}]}], ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gridlinesCode4", "[", "3", "]"}], ",", " ", "None"}], "}"}]}], 
   ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.683315501644231*^9, 3.68331554880742*^9}, {
  3.683315587584408*^9, 3.683315587700779*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[0.6, 0.4, 0.2], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1: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
/x8M2fQl
            "]],
           FontSize->15]}, 
         {GrayLevel[0.5], PointSize[0.002777777777777778], AbsoluteThickness[
          1.6], 
          StyleBox[LineBox[CompressedData["
1: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
KC/+P+ruL+s=
            "]],
           FontSize->15]}, 
         {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJw9W3k8lF/Ut+/L2HdmM2OYES1a8ZwUJUqUhCSphEKSVkkplUqlqCghWym/
KLRIkqXVkiLKqGhDZEslr/d9zvP6x+d87r3Pueeec773LHcYfiGu68RERES+
iIuI/O////sjThBshYEAZZ5ZOUlfIuK/jm2RDTMh6dBsos/WoPf4KA/HbxBf
/6oOeUngeFwh4XBIx7rdm4Pzi4knkenFQ1I43+MucXLjrNPMFyxc/4BovLZR
IyoC6cSHxM3qx/8uv8P5cY8IkTeF/ldDmSS9+zHR8/EwW7Gbgd+vJga0v1Q4
GbFJ2r+W0B2zSYz9f35PiQBBpcqxn7g/p+dESYJctrMVrideElG3fJ7zb+D3
z9cRLf55K06+wv0n1hPO72yWfxTSSfp4A9FSsrDY6zbScY1E/bWUl693IB3z
ipDLsCl+GoTrdzcRIQ8eXg6j1m97TcCnymfcU0iHviEeaRSb7X+K+wlsJo61
P4l9FIPn4d9CHF7gnbvhDu7P5y1xo+J44XY2zvdoJaaJBmxZcxnHXduI9KcG
t5lncNzpHWHR3Q8JjUjbvyduDDz1v/SHkr+dcKqVPq1si7SBkMge8t0mtRDp
80JiGLpKLokhrdVBzHyTevNHDNKJHUROn98HHUWkVT4QS5sWNlzKQ/r4B+Kc
ZpvkktVIy38kari1vxyjkI77SFwwGap69A5pyU9E+KShSfJN1Hl+IuqTE0LA
COUb/0TwpWq28Ph4Prs7iRk2B1WnU/KNdhL/Leg5FbiUOu8uYtBwhoUxB8cH
uojJMnv2LL2K3wv9TPh9+heZEY7zez4TW3M3JhuaUfr4QrjnMxt/y+P45y9E
sFMAP10ex/2/Es/KvuynGeB4x1ei1DK6uWU+7s/nG9E+mvZw6VMcb/1GbJq+
ukvrHtIe34lFDS3HVCj7bvpOJOvc26JWZIz67CaU3T7Nci1D+mU3wUvdlNY6
l9JvD3G4Wfzy8+Vo/7U9RIlTq8KKtxzUdy8x99Izj9Bg/P6jXmJdj3aY7kqk
iR/E3h8pRMUxpO//IKb0e144xMT1Bn2EYPaBWLH/yO9He/URKZX+j89UIr/z
fcRT8auq6b/J+dHNE/MTlQp4M3C9Vj9xurlEYVUJji/vJxIWnX763ZdLjif2
E12lXp9eLeWT4w39xJL9EWGuwebkuMpP4ldI3jsRN3J+9JKfxMe9V7jJ0rj+
+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
5G9lCMlVs5iVMlT+bQh0/aOfl2F/L225IbwWX/CfoBPxd50hbP8lvi/+NYnn
wq0T8x3vvnwqwPvngCEEJWYa3FZE/omGYFXmXyhuhP6fYQiLnyS6XMF+r2+h
IXRsv3mk3g7975EhLNuQWBd2B+VvMATTA1OUIi8i/w+GIBn/suAG1suF/Yag
foCu9tmGyu+N4F3k8v3PS1D/KkbQd1Pm7AG8P8vpRrBNLcD/1jXUv4URWJ3I
tvPtoPq/RuC893Na/xbkv8QIzkqccHK1QP2vNoLm2weMX+H9KNxsBA19C6+4
n0b+UUZwp2D/e94lxJ/jRpDj9j7z6ADaX6oRqF4zzyk8hPFPvhG06R2pe3wE
5b9vBKkt3q80j2H888wIknL9v5W1o/+1GUG+zaPgW0sQ/74bQYT6gS/5IRyS
/x8jkPuq7dBSR+JDgiQdjiQeVLoZj/GOIh0ClzWJXl9BzrfQoMP25299vs8n
aREDOjzxKpibhP3JOjYdrE8Y/fp2kqTT+HSIP2/vMKZM0qFT6ZC8Zop8pCPG
Z3Po8Ldc3NuGTo7T5tFhaJ++QpQnSQsX0UGuu8HBFuOXAjc6hL4ec9FSx/zR
iw5TNweezFMnz8tlLR1O1h9r+LwPzzOIDv19PBFrQ1K+vi10OB/312FJO9r3
TjoUNQjNLe+S+kmIocNHQdVd5a/kfN8jdFC9OpgYsJXEa4tTdNjcGic1fJrq
39LBZ1ebMoH6r7tMh22L11/MvI72kEuHLL+Nz0cYKP9/dNAz2K83hP1vopQO
vaFjK8rw/qY9pMOFeevi8mPRXmom5DmX2b0Y84GCOjoU9jou4GxB+2mmg6PN
tcNHsX/kIpz43opDSRoXqHoKHUzY8vUCvP/7ftBh9eTg3U9/UfUVOtw6OaI9
VI3yj9MhaPTtGAPjNV9pBkR4jU1XrydpC2UGvFtNj4ydQdVfGDDZ+6dDRBjK
b8gA6TP7RvMCUX4OAxZN6TX/5UHyDzVnwNaNTawrnVR9hgGXXO6lH4ol/ZVm
wwBD51dLHjlT9RoGtPo4q0zPJekCZwaocuUbLs2l6jcMUK82a1GtJ9e7rGLA
Q+uQ3fEFeJ+sY0CT7mYl40xyvC+YARIiP+8aIj6Vb2XA6MrbBfHepP0k7GbA
t6KQeQ8JxJsDDKi5l9ls2U7il0U8A7I2iV07VI31/0QGzAqrNa+IItfXXWCA
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
FmeM8f8Bc4iS6iQaJvT9P10yj0Q=
            "]],
           FontSize->15]}, 
         {GrayLevel[0.5], PointSize[0.002777777777777778], AbsoluteThickness[
          1.6], Dashing[{Small, Small}], 
          StyleBox[LineBox[CompressedData["
1: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
            "]],
           FontSize->15]}, 
         {RGBColor[0.5, 0, 0.5], PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], Dashing[{Small, Small}], 
          StyleBox[LineBox[CompressedData["
1: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
+/8HGk9Fbw==
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, -20.60813658229671},
      BaseStyle->{FontSize -> 15},
      CoordinatesToolOptions:>{"DisplayFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& )},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Transition Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         
         FormBox["\"Distance (km)\"", TraditionalForm]}},
      FrameTicks->FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
              ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"1.1\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {400000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"2.3\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {600000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"3.4\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {800000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"4.5\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}, {1000000, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"5.7\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
               AutoDelete -> True], ScientificForm[#, 2]& ], 
             TraditionalForm]}}}}, {{{{-20.72326583694641, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             TemplateBox[{"10", 
               RowBox[{"-", "6"}]}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{-20.72326583694641, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-18.420680743952367`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.605170185988091, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             InterpretationBox[
              StyleBox[
               
               GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
                Baseline], "CacheGraphics" -> False], 
              Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, {{0., 
            FormBox[
             TagBox[
              InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
              ScientificForm[#, 2.]& ], TraditionalForm]}, {200000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"1.1\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {400000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"2.3\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {600000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"3.4\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {800000., 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"4.5\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}, {1.*^6, 
            FormBox[
             TagBox[
              InterpretationBox[
               RowBox[{"\"5.7\"", "\[Times]", 
                 SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
               AutoDelete -> True], ScientificForm[#, 2.]& ], 
             TraditionalForm]}}}}],
      FrameTicksStyle->Larger,
      GridLines->NCache[{{{0, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100400 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100500 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100600 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100700 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100800 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100900 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {101000 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {101100 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {101200 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {101300 Pi^2, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}}, None}, {{{0, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {986.9604401089358, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {1973.9208802178716`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {2960.8813203268073`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {3947.8417604357433`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {4934.802200544679, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {5921.762640653615, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {6908.723080762551, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {7895.6835208714865`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {8882.643960980422, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {9869.604401089358, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {10856.564841198293`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {11843.52528130723, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {12830.485721416166`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {13817.446161525102`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {14804.406601634037`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {15791.367041742973`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {16778.32748185191, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {17765.287921960844`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {18752.24836206978, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {19739.208802178717`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {20726.16924228765, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {21713.129682396586`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {22700.090122505524`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {23687.05056261446, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {24674.011002723393`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {25660.97144283233, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {26647.931882941266`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {27634.892323050204`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {28621.85276315914, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {29608.813203268073`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {30595.77364337701, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {31582.734083485946`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {32569.69452359488, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {33556.65496370382, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {34543.61540381275, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {35530.57584392169, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {36517.536284030626`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {37504.49672413956, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {38491.457164248495`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {39478.41760435743, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {40465.378044466364`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {41452.3384845753, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {42439.29892468424, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {43426.25936479317, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {44413.21980490211, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {45400.18024501105, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {46387.14068511998, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {47374.10112522892, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {48361.061565337855`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {49348.022005446786`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {50334.982445555725`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {51321.94288566466, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {52308.9033257736, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {53295.86376588253, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {54282.82420599147, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {55269.78464610041, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {56256.74508620934, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {57243.70552631828, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {58230.665966427216`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {59217.62640653615, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {60204.586846645085`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {61191.54728675402, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {62178.507726862954`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {63165.46816697189, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {64152.42860708083, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {65139.38904718976, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {66126.34948729869, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {67113.30992740764, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {68100.27036751657, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {69087.2308076255, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {70074.19124773444, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {71061.15168784338, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {72048.1121279523, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {73035.07256806125, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {74022.03300817018, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75008.99344827911, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {75995.95388838806, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {76982.91432849699, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {77969.87476860592, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {78956.83520871487, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {79943.7956488238, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {80930.75608893273, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {81917.71652904167, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {82904.6769691506, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {83891.63740925954, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {84878.59784936848, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {85865.55828947741, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {86852.51872958634, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {87839.47916969529, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {88826.43960980422, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {89813.40004991315, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {90800.3604900221, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {91787.32093013103, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {92774.28137023996, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {93761.2418103489, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {94748.20225045783, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {95735.16269056677, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {96722.12313067571, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {97709.08357078464, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {98696.04401089357, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {99683.00445100252, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {100669.96489111145`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {101656.9253312204, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {102643.88577132933`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {103630.84621143826`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {104617.8066515472, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {105604.76709165613`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {106591.72753176506`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {107578.68797187401`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {108565.64841198294`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {109552.60885209187`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {110539.56929220082`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {111526.52973230975`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {112513.49017241868`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {113500.45061252762`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {114487.41105263655`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {115474.37149274549`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {116461.33193285443`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {117448.29237296336`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {118435.2528130723, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {119422.21325318124`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {120409.17369329017`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {121396.1341333991, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {122383.09457350805`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {123370.05501361698`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {124357.01545372591`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {125343.97589383485`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {126330.93633394378`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {127317.89677405272`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {128304.85721416166`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {129291.81765427059`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {130278.77809437952`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {131265.73853448845`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {132252.69897459738`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {133239.65941470634`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {134226.61985481528`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {135213.5802949242, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {136200.54073503314`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {137187.50117514207`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {138174.461615251, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {139161.42205535996`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {140148.3824954689, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {141135.34293557782`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {142122.30337568675`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {143109.26381579568`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {144096.2242559046, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {145083.18469601357`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {146070.1451361225, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {147057.10557623144`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {148044.06601634037`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {149031.0264564493, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {150017.98689655823`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {151004.9473366672, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {151991.90777677612`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {152978.86821688505`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {153965.82865699398`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {154952.7890971029, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {155939.74953721184`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {156926.7099773208, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {157913.67041742973`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {158900.63085753866`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {159887.5912976476, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {160874.55173775653`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {161861.51217786546`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {162848.47261797442`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {163835.43305808335`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {164822.39349819228`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {165809.3539383012, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {166796.31437841014`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {167783.27481851907`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {168770.23525862803`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {169757.19569873696`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {170744.1561388459, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {171731.11657895482`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {172718.07701906376`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {173705.0374591727, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {174691.99789928165`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {175678.95833939058`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {176665.9187794995, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {177652.87921960844`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {178639.83965971737`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {179626.8000998263, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {180613.76053993526`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {181600.7209800442, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {182587.68142015312`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {183574.64186026205`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {184561.60230037099`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {185548.56274047992`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {186535.52318058888`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {187522.4836206978, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {188509.44406080674`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {189496.40450091567`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {190483.3649410246, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {191470.32538113353`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {192457.2858212425, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {193444.24626135142`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {194431.20670146035`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {195418.16714156928`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {196405.1275816782, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {197392.08802178715`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {198379.0484618961, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {199366.00890200504`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {200352.96934211397`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {201339.9297822229, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {202326.89022233183`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {203313.8506624408, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {204300.81110254972`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {205287.77154265865`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {206274.73198276758`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {207261.6924228765, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {208248.65286298544`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {209235.6133030944, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {210222.57374320333`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {211209.53418331227`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {212196.4946234212, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {213183.45506353013`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {214170.41550363906`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {215157.37594374802`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {216144.33638385695`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {217131.29682396588`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {218118.2572640748, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {219105.21770418374`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {220092.17814429267`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {221079.13858440163`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {222066.09902451056`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {223053.0594646195, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {224040.01990472843`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {225026.98034483736`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {226013.9407849463, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {227000.90122505525`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {227987.86166516418`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {228974.8221052731, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {229961.78254538204`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {230948.74298549097`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {231935.7034255999, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {232922.66386570886`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {233909.6243058178, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {234896.58474592672`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {235883.54518603566`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {236870.5056261446, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {237857.46606625352`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {238844.42650636248`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {239831.3869464714, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {240818.34738658034`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {241805.30782668927`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {242792.2682667982, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {243779.22870690713`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {244766.1891470161, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {245753.14958712502`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {246740.11002723395`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {247727.07046734288`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {248714.03090745182`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {249700.99134756075`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {250687.9517876697, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {251674.91222777864`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {252661.87266788757`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {253648.8331079965, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {254635.79354810543`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {255622.75398821436`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {256609.71442832332`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {257596.67486843225`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {258583.63530854118`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {259570.5957486501, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {260557.55618875904`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {261544.51662886798`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {262531.4770689769, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {263518.43750908587`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {264505.39794919477`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {265492.3583893037, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {266479.3188294127, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {267466.2792695216, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {268453.23970963055`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {269440.20014973945`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {270427.1605898484, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {271414.1210299574, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {272401.0814700663, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {273388.04191017523`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {274375.00235028414`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {275361.9627903931, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {276348.923230502, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {277335.88367061096`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {278322.8441107199, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {279309.8045508288, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {280296.7649909378, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {281283.7254310467, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {282270.68587115564`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {283257.6463112646, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {284244.6067513735, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {285231.56719148246`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {286218.52763159137`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {287205.4880717003, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {288192.4485118092, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {289179.4089519182, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {290166.36939202715`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {291153.32983213605`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {292140.290272245, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {293127.2507123539, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {294114.21115246287`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {295101.17159257183`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {296088.13203268073`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {297075.0924727897, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {298062.0529128986, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {299049.01335300755`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {300035.97379311646`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {301022.9342332254, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {302009.8946733344, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {302996.8551134433, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {303983.81555355224`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {304970.77599366114`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {305957.7364337701, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {306944.69687387906`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {307931.65731398796`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {308918.6177540969, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {309905.5781942058, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {310892.5386343148, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {311879.4990744237, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {312866.45951453265`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {313853.4199546416, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {314840.3803947505, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {315827.34083485947`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {316814.30127496837`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {317801.26171507733`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {318788.2221551863, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {319775.1825952952, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {320762.14303540415`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {321749.10347551305`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {322736.063915622, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {323723.0243557309, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {324709.9847958399, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {325696.94523594884`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {326683.90567605774`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {327670.8661161667, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {328657.8265562756, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {329644.78699638456`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {330631.7474364935, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {331618.7078766024, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {332605.6683167114, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {333592.6287568203, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {334579.58919692924`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {335566.54963703814`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {336553.5100771471, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {337540.47051725606`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {338527.43095736497`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {339514.3913974739, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {340501.3518375828, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {341488.3122776918, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {342475.27271780075`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {343462.23315790965`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {344449.1935980186, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {345436.1540381275, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {346423.1144782365, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {347410.0749183454, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {348397.03535845433`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {349383.9957985633, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {350370.9562386722, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {351357.91667878116`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {352344.87711889006`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {353331.837558999, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {354318.797999108, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {355305.7584392169, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {356292.71887932584`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {357279.67931943474`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {358266.6397595437, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {359253.6001996526, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {360240.56063976156`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {361227.5210798705, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {362214.4815199794, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {363201.4419600884, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {364188.4024001973, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {365175.36284030625`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {366162.3232804152, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {367149.2837205241, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {368136.24416063307`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {369123.20460074197`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {370110.16504085093`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {371097.12548095983`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {372084.0859210688, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {373071.04636117775`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {374058.00680128665`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {375044.9672413956, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {376031.9276815045, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {377018.8881216135, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {378005.84856172244`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {378992.80900183134`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {379979.7694419403, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {380966.7298820492, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {381953.69032215816`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {382940.65076226706`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {383927.611202376, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {384914.571642485, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {385901.5320825939, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {386888.49252270284`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {387875.45296281175`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {388862.4134029207, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {389849.37384302967`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {390836.33428313857`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {391823.2947232475, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {392810.2551633564, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {393797.2156034654, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {394784.1760435743, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {395771.13648368325`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {396758.0969237922, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {397745.0573639011, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {398732.0178040101, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {399718.978244119, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {400705.93868422793`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {401692.8991243369, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {402679.8595644458, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {403666.82000455476`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {404653.78044466366`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {405640.7408847726, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {406627.7013248816, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {407614.6617649905, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {408601.62220509944`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {409588.58264520834`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {410575.5430853173, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {411562.5035254262, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {412549.46396553516`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {413536.4244056441, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {414523.384845753, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {415510.345285862, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {416497.3057259709, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {417484.26616607985`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {418471.2266061888, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {419458.1870462977, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {420445.14748640667`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {421432.1079265156, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {422419.06836662453`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {423406.02880673343`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {424392.9892468424, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {425379.94968695135`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {426366.91012706026`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {427353.8705671692, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {428340.8310072781, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {429327.7914473871, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {430314.75188749604`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {431301.71232760494`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {432288.6727677139, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {433275.6332078228, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {434262.59364793176`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {435249.55408804066`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {436236.5145281496, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {437223.4749682586, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {438210.4354083675, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {439197.39584847644`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {440184.35628858535`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {441171.3167286943, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {442158.27716880327`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {443145.23760891217`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {444132.1980490211, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {445119.15848913003`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {446106.118929239, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {447093.0793693479, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {448080.03980945685`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {449067.0002495658, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {450053.9606896747, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {451040.9211297837, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {452027.8815698926, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {453014.84201000154`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {454001.8024501105, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {454988.7628902194, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {455975.72333032836`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {456962.68377043726`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {457949.6442105462, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {458936.6046506551, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {459923.5650907641, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {460910.52553087304`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {461897.48597098194`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {462884.4464110909, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {463871.4068511998, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {464858.36729130876`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {465845.3277314177, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {466832.2881715266, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {467819.2486116356, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {468806.2090517445, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {469793.16949185345`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {470780.12993196235`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {471767.0903720713, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {472754.05081218027`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {473741.0112522892, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {474727.97169239813`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {475714.93213250703`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {476701.892572616, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {477688.85301272495`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {478675.81345283386`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {479662.7738929428, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {480649.7343330517, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {481636.6947731607, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {482623.6552132696, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {483610.61565337854`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {484597.5760934875, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {485584.5365335964, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {486571.49697370536`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {487558.45741381426`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {488545.4178539232, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {489532.3782940322, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {490519.3387341411, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {491506.29917425005`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {492493.25961435895`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {493480.2200544679, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {494467.1804945768, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {495454.14093468577`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {496441.1013747947, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {497428.06181490363`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {498415.0222550126, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {499401.9826951215, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {500388.94313523045`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {501375.9035753394, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {502362.8640154483, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {503349.8244555573, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {504336.7848956662, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {505323.74533577514`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {506310.70577588404`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {507297.666215993, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {508284.62665610196`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {509271.58709621086`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {510258.5475363198, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {511245.5079764287, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {512232.4684165377, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {513219.42885664664`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {514206.38929675554`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {515193.3497368645, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {516180.3101769734, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {517167.27061708237`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {518154.23105719127`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {519141.1914973002, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {520128.1519374092, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {521115.1123775181, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {522102.07281762705`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {523089.03325773595`, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {524075.9936978449, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {525062.9541379538, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {526049.9145780628, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {527036.8750181717, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {528023.8354582806, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {529010.7958983895, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {529997.7563384986, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {530984.7167786075, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {531971.6772187164, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {532958.6376588254, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {533945.5980989343, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {534932.5585390432, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {535919.5189791521, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {536906.4794192611, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {537893.43985937, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {538880.4002994789, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {539867.3607395879, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {540854.3211796968, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {541841.2816198057, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {542828.2420599147, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {543815.2025000236, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {544802.1629401325, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {545789.1233802414, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {546776.0838203505, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {547763.0442604594, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {548750.0047005683, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {549736.9651406773, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {550723.9255807862, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {551710.8860208951, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {552697.846461004, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {553684.806901113, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {554671.7673412219, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {555658.7277813308, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {556645.6882214398, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {557632.6486615487, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {558619.6091016576, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {559606.5695417665, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {560593.5299818756, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {561580.4904219845, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {562567.4508620934, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {563554.4113022024, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {564541.3717423113, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {565528.3321824202, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {566515.2926225292, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {567502.2530626381, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {568489.213502747, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {569476.1739428559, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {570463.1343829649, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {571450.0948230738, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {572437.0552631827, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {573424.0157032917, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {574410.9761434007, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {575397.9365835096, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {576384.8970236185, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {577371.8574637275, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {578358.8179038364, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {579345.7783439453, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {580332.7387840543, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {581319.6992241632, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {582306.6596642721, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {583293.620104381, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {584280.58054449, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {585267.5409845989, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {586254.5014247078, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {587241.4618648168, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {588228.4223049257, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {589215.3827450346, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {590202.3431851437, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {591189.3036252526, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {592176.2640653615, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {593163.2245054704, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {594150.1849455794, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {595137.1453856883, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {596124.1058257972, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {597111.0662659062, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {598098.0267060151, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {599084.987146124, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {600071.9475862329, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {601058.9080263419, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {602045.8684664508, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {603032.8289065597, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {604019.7893466688, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {605006.7497867777, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {605993.7102268866, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {606980.6706669956, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {607967.6311071045, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {608954.5915472134, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {609941.5519873223, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {610928.5124274313, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {611915.4728675402, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {612902.4333076491, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {613889.3937477581, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {614876.354187867, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {615863.3146279759, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {616850.2750680848, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {617837.2355081938, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {618824.1959483027, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {619811.1563884116, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {620798.1168285207, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {621785.0772686296, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {622772.0377087385, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {623758.9981488474, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {624745.9585889564, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {625732.9190290653, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {626719.8794691742, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {627706.8399092832, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {628693.8003493921, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {629680.760789501, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {630667.72122961, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {631654.6816697189, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {632641.6421098278, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {633628.6025499367, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {634615.5629900458, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {635602.5234301547, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {636589.4838702636, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {637576.4443103726, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {638563.4047504815, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {639550.3651905904, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {640537.3256306993, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {641524.2860708083, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {642511.2465109172, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {643498.2069510261, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {644485.1673911351, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {645472.127831244, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {646459.0882713529, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {647446.0487114618, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {648433.0091515708, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {649419.9695916798, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {650406.9300317887, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {651393.8904718977, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {652380.8509120066, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {653367.8113521155, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {654354.7717922245, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {655341.7322323334, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {656328.6926724423, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {657315.6531125512, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {658302.6135526602, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {659289.5739927691, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {660276.534432878, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {661263.494872987, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {662250.4553130959, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {663237.4157532048, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {664224.3761933137, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {665211.3366334228, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {666198.2970735317, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {667185.2575136406, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {668172.2179537496, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {669159.1783938585, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {670146.1388339674, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {671133.0992740763, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {672120.0597141853, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {673107.0201542942, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {674093.9805944031, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {675080.9410345121, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {676067.901474621, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {677054.8619147299, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {678041.822354839, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {679028.7827949479, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {680015.7432350568, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {681002.7036751657, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {681989.6641152747, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {682976.6245553836, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {683963.5849954925, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {684950.5454356015, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {685937.5058757104, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {686924.4663158193, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {687911.4267559282, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {688898.3871960372, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {689885.3476361461, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {690872.308076255, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {691859.268516364, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {692846.228956473, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {693833.1893965818, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {694820.1498366907, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {695807.1102767998, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {696794.0707169087, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {697781.0311570176, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {698767.9915971266, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {699754.9520372355, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {700741.9124773444, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {701728.8729174534, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {702715.8333575623, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {703702.7937976712, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {704689.7542377801, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {705676.7146778891, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {706663.675117998, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {707650.6355581069, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {708637.595998216, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {709624.5564383249, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {710611.5168784338, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {711598.4773185427, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {712585.4377586517, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {713572.3981987606, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {714559.3586388695, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {715546.3190789785, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {716533.2795190874, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {717520.2399591963, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {718507.2003993052, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {719494.1608394142, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {720481.1212795231, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {721468.081719632, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {722455.042159741, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {723442.00259985, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {724428.9630399588, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {725415.9234800679, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {726402.8839201768, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {727389.8443602857, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {728376.8048003946, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {729363.7652405036, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {730350.7256806125, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {731337.6861207214, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {732324.6465608304, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {733311.6070009393, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {734298.5674410482, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {735285.5278811571, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {736272.4883212661, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {737259.448761375, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {738246.4092014839, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {739233.369641593, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {740220.3300817019, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {741207.2905218108, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {742194.2509619197, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {743181.2114020287, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {744168.1718421376, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {745155.1322822465, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {746142.0927223555, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {747129.0531624644, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {748116.0136025733, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {749102.9740426823, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {750089.9344827912, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {751076.8949229001, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {752063.855363009, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {753050.815803118, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {754037.776243227, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {755024.7366833359, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {756011.6971234449, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {756998.6575635538, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {757985.6180036627, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {758972.5784437716, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {759959.5388838806, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {760946.4993239895, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {761933.4597640984, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {762920.4202042074, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {763907.3806443163, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {764894.3410844252, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {765881.3015245341, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {766868.2619646431, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {767855.222404752, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {768842.182844861, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {769829.14328497, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {770816.1037250789, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {771803.0641651878, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {772790.0246052968, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {773776.9850454057, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {774763.9454855146, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {775750.9059256235, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {776737.8663657325, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {777724.8268058414, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {778711.7872459503, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {779698.7476860593, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {780685.7081261682, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {781672.6685662771, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {782659.629006386, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {783646.589446495, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {784633.549886604, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {785620.5103267129, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {786607.4707668219, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {787594.4312069308, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {788581.3916470397, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {789568.3520871486, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {790555.3125272576, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {791542.2729673665, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {792529.2334074754, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {793516.1938475844, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {794503.1542876933, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {795490.1147278022, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {796477.0751679112, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {797464.0356080201, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {798450.996048129, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {799437.956488238, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {800424.916928347, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {801411.8773684559, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {802398.8378085648, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {803385.7982486738, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {804372.7586887827, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {805359.7191288916, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {806346.6795690005, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {807333.6400091095, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {808320.6004492184, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {809307.5608893273, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {810294.5213294363, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {811281.4817695452, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {812268.4422096541, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {813255.4026497632, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {814242.3630898721, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {815229.323529981, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {816216.2839700899, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {817203.2444101989, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {818190.2048503078, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {819177.1652904167, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {820164.1257305257, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {821151.0861706346, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {822138.0466107435, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {823125.0070508524, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {824111.9674909614, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {825098.9279310703, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {826085.8883711792, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {827072.8488112882, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {828059.8092513971, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {829046.769691506, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {830033.730131615, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {831020.690571724, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {832007.6510118329, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {832994.6114519418, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {833981.5718920508, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {834968.5323321597, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {835955.4927722686, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {836942.4532123776, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {837929.4136524865, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {838916.3740925954, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {839903.3345327043, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {840890.2949728133, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {841877.2554129222, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {842864.2158530311, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {843851.1762931402, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {844838.1367332491, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {845825.097173358, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {846812.0576134669, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {847799.0180535759, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {848785.9784936848, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {849772.9389337937, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {850759.8993739027, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {851746.8598140116, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {852733.8202541205, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {853720.7806942294, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {854707.7411343384, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {855694.7015744473, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {856681.6620145562, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {857668.6224546653, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {858655.5828947742, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {859642.543334883, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {860629.5037749921, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {861616.464215101, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {862603.4246552099, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {863590.3850953188, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {864577.3455354278, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {865564.3059755367, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {866551.2664156456, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {867538.2268557546, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {868525.1872958635, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {869512.1477359724, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {870499.1081760813, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {871486.0686161903, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {872473.0290562992, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {873459.9894964081, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {874446.9499365172, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {875433.9103766261, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {876420.870816735, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {877407.8312568439, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {878394.7916969529, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {879381.7521370618, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {880368.7125771707, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {881355.6730172797, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {882342.6334573886, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {883329.5938974975, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {884316.5543376065, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {885303.5147777154, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {886290.4752178243, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {887277.4356579332, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {888264.3960980423, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {889251.3565381512, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {890238.3169782601, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {891225.2774183691, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {892212.237858478, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {893199.1982985869, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {894186.1587386958, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {895173.1191788048, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {896160.0796189137, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {897147.0400590226, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {898134.0004991316, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {899120.9609392405, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {900107.9213793494, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {901094.8818194583, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {902081.8422595673, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {903068.8026996762, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {904055.7631397852, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {905042.7235798942, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {906029.6840200031, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {907016.644460112, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {908003.604900221, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {908990.5653403299, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {909977.5257804388, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {910964.4862205477, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {911951.4466606567, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {912938.4071007656, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {913925.3675408745, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {914912.3279809835, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {915899.2884210924, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {916886.2488612013, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {917873.2093013102, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {918860.1697414193, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {919847.1301815282, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {920834.0906216371, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {921821.0510617461, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {922808.011501855, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {923794.9719419639, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {924781.9323820728, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {925768.8928221818, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {926755.8532622907, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {927742.8137023996, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {928729.7741425086, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {929716.7345826175, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {930703.6950227264, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {931690.6554628354, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {932677.6159029444, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {933664.5763430533, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {934651.5367831622, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {935638.4972232712, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {936625.4576633801, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {937612.418103489, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {938599.378543598, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {939586.3389837069, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {940573.2994238158, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {941560.2598639247, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {942547.2203040337, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {943534.1807441426, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {944521.1411842515, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {945508.1016243605, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {946495.0620644694, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {947482.0225045783, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {948468.9829446872, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {949455.9433847963, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {950442.9038249052, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {951429.8642650141, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {952416.8247051231, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {953403.785145232, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {954390.7455853409, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {955377.7060254499, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {956364.6664655588, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {957351.6269056677, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {958338.5873457766, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {959325.5477858856, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {960312.5082259945, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {961299.4686661034, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {962286.4291062125, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {963273.3895463214, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {964260.3499864303, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {965247.3104265392, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {966234.2708666482, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {967221.2313067571, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {968208.191746866, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {969195.152186975, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {970182.1126270839, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {971169.0730671928, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {972156.0335073017, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {973142.9939474107, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {974129.9543875196, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {975116.9148276285, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {976103.8752677375, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {977090.8357078464, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {978077.7961479553, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {979064.7565880644, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {980051.7170281733, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {981038.6774682822, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {982025.6379083911, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {983012.5983485001, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {983999.558788609, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {984986.5192287179, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {985973.4796688269, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {986960.4401089358, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {987947.4005490447, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {988934.3609891536, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {989921.3214292626, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {990908.2818693715, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {991895.2423094804, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {992882.2027495895, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {993869.1631896984, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {994856.1236298073, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {995843.0840699162, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {996830.0445100252, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {997817.0049501341, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {998803.965390243, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}, {999790.925830352, 
           Directive[
            RGBColor[0.5, 0, 0.5], 
            Dashing[{Small, Small}]]}}, None}],
      GridLinesStyle->Directive[
        RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->NCache[{{0, 1.*^6}, {-Log[1000000000], 
          Log[10]}}, {{0, 1.*^6}, {-20.72326583694641, 2.302585092994046}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Ticks->{Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/10\"",
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/1000\"",
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/10000\"",
       "\"\\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/20000\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/1000\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/10000\"",
       "\"{1,0} Mode with \\!\\(\\*SubscriptBox[\\(k\\), \
\\(2\\)]\\)=\\!\\(\\*SubscriptBox[\\(k\\), \\(1\\)]\\)/20000\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    GrayLevel[0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.025], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                  "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.5, 0, 0.5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0.5]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False], 
                   ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.002777777777777778`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.5, 0, 0.5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, -20.60813658229671},
   BaseStyle->{FontSize -> 15},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Part[#, 1], 
       Exp[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Transition Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      FormBox["\"Distance (km)\"", TraditionalForm]}},
   FrameTicks->{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.\"", 0., AutoDelete -> True], 
          ScientificForm[#, 2]& ], TraditionalForm]}, {200000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"1.1\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 1.1374240637967417`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       400000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"2.3\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 2.2748481275934833`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       600000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"3.4\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 3.4122721913902247`*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       800000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"4.5\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 4.549696255186967*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}, {
       1000000, 
        FormBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\"5.7\"", "\[Times]", 
             SuperscriptBox["10", "\"6\""]}], 5.687120318983708*^6, 
           AutoDelete -> True], ScientificForm[#, 2]& ], TraditionalForm]}}}},
   
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Resonance Destruction (\\!\\(\\*SubscriptBox[\\(A\\), \
\\(2\\)]\\)=10000\\!\\(\\*SubscriptBox[\\(B\\), \\(1\\)]\\))\"", 
     TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0.6, 0.4, 0.2]], 
         Line[CompressedData["
1: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
/x8M2fQl
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          GrayLevel[0.5]], 
         Line[CompressedData["
1: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
KC/+P+ruL+s=
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0.5, 0, 0.5]], 
         Line[CompressedData["
1:eJw9W3k8lF/Ut+/L2HdmM2OYES1a8ZwUJUqUhCSphEKSVkkplUqlqCghWym/
KLRIkqXVkiLKqGhDZEslr/d9zvP6x+d87r3Pueeec773LHcYfiGu68RERES+
iIuI/O////sjThBshYEAZZ5ZOUlfIuK/jm2RDTMh6dBsos/WoPf4KA/HbxBf
/6oOeUngeFwh4XBIx7rdm4Pzi4knkenFQ1I43+MucXLjrNPMFyxc/4BovLZR
IyoC6cSHxM3qx/8uv8P5cY8IkTeF/ldDmSS9+zHR8/EwW7Gbgd+vJga0v1Q4
GbFJ2r+W0B2zSYz9f35PiQBBpcqxn7g/p+dESYJctrMVrideElG3fJ7zb+D3
z9cRLf55K06+wv0n1hPO72yWfxTSSfp4A9FSsrDY6zbScY1E/bWUl693IB3z
ipDLsCl+GoTrdzcRIQ8eXg6j1m97TcCnymfcU0iHviEeaRSb7X+K+wlsJo61
P4l9FIPn4d9CHF7gnbvhDu7P5y1xo+J44XY2zvdoJaaJBmxZcxnHXduI9KcG
t5lncNzpHWHR3Q8JjUjbvyduDDz1v/SHkr+dcKqVPq1si7SBkMge8t0mtRDp
80JiGLpKLokhrdVBzHyTevNHDNKJHUROn98HHUWkVT4QS5sWNlzKQ/r4B+Kc
ZpvkktVIy38kari1vxyjkI77SFwwGap69A5pyU9E+KShSfJN1Hl+IuqTE0LA
COUb/0TwpWq28Ph4Prs7iRk2B1WnU/KNdhL/Leg5FbiUOu8uYtBwhoUxB8cH
uojJMnv2LL2K3wv9TPh9+heZEY7zez4TW3M3JhuaUfr4QrjnMxt/y+P45y9E
sFMAP10ex/2/Es/KvuynGeB4x1ei1DK6uWU+7s/nG9E+mvZw6VMcb/1GbJq+
ukvrHtIe34lFDS3HVCj7bvpOJOvc26JWZIz67CaU3T7Nci1D+mU3wUvdlNY6
l9JvD3G4Wfzy8+Vo/7U9RIlTq8KKtxzUdy8x99Izj9Bg/P6jXmJdj3aY7kqk
iR/E3h8pRMUxpO//IKb0e144xMT1Bn2EYPaBWLH/yO9He/URKZX+j89UIr/z
fcRT8auq6b/J+dHNE/MTlQp4M3C9Vj9xurlEYVUJji/vJxIWnX763ZdLjif2
E12lXp9eLeWT4w39xJL9EWGuwebkuMpP4ldI3jsRN3J+9JKfxMe9V7jJ0rj+
+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
5G9lCMlVs5iVMlT+bQh0/aOfl2F/L225IbwWX/CfoBPxd50hbP8lvi/+NYnn
wq0T8x3vvnwqwPvngCEEJWYa3FZE/omGYFXmXyhuhP6fYQiLnyS6XMF+r2+h
IXRsv3mk3g7975EhLNuQWBd2B+VvMATTA1OUIi8i/w+GIBn/suAG1suF/Yag
foCu9tmGyu+N4F3k8v3PS1D/KkbQd1Pm7AG8P8vpRrBNLcD/1jXUv4URWJ3I
tvPtoPq/RuC893Na/xbkv8QIzkqccHK1QP2vNoLm2weMX+H9KNxsBA19C6+4
n0b+UUZwp2D/e94lxJ/jRpDj9j7z6ADaX6oRqF4zzyk8hPFPvhG06R2pe3wE
5b9vBKkt3q80j2H888wIknL9v5W1o/+1GUG+zaPgW0sQ/74bQYT6gS/5IRyS
/x8jkPuq7dBSR+JDgiQdjiQeVLoZj/GOIh0ClzWJXl9BzrfQoMP25299vs8n
aREDOjzxKpibhP3JOjYdrE8Y/fp2kqTT+HSIP2/vMKZM0qFT6ZC8Zop8pCPG
Z3Po8Ldc3NuGTo7T5tFhaJ++QpQnSQsX0UGuu8HBFuOXAjc6hL4ec9FSx/zR
iw5TNweezFMnz8tlLR1O1h9r+LwPzzOIDv19PBFrQ1K+vi10OB/312FJO9r3
TjoUNQjNLe+S+kmIocNHQdVd5a/kfN8jdFC9OpgYsJXEa4tTdNjcGic1fJrq
39LBZ1ebMoH6r7tMh22L11/MvI72kEuHLL+Nz0cYKP9/dNAz2K83hP1vopQO
vaFjK8rw/qY9pMOFeevi8mPRXmom5DmX2b0Y84GCOjoU9jou4GxB+2mmg6PN
tcNHsX/kIpz43opDSRoXqHoKHUzY8vUCvP/7ftBh9eTg3U9/UfUVOtw6OaI9
VI3yj9MhaPTtGAPjNV9pBkR4jU1XrydpC2UGvFtNj4ydQdVfGDDZ+6dDRBjK
b8gA6TP7RvMCUX4OAxZN6TX/5UHyDzVnwNaNTawrnVR9hgGXXO6lH4ol/ZVm
wwBD51dLHjlT9RoGtPo4q0zPJekCZwaocuUbLs2l6jcMUK82a1GtJ9e7rGLA
Q+uQ3fEFeJ+sY0CT7mYl40xyvC+YARIiP+8aIj6Vb2XA6MrbBfHepP0k7GbA
t6KQeQ8JxJsDDKi5l9ls2U7il0U8A7I2iV07VI31/0QGzAqrNa+IItfXXWCA
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
FmeM8f8Bc4iS6iQaJvT9P10yj0Q=
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          GrayLevel[0.5], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1: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
          "]]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[0.002777777777777778], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0.5, 0, 0.5], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1: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
+/8HGk9Fbw==
          "]]}}}, {}}, {
     DisplayFunction -> Identity, GridLines -> {{{0, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}}, None}, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, -20.60813658229671}, 
      PlotRange -> {{0, 1.*^6}, {-Log[1000000000], 
         Log[10]}}, DisplayFunction -> Identity, AspectRatio -> 
      GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {0, -20.60813658229671}, BaseStyle -> {FontSize -> 15}, 
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Part[#, 1], 
          Exp[
           Part[#, 2]]}& )}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", "Distance (km)"}}, 
      FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, {{0, 
           ScientificForm[0., 2]}, {200000, 
           ScientificForm[1.1374240637967417`*^6, 2]}, {400000, 
           ScientificForm[2.2748481275934833`*^6, 2]}, {600000, 
           ScientificForm[3.4122721913902247`*^6, 2]}, {800000, 
           ScientificForm[4.549696255186967*^6, 2]}, {1000000, 
           ScientificForm[5.687120318983708*^6, 2]}}}}, FrameTicksStyle -> 
      Larger, GridLines -> {{{0, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {1900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {2900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {3900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {4900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {5900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {6900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {7900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {8900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {9900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {10900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {11900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {12900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {13900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {14900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {15900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {16900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {17900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {18900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {19900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {20900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {21900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {22900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {23900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {24900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {25900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {26900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {27900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {28900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {29900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {30900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {31900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {32900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {33900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {34900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {35900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {36900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {37900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {38900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {39900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {40900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {41900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {42900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {43900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {44900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {45900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {46900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {47900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {48900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {49900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {50900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {51900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {52900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {53900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {54900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {55900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {56900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {57900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {58900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {59900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {60900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {61900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {62900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {63900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {64900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {65900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {66900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {67900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {68900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {69900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {70900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {71900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {72900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {73900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {74900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {75900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {76900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {77900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {78900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {79900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {80900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {81900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {82900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {83900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {84900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {85900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {86900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {87900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {88900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {89900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {90900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {91900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {92900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {93900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {94900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {95900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {96900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {97900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {98900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {99900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100400 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100500 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100600 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100700 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100800 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {100900 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101000 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101100 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101200 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}, {101300 Pi^2, 
          Directive[
           RGBColor[0.5, 0, 0.5], 
           Dashing[{Small, Small}]]}}, None}, GridLinesStyle -> Directive[
        RGBColor[1, 0.5, 0], 
        Dashing[{Small, Small}]], ImageSize -> 800, LabelStyle -> 
      GrayLevel[0], Method -> {}, PlotLabel -> 
      "Resonance Destruction (\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\))", 
      PlotRange -> {{0, 1.*^6}, {-Log[1000000000], 
         Log[10]}}, PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0.6, 0.4, 0.2]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0.5]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0.5, 0, 0.5]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         GrayLevel[0.5], 
         Dashing[{Small, Small}]], 
        Directive[
         PointSize[0.002777777777777778], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0.5, 0, 0.5], 
         Dashing[{Small, Small}]]}, {
       "\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \
\(1\)]\)/10", 
        "\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \
\(1\)]\)/1000", 
        "\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \
\(1\)]\)/10000", 
        "\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \
\(1\)]\)/20000", 
        "{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/1000", 
        "{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10000", 
        "{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/20000"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True, True, True, True}, LabelStyle -> GrayLevel[0], 
       LegendLayout -> "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.683315480057769*^9, {3.683315533711253*^9, 3.683315550091167*^9}, 
   3.683315588867775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"solNumStashLimit", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"3", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Abs", "[", 
             RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", 
            "2"}], ")"}], "/.", 
          RowBox[{"twokListKK3NumLimit10Mode", "[", 
           RowBox[{"[", 
            RowBox[{"4", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "endpoint", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Transition Probability\>\"", ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"datafracStashTicks", "[", "1", "]"}]}], "}"}]}], "}"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"plotstylecolorList", ",", "4"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"plotstylecolorList", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"plotstylecolorList", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", "Dashed"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"plotstylecolorList", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", "Dashed"}], "]"}]}], "}"}]}], 
     "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Resonance Destruction (\!\(\*SubscriptBox[\(A\), \
\(2\)]\)=10000\!\(\*SubscriptBox[\(B\), \(1\)]\))\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \
\(1\)]\)/10\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\
\)]\)/1000\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\
\)]\)/10000\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\
\)]\)/20000\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/1000\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/10000\>\"", ",", 
        "\"\<{1,0} Mode with \!\(\*SubscriptBox[\(k\), \
\(2\)]\)=\!\(\*SubscriptBox[\(k\), \(1\)]\)/20000\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "9"}], ")"}]}], ",", "10"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gridlinesCode4", "[", "4", "]"}], ",", " ", "None"}], "}"}]}], 
   ",", 
   RowBox[{"GridLinesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Orange", ",", "Dashed"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676222060505597*^9, 3.676222123415184*^9}, {
   3.6762222232917023`*^9, 3.676222293522826*^9}, {3.676223074038679*^9, 
   3.676223074347522*^9}, {3.676225643827188*^9, 3.676225698519828*^9}, {
   3.6762257988274307`*^9, 3.676225813141944*^9}, {3.676226110572768*^9, 
   3.676226124062942*^9}, {3.6762272353546553`*^9, 3.6762272395626097`*^9}, {
   3.676227300447793*^9, 3.676227303110708*^9}, {3.676227500378499*^9, 
   3.6762275006582403`*^9}, 3.67622788256078*^9, {3.6762289885487537`*^9, 
   3.676229045958745*^9}, {3.676229092417412*^9, 3.6762292000610647`*^9}, {
   3.676229272409871*^9, 3.6762292726546173`*^9}, {3.676229327816749*^9, 
   3.676229357514141*^9}, {3.676229415090775*^9, 3.67622941833265*^9}, {
   3.67622951826614*^9, 3.676229551670836*^9}, {3.6762297028947973`*^9, 
   3.6762298156743927`*^9}, {3.676229884932386*^9, 3.676229889593812*^9}, {
   3.6762299477801*^9, 3.67622995791541*^9}, {3.6762300540250187`*^9, 
   3.676230132117867*^9}, 3.676230518513879*^9, {3.676230615450943*^9, 
   3.6762306281224747`*^9}, {3.676231268928423*^9, 3.676231285040605*^9}, {
   3.676312640587866*^9, 3.676312694929406*^9}, {3.6763128289593773`*^9, 
   3.67631283055308*^9}, {3.676312905807589*^9, 3.676312914397524*^9}, {
   3.676313416175696*^9, 3.676313418924732*^9}, {3.676313801259944*^9, 
   3.67631382084728*^9}, {3.676313859328285*^9, 3.6763138673664017`*^9}, 
   3.676314349704681*^9, {3.67631448851016*^9, 3.676314552927678*^9}, {
   3.676314615902915*^9, 3.676314616309297*^9}, {3.676314698078293*^9, 
   3.6763146983085737`*^9}, {3.676318366976325*^9, 3.6763183688701887`*^9}, {
   3.6763187188462677`*^9, 3.676318718979968*^9}, {3.67631877506094*^9, 
   3.676318775195224*^9}, {3.676318835361919*^9, 3.676318850753854*^9}, {
   3.676318976590304*^9, 3.67631902300382*^9}, 3.676319254130598*^9, {
   3.676319299970426*^9, 3.676319300335609*^9}, {3.676319480703581*^9, 
   3.676319480828189*^9}, {3.6763195144370832`*^9, 3.6763195179871187`*^9}, 
   3.676378540186195*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\[NoBreak] does \
not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683315303977099*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\[NoBreak] does \
not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683315362658167*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(4\\)\[NoBreak] of \
\[NoBreak]\\!\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\[NoBreak] does \
not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.683315418984519*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partw\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6833154203376503`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.676225583992131*^9, 3.67622563668375*^9, {3.676225671564921*^9, 
   3.6762256990878773`*^9}, 3.676225783452442*^9, 3.6762258137204523`*^9, {
   3.676226100690984*^9, 3.676226130507142*^9}, 3.676226177323203*^9, 
   3.6762271756009808`*^9, 3.676227282145575*^9, 3.676227353730237*^9, 
   3.676227547513858*^9, 3.676228071393387*^9, 3.6762290040511723`*^9, {
   3.6762290421307783`*^9, 3.6762290465043983`*^9}, {3.676229101793871*^9, 
   3.676229111540934*^9}, {3.676229152280609*^9, 3.676229200700754*^9}, {
   3.676229275498307*^9, 3.676229276087475*^9}, {3.676229335478552*^9, 
   3.6762293581094513`*^9}, 3.6762294622397413`*^9, {3.6762295225752707`*^9, 
   3.67622955228086*^9}, 3.676229645486161*^9, {3.676229727804165*^9, 
   3.676229816337591*^9}, {3.676229885999707*^9, 3.6762298902423964`*^9}, {
   3.676230009798552*^9, 3.6762301332401743`*^9}, 3.676230571488203*^9, 
   3.676230712356949*^9, 3.6762308698102417`*^9, 3.676231286309557*^9, 
   3.676312627220478*^9, {3.67631266869363*^9, 3.676312684930184*^9}, 
   3.676312831834756*^9, {3.6763129019855328`*^9, 3.6763129150451813`*^9}, 
   3.676313420713653*^9, {3.6763137873118677`*^9, 3.676313821585292*^9}, {
   3.676313860244138*^9, 3.6763138679544973`*^9}, {3.676314406350293*^9, 
   3.6763144068385963`*^9}, {3.676314489341502*^9, 3.676314553594905*^9}, 
   3.6763146170587473`*^9, 3.676314699070738*^9, 3.676318454577058*^9, 
   3.676318719686802*^9, 3.676318775939172*^9, {3.676318882357749*^9, 
   3.676318882785617*^9}, {3.676318977401791*^9, 3.6763190236287518`*^9}, {
   3.676319239883603*^9, 3.676319255134714*^9}, 3.676319300979776*^9, 
   3.6763194816168118`*^9, {3.676319515384015*^9, 3.676319518569928*^9}, 
   3.6833154704761477`*^9}]
}, Open  ]],

Cell["Finally some figures about the actual matter profile", "Text",
 CellChangeTimes->{{3.6762162917384653`*^9, 3.6762163032449017`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["matterProfiles"], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.00003573471582101408`", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"0.00003573471582101408`", " ", "x"}], "]"}]}], ",", 
   RowBox[{"0.0000346134520606227`", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "10"], "]"}]}], ",", 
   RowBox[{"0.0000692269041212454`", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "10"], "]"}]}], ",", 
   RowBox[{"0.0001038403561818681`", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "10"], "]"}]}], ",", 
   RowBox[{"0.000346134520606227`", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "10"], "]"}]}], ",", 
   RowBox[{"0.0034613452060622703`", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "10"], "]"}]}], ",", 
   RowBox[{"0.034613452060622704`", " ", 
    RowBox[{"Sin", "[", 
     FractionBox["x", "10"], "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6762173195921307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["omegaMKK"], "Input"],

Cell[BoxData["3.6755186708817036`*^-17"], "Output",
 CellChangeTimes->{3.6762178781984453`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"matterProfilesTicks", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"ScientificForm", "[", 
         RowBox[{
          RowBox[{"MeVInverse2km", "[", 
           RowBox[{"x", "/", "omegaMKK"}], "]"}], ",", "2"}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"Pi", "/", 
         RowBox[{"twokListKK3Num", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"Pi", "/", 
          RowBox[{"twokListKK3Num", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "/", "5"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"matterProfiles", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"twoaListKK3Num", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"twokListKK3Num", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "x"}], "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"twoaListKK3Num", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"twokListKK3Num", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "x"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Plot", "[", 
    RowBox[{"matterProfiles", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"endpoint", "/", "10000"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"twoaListKK3Num", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"Pi", "/", 
           RowBox[{"twokListKK3Num", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{"-", "6"}], ")"}]}], ",", "0.1"}], "}"}]}], "}"}]}], ",", 
     
     RowBox[{"GridLines", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"None", ",", " ", 
        RowBox[{"twoaListKK3Num", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", 
  RowBox[{"matterProfiles", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"endpoint", "/", "10000"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"twoaListKK3Num", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
        RowBox[{"twoaListKK3Num", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"Pi", "/", 
         RowBox[{"twokListKK3Num", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"(", 
          RowBox[{"-", "6"}], ")"}]}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Matter Profiles within Half Wavelength\>\""}],
    ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "Black", "}"}], ",", "plotstylecolorList"}], "]"}]}], ",", 
   
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Matter Density (\!\(\*SubscriptBox[\(\[Omega]\), \(m\)]\))\>\"", 
        ",", "None"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
        "\"\<Distance (km)\>\""}], "}"}]}], "}"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "matterProfilesTicks"}], "}"}]}], "}"}]}], 
   ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676216305405561*^9, 3.6762163221393538`*^9}, {
   3.676216450000948*^9, 3.676216753880248*^9}, {3.676216792779592*^9, 
   3.676216829904314*^9}, {3.67621691617696*^9, 3.676216933222357*^9}, {
   3.676217067486072*^9, 3.6762170695098467`*^9}, {3.67621723295793*^9, 
   3.676217308812481*^9}, {3.676217371250483*^9, 3.676217371497263*^9}, {
   3.676217403599738*^9, 3.676217491338306*^9}, {3.676217530016683*^9, 
   3.6762176283822803`*^9}, {3.676217678722526*^9, 3.6762177374900513`*^9}, 
   3.676217812626779*^9, {3.676217900708419*^9, 3.6762179887906027`*^9}, {
   3.676218020807947*^9, 3.6762180246460876`*^9}, {3.676221290399547*^9, 
   3.6762212917757063`*^9}}],

Cell["Some test of plotting", "Text",
 CellChangeTimes->{{3.6762087397000103`*^9, 3.676208742569087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotfrac", "[", 
    RowBox[{
    "fractionk2Input_", ",", "fractionA2Input_", ",", "title_", ",", 
     "legendsplotfrac_", ",", "color_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fractionk2M", ",", "fractionA2M"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fractionk2M", "=", "fractionk2Input"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"fractionA2M", "=", "fractionA2Input"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"twokListKK3", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"onekListKK", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"onekListKK", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", "fractionk2M"}]}], "}"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"twoaListKK3", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"oneaListKK", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"widthNList", "[", 
           RowBox[{
            RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", 
            ",", "onephiListKK", ",", "thetamV"}], "]"}], "*", 
          "fractionA2M"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lambdaNKK3", "=", 
       RowBox[{
        RowBox[{"0.5", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "thetaV"}], "]"}], "omegaVKK"}], " ", "+", 
        RowBox[{
         RowBox[{"twoaListKK3", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "*", "omegaMKK"}]}]}], 
      RowBox[{"(*", "MeV", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"omegaMKK3", "=", 
       RowBox[{"OmegaMatter2", "[", 
        RowBox[{"lambdaNKK3", ",", "thetaV", ",", "omegaVKK"}], "]"}]}], 
      RowBox[{"(*", "MeV", "*)"}], ";", "\[IndentingNewLine]", 
      RowBox[{"thetamV3", "=", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{"2", "thetaV"}], "]"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"2", "thetaV"}], "]"}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"lambdaNKK3", "/", "omegaVKK"}], ")"}], "^", "2"}]}], 
             ")"}]}], "]"}], "/", "2"}], ",", "Pi"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"onekListKK3", "=", 
       RowBox[{
        RowBox[{"oneaListKK", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"omegaMKK", "/", "omegaMKK3"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"oneaListKK3", "=", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", "0.1", "}"}], ";"}], "*)"}], 
       RowBox[{
        RowBox[{"oneaListKK", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "*", 
        RowBox[{"omegaMKK", "/", "omegaMKK3"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{
          RowBox[{"qValueOrderdList", "[", 
           RowBox[{
            RowBox[{"listNGenerator", "[", 
             RowBox[{"1", ",", "10"}], "]"}], ",", "onekListKK3", ",", 
            "oneaListKK3", ",", "onephiListKK", ",", "thetamV3"}], "]"}], ",", 
          RowBox[{"1", ";;", "10"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Grid", "@", "%"}], ";"}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"widthNList", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", "onekListKK", ",", "oneaListKK", ",", 
          "onephiListKK", ",", "thetamV"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"widthNList", "[", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", "onekListKK2", ",", "oneaListKK2", 
          ",", "onephiListKK", ",", "thetamV2"}], "]"}], ";"}], 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Legended", "[", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"pltNList", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "1", "}"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"onekListKK3", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"oneaListKK3", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", "onephiListKK", 
              ",", 
              RowBox[{"thetamV3", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "endpoint", ",", 
              RowBox[{"legendsplotfrac", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"color", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "None", ",", "None"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "oneaListKK3"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"ImagePadding", "->", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"Automatic", ",", " ", "Automatic"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", " ", "20"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "title"}]}], "]"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"LineLegend", "[", 
           RowBox[{"color", ",", "legendsplotfrac"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6761255024929943`*^9, 3.676125569529326*^9}, {
   3.676125726171632*^9, 3.676125818630549*^9}, {3.6761267506345797`*^9, 
   3.676127019289464*^9}, {3.676127187750203*^9, 3.676127211808375*^9}, {
   3.676127368966316*^9, 3.6761274275592117`*^9}, {3.67612747960187*^9, 
   3.676127494919797*^9}, {3.676127540253619*^9, 3.676127545499506*^9}, {
   3.676127616471726*^9, 3.676127617325582*^9}, {3.676127987691688*^9, 
   3.676127994689609*^9}, {3.676143622078897*^9, 3.676143633386455*^9}, {
   3.6761439478779297`*^9, 3.676143984207178*^9}, 3.676144154427987*^9, {
   3.67614421147668*^9, 3.6761442625519743`*^9}, {3.676144498543748*^9, 
   3.6761445059501133`*^9}, {3.6761445420195293`*^9, 3.676144574151404*^9}, {
   3.676144666552485*^9, 3.676144691229679*^9}, {3.676144730552253*^9, 
   3.676144750082552*^9}, {3.6761451158365593`*^9, 3.676145173487195*^9}, {
   3.676145220252488*^9, 3.676145228427739*^9}, {3.676145608073722*^9, 
   3.676145614976218*^9}, {3.676145648791195*^9, 3.676145678892107*^9}}],

Cell[BoxData[
 RowBox[{"plotfrac", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "10"}], ",", 
     RowBox[{"1", "/", "10"}], ",", 
     RowBox[{"1", "/", "10"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "30"}], "}"}], ",", 
   "\"\<Resonance Destruction (k2=k1/10)\>\"", ",", 
   RowBox[{"{", "\"\<A2=B1*10,A2=B1*20,A2=B1*30\>\"", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Blue", ",", "Orange"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6761442766784477`*^9, 3.6761443227750607`*^9}, {
  3.676144593556162*^9, 3.676144594699683*^9}, {3.676144703050478*^9, 
  3.676144704369465*^9}, {3.676144754497376*^9, 3.676144756362109*^9}, {
  3.676145361457637*^9, 3.6761454334802027`*^9}, {3.676145485358974*^9, 
  3.676145513219378*^9}, {3.6761458624947042`*^9, 3.676145869240491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "pltNList"}]], "Input",
 CellChangeTimes->{{3.6761274672221947`*^9, 3.676127472404737*^9}}],

Cell[BoxData[
 StyleBox["\<\"plot the result of solNList; Parameters taken are \
[listInput_,kNList_,aNList_,phiNList_,thetam_,endpoint_,legends_,color_,\
frameTicks_,frameLabel_,startpoint_:0]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.676127496478558*^9},
 CellTags->"Info3676105896-6605098"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pltNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}], ",", "onekListKK", ",", "oneaListKK", 
      ",", "onephiListKK", ",", "thetamV", ",", "endpoint", ",", 
      "\"\<Mode n=1 with One Perturbation Only\>\"", ",", "Black", ",", 
      "None", ",", "None"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"solRes", "=", 
    RowBox[{"solNList", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", "1", "}"}], "}"}], ",", "onekListKK", ",", "oneaListKK", 
      ",", "onephiListKK", ",", "thetamV", ",", "endpoint"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.676201700582182*^9, 3.676201707067287*^9}, {
  3.676201776000547*^9, 3.676201783314856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solResList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], 
         ")"}], "/.", 
        RowBox[{"solRes", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpoint", ",", 
       RowBox[{"Floor", "[", 
        RowBox[{"endpoint", "/", "1000"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.676201785159893*^9, 3.676201826041926*^9}}],

Cell[BoxData["solResList"], "Input",
 CellChangeTimes->{{3.676201827983014*^9, 3.6762018304703627`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Analytical", "Subchapter",
 CellChangeTimes->{3.67605101277975*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gRatio", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"onekListKK", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "-", "1"}], ")"}], "^", "2"}], "/", 
   
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"n", " ", 
       RowBox[{"onekListKK", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "-", 
      RowBox[{"omegaMKK2", "/", "omegaMKK"}]}], ")"}], "^", 
    "2"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gNew", "[", "n_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"n", " ", 
     RowBox[{"onekListKK", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "-", 
    RowBox[{"omegaMKK2", "/", "omegaMKK"}]}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.67605222114573*^9, 3.676052270662414*^9}, {
  3.676052805326043*^9, 3.676052927357232*^9}, {3.676053098069079*^9, 
  3.676053106628353*^9}, {3.676053746643806*^9, 3.676053774506957*^9}, {
  3.676053945785524*^9, 3.676053945919684*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tan2thetamRatio", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Tan", "[", 
      RowBox[{"2", "thetamV"}], "]"}], ")"}], "^", "2"}], "/", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Tan", "[", 
      RowBox[{"2", "thetamV2"}], "]"}], ")"}], "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.676052933384994*^9, 3.676052961341137*^9}}],

Cell[BoxData["0.9999851566015409`"], "Output",
 CellChangeTimes->{3.676052962631859*^9, 3.676119922883421*^9, 
  3.6761199932008266`*^9, 3.676120047486072*^9, 3.6761200995181837`*^9, 
  3.676120179645316*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"besseljRatio", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"n", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"oneaListKK", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"onekListKK", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "thetamV"}], "]"}]}]}], "]"}], "^", "2"}], "/", 
   RowBox[{
    RowBox[{"BesselJ", "[", 
     RowBox[{"n", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"oneaListKK2", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", 
        RowBox[{"onekListKK2", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], 
       RowBox[{"Cos", "[", 
        RowBox[{"2", "thetamV2"}], "]"}]}]}], "]"}], "^", "2"}]}]}]], "Input",\

 CellChangeTimes->{{3.6760529732193193`*^9, 3.6760530512897587`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"gNew", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"gRatio", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"besseljRatio", "[", "1", "]"}]}], "Input",
 CellChangeTimes->{{3.676053057471016*^9, 3.676053072864599*^9}, {
  3.676053109379588*^9, 3.676053112034829*^9}}],

Cell[BoxData["8.42107666743086`*^-6"], "Output",
 CellChangeTimes->{3.676053073167562*^9, 3.676053112292596*^9, 
  3.676053794181725*^9, 3.676053949458816*^9, 3.6761199229283037`*^9, 
  3.676119993241706*^9, 3.676120047532114*^9, 3.676120099555217*^9, 
  3.676120179680287*^9}],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.676053073167562*^9, 3.676053112292596*^9, 
  3.676053794181725*^9, 3.676053949458816*^9, 3.6761199229283037`*^9, 
  3.676119993241706*^9, 3.676120047532114*^9, 3.676120099555217*^9, 
  3.676120179686393*^9}],

Cell[BoxData["1.0000190706793783`"], "Output",
 CellChangeTimes->{3.676053073167562*^9, 3.676053112292596*^9, 
  3.676053794181725*^9, 3.676053949458816*^9, 3.6761199229283037`*^9, 
  3.676119993241706*^9, 3.676120047532114*^9, 3.676120099555217*^9, 
  3.6761201796907663`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Temp", "Subchapter",
 CellChangeTimes->{{3.676042814402012*^9, 3.6760428147852993`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"0.03", "x"}], "+", 
       RowBox[{"Pi", "/", "10"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<The Two Matter Perturbations\>\"", ",", "Black", ",", 
      RowBox[{"FontSize", "\[Rule]", "15"}]}], "]"}]}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<First Perturbation\>\"", ",", "\"\<Second Perturbation\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", " ", "Above"}], "}"}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.676042816944471*^9, 3.676043066142523*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
8bF7ke0C45VZ64VaMpSh8YX/+3/gfwDmUHAI
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwVy3s0lHkcx/FpJuN5CmFLW6SxMmosRe2xle37o4QykqXEMG6RVjPooshp
i3RTjanjsoeKMrog1UG7pppaurPDPM/MPGmQGsqyEca6ZHb2j895n9cfH7sY
YdBOOo1G4xr2fxmPZrW8/yFl3esH7NWfnyqAZcVi217YAt+6m52IeaaAUY0o
gBLzAaurJkiDuzxfdNeJhcB7uFAofa4Acq+2slx8BC6+unTl1EsFyHOHLUrE
58FTEKKzb1EAtyi9sVB8GQ5mpySFkgrIXfywJF98G1zSZmXJ3iugb4yp99wr
g1WR7v7jdAJ+/JoXeC/5OdgU+1ZYswh40RGaRbeXg3yFt3uFBwHIK3hSEkMA
7v12flE4AWHJfoO1O9RQxz99Yv9BAh7acY7Jyt/CxwgyoL6AgOBCzlWNoAt+
891JRNcRYG30YL0ovhuG9GeHxtoIOLGy6a7s5AewJSOXfhkiwNtnU5Qkpwd2
FO06rDYjoenUCDs7/SOUdXUXLXUioe/sXGlnYR80dEbnt/uREJ125/yguB8c
5qf/nhFPQuZ3ja5H6v8Bhv+T+5nHSXCZztTREwchaV6c8aerJDyLCB1mxQ1B
c4Ioz0tGguulParMfV+Af7K1aqqDhA1bH4fVpg5DdEhhXvkkCU7aLU1OOSPg
JJNMVS1UQqp5iseli6NgmXXHiLVaCbHV8qC/RTpYbbN/5GiIEtjOvwSmlY2B
fazQymufEi7YbhjQlP4L04K26i8iJURV3M5HxePgYpvJNKtSAs1im2P3rQlo
Fbl45rxSgt/Amu2RNybh2pon5oO9Soi7GSZYIJ0CnidZXctUwbtpE7H8xVfI
iBWc0S5RAfPp1+CYpmnwmL/HEfNUgX7PMr2bUg8hyWrX43wVBDb6LRHupiHL
iGvi0QwVbF3k+5dXLw0t1Kv4rQUqkPa8H6gVzEAHN0qAWaeCjE+2PKuBGejz
6RVXlrep4Cpv7CerA3R08uaa0ZpBFbBwoZCho6PS3LJ4R1M1BMxYUSHYy0DF
gaoyfJkatInngg5NMtDKBkuBl48a5LNzuSnpM9HSd4xTKbFqcLB1lGIzjdAm
03ET3VE1cA7PdrU9Y4SmphMI7WU1ZH9zfpSFM5HkcZxTc4MafKxrnP/MY6Lx
V6X7sTdqiOQl1wZZGKOOEt+htTo1sD8dWh91zhhdp0xG2i0o2N7D8ja1wlCY
l82hluUUaGwS8isuYshnTrXgj80UbHPw0L7Nx1BScpeZuz8FcmeLVZZFGMqw
K62+Z/CTdQ2th0swVLC7ub+SS8H1qDmmQRIMHQ9vjb28hYLUa/VZU/UYcmvJ
9sj+mQLj77GUre0Y4lScLuSGU/DrKs2jHI3h//wY56XBEx53zaSdGBocxqQb
eRT0c3mV7A8YkvAfaSCCgjZhTe9kP4b6uIS1G5+C4nuhkZJpDDGLi49ZxVIw
T+pc1U7DUXPIPtMLBp9rpE+ZM3CUraMK5sRRcJSsLMowxhHjQ8AtbCcF8WM0
MtAcRyZuna8n4ino0pP2OZY4su5xCE5LoGAHdiu1YS6OSoQTb4YN9l8QYs5e
gKO1E/69/bsoaLLj8MOtcaTTvUxKTKRgHUdfJVqEowSZckhr8H03YqppMY7C
g5MPxOymwHXtjc2TdjgqrymY6DD4P3/uUi0=
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{None, None}, {None, None}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->
       NCache[{{0, Pi}, {0., 0.9999999707837952}}, {{0, 3.141592653589793}, {
         0., 0.9999999707837952}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"\"First Perturbation\"","\"Second Perturbation\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{None, None}, {None, None}},
   ImagePadding->All,
   ImageSize->800,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox["\"The Two Matter Perturbations\"", 
      GrayLevel[0], FontSize -> 15, StripOnInput -> False], TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
8bF7ke0C45VZ64VaMpSh8YX/+3/gfwDmUHAI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVy3s0lHkcx/FpJuN5CmFLW6SxMmosRe2xle37o4QykqXEMG6RVjPooshp
i3RTjanjsoeKMrog1UG7pppaurPDPM/MPGmQGsqyEca6ZHb2j895n9cfH7sY
YdBOOo1G4xr2fxmPZrW8/yFl3esH7NWfnyqAZcVi217YAt+6m52IeaaAUY0o
gBLzAaurJkiDuzxfdNeJhcB7uFAofa4Acq+2slx8BC6+unTl1EsFyHOHLUrE
58FTEKKzb1EAtyi9sVB8GQ5mpySFkgrIXfywJF98G1zSZmXJ3iugb4yp99wr
g1WR7v7jdAJ+/JoXeC/5OdgU+1ZYswh40RGaRbeXg3yFt3uFBwHIK3hSEkMA
7v12flE4AWHJfoO1O9RQxz99Yv9BAh7acY7Jyt/CxwgyoL6AgOBCzlWNoAt+
891JRNcRYG30YL0ovhuG9GeHxtoIOLGy6a7s5AewJSOXfhkiwNtnU5Qkpwd2
FO06rDYjoenUCDs7/SOUdXUXLXUioe/sXGlnYR80dEbnt/uREJ125/yguB8c
5qf/nhFPQuZ3ja5H6v8Bhv+T+5nHSXCZztTREwchaV6c8aerJDyLCB1mxQ1B
c4Ioz0tGguulParMfV+Af7K1aqqDhA1bH4fVpg5DdEhhXvkkCU7aLU1OOSPg
JJNMVS1UQqp5iseli6NgmXXHiLVaCbHV8qC/RTpYbbN/5GiIEtjOvwSmlY2B
fazQymufEi7YbhjQlP4L04K26i8iJURV3M5HxePgYpvJNKtSAs1im2P3rQlo
Fbl45rxSgt/Amu2RNybh2pon5oO9Soi7GSZYIJ0CnidZXctUwbtpE7H8xVfI
iBWc0S5RAfPp1+CYpmnwmL/HEfNUgX7PMr2bUg8hyWrX43wVBDb6LRHupiHL
iGvi0QwVbF3k+5dXLw0t1Kv4rQUqkPa8H6gVzEAHN0qAWaeCjE+2PKuBGejz
6RVXlrep4Cpv7CerA3R08uaa0ZpBFbBwoZCho6PS3LJ4R1M1BMxYUSHYy0DF
gaoyfJkatInngg5NMtDKBkuBl48a5LNzuSnpM9HSd4xTKbFqcLB1lGIzjdAm
03ET3VE1cA7PdrU9Y4SmphMI7WU1ZH9zfpSFM5HkcZxTc4MafKxrnP/MY6Lx
V6X7sTdqiOQl1wZZGKOOEt+htTo1sD8dWh91zhhdp0xG2i0o2N7D8ja1wlCY
l82hluUUaGwS8isuYshnTrXgj80UbHPw0L7Nx1BScpeZuz8FcmeLVZZFGMqw
K62+Z/CTdQ2th0swVLC7ub+SS8H1qDmmQRIMHQ9vjb28hYLUa/VZU/UYcmvJ
9sj+mQLj77GUre0Y4lScLuSGU/DrKs2jHI3h//wY56XBEx53zaSdGBocxqQb
eRT0c3mV7A8YkvAfaSCCgjZhTe9kP4b6uIS1G5+C4nuhkZJpDDGLi49ZxVIw
T+pc1U7DUXPIPtMLBp9rpE+ZM3CUraMK5sRRcJSsLMowxhHjQ8AtbCcF8WM0
MtAcRyZuna8n4ino0pP2OZY4su5xCE5LoGAHdiu1YS6OSoQTb4YN9l8QYs5e
gKO1E/69/bsoaLLj8MOtcaTTvUxKTKRgHUdfJVqEowSZckhr8H03YqppMY7C
g5MPxOymwHXtjc2TdjgqrymY6DD4P3/uUi0=
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{None, None}, {None, None}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> Style["The Two Matter Perturbations", 
        GrayLevel[0], FontSize -> 15], 
      PlotRange -> {{0, Pi}, {0., 0.9999999707837952}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]]}, {
       "First Perturbation", "Second Perturbation"}, LegendMarkers -> None, 
       LabelStyle -> {}, LegendLayout -> "Row"]], {Center, Above}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.676042824624213*^9, 3.676042945708097*^9}, {
   3.676043000178039*^9, 3.676043066425128*^9}, 3.676119923021121*^9, 
   3.6761199933234243`*^9, 3.676120047826305*^9, 3.6761200996356983`*^9, 
   3.676120179761829*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"twokListKK", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.676119335161381*^9, 3.676119377895372*^9}}],

Cell[BoxData["0.011111111111111112`"], "Output",
 CellChangeTimes->{{3.67611934466803*^9, 3.676119378180551*^9}, 
   3.6761199230389757`*^9, 3.676119993352818*^9, 3.676120047872031*^9, 
   3.676120099667207*^9, 3.6761201797937593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lambdaNKK", "/", "omegaVKK"}]], "Input",
 CellChangeTimes->{{3.676119754575295*^9, 3.6761197689803753`*^9}, {
  3.67611980024853*^9, 3.676119803583373*^9}}],

Cell[BoxData["0.47618273803236505`"], "Output",
 CellChangeTimes->{3.676119769244062*^9, 3.6761198039537983`*^9, 
  3.676119923075087*^9, 3.676119993370977*^9, 3.676120047940929*^9, 
  3.676120099684183*^9, 3.676120179812201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["twoaListKK"], "Input",
 CellChangeTimes->{{3.6761198287254057`*^9, 3.676119832989471*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.00003573471582101408`", ",", 
   FractionBox["1", "100000"]}], "}"}]], "Output",
 CellChangeTimes->{3.676119833437253*^9, 3.6761199231082582`*^9, 
  3.6761199934091797`*^9, 3.676120047994926*^9, 3.676120099722362*^9, 
  3.676120179842676*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1434, 874},
WindowMargins->{{Automatic, 1605}, {141, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3683293132-9230663"->{
  Cell[3211, 100, 276, 5, 43, "Print",
   CellTags->"Info3683293132-9230663"]},
 "Info3676105896-6605098"->{
  Cell[2017727, 42065, 310, 5, 43, "Print",
   CellTags->"Info3676105896-6605098"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3683293132-9230663", 2053192, 42853},
 {"Info3676105896-6605098", 2053301, 42856}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 89, 1, 92, "Title"],
Cell[672, 25, 196, 5, 46, "Input"],
Cell[871, 32, 215, 4, 28, "Input"],
Cell[1089, 38, 210, 4, 28, "Input"],
Cell[CellGroupData[{
Cell[1324, 46, 100, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[1449, 51, 1759, 47, 141, "Input"],
Cell[3211, 100, 276, 5, 43, "Print",
 CellTags->"Info3683293132-9230663"],
Cell[3490, 107, 820, 11, 32, "Output"],
Cell[4313, 120, 816, 11, 28, "Output"]
}, Open  ]],
Cell[5144, 134, 190, 6, 28, "Input"],
Cell[CellGroupData[{
Cell[5359, 144, 410, 10, 46, "Input"],
Cell[5772, 156, 661, 9, 28, "Output"],
Cell[6436, 167, 684, 9, 32, "Output"]
}, Open  ]],
Cell[7135, 179, 623, 19, 28, "Input"],
Cell[CellGroupData[{
Cell[7783, 202, 1319, 38, 80, "Input"],
Cell[9105, 242, 547, 8, 32, "Output"],
Cell[9655, 252, 548, 8, 32, "Output"],
Cell[10206, 262, 548, 8, 32, "Output"],
Cell[10757, 272, 546, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11340, 285, 3083, 94, 199, "Input"],
Cell[14426, 381, 820, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15283, 397, 102, 1, 28, "Input"],
Cell[15388, 400, 790, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16215, 418, 441, 10, 46, "Input"],
Cell[16659, 430, 1603, 46, 57, "Output"],
Cell[18265, 478, 1265, 36, 199, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19567, 519, 586, 13, 46, "Input"],
Cell[20156, 534, 2150, 65, 46, "Output"],
Cell[22309, 601, 1793, 50, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24139, 656, 796, 21, 80, "Input"],
Cell[24938, 679, 2061, 64, 56, "Output"],
Cell[27002, 745, 1693, 47, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28732, 797, 943, 25, 97, "Input"],
Cell[29678, 824, 1966, 60, 56, "Output"],
Cell[31647, 886, 1616, 47, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33300, 938, 777, 21, 63, "Input"],
Cell[34080, 961, 2171, 60, 185, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36288, 1026, 433, 11, 46, "Input"],
Cell[36724, 1039, 844, 16, 41, "Message"],
Cell[37571, 1057, 1713, 50, 85, "Output"],
Cell[39287, 1109, 228, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39552, 1119, 860, 20, 80, "Input"],
Cell[40415, 1141, 680, 10, 32, "Output"],
Cell[41098, 1153, 682, 10, 28, "Output"],
Cell[41783, 1165, 682, 10, 28, "Output"],
Cell[42468, 1177, 676, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43181, 1192, 102, 1, 28, "Input"],
Cell[43286, 1195, 553, 10, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43876, 1210, 270, 6, 28, "Input"],
Cell[44149, 1218, 485, 7, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44683, 1231, 105, 1, 62, "Subchapter"],
Cell[44791, 1234, 531, 10, 28, "Input"],
Cell[45325, 1246, 552, 11, 28, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45914, 1262, 105, 1, 62, "Subchapter"],
Cell[46022, 1265, 174, 4, 30, "Text"],
Cell[46199, 1271, 249, 6, 46, "Input"],
Cell[46451, 1279, 4935, 124, 437, "Input"],
Cell[CellGroupData[{
Cell[51411, 1407, 1393, 36, 63, "Input"],
Cell[52807, 1445, 57612, 1136, 204, "Output"],
Cell[110422, 2583, 57612, 1136, 204, "Output"],
Cell[168037, 3721, 19477, 384, 70, "Output"]
}, Open  ]],
Cell[187529, 4108, 2078, 59, 63, "Input"],
Cell[CellGroupData[{
Cell[189632, 4171, 137, 2, 28, "Input"],
Cell[189772, 4175, 1827, 58, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191636, 4238, 301, 7, 28, "Input"],
Cell[191940, 4247, 9458, 253, 31, "Output"]
}, Open  ]],
Cell[201413, 4503, 4524, 116, 145, "Input"],
Cell[205940, 4621, 6664, 179, 196, "Input"],
Cell[212607, 4802, 2253, 60, 128, "Input"],
Cell[214863, 4864, 2355, 63, 111, "Input"],
Cell[217221, 4929, 135, 1, 30, "Text"],
Cell[217359, 4932, 1231, 35, 46, "Input"],
Cell[CellGroupData[{
Cell[218615, 4971, 300, 8, 28, "Input"],
Cell[218918, 4981, 280, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[219235, 4992, 1075, 29, 46, "Input"],
Cell[220313, 5023, 153, 2, 28, "Output"]
}, Open  ]],
Cell[220481, 5028, 6606, 175, 213, "Input"],
Cell[227090, 5205, 94, 1, 30, "Text"],
Cell[227187, 5208, 1528, 42, 46, "Input"],
Cell[CellGroupData[{
Cell[228740, 5254, 1271, 30, 63, "Input"],
Cell[230014, 5286, 57932, 1140, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287983, 6431, 1936, 44, 63, "Input"],
Cell[289922, 6477, 58000, 1141, 204, "Output"]
}, Open  ]],
Cell[347937, 7621, 739, 20, 28, "Input"],
Cell[348679, 7643, 100, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[348804, 7648, 7685, 206, 247, "Input"],
Cell[356492, 7856, 222684, 3913, 700, "Output"]
}, Open  ]],
Cell[579191, 11772, 235348, 4080, 666, 130170, 2354, "CachedBoxData", \
"BoxData", "Input"],
Cell[814542, 15854, 219013, 3810, 633, 129923, 2348, "CachedBoxData", \
"BoxData", "Input"],
Cell[CellGroupData[{
Cell[1033580, 19668, 5957, 161, 196, "Input"],
Cell[1039540, 19831, 148150, 2591, 600, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1187727, 22427, 355, 8, 46, "Input"],
Cell[1188085, 22437, 116, 1, 28, "Output"],
Cell[1188204, 22440, 114, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1188355, 22446, 3199, 92, 165, "Input"],
Cell[1191557, 22540, 508, 13, 28, "Output"],
Cell[1192068, 22555, 510, 13, 28, "Output"],
Cell[1192581, 22570, 297, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1192915, 22581, 7180, 195, 315, "Input"],
Cell[1200098, 22778, 113531, 2000, 600, "Output"]
}, Open  ]],
Cell[1313644, 24781, 92, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[1313761, 24786, 124, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[1313910, 24791, 530, 15, 28, "Input"],
Cell[1314443, 24808, 253, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1314733, 24818, 452, 13, 28, "Input"],
Cell[1315188, 24833, 168, 3, 28, "Output"]
}, Open  ]],
Cell[1315371, 24839, 220, 3, 28, "Input"],
Cell[CellGroupData[{
Cell[1315616, 24846, 958, 25, 63, "Input"],
Cell[1316577, 24873, 1501, 52, 46, "Output"],
Cell[1318081, 24927, 1155, 40, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1319273, 24972, 383, 11, 28, "Input"],
Cell[1319659, 24985, 88, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1319784, 24991, 246, 6, 28, "Input"],
Cell[1320033, 24999, 162, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1320232, 25006, 1367, 37, 46, "Input"],
Cell[1321602, 25045, 1370, 33, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1323009, 25083, 2301, 62, 80, "Input"],
Cell[1325313, 25147, 292, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1325642, 25158, 907, 24, 63, "Input"],
Cell[1326552, 25184, 1576, 53, 46, "Output"],
Cell[1328131, 25239, 1232, 42, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1329400, 25286, 2302, 62, 80, "Input"],
Cell[1331705, 25350, 272, 6, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332014, 25361, 907, 24, 63, "Input"],
Cell[1332924, 25387, 1555, 53, 46, "Output"],
Cell[1334482, 25442, 1211, 41, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335730, 25488, 2354, 63, 80, "Input"],
Cell[1338087, 25553, 316, 7, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1338440, 25565, 217, 5, 28, "Input"],
Cell[1338660, 25572, 495, 12, 69, "Output"]
}, Open  ]],
Cell[1339170, 25587, 96, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[1339291, 25592, 8472, 227, 264, "Input"],
Cell[1347766, 25821, 640739, 15516, 633, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1988542, 41342, 10234, 250, 264, "Input"],
Cell[1998779, 41594, 507, 11, 24, "Message"],
Cell[1999289, 41607, 507, 11, 24, "Message"],
Cell[1999799, 41620, 507, 11, 24, "Message"],
Cell[2000309, 41633, 530, 11, 24, "Message"],
Cell[2000842, 41646, 1771, 25, 28, "Output"]
}, Open  ]],
Cell[2002628, 41674, 138, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[2002791, 41679, 40, 0, 28, "Input"],
Cell[2002834, 41681, 903, 24, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2003774, 41710, 34, 0, 28, "Input"],
Cell[2003811, 41712, 95, 1, 32, "Output"]
}, Open  ]],
Cell[2003921, 41716, 5639, 153, 195, "Input"],
Cell[2009563, 41871, 105, 1, 30, "Text"],
Cell[2009671, 41874, 7059, 163, 488, "Input"],
Cell[2016733, 42039, 847, 18, 28, "Input"],
Cell[CellGroupData[{
Cell[2017605, 42061, 119, 2, 28, "Input"],
Cell[2017727, 42065, 310, 5, 43, "Print",
 CellTags->"Info3676105896-6605098"]
}, Open  ]],
Cell[2018052, 42073, 797, 20, 46, "Input"],
Cell[2018852, 42095, 672, 20, 28, "Input"],
Cell[2019527, 42117, 104, 1, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2019680, 42124, 73, 1, 62, "Subchapter"],
Cell[2019756, 42127, 1026, 30, 46, "Input"],
Cell[CellGroupData[{
Cell[2020807, 42161, 373, 11, 28, "Input"],
Cell[2021183, 42174, 208, 3, 28, "Output"]
}, Open  ]],
Cell[2021406, 42180, 882, 27, 28, "Input"],
Cell[CellGroupData[{
Cell[2022313, 42211, 300, 5, 63, "Input"],
Cell[2022616, 42218, 277, 4, 32, "Output"],
Cell[2022896, 42224, 259, 4, 28, "Output"],
Cell[2023158, 42230, 277, 4, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2023484, 42240, 94, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[2023603, 42245, 1060, 29, 63, "Input"],
Cell[2024666, 42276, 26833, 520, 559, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2051536, 42801, 176, 4, 28, "Input"],
Cell[2051715, 42807, 235, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2051987, 42815, 180, 3, 28, "Input"],
Cell[2052170, 42820, 229, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2052436, 42828, 104, 1, 28, "Input"],
Cell[2052543, 42831, 284, 6, 48, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
