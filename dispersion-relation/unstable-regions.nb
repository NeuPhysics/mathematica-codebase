(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    530971,      11460]
NotebookOptionsPosition[    520963,      11147]
NotebookOutlinePosition[    521354,      11164]
CellTagsIndexPosition[    521311,      11161]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Solving Unstable Regions", "Chapter",
 CellChangeTimes->{{3.7015371828969088`*^9, 3.701537187130934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input"],

Cell[BoxData["\<\"/Users/leima/github/neuphysics/codebase/mma/dispersion-\
relation\"\>"], "Output",
 CellChangeTimes->{3.701537424011178*^9, 3.701538466339785*^9, 
  3.701541989103736*^9, 3.7015531401155787`*^9, 3.701554397424584*^9, 
  3.701556690948188*^9, 3.702039323690695*^9, 3.702040702270215*^9, 
  3.702213254917283*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/linearstability.wl\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/dispersion-relation.wl\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7015374091285686`*^9, 3.701537420935751*^9}, {
  3.701538417017097*^9, 3.701538425392008*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spectra", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.6"}], "}"}], ",", 
      RowBox[{"-", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.3"}], "}"}], ",", "1"}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7015393148515244`*^9, 3.701539319013894*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9`", ",", "0.6`"}], "}"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.6`", ",", "0.3`"}], "}"}], ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.701539319336252*^9, 3.701541989992585*^9, 
  3.701542115412348*^9, 3.701553143161858*^9, 3.701554398892314*^9, 
  3.701556693865093*^9, 3.702039326246522*^9, 3.702040703782344*^9, 
  3.702213256887762*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"colorf", "=", 
   RowBox[{
    RowBox[{"Blend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Red"}], "}"}], ",", "#"}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorRainbow", "=", 
   RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colorTemp", "=", 
   RowBox[{"ColorData", "[", "\"\<Temperature\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotLegend", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"min_", ",", "max_"}], "}"}], ",", "n_", ",", "col_"}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"col", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"#", "-", "1"}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}]}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"#", "-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "#"}], "}"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"NumberForm", "[", 
             RowBox[{
              RowBox[{"Rescale", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "n"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"min", ",", "max"}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"4", ",", "2"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"3", ",", 
              RowBox[{"#", "-", ".5"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], "}"}]}], "}"}], "&"}],
      "/@", 
     RowBox[{"Range", "@", "n"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameTicks", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", ".5"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.701555344214299*^9, 3.701555348381015*^9}, {
  3.701555703348579*^9, 3.701555703702791*^9}, {3.701555874026392*^9, 
  3.701555890107246*^9}, {3.701556056051712*^9, 3.701556056496664*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.701548517344613*^9, 3.70154851735883*^9}}],

Cell[CellGroupData[{

Cell["Testing Function", "Subchapter",
 CellChangeTimes->{{3.701537436150845*^9, 3.701537438413725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
   RowBox[{"omegaR_", ",", "omegaI_", ",", "kR_", ",", "kI_", ",", 
    RowBox[{"spect_:", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9", ",", "0.6"}], "}"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.6", ",", "0.3"}], "}"}], ",", "1"}], "}"}]}], "}"}]}]}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqnLHSM", ",", "spectM"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"spectM", "=", "spect"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"eqnLHSM", "[", 
       RowBox[{"omega_", ",", "k_"}], "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"omega", "-", "#"}], ")"}], "&"}], "/@", 
       RowBox[{"ConAxialSymOmegaNMZA", "[", 
        RowBox[{
         RowBox[{"k", "/", "omega"}], ",", "spectM"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "\[Equal]", "0"}], ")"}], "&"}], "/@", 
         RowBox[{"ComplexExpand", "[", 
          RowBox[{"Re", "[", "\[IndentingNewLine]", 
           RowBox[{"eqnLHSM", "[", 
            RowBox[{
             RowBox[{"omegaR", "+", 
              RowBox[{"I", " ", "omegaI"}]}], ",", 
             RowBox[{"kR", "+", 
              RowBox[{"I", " ", "kI"}]}]}], "]"}], "\[IndentingNewLine]", 
           "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "\[Equal]", "0"}], ")"}], "&"}], "/@", 
         RowBox[{"ComplexExpand", "[", 
          RowBox[{"Im", "[", "\[IndentingNewLine]", 
           RowBox[{"eqnLHSM", "[", 
            RowBox[{
             RowBox[{"omegaR", "+", 
              RowBox[{"I", " ", "omegaI"}]}], ",", 
             RowBox[{"kR", "+", 
              RowBox[{"I", " ", "kI"}]}]}], "]"}], "\[IndentingNewLine]", 
           "]"}], "]"}]}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.70153921337053*^9, 3.701539350541111*^9}, 
   3.701539381285488*^9, {3.7015413303561573`*^9, 3.701541337299293*^9}, {
   3.701541373107155*^9, 3.701541399039501*^9}, {3.701541518472406*^9, 
   3.701541528136951*^9}, {3.701541569359823*^9, 3.701541576347829*^9}, {
   3.7015416845652943`*^9, 3.701541695118767*^9}, {3.701541730141405*^9, 
   3.701541805388299*^9}, {3.701541851964635*^9, 3.701541864328335*^9}, {
   3.701541914480502*^9, 3.701541937237644*^9}, {3.701541968406547*^9, 
   3.7015419741761427`*^9}, {3.701542010641048*^9, 3.7015420188152847`*^9}, {
   3.701542050392865*^9, 3.701542091966353*^9}, {3.701542130293229*^9, 
   3.70154214178729*^9}, {3.701542213278689*^9, 3.701542306287776*^9}, {
   3.70154256758972*^9, 3.701542575389977*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
  RowBox[{"1", ",", "0", ",", "kreal", ",", "kimag"}], "]"}]], "Input",
 CellChangeTimes->{
  3.701541942769525*^9, {3.7015420635534973`*^9, 3.701542066341236*^9}, 
   3.701542579578576*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"1", "-", 
               FractionBox[
                RowBox[{"0.0225`", " ", 
                 TemplateBox[{"5"},
                  "OutputSizeLimit`Skeleton",
                  DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton",
                 DisplayFunction->(FrameBox[
                   
                   RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                   Background -> GrayLevel[0.75], 
                   BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 1, 
                   FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]], 
               "+", 
               TemplateBox[{"17"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               "+", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton",
                DisplayFunction->(FrameBox[
                  RowBox[{
                   "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                  Background -> GrayLevel[0.75], 
                  BaseStyle -> {
                   "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                  Baseline, ContentPadding -> False, FrameMargins -> 1, 
                  FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
               "+", 
               RowBox[{
                FractionBox["1", "4"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  FractionBox["1", "2"], " ", 
                  RowBox[{"Arg", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}]}], "]"}]}], "]"}], " ", 
                SqrtBox[
                 RowBox[{
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"0.09`", " ", "kimag"}], 
                    RowBox[{
                    SuperscriptBox["kimag", "2"], "+", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{"\" \[CenterEllipsis]\"", #, 
                    "\"\[CenterEllipsis] \""}], Background -> GrayLevel[0.75],
                     BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 
                    7]& )]}]]}], "+", 
                    TemplateBox[{"20"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}],
                     ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], "2"]}]], " ", 
                  SqrtBox[
                   RowBox[{
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    TemplateBox[{"1"},
                    "OutputSizeLimit`Skeleton",
                    DisplayFunction->(FrameBox[
                    
                    RowBox[{
                    "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                    Background -> GrayLevel[0.75], 
                    BaseStyle -> {
                    "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                    ShowStringCharacters -> False}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 1, 
                    FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
                    ")"}], "2"]}]]}]]}]}], "\[Equal]", "0"}], ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )]}], 
            "}"}], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{85., {3., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{74., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 11, 26527286655270123334, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{83., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 11, 26527286655270123334, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{62., {1., 11.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 11, 26527286655270123334, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{111., {1., 12.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[11]]], "Output",
 CellChangeTimes->{
  3.701541474130786*^9, 3.701541539405673*^9, 3.701541580646014*^9, 
   3.7015418260676823`*^9, {3.70154194336345*^9, 3.701542021133183*^9}, {
   3.7015420682158947`*^9, 3.701542143985423*^9}, {3.701542214844356*^9, 
   3.701542309301991*^9}, 3.701542581590707*^9, 3.7020393377060633`*^9, 
   3.702040708238402*^9, 3.702213414303372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
     RowBox[{"0.8", ",", "0", ",", "kreal", ",", "kimag"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kreal", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kimag", ",", "1"}], "}"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
     RowBox[{"0.8", ",", "0", ",", "kreal", ",", "kimag"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"kreal", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kimag", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7015414076857433`*^9, 3.701541412338191*^9}, {
  3.701541444649618*^9, 3.701541456328382*^9}, {3.70154154349437*^9, 
  3.701541620860547*^9}, {3.701542583507107*^9, 3.7015425845672493`*^9}, {
  3.702040727093924*^9, 3.70204073239874*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7015414568590307`*^9, 3.701541545722007*^9, 3.701541588544059*^9, 
   3.7015416211714487`*^9, 3.701541827386552*^9, 3.7015422157632103`*^9, 
   3.701542310689334*^9, 3.7015425855011044`*^9, 3.702039340092498*^9, {
   3.7020407139746733`*^9, 3.7020407332883873`*^9}, 3.702213455483425*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"kreal", "\[Rule]", "2.1024134467634736`"}], ",", 
   RowBox[{"kimag", "\[Rule]", "0.0004165570360325173`"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.701541456865068*^9, 3.701541545845587*^9, 3.701541588553657*^9, 
   3.701541621179553*^9, 3.701541827399105*^9, 3.701542215769876*^9, 
   3.701542310696486*^9, 3.7015425855116873`*^9, 3.7020393400993013`*^9, {
   3.702040713983618*^9, 3.702040733297019*^9}, 3.7022134554944277`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"kreal", "\[Rule]", "2.6704160687243803`"}], ",", 
   RowBox[{"kimag", "\[Rule]", 
    RowBox[{"-", "9.958320538300395`*^-16"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.701541456865068*^9, 3.701541545845587*^9, 3.701541588553657*^9, 
   3.701541621179553*^9, 3.701541827399105*^9, 3.701542215769876*^9, 
   3.701542310696486*^9, 3.7015425855116873`*^9, 3.7020393400993013`*^9, {
   3.702040713983618*^9, 3.702040733297019*^9}, 3.702213456156239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
     RowBox[{"omegareal", ",", "omegaimag", ",", 
      RowBox[{"-", "2"}], ",", "0", ",", "spectBox2"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"omegareal", ",", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "0.6"}], ",", 
       RowBox[{"-", "10"}], ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"omegaimag", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7022134637700863`*^9, 3.702213518462838*^9}, {
  3.702213616263872*^9, 3.702213669312213*^9}, {3.702213916842517*^9, 
  3.702213929481553*^9}, {3.7022140015595427`*^9, 3.702214030535716*^9}, {
  3.7022141985984898`*^9, 3.7022142068415327`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "reged"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The point \[NoBreak]\\!\\({\\(\\(-0.5`\\)\\), \
0.3715685862275334`}\\)\[NoBreak] is at the edge of the search region \
\[NoBreak]\\!\\({\\(\\(-10.`\\)\\), \\(\\(-0.5`\\)\\)}\\)\[NoBreak] in \
coordinate \[NoBreak]\\!\\(1\\)\[NoBreak] and the computed search direction \
points outside the region. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/reged\\\", ButtonNote -> \
\\\"FindRoot::reged\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.702214011119063*^9, 3.702214031619527*^9}, 
   3.702214209171156*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"omegareal", "\[Rule]", 
    RowBox[{"-", "0.5`"}]}], ",", 
   RowBox[{"omegaimag", "\[Rule]", "0.3715685862275334`"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.702213486858171*^9, 3.702213519692966*^9, {3.702213619850254*^9, 
   3.7022136393138123`*^9}, 3.702213670345475*^9, 3.702213930582081*^9, {
   3.702214002770012*^9, 3.702214031630185*^9}, 3.702214209181512*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"omega", ",", 
    RowBox[{
     RowBox[{"ConAxialSymOmegaNMZA", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], "/", "omega"}], ",", "spectBox2"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "/.", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"ConAxialSymOmegaNMZA", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "/", "omega"}], ",", "spectBox2"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "omega"}], ",", 
    RowBox[{"{", 
     RowBox[{"omega", ",", 
      RowBox[{
       RowBox[{"-", "1.2"}], "-", 
       RowBox[{"1", "I"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7022140691270638`*^9, 3.7022140788687468`*^9}, {
  3.702214178706853*^9, 3.7022141804740868`*^9}, {3.7022142594510403`*^9, 
  3.70221426965641*^9}, {3.702214313482153*^9, 3.7022143176049356`*^9}, {
  3.702214840302635*^9, 3.702214841588173*^9}, {3.702215495682536*^9, 
  3.702215525751816*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"3.8957680641656867`*^-17", "-", 
    RowBox[{"8.409815523868038`*^-18", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"2.6296434433118358`*^-18", "-", 
    RowBox[{"5.67662547861092`*^-19", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.702214270312776*^9, 3.702214314085491*^9, 3.7022143455740633`*^9, {
   3.702214841958633*^9, 3.7022148452567263`*^9}, {3.7022155015856237`*^9, 
   3.7022155262562723`*^9}, 3.702224614740147*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Solving Continuous Spectrum", "Chapter",
 CellChangeTimes->{{3.70084722820671*^9, 3.700847235401307*^9}}],

Cell["Solve box spectrum", "Text",
 CellChangeTimes->{{3.70154236888769*^9, 3.701542372167598*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"spectBox", "=", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9", ",", "0.3"}], "}"}], ",", "1"}], "}"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"spectBox2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.9", ",", "0.6"}], "}"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.6", ",", "0.3"}], "}"}], ",", 
      RowBox[{"-", "3"}]}], "}"}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.701542540653738*^9, 3.701542555229548*^9}, {
  3.701542912470621*^9, 3.70154292088453*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.9`", ",", "0.3`"}], "}"}], ",", "1"}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.7015425463094997`*^9, 3.701542555733724*^9}, 
   3.701542921568821*^9, 3.7015531525065413`*^9, 3.701554405674522*^9, 
   3.701556704723732*^9, 3.702039343021907*^9, 3.702041798367133*^9, 
   3.7022141848366947`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.9`", ",", "0.6`"}], "}"}], ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.6`", ",", "0.3`"}], "}"}], ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7015425463094997`*^9, 3.701542555733724*^9}, 
   3.701542921568821*^9, 3.7015531525065413`*^9, 3.701554405674522*^9, 
   3.701556704723732*^9, 3.702039343021907*^9, 3.702041798367133*^9, 
   3.70221418484967*^9}]
}, Open  ]],

Cell["They can both be imaginary.", "Text",
 CellChangeTimes->{{3.70154310564843*^9, 3.7015431126149073`*^9}}],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
          RowBox[{
          "omegareal", ",", "omegaimag", ",", "kreal", ",", "kimag", ",", 
           "spectBox"}], "]"}], "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"kreal", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kimag", ",", "1"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"omegareal", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"omegaimag", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7015425896299953`*^9, 3.701542645187776*^9}, {
   3.7015426771500063`*^9, 3.7015427511427917`*^9}, {3.701542948975833*^9, 
   3.7015429517724667`*^9}, 3.7015430968917828`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
       RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
           RowBox[{
           "omegareal", ",", "omegaimag", ",", "kreal", ",", "kimag", ",", 
            "spectBox2"}], "]"}], "[", 
          RowBox[{"[", "#", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"kreal", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"kimag", ",", "1"}], "}"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"omegareal", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"omegaimag", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "//", "Grid"}]], "Input",
 CellChangeTimes->{{3.701542958373035*^9, 3.701543021701974*^9}, {
   3.701543054172738*^9, 3.7015430552843733`*^9}, 3.7015431273608837`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701542961369488*^9, {3.701542995035771*^9, 3.7015430241207333`*^9}, 
   3.7015430572502737`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701542961369488*^9, {3.701542995035771*^9, 3.7015430241207333`*^9}, 
   3.70154305889815*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701542961369488*^9, {3.701542995035771*^9, 3.7015430241207333`*^9}, 
   3.7015430597105017`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701542961369488*^9, {3.701542995035771*^9, 3.7015430241207333`*^9}, 
   3.701543059765944*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.324231768971352`"}], ",", 
           RowBox[{"-", "3.144186981317871`"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5.237080923807955`"}], ",", 
           RowBox[{"-", "1.2384569181463807`"}]}], "}"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3.324231768971352`"}], ",", "3.144186981317871`"}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "5.370051019219371`"}], ",", "1.1715111415485069`"}], 
          "}"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.2937349919406068`", ",", 
           RowBox[{"-", "0.29373499543129206`"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.7234473381979312`", ",", 
           RowBox[{"-", "2.2735826694640746`"}]}], "}"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.35731993102984444`", ",", "0.35731993102985177`"}], 
          "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.9999999999999951`", ",", "1.`"}], "}"}]}], "}"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7015429661752043`*^9, {3.7015429998043833`*^9, 3.701543028949861*^9}, 
   3.7015430620527287`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.7015429190989733`*^9}],

Cell["Fix omega to be real, generate a list of omega\[CloseCurlyQuote]s", \
"Text",
 CellChangeTimes->{{3.7015431181038523`*^9, 3.701543121350239*^9}, {
   3.701621954043066*^9, 3.701621957819606*^9}, 3.701621998633396*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listofOmega", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "4"}], ",", "4", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"1", "+", 
   RowBox[{"Floor", "[", 
    RowBox[{
     RowBox[{"Length", "@", "listofOmega"}], "/", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listofOmega", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"listofOmega", ",", 
     RowBox[{"{", 
      RowBox[{"1", "+", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "@", "listofOmega"}], "/", "2"}], "]"}]}], "}"}]}],
     "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7015435408539753`*^9, {3.701543594713319*^9, 3.701543602141407*^9}, {
   3.7015436405353737`*^9, 3.701543651407277*^9}, {3.701543693894885*^9, 
   3.7015437512211113`*^9}, {3.701551968070483*^9, 3.70155198112502*^9}, 
   3.7015531983599453`*^9, 3.701556721075285*^9, 3.701626268825283*^9}],

Cell["Fix k to be real, generate a list of k\[CloseCurlyQuote]s.", "Text",
 CellChangeTimes->{{3.7016219843939323`*^9, 3.7016219956149263`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listofK", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"-", "4"}], ",", "4", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listofK", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"listofK", ",", 
     RowBox[{"{", 
      RowBox[{"1", "+", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "@", "listofK"}], "/", "2"}], "]"}]}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7016220053132753`*^9, 3.7016220392144947`*^9}, {
  3.701622700177549*^9, 3.701622700312228*^9}, {3.7016238993303213`*^9, 
  3.701623899664002*^9}}],

Cell[CellGroupData[{

Cell["spectBox", "Section",
 CellChangeTimes->{{3.701622844665099*^9, 3.7016228459769697`*^9}}],

Cell["Calculate spectBox", "Text",
 CellChangeTimes->{{3.701622056105649*^9, 3.7016220638029547`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
     RowBox[{
     "omegareal", ",", "omegaimag", ",", "1", ",", "0", ",", "spectBox"}], 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"omegareal", ",", "omegaimag"}], "}"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.701624973648198*^9, 3.7016250225008993`*^9}, {
   3.7016250652692757`*^9, 3.701625065485973*^9}, {3.7016251147718573`*^9, 
   3.701625128518251*^9}, 3.7016252374429693`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.701626276589816*^9, 3.702041827397573*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBoxOmegaReal", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"omegareal", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
        RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
            RowBox[{
            "omegareal", ",", "0", ",", "kreal", ",", "kimag", ",", 
             "spectBox"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"kreal", ",", 
              RowBox[{"omegareal", "/", "0.6"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"kimag", ",", 
              RowBox[{"omegareal", "/", "0.6"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"omegareal", ",", "listofOmega"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.701626166662393*^9, 3.7016262083642073`*^9}, {
  3.701626240886084*^9, 3.701626259818406*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701626229112166*^9, {3.7016262606766567`*^9, 3.701626278253532*^9}, 
   3.7020418299976*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701626229112166*^9, {3.7016262606766567`*^9, 3.701626278253532*^9}, 
   3.702041830440982*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701626229112166*^9, {3.7016262606766567`*^9, 3.701626278253532*^9}, 
   3.70204183085428*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701626229112166*^9, {3.7016262606766567`*^9, 3.701626278253532*^9}, 
   3.7020418308990602`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "jsing"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a singular Jacobian at the point \[NoBreak]\\!\
\\({kreal, kimag}\\)\[NoBreak] = \[NoBreak]\\!\\({1.0761827824938461`, \
1244.8776970976671`}\\)\[NoBreak]. Try perturbing the initial point(s). \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindRoot/jsing\\\", \
ButtonNote -> \\\"FindRoot::jsing\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701626229112166*^9, {3.7016262606766567`*^9, 3.701626278253532*^9}, 
   3.70204186626256*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701626229112166*^9, {3.7016262606766567`*^9, 3.701626278253532*^9}, 
   3.702041882949346*^9}]
}, Open  ]],

Cell["\<\
Each of the solutions contains two sets, the first one is for MZA+ while the \
second one is for MZA-.\
\>", "Text",
 CellChangeTimes->{{3.7020420002410383`*^9, 3.7020420230551567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBoxOmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBoxOmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"%", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Imaginary \[Omega] of MZA+ Solutions\>\""}], 
    ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<omega\>\"", ",", "\"\<k.imag\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBoxOmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBoxOmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Imaginary \[Omega] of MZA+ Solutions\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<omega\>\"", ",", "\"\<k.imag\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.701626488621643*^9, 3.701626507508197*^9}, {
  3.7016265465702267`*^9, 3.701626584133668*^9}, {3.702041947491437*^9, 
  3.702041954774434*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0g1MU1cUB/BnKW0pBboEhgrbRCaLG0Ghmjle5z1b3ACRtJoFoS7iBwKb
MYgIQoiutowNIfKpBcoCuo+sS9jSLcsolfaaYYyGkmadH+CMsCZqAwkFGQGp
uPbdc5KXl3/uOb97381LOlK+75iI4zht8Am9WSnpv2U/f0u8eQ6VUDG01Jpc
u5qZ4igRKpoG3jv2+T+iTEdPd6iiaNcG3xX95TiHazRUCqo5dfNZxSH/MPMU
1GxrmVZJpOhF0t83fzxicu5GT06LtsQvJK4H9CJo9cqA2daQgp6MNh3Peiqv
3Opgnoyervq0Prd3F3pSmu3z1Phfi0dPQrWqqtnl0u3ohdPJmaa+/Fc+dAjc
qJgW1FWm18VEoCemlvN9GRmSLPTC6A1vfV5R3A70RLR/T8QLlduqZt4aesjc
w7942TTIPI7q96ssW/RlmXiBlKOuTsk9o53Nrzq5yf/ysh5+x7P+gJPTDw4a
HtZeyxD2W3Fy3E8Ti6YadZfgLwfzfc3YnTY145aCGUafJ59WM28xmLkZcWec
mnkLwTw5fKH4hJp5z4L5G9ffb+waZt5cqF/+yFKDnj+UtU8+suB5ZkK5P2f/
Azvr94Wy/n7hD/ZiYb/HTuGjNnqGtgq+V8jc2mkb8yZZ/lXDs/lxIeuzk+ys
3xPKtPSDN9WtwvotYX1OtpHXC9kmZHdSmp2yTOTl4RfmDROkn/UTb2PAGJno
J+iRr2538NdLOWDr4wSy33lOzUbA85B1m6V/Gio7YAc7L9m7T3P7wXQflLHv
IboGfmj9UAvO+4grubAtPksHbnYf5HXl2QHlbBF6fvI0tX02d+9R6GX3SVrm
X82/OlsC29h9kxMTSSdj7x7H+QUymPDlat6mk7jfIjl4pq3d2nMKvSWSo2uW
Hq2sQm+ZzH+Sml5HzqG3QnZ/PVUy/e459AJk5ka+qHVKj94q4RPPWK9QA3oc
FBxMUChv1cMY+x8hf4RW+70NgP8rGO6dPUzWNuK8CGKHupcdA024Xxh43krm
EzdcRE8MueXN5brCVvTE8P7UxdT0X9rQC4fx8x63q78dPQlMKMdqPtN2oCcF
6d1G45qFDvRk8FJb0FNh6kRPBrGHixpH+EvoRUDvzjT3nkeX0JNDxvWdOVHG
y+hFQnH1nYYfU0zoKSD67d+m0sZM6CmguLmldq6iC70osAesCb64bvSi4Ymk
QPOHrRu9GPjC+JcuW2NGTwnfp1jCDiyZ4X8LWiU3
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"k.imag\"", TraditionalForm], None}, {
     FormBox["\"omega\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"Imaginary \[Omega] of MZA+ Solutions\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-1.391754011152124*^-8, 2042.9646389383308`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.701626492947048*^9, 3.7016265079144363`*^9}, 
   3.701626585432165*^9, {3.702041947783181*^9, 3.7020419554566936`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwt0w1MU1cUB/BHKZ8t0AKC8mHEKAFcNkS20VLshQhBNFEZRh2BbITx4dBu
mg7Q1BR00k2DbmgU1CgEjQozNMEvqL2HCQYnkBHnDGGmEEYnoO4JiO1AXN+7
5yYvL/+8c3/nvvvejSrQZX8l4Thuq+sS7mwoYFXwodwt6jBYJ44ASLx/ebS1
bhkUicMfZAnLTnu/XAoN9cLwg6Pd5r3FGUuhv08Ycth1WEXuXQwF5slhhA99
EOkMQU8GY9854wzZIej5wm9lGQ5byxL0fKD09WjTco8l6HnDh3rl6iP5weh5
w74Y2eTz20HoecEnulT3jcog9Dzh1+tP15h3B6LnAfk1d+0R3UoQuT4p/GiI
LjsVrkRPCo7KqlaFXoGeO6S+jy0MvhCAngS+yQybDdnqj54bfKZTjE1J/NDj
YM+5+LzFmzL0OKDdeVJ5qS/OX6TNpqavS8N9sH6BOuwF5roBL0gQ+83T5LU1
mj+rPOGs6DvpQf3uiPlED/QctDLWPL79uTt6c/RWz6cFDT9J0Julpn/UM+np
bujN0JoMSWAO/54y7zVtifGK7tn5jjKPp5Gvvu2I6PqPsvkvaMupcP2hOAfW
T9DhyopjsT+/oYViPzttLjqc/2RhmsaL/hit2Kbzh13/ojdCA1WNc13aSZw/
RAerc/acmPob6x/Tt5sL0qYf2OhJ8flDmpbZK/sj4Ak1ivkuTSh5kWJq66HA
slZAU78Mtlxi9VrWJrMDPTF3rM3WsOdDYraYCztxPWIuBNKZxNYrZB+/O99b
Stj7uLJREfSRCf0JsX5FaVby72w/hFziPLBdg/slZEPYmTTLebafQj5W/bBc
k8j2W8ht9Y9mcP6s4NuiGpXYb07LGa39xv25Kfg9tVyF2vh5e10K85yueofk
anMvevOuDMmZTUcszFtw5d76faHpGuYtujIxj5ra8X054lpurrlfbRlg/6Mr
y2v356o78X8lHFyljw15yWy+hHDxiQpa7qZm/dwJV9LecEUepcLzQLiBW/d9
bbqPmSclZHrNq5cSw0o8T2SknN85WN2I6/EkffzF4gO3uy3M8yKDQ3tjin5R
WfG8kraaZ/wEv8nKPG9Se1xfvMO+3ornnXzRoh+qm3zTyTxfElmRNFBl87Ay
T0b+Gq7t6ju3gPsnJ60rfe44bqjQkxNpSG3o29Qs9PzI5Q2KK+OTCVbm+RP7
Dx8c3Zy1YT3zAojnDdO1625JuD4FecTHjfNTT+/9D12gMQI=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"k.imag\"", TraditionalForm], None}, {
     FormBox["\"omega\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"Imaginary \[Omega] of MZA+ Solutions\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-6.556943349428398, 9.44837469857238*^-9}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.701626492947048*^9, 3.7016265079144363`*^9}, 
   3.701626585432165*^9, {3.702041947783181*^9, 3.7020419555283957`*^9}}]
}, Open  ]],

Cell["This is a weird result", "Text",
 CellChangeTimes->{{3.701626905184024*^9, 3.7016269103183937`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"omegareal", "/", "0.9"}], ",", 
     RowBox[{"{", 
      RowBox[{"omegareal", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
   RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
       RowBox[{
       "omegareal", ",", "0", ",", "kreal", ",", "kimag", ",", "spectBox"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"kreal", ",", 
         RowBox[{"omegareal", "/", "1.9"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"kimag", ",", 
         RowBox[{"omegareal", "/", "0.9"}]}], "}"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], "/.", 
  RowBox[{"omegareal", "\[Rule]", 
   RowBox[{"-", "1.5"}]}]}]], "Input",
 CellChangeTimes->{{3.701626923520562*^9, 3.701626964572461*^9}, {
   3.7016274202893*^9, 3.701627420630496*^9}, {3.7016274531761093`*^9, 
   3.701627461949274*^9}, 3.701627502300914*^9, {3.701628297804442*^9, 
   3.701628356523728*^9}, 3.701628467603889*^9, {3.7016294605549192`*^9, 
   3.701629489343565*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "srect"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value \[NoBreak]\\!\\(0.5263157894736842`\\\\ omegareal\\)\
\[NoBreak] in search specification \[NoBreak]\\!\\({kreal, \
omegareal\\/1.9`}\\)\[NoBreak] is not a number or array of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindRoot\\\", ButtonNote -> \
\\\"FindRoot::srect\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.70162696495759*^9, 3.70162742268674*^9, {3.701627488023911*^9, 
   3.7016275027042103`*^9}, {3.701628298732642*^9, 3.701628356929536*^9}, {
   3.701629462804347*^9, 3.701629490062725*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(FindRoot[\\(\\(\\(\\(\\(\\(ConAxialSymOmegaKMZAEqn[\\\
(\\(omegareal, 0, kreal, kimag, spectBox\\)\\)]\\)\\) \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\\), \\(\\({\\(\\({kreal, omegareal\\/1.9`}\\)\\), \
\\(\\({kimag, omegareal\\/0.9`}\\)\\)}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is \
neither a list of replacement rules nor a valid dispatch table, and so cannot \
be used for replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", ButtonNote -> \
\\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.70162696495759*^9, 3.70162742268674*^9, {3.701627488023911*^9, 
   3.7016275027042103`*^9}, {3.701628298732642*^9, 3.701628356929536*^9}, {
   3.701629462804347*^9, 3.7016294900747433`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.6666666666666667`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.5`"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.6666333954701886`"}], ",", 
     RowBox[{"-", "2.4452163619712953`*^-17"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7016269654274282`*^9, 3.701627423130349*^9, {3.7016274884683647`*^9, 
   3.701627503129122*^9}, {3.7016282991806507`*^9, 3.701628357361319*^9}, {
   3.701629463247463*^9, 3.701629490498741*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBoxKReal", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kreal", ",", "0"}], "}"}]}], "}"}], "/.", 
        RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
            RowBox[{
            "omegareal", ",", "omegaimag", ",", "kreal", ",", "0", ",", 
             "spectBox"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"omegareal", ",", 
              RowBox[{"0.6", "kreal"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"omegaimag", ",", 
              RowBox[{"0.6", "kreal"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "listofK"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.701622062362207*^9, {3.7016226099608803`*^9, 3.701622707483317*^9}, {
   3.7016232007841597`*^9, 3.7016232031879063`*^9}, 3.70162525643237*^9, {
   3.701625591221794*^9, 3.70162561358036*^9}, {3.701625760851593*^9, 
   3.701625766441931*^9}, {3.701625915183466*^9, 3.701625927849534*^9}, {
   3.7016261424797087`*^9, 3.701626156394458*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.701625967407576*^9, 3.701626193689025*^9, 
  3.7016322546370077`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.701625967407576*^9, 3.701626193689025*^9, 
  3.701632255864843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "0"}], "}"}]}], "}"}], "/.", 
   RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
       RowBox[{
       "omegareal", ",", "omegaimag", ",", "kreal", ",", "0", ",", 
        "spectBox"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"omegareal", ",", 
         RowBox[{"0.9", "kreal"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"omegaimag", ",", 
         RowBox[{"0.9", "kreal"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "/.", 
  RowBox[{"kreal", "\[Rule]", "0.3"}]}]], "Input",
 CellChangeTimes->{{3.701632235852425*^9, 3.7016322458275414`*^9}, 
   3.701632330435397*^9, {3.7016323854548817`*^9, 3.701632389819521*^9}, {
   3.701632443718698*^9, 3.701632445762597*^9}, {3.701632490064673*^9, 
   3.7016325097026157`*^9}, {3.7016326128017263`*^9, 3.70163261311012*^9}, {
   3.701632688416719*^9, 3.7016326888286047`*^9}, {3.701632740245363*^9, 
   3.701632740700542*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "srect"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Value \[NoBreak]\\!\\(0.9`\\\\ kreal\\)\[NoBreak] in \
search specification \[NoBreak]\\!\\({omegareal, \\(\\(0.9`\\\\ \
kreal\\)\\)}\\)\[NoBreak] is not a number or array of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindRoot\\\", ButtonNote -> \
\\\"FindRoot::srect\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701632285665991*^9, 3.701632330861874*^9, {3.701632386257512*^9, 
   3.701632390108967*^9}, 3.7016324460064*^9, {3.7016324908194237`*^9, 
   3.7016325100955343`*^9}, 3.701632613629568*^9, 3.7016326891088963`*^9, 
   3.7016327412317457`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(FindRoot[\\(\\(\\(\\(\\(\\(ConAxialSymOmegaKMZAEqn[\\\
(\\(omegareal, omegaimag, kreal, 0, spectBox\\)\\)]\\)\\) \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\\), \\(\\({\\(\\({omegareal, \
\\(\\(0.9`\\\\ kreal\\)\\)}\\)\\), \\(\\({omegaimag, \\(\\(0.9`\\\\ \
kreal\\)\\)}\\)\\)}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.701632285665991*^9, 3.701632330861874*^9, {3.701632386257512*^9, 
   3.701632390108967*^9}, 3.7016324460064*^9, {3.7016324908194237`*^9, 
   3.7016325100955343`*^9}, 3.701632613629568*^9, 3.7016326891088963`*^9, 
   3.701632741301352*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.04313362850595578`"}], ",", 
     RowBox[{"-", "6.453268935878052`*^-22"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7016322861451902`*^9, 3.701632331336129*^9, {3.7016323867008457`*^9, 
   3.7016323905592203`*^9}, 3.7016324464642677`*^9, {3.70163249127943*^9, 
   3.7016325105251017`*^9}, 3.70163261404218*^9, 3.701632689539625*^9, 
   3.701632741666473*^9}]
}, Open  ]],

Cell["MZA+ solutions for spectBox", "Text",
 CellChangeTimes->{{3.701622569133789*^9, 3.701622574901918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Imaginary \[Omega] of MZA+ Solutions\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k\>\"", ",", "\"\<omega.imag\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7016324129156313`*^9, 3.701632413121758*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lH8slGEcwF8nOT/itGkpaxJLxTJZyXHvbbSahCj5NZkJY6JmSh3dX+kv
sdSimzBZzfxcN/G+7723kmWh091qjLL8SmMujFSuPM/367vde/vs+X4/3+d5
3ud596fnx16RMAwTs/kj/xAy/eZDPdqylztGw5mwsueIN5dJw4lwms8lf66m
msQOwnpj0UlucICEI2GPIbtwDnyU9Z7j0ehzoL6GJ4nos6f9Zj5koM+O5r91
v4Y+KeG65tsq9FFWGpl76LMl7N9RUoW+7bR+srsefTZ0Pv9c2ziqG9hGuKKj
nkMfZbPP9Dv0WVNfbPcn9Emor2VjCn1WhE0DVcvoYwh36i5LeNxA/fNXucdv
JQcJUG8RzS01YYmNDwTI/yu6e4+MtAZohQDa749oUr04P9o/LDym/nWRsQia
PNMPAXS/xLHWF27tXhId+FbFm5FlewyDMh34VkSSVbCRHAK+ZcqGi5oQ8P0U
pcV9Sdrp6+gziyGWrLsmq0c4n3mS7xWRGov5c4QbT7dq+Qzab4aw+vdiBe9P
/ZOE18dnZnG9E2L8QsqzHO08D/UjZHzX+6O9mG8UhbNxtcPLn8UKOt6/Oa5U
SWfLeTXlbpEcn+yUOV4PzEZ1TvS8jH0t1kE+q40vKr5f3iWijz1hrsrSuDbh
+AibsTM37lxeswLnw+6r2Z1f6WcSgmC+7NKb6sWAr566bFgPS86TOUHKQ/0c
G7mQYFBmnBIMsB/sHYVa0TD1DddnJvkx0VHjIRrYT7axq0Bo9rXXBcJ+s7Kw
0o9ua2asX2EDal32+60ZBei3yl51GJX5hWq33ifLLznXf5mvFMC3zjquWB2M
PHRaAN8f0k/dF/qcA99fyjahFRz4LISZpJJCPL+Mkjx8XeO5ITiPlJlZn63z
Svn7AQ851Esoe/zylkM/a8qBCk853gfK4dF75OADHht3keN9ouz40BZ92ykX
dlmCwWdLeWJ2ORjvq/JMm8rVp7deAJ9Uma2JP+wU3CPgfSf5pRd0zTz47Am7
L9Y08OBzINyuCqzG9+FI2JCuqOTBR7mdN5bx+D0iLEt9qkafE+G0zJwb6HMm
rHZpKkCfjM43YjqL/w8VsQfr
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"omega.imag\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"Imaginary \[Omega] of MZA+ Solutions\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-0.37425651990377756`, 8.173871382735054*^-7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7016324150275173`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Imaginary \[Omega] of MZA+ Solutions\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k\>\"", ",", "\"\<omega.imag\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.701622579366866*^9, 3.701622580246928*^9}, {
  3.701622861174822*^9, 3.701622885680624*^9}, {3.7016242286615868`*^9, 
  3.701624236013036*^9}, {3.701632344003994*^9, 3.701632351803302*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lH9IU1EUx5+bzuWvSUgZEVhUWGCuzOq9vfVeQVAUIpFkQSRDTcpIEGxF
xiBQGkXG+sNqC9E/pJDUIppurzcTwkjNDAQpaSEOFSnFH2nK6r37PbswLh/O
OZ9z7333bqvj2ukyA8dxhdpPnzHSQ5j9fB4bFuI+vpyNNOLv/JPH+kglnuUH
+vWRQmwUMMd4kwBfMjhkFeBLIj4mwLeO8i8I8JnBJdXkI3a5yZcILm4mnwnc
10W+BIoPC0zXHw+unCYfcZbRBp8RfH+zDT4DuCDPBl8c+NdxG3wcY9dgsY0O
UGPv7GffexH1UZWTD4RrnTl25K+pXOb1zqQXF+37WL9Vlat9a3r3021vZP4V
lXs5Vxe1vLFDt6zKtbcXp8d+2OFbUuUj2ed8SuJh+BZU/XSebXCI8M3rHKou
PyvCN6f1/3sye/fzIH0nlWs44+35tF5B/Yye77pjygwif0rnnUUTnmAp6xfR
uePfyMOglfnHdfYcTRgR4QtrHMofbp20oX5Uj09aPd2U/1VlaTe+CA0s/pGt
77e8R3Qx7mLxaWlIDIElll9nCDQhX+cST3uFSD6d/cOWGhHxUclcnzwRcfMS
rUfiJtpmDqbWKIewXslatiN3MRhRKrAflpfV1GxD/ZTG219XN2wLDuE89Pjy
2Mb2AJ0X6z/wdFT04jylcODbnOT4oOzHeUvyltxOV6BFQf2CxHXsUqc8Tuq3
JHFZva9afCcU+p4SFx5/4L6XocC3ovnlnOaoPwjfKu1jXoBvLbYvAb4oONxL
95eTMbUKg7iP4NBduv9xFL9K9QbiAgH9jMR7Y++BOIN8MV6m955AHObhMxH3
8fAlEjfxmM0yZ77k667PV+DT2OGsqm9rtNN7Z/nZtxwifEmMM/5cFuFLZuys
ukL3LYWx31shwgeO7ykV6f+IsTdSQr40xpVL58lnYXxKKCJfOuObjwrF/4Ao
tEY=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"omega.imag\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"Imaginary \[Omega] of MZA+ Solutions\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-1.6544156979540552`*^-10, 0.0003897489269047848}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.701622581312101*^9, {3.701622862941441*^9, 3.7016228859948606`*^9}, 
   3.701624009197556*^9, 3.701624236359977*^9, 3.7016255607914953`*^9, 
   3.701625680324503*^9, 3.7016258430465097`*^9, 3.701625997067945*^9, {
   3.701632308097271*^9, 3.701632354554338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
    ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Imaginary \[Omega] of MZA- Solutions\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k\>\"", ",", "\"\<omega.imag\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.701622925304834*^9, 3.701622930480445*^9}, {
   3.7016242417251062`*^9, 3.701624244533293*^9}, 3.701632362241056*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw91F1IU2Ecx/HT3KZT20ZdCF2Y66Kii5Jc0DkbuK27LkokupIuloneWFhB
EcQBBQcl7KJovZFBgl0JBZXnzHaiG60pRoZ4EW29K+vFsqU4pJ3/72cPjMNn
53m+z9nDYYH4ydYTDkVRWsof+4rht+SiXzCaZPjoXqNDhpe+ZNy4bo+NcOSK
MZm1Ry1920CPtu6xV8P1I+xVc/5j9jyc/4y9Kt5/yR7d8oa9Sng8x54bnl5g
zwV//WNILuuEdzpM9Ohhr4leBXxqi4meAz60w0RvA+zbZ6KnwH0H2IP1O61c
v5aRb4/GOb8ktkZ6zL2y36q44UWvmZL+CvzuKnvLYn/bffaK4pwnw96SONE0
w95v8WW1wN6ieFunK43eT/H3fCCN9QXbeuJ5JI3587atrs3xdLvs99l25OGe
/nSj9D/YLnwaeMBeDr9PyY5i/RzccNDA/Ndl//gyWe9OJ+X+REZxJheHgoEx
XTyK+amoYcHNNoN1C6FBzG8+/8rb0d0Xfcpe+b7+9ozDMYb7c2Xnjlvd38J8
Hnt9LFXXE96P57Wt+9p3hzvxe2xHbtb/ZX9e9jsbmwhN4zzEH2fvhnhe4sjQ
xdAtnKc49+hYKIjzFg+ejnL9EuY7t4ewX1GsH/GytyxWBooaeitwPq+htwr7
pzT0SnDC0NBbg5PDGt+3CM7vmjaF9xHW+zW+r3DjOa53wLku7lcBK23sObn+
MHvrjrHnooPsubl+F3uV9Fb2quhN7K3bw56HLqnoVdO/VPRq6IKKay39XkVv
3eMq/4/oGfa8tMWe7/98XP30E/UffLGU9g==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"omega.imag\"", TraditionalForm], None}, {
     FormBox["\"k\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox[
   "\"Imaginary \[Omega] of MZA- Solutions\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-8.157132915184268*^-9, 3.2676775885713712`*^-15}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.701622926740305*^9, 3.701622931169177*^9}, 
   3.701624009365287*^9, 3.701624244846733*^9, 3.701625562101666*^9, 
   3.7016257426733227`*^9, 3.701625845128724*^9, 3.701625997256103*^9, 
   3.7016323098827353`*^9, 3.701632367320993*^9, 3.701632544995933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lsaGraphc93OmegaRealMZAp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
      "omegakSpectBoxOmegaReal"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lsaGraphc93OmegaRealMZApRange", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"lsaGraphc93OmegaRealMZAp", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsaGraphc93OmegaRealMZAm", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
      "omegakSpectBoxOmegaReal"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lsaGraphc93OmegaRealMZAmRange", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"lsaGraphc93OmegaRealMZAp", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsaGraphc93KRealMZAp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lsaGraphc93KRealMZApRange", "=", 
    RowBox[{"Select", "[", 
     RowBox[{"lsaGraphc93KRealMZAp", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "<", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsaGraphc93KRealMZAm", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "omegakSpectBoxKReal"}], 
     ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lsaGraphc93KRealMZAmRange", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"lsaGraphc93KRealMZAp", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7016229790603123`*^9, 3.70162304479265*^9}, {
   3.701623081716427*^9, 3.701623093842227*^9}, {3.701626661777055*^9, 
   3.7016267019577303`*^9}, {3.701627172565118*^9, 3.701627190293648*^9}, 
   3.701629596836866*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Select", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(Select[\\(\\(omegakSpectBoxKReal, \
\\(\\(\\(\\(\\(\\(\\(\\(-4\\)\\) < \\(\\(#1 \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\\) < 4\\)\\) && \\(\\(\\(\\(-4\\)\\) < \\(\\(#1 \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\\) < 4\\)\\)\\)\\) &\\)\\)\\)\
\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Select::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7020423920829372`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Select", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(Select[\\(\\(omegakSpectBoxKReal, \
\\(\\(\\(\\(\\(\\(\\(\\(-4\\)\\) < \\(\\(#1 \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\\) < 4\\)\\) && \\(\\(\\(\\(-4\\)\\) < \\(\\(#1 \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\\) < 4\\)\\)\\)\\) &\\)\\)\\)\
\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Select::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702042392138056*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Select", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(Select[\\(\\(omegakSpectBoxKReal, \
\\(\\(\\(\\(\\(\\(\\(\\(-4\\)\\) < \\(\\(#1 \[LeftDoubleBracket] 2 \
\[RightDoubleBracket]\\)\\) < 4\\)\\) && \\(\\(\\(\\(-4\\)\\) < \\(\\(#1 \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\\) < 4\\)\\)\\)\\) &\\)\\)\\)\
\\)]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"Select::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702042392214304*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<export/unstable-regions/lsaGraphc93KRealMZAp.csv\>\"", ",", 
   "lsaGraphc93KRealMZAp"}], "]"}]], "Input",
 CellChangeTimes->{{3.7016231243577013`*^9, 3.701623126804782*^9}}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc93KRealMZAp.csv\"\>"], \
"Output",
 CellChangeTimes->{3.701624338929515*^9, 3.701632550700614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<export/unstable-regions/lsaGraphc93KRealMZAm.csv\>\"", ",", 
   "lsaGraphc93KRealMZAm"}], "]"}]], "Input",
 CellChangeTimes->{{3.701623130157338*^9, 3.701623131484742*^9}}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc93KRealMZAm.csv\"\>"], \
"Output",
 CellChangeTimes->{3.701624339894977*^9, 3.70163255138293*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<export/unstable-regions/lsaGraphc93OmegaRealMZAp.csv\>\"", ",", 
   "lsaGraphc93OmegaRealMZAp"}], "]"}]], "Input",
 CellChangeTimes->{{3.701626712338232*^9, 3.701626716885107*^9}}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc93OmegaRealMZAp.csv\"\>"], \
"Output",
 CellChangeTimes->{3.7016267215284967`*^9, 3.701627096901926*^9, 
  3.701627193298401*^9, 3.70162960419314*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<export/unstable-regions/lsaGraphc93OmegaRealMZAm.csv\>\"", ",", 
   "lsaGraphc93OmegaRealMZAm"}], "]"}]], "Input",
 CellChangeTimes->{{3.701626730530094*^9, 3.701626733140149*^9}}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc93OmegaRealMZAm.csv\"\>"], \
"Output",
 CellChangeTimes->{3.701626733531448*^9, 3.701627097752781*^9, 
  3.7016271939741173`*^9, 3.7016296049403477`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["spectBox2", "Section",
 CellChangeTimes->{{3.701622834380906*^9, 3.701622837000194*^9}}],

Cell["Calculate spectBox2", "Text",
 CellChangeTimes->{{3.7016220472992496`*^9, 3.701622052130494*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaReal", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"omegareal", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
        RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
            RowBox[{
            "omegareal", ",", "0", ",", "kreal", ",", "kimag", ",", 
             "spectBox2"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"kreal", ",", 
              RowBox[{"omegareal", "/", "0.6"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"kimag", ",", 
              RowBox[{"omegareal", "/", "0.6"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"omegareal", ",", "listofOmega"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70162316739249*^9, 3.70162317025233*^9}, 
   3.701623217728055*^9, {3.7016276143781633`*^9, 3.701627616904983*^9}, {
   3.7020427660029182`*^9, 3.702042779617429*^9}, {3.702042847275174*^9, 
   3.702042856464411*^9}, {3.702042901555043*^9, 3.702042942387521*^9}, {
   3.702042974041891*^9, 3.702042974193512*^9}, {3.702043006077569*^9, 
   3.702043006443561*^9}, {3.702043045299007*^9, 3.7020430454508133`*^9}, {
   3.702045697251144*^9, 3.702045697785606*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.70204570270782*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702045704072735*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702045705475986*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot \
:: lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7020457055192537`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.7020457409608507`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBox2KReal", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kreal", ",", "0"}], "}"}]}], "}"}], "/.", 
        RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
            RowBox[{
            "omegareal", ",", "omegaimag", ",", "kreal", ",", "0", ",", 
             "spectBox2"}], "]"}], "[", 
           RowBox[{"[", "#", "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"omegareal", ",", 
              RowBox[{"kreal", " ", "0.6"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"omegaimag", ",", 
              RowBox[{"kreal", " ", "0.6"}]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "listofK"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702045646386573*^9, 3.702045710087822*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Old School", "Section",
 CellChangeTimes->{{3.702045719199464*^9, 3.7020457242385817`*^9}}],

Cell["The MZA+ solutions spectBox2 are", "Text",
 CellChangeTimes->{{3.701543970143897*^9, 3.70154397585544*^9}, {
  3.701622563799695*^9, 3.701622566053953*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBox2OmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBox2OmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Imaginary k of MZA+ Solutions\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<omega\>\"", ",", "\"\<k.imag\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.701543883142295*^9, 3.701543949529441*^9}, {
  3.701543985691073*^9, 3.701544048537216*^9}, {3.701548366329113*^9, 
  3.7015483732108097`*^9}, {3.70154873713037*^9, 3.70154874199695*^9}, {
  3.701553358812731*^9, 3.701553487402207*^9}, {3.702042789125264*^9, 
  3.702042790022168*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(omegakSpectBox2Ex1\\)\[NoBreak] is not a \
list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.7020427407963877`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(omegakSpectBox2Ex1\\)\[NoBreak] is not a \
list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.70204274090591*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "lpn"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(omegakSpectBox2Ex1\\)\[NoBreak] is not a \
list of numbers or pairs of numbers. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/ListPlot\\\", ButtonNote -> \
\\\"ListPlot::lpn\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702042741026943*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(ListPlot \
:: lpn\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702042741104244*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"omegakSpectBox2Ex1", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\<\"Imaginary k of MZA+ Solutions\"\>"}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"omega\"\>", ",", "\<\"k.imag\"\>"}], "}"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.701543892648734*^9, {3.7015439396064987`*^9, 3.701544048990892*^9}, 
   3.701548373699045*^9, 3.701553292508314*^9, 3.701553360599485*^9, {
   3.701553430503158*^9, 3.7015534453138313`*^9}, 3.701553487996594*^9, 
   3.701555376382246*^9, 3.701557582278852*^9, 3.702042741165443*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"omegareal", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
   RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
       RowBox[{
       "omegareal", ",", "0", ",", "kreal", ",", "kimag", ",", "spectBox2"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"kreal", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"kimag", ",", "1"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], "/.", 
  RowBox[{"omegareal", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.70162764953869*^9, 3.701627796093705*^9}, {
  3.7016278615977383`*^9, 3.701627861821986*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "nlnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \[NoBreak]\\!\\({\\(\\(\\(\\(1.03375`\\\
\\ omegareal\\)\\) - \\(\\(0.375`\\\\ omegareal\\\\ \
\\(\\(Arg[\\(\\(\\(\\(\\(1.` \[VeryThinSpace]\\)\\) - \\(\\(\\(\\((\\(\\(0.9` \
\[VeryThinSpace]\\)\\) + \\(\\(0.9`\\\\ \[ImaginaryI]\\)\\))\\)\\)\\\\ \
\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\/\
\\(\\(\\(1.` \[VeryThinSpace]\\)\\) + \\(\\(Times[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)]\\)\\)\\)\\) + \\(\\(\[LeftSkeleton] \
10 \[RightSkeleton]\\)\\) + \\(\\(0.25`\\\\ \\(\\(Cos[\\(\\(0.5`\\\\ \
\\(\\(Arg[\\(\\(\\(\\(Plus[\\(\\(\[LeftSkeleton] 5 \[RightSkeleton]\\)\\)]\\)\
\\)\\\\ \\(\\(Plus[\\(\\(\[LeftSkeleton] 5 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)\\\\ \
\\@\\(\\@\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) \
+ \\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\\\ \
\\@\\(\\(\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) + \\(\
\\(Power[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\)\\)\\)\\)\
\\), \\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)}\\)\[NoBreak] is not a \
list of numbers with dimensions \[NoBreak]\\!\\({2}\\)\[NoBreak] at \
\[NoBreak]\\!\\({kreal, kimag}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindRoot\\\", ButtonNote -> \
\\\"FindRoot::nlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.701627656252108*^9, 3.701627797292207*^9}, 
   3.701627862912264*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], 
  RowBox[{
  ":", " "}], \
"\<\"\[NoBreak]\\!\\({\\(FindRoot[\\(\\(\\(\\(\\(\\(ConAxialSymOmegaKMZAEqn[\\\
(\\(omegareal, 0, kreal, kimag, spectBox2\\)\\)]\\)\\) \[LeftDoubleBracket] 1 \
\[RightDoubleBracket]\\)\\), \\(\\({\\(\\({kreal, 1}\\)\\), \\(\\({kimag, \
1}\\)\\)}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of replacement \
rules nor a valid dispatch table, and so cannot be used for replacing. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\", \
ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.701627656252108*^9, 3.701627797292207*^9}, 
   3.701627862981833*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Failed to converge to the requested accuracy or precision \
within \[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.701627656252108*^9, 3.701627797292207*^9}, 
   3.701627863633916*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.8862244959795995`"}], ",", 
     RowBox[{"-", "0.009303052080688812`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.701627657280108*^9, 3.701627797971292*^9}, 
   3.7016278636450787`*^9}]
}, Open  ]],

Cell["The MZA- solution", "Text",
 CellChangeTimes->{{3.7015440670671377`*^9, 3.7015440708578863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
      RowBox[{"#", "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBox2OmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Imaginary k of MZA- Solutions\>\""}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<omega\>\"", ",", "\"\<k.imag\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.701544075664123*^9, 3.7015440758017683`*^9}, 
   3.701553354470715*^9, {3.701553618942769*^9, 3.7015536439644403`*^9}, 
   3.7020427972607737`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
YudnF4Xr4j9DvVLDzXaPNQ77fkb/A2rMzVw=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"k.imag\"", TraditionalForm], None}, {
     FormBox["\"omega\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Imaginary k of MZA- Solutions\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-1.156528609329557, 1.1720084135542441`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.701544076056128*^9, 3.701553292976286*^9, 
  3.701553354879261*^9, 3.701553644795102*^9, 3.701555378892191*^9, 
  3.701557582493227*^9}]
}, Open  ]],

Cell["MZA+ solution", "Text",
 CellChangeTimes->{{3.701548984294743*^9, 3.7015489870531063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "[", 
       RowBox[{"0", ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], "&"}],
    "/@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"#", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
     "omegakSpectBox2OmegaReal"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Error Bar Plot\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<omega\>\"", ",", "\"\<k.real\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.701548793283424*^9, 3.7015488313042307`*^9}, {
   3.7015489110389147`*^9, 3.70154893214368*^9}, 3.7015533485386877`*^9, {
   3.701553750542718*^9, 3.701553774474099*^9}, 3.7015538669290667`*^9, 
   3.7020427995554247`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1039Q02UYAPAv29gG22BnamZK/FJgrLGDKXIevW/GygpLaoPwhJICOfI0
ToYdDm6oFJUi2R8TtJ0R0sXwQM7uVmHvq0myECpxTc8KMMCNBQz54eYIin2f
PXff+9577/N83ud9732jCg68VshhGGbn/9/ynw0pNf+SnvxHq4ym+COcWrfr
z6czMlrkjzBaWHOE06RNoI0NyyGht03VnhBzPO27sRxieuBxQ345E09ZT0wz
E7xbHdo48EQ0dYVq4C3zRvBCac03n18YZjaCF0LTdOWt+7I3gCekx7LkUl5b
LHhCWjTZda41KBY8Ae0prbj4dk4MeHyqmfzg+ZQL0eAFU8nLLyZHcKOpn7vB
o00nmDRZbhR4PHrkcMmW/PZI8LjUtiPx9avBkeBx6PUYwzPUEgFeEB3l69tq
itaDx1BN7Ujo1Mp14DH0QXBq+dpra6F+kez9ayxXVvYE5C+Q90rlLeoNa2iy
fz0feaNbcc9oX01P+30vaeg1ibI+WQWeh0y4DiafxyvBmye6H1653PtwBXiz
ZLOg4FHZnoeE9WZIW/vugfJ9UvCmyYcVT1bc1YSB5yaqd4d/lv8ugvp/yPZN
+srNeSGQ7ySabVWNynE+fce/3hipU5SI4ip5VOn3/ya55kTT17OjhPWGyLx1
cGvzlXuErb9DvrLIiwXmR4TNHyDZ08qWlOk5Uu+ftxJ7RmadteM3YvCPvyVe
y36TwXudUHaM7n/f7puS2Mk5Nh89F5aTphxzBDwkf+H94o5KCvN30MmkW99F
n/AG+kE79xf0RJYOki1sv+i24/gencJFitn9II5qb8camxPqnejoRQOvumyc
/MqeB7o5XLdO0+8Gz40mrxqTdgtmyFn2PNFBXUnGGe4UUbHnjS7LTq36smUG
6mfRqbjuo3pbN2LXm0d2o/ZQVY8PPA96jHtFZP/TB54Xee8Ld5iqGMp6PjQx
SXudKSPgLSClro98etYN/S8i8UdincIZ2C+Dx3M6u7xPL5J+9j7iDGue61k1
P3BfcZDjtKI2ewHqOfgzhTHppG0J+ufiuAp1iXb1TQTvAe9SH7p2JnwJPB5O
KGi+lJU5R+A9YU9MfGKf61/w+Dj9+La87ryAJ8DrG2tvHau/C54QqzbpxTa7
GzwhliwoC3d1+cALwZZRbcTsxBJ4odj1049LTa8GPBF+ypj4ZkNpwBPjqAda
YezHI4j1xDjYk59+yRPwJDi3c9wyeNgHXhhu6eyXOkaHEOuF4+rmjjlL6jB4
Uqz4Qh31Uv0Q+g+EKFwv
      
      "]], {{LineBox[{{-4., -13.333711214108765`}, {-4., \
-13.333711214108765`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-4., -13.333711214108765`}], 
         Offset[{-1.5, 0}, {-4., -13.333711214108765`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-4., -13.333711214108765`}], 
         Offset[{-1.5, 0}, {-4., -13.333711214108765`}]}]}, {
       LineBox[{{-3.9, -13.000470324918199`}, {-3.9, -13.000470324918199`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.9, -13.000470324918199`}], 
         Offset[{-1.5, 0}, {-3.9, -13.000470324918199`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.9, -13.000470324918199`}], 
         Offset[{-1.5, 0}, {-3.9, -13.000470324918199`}]}]}, {
       LineBox[{{-3.8, -12.66725166171336}, {-3.8, -12.66725166171336}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.8, -12.66725166171336}], 
         Offset[{-1.5, 0}, {-3.8, -12.66725166171336}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.8, -12.66725166171336}], 
         Offset[{-1.5, 0}, {-3.8, -12.66725166171336}]}]}, {
       LineBox[{{-3.7, -12.334060445616544`}, {-3.7, -12.334060445616544`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.7, -12.334060445616544`}], 
         Offset[{-1.5, 0}, {-3.7, -12.334060445616544`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.7, -12.334060445616544`}], 
         Offset[{-1.5, 0}, {-3.7, -12.334060445616544`}]}]}, {
       LineBox[{{-3.6, -12.00090308488481}, {-3.6, -12.00090308488481}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.6, -12.00090308488481}], 
         Offset[{-1.5, 0}, {-3.6, -12.00090308488481}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.6, -12.00090308488481}], 
         Offset[{-1.5, 0}, {-3.6, -12.00090308488481}]}]}, {}, {
       LineBox[{{-3.4, -11.334723091226904`}, {-3.4, -11.334723091226904`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.4, -11.334723091226904`}], 
         Offset[{-1.5, 0}, {-3.4, -11.334723091226904`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.4, -11.334723091226904`}], 
         Offset[{-1.5, 0}, {-3.4, -11.334723091226904`}]}]}, {}, {
       LineBox[{{-3.2, -10.668797804794496`}, {-3.2, -10.668797804794496`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.2, -10.668797804794496`}], 
         Offset[{-1.5, 0}, {-3.2, -10.668797804794496`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.2, -10.668797804794496`}], 
         Offset[{-1.5, 0}, {-3.2, -10.668797804794496`}]}]}, {
       LineBox[{{-3.1, -10.335968499574626`}, {-3.1, -10.335968499574626`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.1, -10.335968499574626`}], 
         Offset[{-1.5, 0}, {-3.1, -10.335968499574626`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3.1, -10.335968499574626`}], 
         Offset[{-1.5, 0}, {-3.1, -10.335968499574626`}]}]}, {
       LineBox[{{-3., -10.003254912436386`}, {-3., -10.003254912436386`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-3., -10.003254912436386`}], 
         Offset[{-1.5, 0}, {-3., -10.003254912436386`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-3., -10.003254912436386`}], 
         Offset[{-1.5, 0}, {-3., -10.003254912436386`}]}]}, {
       LineBox[{{-2.9, -9.670682474324067}, {-2.9, -9.670682474324067}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.9, -9.670682474324067}], 
         Offset[{-1.5, 0}, {-2.9, -9.670682474324067}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.9, -9.670682474324067}], 
         Offset[{-1.5, 0}, {-2.9, -9.670682474324067}]}]}, {
       LineBox[{{-2.8, -9.338281825991693}, {-2.8, -9.338281825991693}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8, -9.338281825991693}], 
         Offset[{-1.5, 0}, {-2.8, -9.338281825991693}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.8, -9.338281825991693}], 
         Offset[{-1.5, 0}, {-2.8, -9.338281825991693}]}]}, {}, {
       LineBox[{{-2.5999999999999996`, -8.674150258367096}, \
{-2.5999999999999996`, -8.674150258367096}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.5999999999999996`, -8.674150258367096}], 
         Offset[{-1.5, 0}, {-2.5999999999999996`, -8.674150258367096}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.5999999999999996`, -8.674150258367096}], 
         Offset[{-1.5, 0}, {-2.5999999999999996`, -8.674150258367096}]}]}, {
       LineBox[{{-2.5, -8.34251571941218}, {-2.5, -8.34251571941218}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.5, -8.34251571941218}], 
         Offset[{-1.5, 0}, {-2.5, -8.34251571941218}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.5, -8.34251571941218}], 
         Offset[{-1.5, 0}, {-2.5, -8.34251571941218}]}]}, {
       LineBox[{{-2.4, -8.011248206173073}, {-2.4, -8.011248206173073}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.4, -8.011248206173073}], 
         Offset[{-1.5, 0}, {-2.4, -8.011248206173073}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.4, -8.011248206173073}], 
         Offset[{-1.5, 0}, {-2.4, -8.011248206173073}]}]}, {
       LineBox[{{-2.3, -7.680420853205709}, {-2.3, -7.680420853205709}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.3, -7.680420853205709}], 
         Offset[{-1.5, 0}, {-2.3, -7.680420853205709}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.3, -7.680420853205709}], 
         Offset[{-1.5, 0}, {-2.3, -7.680420853205709}]}]}, {
       LineBox[{{-2.2, -7.350119299955371}, {-2.2, -7.350119299955371}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.2, -7.350119299955371}], 
         Offset[{-1.5, 0}, {-2.2, -7.350119299955371}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.2, -7.350119299955371}], 
         Offset[{-1.5, 0}, {-2.2, -7.350119299955371}]}]}, {
       LineBox[{{-2.0999999999999996`, -7.02044312496044}, \
{-2.0999999999999996`, -7.02044312496044}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.0999999999999996`, -7.02044312496044}], 
         Offset[{-1.5, 0}, {-2.0999999999999996`, -7.02044312496044}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2.0999999999999996`, -7.02044312496044}], 
         Offset[{-1.5, 0}, {-2.0999999999999996`, -7.02044312496044}]}]}, {
       LineBox[{{-2., -6.6915071936687}, {-2., -6.6915071936687}}], 
       LineBox[{
        Offset[{1.5, 0}, {-2., -6.6915071936687}], 
         Offset[{-1.5, 0}, {-2., -6.6915071936687}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-2., -6.6915071936687}], 
         Offset[{-1.5, 0}, {-2., -6.6915071936687}]}]}, {
       LineBox[{{-1.9, -6.363442806926831}, {-1.9, -6.363442806926835}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9, -6.363442806926831}], 
         Offset[{-1.5, 0}, {-1.9, -6.363442806926831}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.9, -6.363442806926835}], 
         Offset[{-1.5, 0}, {-1.9, -6.363442806926835}]}]}, {}, {
       LineBox[{{-1.6999999999999997`, -5.710540327171962}, \
{-1.6999999999999997`, -5.710540327171962}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.6999999999999997`, -5.710540327171962}], 
         Offset[{-1.5, 0}, {-1.6999999999999997`, -5.710540327171962}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.6999999999999997`, -5.710540327171962}], 
         Offset[{-1.5, 
           0}, {-1.6999999999999997`, -5.710540327171962}]}]}, {}, {}, {}, {
       LineBox[{{-1.2999999999999998`, -1.4611886478906952`}, \
{-1.2999999999999998`, -1.4613977512988554`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.2999999999999998`, -1.4611886478906952`}], 
         Offset[{-1.5, 0}, {-1.2999999999999998`, -1.4611886478906952`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.2999999999999998`, -1.4613977512988554`}], 
         Offset[{-1.5, 0}, {-1.2999999999999998`, -1.4613977512988554`}]}]}, {
       LineBox[{{-1.1999999999999997`, -4.105922033817404}, \
{-1.1999999999999997`, -4.105922033817404}}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.1999999999999997`, -4.105922033817404}], 
         Offset[{-1.5, 0}, {-1.1999999999999997`, -4.105922033817404}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-1.1999999999999997`, -4.105922033817404}], 
         Offset[{-1.5, 
           0}, {-1.1999999999999997`, -4.105922033817404}]}]}, {}, {}, {}, {
       LineBox[{{-0.7999999999999998, -2.86435051629841}, \
{-0.7999999999999998, -2.86435051629841}}], 
       LineBox[{
        Offset[{1.5, 0}, {-0.7999999999999998, -2.86435051629841}], 
         Offset[{-1.5, 0}, {-0.7999999999999998, -2.86435051629841}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-0.7999999999999998, -2.86435051629841}], 
         Offset[{-1.5, 
           0}, {-0.7999999999999998, -2.86435051629841}]}]}, {}, {}, {}, {}, \
{}, {}, {LineBox[{{-0.09999999999999964, -0.18646464599172052`}, \
{-0.09999999999999964, -0.18813877304442755`}}], 
       LineBox[{
        Offset[{1.5, 0}, {-0.09999999999999964, -0.18646464599172052`}], 
         Offset[{-1.5, 0}, {-0.09999999999999964, -0.18646464599172052`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {-0.09999999999999964, -0.18813877304442755`}], 
         Offset[{-1.5, 
           0}, {-0.09999999999999964, -0.18813877304442755`}]}]}, {}, {}, {}, \
{LineBox[{{0.40000000000000036`, -1.5969562858394726`}, {
        0.40000000000000036`, -1.596957612247453}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.40000000000000036`, -1.5969562858394726`}], 
         Offset[{-1.5, 0}, {0.40000000000000036`, -1.5969562858394726`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.40000000000000036`, -1.596957612247453}], 
         Offset[{-1.5, 0}, {0.40000000000000036`, -1.596957612247453}]}]}, {
       LineBox[{{0.5, -0.49127976114956645`}, {0.5, -0.491279816197205}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.5, -0.49127976114956645`}], 
         Offset[{-1.5, 0}, {0.5, -0.49127976114956645`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.5, -0.491279816197205}], 
         Offset[{-1.5, 0}, {0.5, -0.491279816197205}]}]}, {
       LineBox[{{0.6000000000000005, -0.8494202062485919}, {
        0.6000000000000005, -0.8494222058000903}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.6000000000000005, -0.8494202062485919}], 
         Offset[{-1.5, 0}, {0.6000000000000005, -0.8494202062485919}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.6000000000000005, -0.8494222058000903}], 
         Offset[{-1.5, 0}, {
          0.6000000000000005, -0.8494222058000903}]}]}, {}, {}, {
       LineBox[{{0.9000000000000004, -1.0503582371411173`}, {
        0.9000000000000004, -1.0503881304187124`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.9000000000000004, -1.0503582371411173`}], 
         Offset[{-1.5, 0}, {0.9000000000000004, -1.0503582371411173`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.9000000000000004, -1.0503881304187124`}], 
         Offset[{-1.5, 0}, {
          0.9000000000000004, -1.0503881304187124`}]}]}, {}, {
       LineBox[{{1.1000000000000005`, -0.9691337815755285}, {
        1.1000000000000005`, -0.969246714687434}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.1000000000000005`, -0.9691337815755285}], 
         Offset[{-1.5, 0}, {1.1000000000000005`, -0.9691337815755285}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.1000000000000005`, -0.969246714687434}], 
         Offset[{-1.5, 0}, {1.1000000000000005`, -0.969246714687434}]}]}, {
       LineBox[{{1.2000000000000002`, -1.2240191490773684`}, {
        1.2000000000000002`, -1.2323465969659906`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.2000000000000002`, -1.2240191490773684`}], 
         Offset[{-1.5, 0}, {1.2000000000000002`, -1.2240191490773684`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.2000000000000002`, -1.2323465969659906`}], 
         Offset[{-1.5, 0}, {
          1.2000000000000002`, -1.2323465969659906`}]}]}, {}, {}, {}, {
       LineBox[{{1.6000000000000005`, -2.0616844871653095`}, {
        1.6000000000000005`, -2.061966257910477}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.6000000000000005`, -2.0616844871653095`}], 
         Offset[{-1.5, 0}, {1.6000000000000005`, -2.0616844871653095`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.6000000000000005`, -2.061966257910477}], 
         Offset[{-1.5, 0}, {1.6000000000000005`, -2.061966257910477}]}]}, {
       LineBox[{{1.7000000000000002`, -0.6069707900675786}, {
        1.7000000000000002`, -0.6557033469646237}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.7000000000000002`, -0.6069707900675786}], 
         Offset[{-1.5, 0}, {1.7000000000000002`, -0.6069707900675786}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.7000000000000002`, -0.6557033469646237}], 
         Offset[{-1.5, 0}, {1.7000000000000002`, -0.6557033469646237}]}]}, {
       LineBox[{{1.8000000000000007`, -1.0344566495480498`}, {
        1.8000000000000007`, -1.04199322004421}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.8000000000000007`, -1.0344566495480498`}], 
         Offset[{-1.5, 0}, {1.8000000000000007`, -1.0344566495480498`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.8000000000000007`, -1.04199322004421}], 
         Offset[{-1.5, 0}, {
          1.8000000000000007`, -1.04199322004421}]}]}, {}, {}, {}, {
       LineBox[{{2.2, -1.766327192513041}, {2.2, -1.775924741577887}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.2, -1.766327192513041}], 
         Offset[{-1.5, 0}, {2.2, -1.766327192513041}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.2, -1.775924741577887}], 
         Offset[{-1.5, 0}, {2.2, -1.775924741577887}]}]}, {
       LineBox[{{2.3000000000000007`, -1.986876040416431}, {
        2.3000000000000007`, -1.9924009712653226`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.3000000000000007`, -1.986876040416431}], 
         Offset[{-1.5, 0}, {2.3000000000000007`, -1.986876040416431}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.3000000000000007`, -1.9924009712653226`}], 
         Offset[{-1.5, 0}, {
          2.3000000000000007`, -1.9924009712653226`}]}]}, {}, {
       LineBox[{{2.5, -1.9413106405739766`}, {2.5, -1.9413106809991465`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.5, -1.9413106405739766`}], 
         Offset[{-1.5, 0}, {2.5, -1.9413106405739766`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.5, -1.9413106809991465`}], 
         Offset[{-1.5, 0}, {2.5, -1.9413106809991465`}]}]}, {
       LineBox[{{2.6000000000000005`, -1.3311324710405212`}, {
        2.6000000000000005`, -1.3311327450874317`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.6000000000000005`, -1.3311324710405212`}], 
         Offset[{-1.5, 0}, {2.6000000000000005`, -1.3311324710405212`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.6000000000000005`, -1.3311327450874317`}], 
         Offset[{-1.5, 0}, {2.6000000000000005`, -1.3311327450874317`}]}]}, {
       LineBox[{{2.7, -1.859589372035117}, {2.7, -1.8805480497278175`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.7, -1.859589372035117}], 
         Offset[{-1.5, 0}, {2.7, -1.859589372035117}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.7, -1.8805480497278175`}], 
         Offset[{-1.5, 0}, {2.7, -1.8805480497278175`}]}]}, {
       LineBox[{{2.8000000000000007`, -1.9388570177122872`}, {
        2.8000000000000007`, -1.9819295810591684`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.8000000000000007`, -1.9388570177122872`}], 
         Offset[{-1.5, 0}, {2.8000000000000007`, -1.9388570177122872`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.8000000000000007`, -1.9819295810591684`}], 
         Offset[{-1.5, 0}, {
          2.8000000000000007`, -1.9819295810591684`}]}]}, {}, {
       LineBox[{{3., -1.0526840515740183`}, {3., -1.0527027754566614`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -1.0526840515740183`}], 
         Offset[{-1.5, 0}, {3., -1.0526840515740183`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., -1.0527027754566614`}], 
         Offset[{-1.5, 0}, {3., -1.0527027754566614`}]}]}, {
       LineBox[{{3.1000000000000005`, -1.7284605540496152`}, {
        3.1000000000000005`, -1.738508736261617}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.1000000000000005`, -1.7284605540496152`}], 
         Offset[{-1.5, 0}, {3.1000000000000005`, -1.7284605540496152`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.1000000000000005`, -1.738508736261617}], 
         Offset[{-1.5, 0}, {3.1000000000000005`, -1.738508736261617}]}]}, {
       LineBox[{{3.2, -1.9955886775314362`}, {3.2, -1.9955995978023295`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.2, -1.9955886775314362`}], 
         Offset[{-1.5, 0}, {3.2, -1.9955886775314362`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.2, -1.9955995978023295`}], 
         Offset[{-1.5, 0}, {3.2, -1.9955995978023295`}]}]}, {
       LineBox[{{3.3000000000000007`, -1.956772370290083}, {
        3.3000000000000007`, -1.9571127445343461`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.3000000000000007`, -1.956772370290083}], 
         Offset[{-1.5, 0}, {3.3000000000000007`, -1.956772370290083}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.3000000000000007`, -1.9571127445343461`}], 
         Offset[{-1.5, 0}, {
          3.3000000000000007`, -1.9571127445343461`}]}]}, {}, {}, {
       LineBox[{{3.6000000000000005`, -1.7481209200438976`}, {
        3.6000000000000005`, -1.7483166099593817`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.6000000000000005`, -1.7481209200438976`}], 
         Offset[{-1.5, 0}, {3.6000000000000005`, -1.7481209200438976`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.6000000000000005`, -1.7483166099593817`}], 
         Offset[{-1.5, 0}, {3.6000000000000005`, -1.7483166099593817`}]}]}, {
       LineBox[{{3.7, -1.717718570255032}, {3.7, -1.7177667399774872`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.7, -1.717718570255032}], 
         Offset[{-1.5, 0}, {3.7, -1.717718570255032}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.7, -1.7177667399774872`}], 
         Offset[{-1.5, 0}, {
          3.7, -1.7177667399774872`}]}]}, {}, {}, {}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"k.real\"", TraditionalForm], None}, {
     FormBox["\"omega\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Error Bar Plot\"", TraditionalForm],
  PlotRange->{{-4., 4.}, {-3, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.701548781201206*^9, {3.701548822410089*^9, 3.7015488393269587`*^9}, {
   3.701548911544569*^9, 3.701548932425975*^9}, 3.7015532930789223`*^9, {
   3.701553344193632*^9, 3.701553349037593*^9}, {3.7015537541331043`*^9, 
   3.7015537747701273`*^9}, 3.701553867822708*^9, 3.7015553816651897`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphicMZAp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
      "omegakSpectBox2OmegaReal"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphicMZApRange", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"graphicMZAp", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.701555528450829*^9, 3.701555553159477*^9}, {
   3.701555626757387*^9, 3.70155564004534*^9}, {3.7015561391593227`*^9, 
   3.7015561469877787`*^9}, {3.701556194084711*^9, 3.701556194618662*^9}, 
   3.7020428016757402`*^9, 3.702043703398759*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"graphicMZAm", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
      "omegakSpectBox2OmegaReal"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graphicMZAmRange", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"graphicMZAm", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.701555528450829*^9, 3.701555553159477*^9}, {
   3.701555626757387*^9, 3.70155564004534*^9}, 3.702042809451891*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simplified Procedure", "Section",
 CellChangeTimes->{{3.702043567697281*^9, 3.7020435715603247`*^9}}],

Cell[CellGroupData[{

Cell["For Real Omega", "Subsection",
 CellChangeTimes->{{3.702045752178117*^9, 3.702045763316527*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaRealMZAm", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"omegareal", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
          RowBox[{
          "omegareal", ",", "0", ",", "kreal", ",", "kimag", ",", 
           "spectBox2"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"kreal", ",", 
            RowBox[{"omegareal", "/", "0.6"}], ",", "0", ",", "10"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"kimag", ",", 
            RowBox[{"omegareal", "/", "0.6"}], ",", "0", ",", "10"}], "}"}]}],
          "}"}]}], "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"omegareal", ",", 
       RowBox[{"Select", "[", 
        RowBox[{"listofOmega", ",", 
         RowBox[{
          RowBox[{"#", ">", "0"}], "&"}]}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7020430335951643`*^9, 3.702043039554777*^9}, 
   3.702043069699379*^9, {3.702043466573242*^9, 3.7020434756988564`*^9}, {
   3.7020439026881323`*^9, 3.7020439051131*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "reged"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The point \[NoBreak]\\!\\({0.`, 0.27716515086063`}\\)\
\[NoBreak] is at the edge of the search region \[NoBreak]\\!\\({0.`, 10.`}\\)\
\[NoBreak] in coordinate \[NoBreak]\\!\\(1\\)\[NoBreak] and the computed \
search direction points outside the region. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/reged\\\", ButtonNote -> \
\\\"FindRoot::reged\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.702043477023633*^9, 3.70204390687477*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaRealMZAp", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"omegareal", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kreal", ",", "kimag"}], "}"}]}], "}"}], "/.", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
          RowBox[{
          "omegareal", ",", "0", ",", "kreal", ",", "kimag", ",", 
           "spectBox2"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"kreal", ",", 
            RowBox[{"omegareal", "/", "0.6"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"kimag", ",", 
            RowBox[{"omegareal", "/", "0.6"}]}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"omegareal", ",", 
       RowBox[{"Select", "[", 
        RowBox[{"listofOmega", ",", 
         RowBox[{
          RowBox[{"#", "<", "0"}], "&"}]}], "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7020435871292467`*^9, 3.702043603841061*^9}, {
  3.7020436825263033`*^9, 3.702043685005674*^9}, {3.702043734463271*^9, 
  3.70204373466076*^9}, {3.702043909188045*^9, 3.702043911064458*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaRealMZApPoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", "omegakSpectBox2OmegaRealMZAp", ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaRealMZApPointsClean", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"omegakSpectBox2OmegaRealMZApPoints", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702043802870593*^9, 3.7020438568128633`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
        "omegakSpectBox2OmegaRealMZApPointsClean"}], ",", 
       RowBox[{"VertexColors", "\[Rule]", 
        RowBox[{"colorf", "/@", 
         RowBox[{"Rescale", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
            "omegakSpectBox2OmegaRealMZApPointsClean"}], ")"}]}]}]}]}], "]"}],
      ",", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"plotLegend", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "#"}], ",", 
             RowBox[{"Max", "@", "#"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
            "omegakSpectBox2OmegaRealMZApPointsClean"}], ")"}]}], ",", "20", 
         ",", "colorf"}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
       RowBox[{"ImageScaled", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "4"}], ",", "0.9"}], "}"}], "]"}]}], "]"}]}], 
    "\n", "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k.real\>\"", ",", "\"\<omega\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<k.imag values for different omega and k.real values\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7015553978577967`*^9, 3.7015554597510977`*^9}, {
  3.701555646666752*^9, 3.7015556843623667`*^9}, {3.701555719028406*^9, 
  3.70155585950384*^9}, {3.701555901146501*^9, 3.701555908138728*^9}, {
  3.7015560614434233`*^9, 3.7015560655994377`*^9}, {3.70155615095135*^9, 
  3.701556154564035*^9}, {3.70155632439979*^9, 3.701556326468011*^9}, {
  3.702044187066174*^9, 3.702044189121686*^9}}],

Cell[BoxData[
 GraphicsBox[{
   PointBox[{{-3.791434244121152, -1.0999999999999996`}, \
{-3.4795776224176738`, -1.}, {-3.1705140880136757`, -0.8999999999999999}, \
{-2.864350516298411, -0.7999999999999998}, {-2.5611096278933645`, \
-0.6999999999999997}, {-2.2606866433083526`, -0.5999999999999996}, \
{-1.9627785898596128`, -0.5}, {-1.6667551106761869`, -0.3999999999999999}, \
{-1.371387147125537, -0.2999999999999998}, {-1.0741626891950877`, \
-0.19999999999999973`}, {-0.18730170951807437`, -0.09999999999999964}},
    VertexColors->{
      RGBColor[5.3967709543989555`*^-14, 0., 0.999999999999946], 
      RGBColor[3.6967510912546116`*^-14, 0., 0.999999999999963], 
      RGBColor[8.807935671837015*^-13, 0., 0.9999999999991193], 
      RGBColor[6.226185024007024*^-14, 0., 0.9999999999999377], 
      RGBColor[5.3967681364450416`*^-14, 0., 0.999999999999946], 
      RGBColor[0., 0., 1.], 
      RGBColor[5.3967801850696974`*^-14, 0., 0.999999999999946], 
      RGBColor[5.396770954964404*^-14, 0., 0.999999999999946], 
      RGBColor[5.39541000461144*^-14, 0., 0.999999999999946], 
      RGBColor[5.396770947582376*^-14, 0., 0.999999999999946], 
      RGBColor[1., 0., 0.]}], InsetBox[
    GraphicsBox[{{
       {RGBColor[0, 0, 1], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox[
           RowBox[{"\<\"-4.52\"\>", "\[Times]", 
            SuperscriptBox["10", "\<\"-17\"\>"]}],
           -4.5174401203052224`*^-17,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 0.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[1, 19], 0.05263157894736842], 0, 
         NCache[
          Rational[18, 19], 0.9473684210526315]], RectangleBox[{0, 1}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00004405597507116894,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 1.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[2, 19], 0.10526315789473684`], 0, 
         NCache[
          Rational[17, 19], 0.8947368421052632]], RectangleBox[{0, 2}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00008811195014238305,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 2.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[3, 19], 0.15789473684210525`], 0, 
         NCache[
          Rational[16, 19], 0.8421052631578947]], RectangleBox[{0, 3}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00013216792521359715`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 3.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[4, 19], 0.21052631578947367`], 0, 
         NCache[
          Rational[15, 19], 0.7894736842105263]], RectangleBox[{0, 4}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00017622390028481126`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 4.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[5, 19], 0.2631578947368421], 0, 
         NCache[
          Rational[14, 19], 0.7368421052631579]], RectangleBox[{0, 5}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00022027987535602539`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 5.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[6, 19], 0.3157894736842105], 0, 
         NCache[
          Rational[13, 19], 0.6842105263157895]], RectangleBox[{0, 6}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00026433585042723946`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 6.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[7, 19], 0.3684210526315789], 0, 
         NCache[
          Rational[12, 19], 0.631578947368421]], RectangleBox[{0, 7}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0003083918254984536,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 7.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[8, 19], 0.42105263157894735`], 0, 
         NCache[
          Rational[11, 19], 0.5789473684210527]], RectangleBox[{0, 8}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0003524478005696677,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 8.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[9, 19], 0.47368421052631576`], 0, 
         NCache[
          Rational[10, 19], 0.5263157894736842]], RectangleBox[{0, 9}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0003965037756408818,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 9.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[10, 19], 0.5263157894736842], 0, 
         NCache[
          Rational[9, 19], 0.47368421052631576`]], RectangleBox[{0, 10}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00044055975071209593`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 10.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[11, 19], 0.5789473684210527], 0, 
         NCache[
          Rational[8, 19], 0.42105263157894735`]], RectangleBox[{0, 11}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.00048461572578331006`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 11.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[12, 19], 0.631578947368421], 0, 
         NCache[
          Rational[7, 19], 0.3684210526315789]], RectangleBox[{0, 12}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0005286717008545241,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 12.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[13, 19], 0.6842105263157895], 0, 
         NCache[
          Rational[6, 19], 0.3157894736842105]], RectangleBox[{0, 13}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0005727276759257382,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 13.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[14, 19], 0.7368421052631579], 0, 
         NCache[
          Rational[5, 19], 0.2631578947368421]], RectangleBox[{0, 14}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0006167836509969524,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 14.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[15, 19], 0.7894736842105263], 0, 
         NCache[
          Rational[4, 19], 0.21052631578947367`]], RectangleBox[{0, 15}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0006608396260681665,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 15.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[16, 19], 0.8421052631578947], 0, 
         NCache[
          Rational[3, 19], 0.15789473684210525`]], RectangleBox[{0, 16}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0007048956011393805,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 16.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[17, 19], 0.8947368421052632], 0, 
         NCache[
          Rational[2, 19], 0.10526315789473684`]], RectangleBox[{0, 17}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0007489515762105947,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 17.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[18, 19], 0.9473684210526315], 0, 
         NCache[
          Rational[1, 19], 0.05263157894736842]], RectangleBox[{0, 18}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0007930075512818088,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 18.5}, {1, 0}]}}, {
       {RGBColor[1, 0, 0], RectangleBox[{0, 19}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.00\"\>",
           0.0008370635263530229,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 19.5}, {1, 0}]}}},
     Frame->True,
     FrameTicks->None,
     PlotRangePadding->0.5], NCache[
    Scaled[{1, Rational[1, 2]}], Scaled[{1, 0.5}]], 
    ImageScaled[{-0.1, Rational[1, 2]}], NCache[
    Scaled[{Rational[1, 4], 0.9}], Scaled[{0.25, 0.9}]]]},
  Axes->True,
  Frame->True,
  FrameLabel->{
    FormBox["\"k.real\"", TraditionalForm], 
    FormBox["\"omega\"", TraditionalForm]},
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"k.imag values for different omega and k.real values\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{{3.701556155067925*^9, 3.7015561960066547`*^9}, 
   3.70155632738093*^9, 3.701557582672761*^9, 3.702044190169277*^9}]
}, Open  ]],

Cell["MZA- solution", "Text",
 CellChangeTimes->{{3.701548977399879*^9, 3.7015489797896833`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaRealMZAmPoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", "omegakSpectBox2OmegaRealMZAm", ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegakSpectBox2OmegaRealMZAmPointsClean", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"omegakSpectBox2OmegaRealMZAmPoints", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702043802870593*^9, 3.7020438568128633`*^9}, {
  3.702045495348579*^9, 3.702045508261491*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"ErrorBar", "[", 
       RowBox[{"0", ",", 
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], " ", "]"}]}], "}"}], "&"}],
    "/@", 
   RowBox[{"(", "omegakSpectBox2OmegaRealMZAm", ")"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ErrorListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Error Bar Plot\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<omega\>\"", ",", "\"\<k.real\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.701548958260096*^9, 3.7015489583245077`*^9}, {
   3.7015489951683817`*^9, 3.7015490046864147`*^9}, {3.701550479363977*^9, 
   3.7015504960066423`*^9}, 3.7015537279264927`*^9, {3.701553783790753*^9, 
   3.701553853076304*^9}, 3.702042807251202*^9, 3.702045474654708*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQfWAmCOy0Z4CCBWD+SfsFd9/WrI7ZaW9gDAKX7Qtc
ZMuU0i7ZQ+Rv2uvrSHo1R96D6ntg/zkzSD5X8qm9BVj9Y/tdlicaz/18ZZ+R
BgLP7K3fT9nsm/4Bqv+lvfXMICNnn8/2F86AwBv7d99FtsnrfIOa98E+uU50
rSX7T/s5YPUf7f3sbk95eve3vQnY/M/2u04Vtpdu+AfV/8X+r86MtDn7GRwg
9n2zt3Ux2GeryuQAMe+H/d7F80SdO5kdIOb9tDcIeHjr3GsWB4h5v+1jT5R1
M/qyOUDM+2M/UfXXyp9r2KHm/bM/HLp192VuTqh5DA6lmSy+qzK5HM6B1TM4
8L1M/D31GLfDLLD5jA5x5kwta5V4ofqZHC7t+n2VtY4Pah+zQ/ItUfVNN/ih
5rE4fHO3Zk2aKQA1j8Xh4QbHI6puglDzWB1k3myavfqTINQ8Noe5evc0f80T
gprH7sAS3J0j7i0MNY/DwUn9xxmO78JQ8zgcdBaVaV9eJAI1j9PBWmbqqyo/
Uah5XA6b7+7/yfxLFGoet4PC5ID7hUvFoObxODydzXLoeIA41Dweh+xj1wo5
/ohDzeN1WM5sU2C2XAJqHp/D2r9HvgcHSULN43dYHKfBnPxXEmqegMMljt3B
qSukHADK6wfs
      
      "]], {{LineBox[{{0.10000000000000053`, 0.27716515086063}, {
        0.10000000000000053`, -0.27716515086063}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.10000000000000053`, 0.27716515086063}], 
         Offset[{-1.5, 0}, {0.10000000000000053`, 0.27716515086063}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.10000000000000053`, -0.27716515086063}], 
         Offset[{-1.5, 0}, {0.10000000000000053`, -0.27716515086063}]}]}, {
       LineBox[{{0.20000000000000018`, 0.3669906150784586}, {
        0.20000000000000018`, -0.16885005492777055`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.20000000000000018`, 0.3669906150784586}], 
         Offset[{-1.5, 0}, {0.20000000000000018`, 0.3669906150784586}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.20000000000000018`, -0.16885005492777055`}], 
         Offset[{-1.5, 0}, {
          0.20000000000000018`, -0.16885005492777055`}]}]}, {
       LineBox[{{0.2999999999999998, 0.6112465867823998}, {
        0.2999999999999998, -0.03627898243894545}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2999999999999998, 0.6112465867823998}], 
         Offset[{-1.5, 0}, {0.2999999999999998, 0.6112465867823998}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.2999999999999998, -0.03627898243894545}], 
         Offset[{-1.5, 0}, {0.2999999999999998, -0.03627898243894545}]}]}, {
       LineBox[{{0.40000000000000036`, 0.8349623760851711}, {
        0.40000000000000036`, 0.11346448541394927`}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.40000000000000036`, 0.8349623760851711}], 
         Offset[{-1.5, 0}, {0.40000000000000036`, 0.8349623760851711}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.40000000000000036`, 0.11346448541394927`}], 
         Offset[{-1.5, 0}, {0.40000000000000036`, 0.11346448541394927`}]}]}, {
       LineBox[{{0.5, 1.0450898901687462`}, {0.5, 0.2736176926400208}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.5, 1.0450898901687462`}], 
         Offset[{-1.5, 0}, {0.5, 1.0450898901687462`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.5, 0.2736176926400208}], 
         Offset[{-1.5, 0}, {0.5, 0.2736176926400208}]}]}, {
       LineBox[{{0.6000000000000005, 1.2451870270180199`}, {
        0.6000000000000005, 0.4408009289922728}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.6000000000000005, 1.2451870270180199`}], 
         Offset[{-1.5, 0}, {0.6000000000000005, 1.2451870270180199`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.6000000000000005, 0.4408009289922728}], 
         Offset[{-1.5, 0}, {0.6000000000000005, 0.4408009289922728}]}]}, {
       LineBox[{{0.7000000000000002, 1.4374492777461554`}, {
        0.7000000000000002, 0.6129918948370623}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.7000000000000002, 1.4374492777461554`}], 
         Offset[{-1.5, 0}, {0.7000000000000002, 1.4374492777461554`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.7000000000000002, 0.6129918948370623}], 
         Offset[{-1.5, 0}, {0.7000000000000002, 0.6129918948370623}]}]}, {
       LineBox[{{0.8000000000000007, 1.6233887635897726`}, {
        0.8000000000000007, 0.7888487787015901}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.8000000000000007, 1.6233887635897726`}], 
         Offset[{-1.5, 0}, {0.8000000000000007, 1.6233887635897726`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.8000000000000007, 0.7888487787015901}], 
         Offset[{-1.5, 0}, {0.8000000000000007, 0.7888487787015901}]}]}, {
       LineBox[{{0.9000000000000004, 1.804123945814392}, {0.9000000000000004, 
        0.9674209136091567}}], 
       LineBox[{
        Offset[{1.5, 0}, {0.9000000000000004, 1.804123945814392}], 
         Offset[{-1.5, 0}, {0.9000000000000004, 1.804123945814392}]}], 
       LineBox[{
        Offset[{1.5, 0}, {0.9000000000000004, 0.9674209136091567}], 
         Offset[{-1.5, 0}, {0.9000000000000004, 0.9674209136091567}]}]}, {
       LineBox[{{1., 1.9805234880735045`}, {1., 1.148004489124558}}], 
       LineBox[{
        Offset[{1.5, 0}, {1., 1.9805234880735045`}], 
         Offset[{-1.5, 0}, {1., 1.9805234880735045`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1., 1.148004489124558}], 
         Offset[{-1.5, 0}, {1., 1.148004489124558}]}]}, {
       LineBox[{{1.1000000000000005`, 2.153285679214484}, {
        1.1000000000000005`, 1.3300623689391804`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.1000000000000005`, 2.153285679214484}], 
         Offset[{-1.5, 0}, {1.1000000000000005`, 2.153285679214484}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.1000000000000005`, 1.3300623689391804`}], 
         Offset[{-1.5, 0}, {1.1000000000000005`, 1.3300623689391804`}]}]}, {
       LineBox[{{1.2000000000000002`, 2.3229859087473472`}, {
        1.2000000000000002`, 1.5131757601828524`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.2000000000000002`, 2.3229859087473472`}], 
         Offset[{-1.5, 0}, {1.2000000000000002`, 2.3229859087473472`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.2000000000000002`, 1.5131757601828524`}], 
         Offset[{-1.5, 0}, {1.2000000000000002`, 1.5131757601828524`}]}]}, {
       LineBox[{{1.3000000000000007`, 2.4901068847685335`}, {
        1.3000000000000007`, 1.6970131742811394`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.3000000000000007`, 2.4901068847685335`}], 
         Offset[{-1.5, 0}, {1.3000000000000007`, 2.4901068847685335`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.3000000000000007`, 1.6970131742811394`}], 
         Offset[{-1.5, 0}, {1.3000000000000007`, 1.6970131742811394`}]}]}, {
       LineBox[{{1.4000000000000004`, 2.6550588851565715`}, {
        1.4000000000000004`, 1.8813094579067415`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.4000000000000004`, 2.6550588851565715`}], 
         Offset[{-1.5, 0}, {1.4000000000000004`, 2.6550588851565715`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.4000000000000004`, 1.8813094579067415`}], 
         Offset[{-1.5, 0}, {1.4000000000000004`, 1.8813094579067415`}]}]}, {
       LineBox[{{1.5, 2.818193933891339}, {1.5, 2.0658510354838833`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.5, 2.818193933891339}], 
         Offset[{-1.5, 0}, {1.5, 2.818193933891339}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.5, 2.0658510354838833`}], 
         Offset[{-1.5, 0}, {1.5, 2.0658510354838833`}]}]}, {
       LineBox[{{1.6000000000000005`, 2.979816105190972}, {
        1.6000000000000005`, 2.2504651715138433`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.6000000000000005`, 2.979816105190972}], 
         Offset[{-1.5, 0}, {1.6000000000000005`, 2.979816105190972}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.6000000000000005`, 2.2504651715138433`}], 
         Offset[{-1.5, 0}, {1.6000000000000005`, 2.2504651715138433`}]}]}, {
       LineBox[{{1.7000000000000002`, 3.1401892636308246`}, {
        1.7000000000000002`, 2.4350119417419083`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.7000000000000002`, 3.1401892636308246`}], 
         Offset[{-1.5, 0}, {1.7000000000000002`, 3.1401892636308246`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.7000000000000002`, 2.4350119417419083`}], 
         Offset[{-1.5, 0}, {1.7000000000000002`, 2.4350119417419083`}]}]}, {
       LineBox[{{1.8000000000000007`, 3.2995430491648645`}, {
        1.8000000000000007`, 2.6193780933109747`}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.8000000000000007`, 3.2995430491648645`}], 
         Offset[{-1.5, 0}, {1.8000000000000007`, 3.2995430491648645`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.8000000000000007`, 2.6193780933109747`}], 
         Offset[{-1.5, 0}, {1.8000000000000007`, 2.6193780933109747`}]}]}, {
       LineBox[{{1.9000000000000004`, 3.458077624777083}, {
        1.9000000000000004`, 2.803472260918194}}], 
       LineBox[{
        Offset[{1.5, 0}, {1.9000000000000004`, 3.458077624777083}], 
         Offset[{-1.5, 0}, {1.9000000000000004`, 3.458077624777083}]}], 
       LineBox[{
        Offset[{1.5, 0}, {1.9000000000000004`, 2.803472260918194}], 
         Offset[{-1.5, 0}, {1.9000000000000004`, 2.803472260918194}]}]}, {
       LineBox[{{2., 3.6159675281424635`}, {2., 2.9872211805389135`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2., 3.6159675281424635`}], 
         Offset[{-1.5, 0}, {2., 3.6159675281424635`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2., 2.9872211805389135`}], 
         Offset[{-1.5, 0}, {2., 2.9872211805389135`}]}]}, {
       LineBox[{{2.1000000000000005`, 3.7733648583560617`}, {
        2.1000000000000005`, 3.1705666524271097`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.1000000000000005`, 3.7733648583560617`}], 
         Offset[{-1.5, 0}, {2.1000000000000005`, 3.7733648583560617`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.1000000000000005`, 3.1705666524271097`}], 
         Offset[{-1.5, 0}, {2.1000000000000005`, 3.1705666524271097`}]}]}, {
       LineBox[{{2.2, 3.9304019577889506`}, {2.2, 3.3534630769202844`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.2, 3.9304019577889506`}], 
         Offset[{-1.5, 0}, {2.2, 3.9304019577889506`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.2, 3.3534630769202844`}], 
         Offset[{-1.5, 0}, {2.2, 3.3534630769202844`}]}]}, {
       LineBox[{{2.3000000000000007`, 4.087193702279561}, {
        2.3000000000000007`, 3.535875434806703}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.3000000000000007`, 4.087193702279561}], 
         Offset[{-1.5, 0}, {2.3000000000000007`, 4.087193702279561}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.3000000000000007`, 3.535875434806703}], 
         Offset[{-1.5, 0}, {2.3000000000000007`, 3.535875434806703}]}]}, {
       LineBox[{{2.4000000000000004`, 4.243839481261131}, {
        2.4000000000000004`, 3.7177776172694528`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.4000000000000004`, 4.243839481261131}], 
         Offset[{-1.5, 0}, {2.4000000000000004`, 4.243839481261131}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.4000000000000004`, 3.7177776172694528`}], 
         Offset[{-1.5, 0}, {2.4000000000000004`, 3.7177776172694528`}]}]}, {
       LineBox[{{2.5, 4.40042492767706}, {2.5, 3.8991510338998423`}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.5, 4.40042492767706}], 
         Offset[{-1.5, 0}, {2.5, 4.40042492767706}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.5, 3.8991510338998423`}], 
         Offset[{-1.5, 0}, {2.5, 3.8991510338998423`}]}]}, {
       LineBox[{{2.6000000000000005`, 4.557023442306327}, {
        2.6000000000000005`, 4.079983444193949}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.6000000000000005`, 4.557023442306327}], 
         Offset[{-1.5, 0}, {2.6000000000000005`, 4.557023442306327}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.6000000000000005`, 4.079983444193949}], 
         Offset[{-1.5, 0}, {2.6000000000000005`, 4.079983444193949}]}]}, {
       LineBox[{{2.7, 4.7136975462904624`}, {2.7, 4.260267970363649}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.7, 4.7136975462904624`}], 
         Offset[{-1.5, 0}, {2.7, 4.7136975462904624`}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.7, 4.260267970363649}], 
         Offset[{-1.5, 0}, {2.7, 4.260267970363649}]}]}, {
       LineBox[{{2.8000000000000007`, 4.870500087845733}, {
        2.8000000000000007`, 4.440002258547696}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.8000000000000007`, 4.870500087845733}], 
         Offset[{-1.5, 0}, {2.8000000000000007`, 4.870500087845733}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.8000000000000007`, 4.440002258547696}], 
         Offset[{-1.5, 0}, {2.8000000000000007`, 4.440002258547696}]}]}, {
       LineBox[{{2.9000000000000004`, 5.027475323448263}, {
        2.9000000000000004`, 4.619187762496255}}], 
       LineBox[{
        Offset[{1.5, 0}, {2.9000000000000004`, 5.027475323448263}], 
         Offset[{-1.5, 0}, {2.9000000000000004`, 5.027475323448263}]}], 
       LineBox[{
        Offset[{1.5, 0}, {2.9000000000000004`, 4.619187762496255}], 
         Offset[{-1.5, 0}, {2.9000000000000004`, 4.619187762496255}]}]}, {
       LineBox[{{3., 5.184659889581331}, {3., 4.797829129137538}}], 
       LineBox[{
        Offset[{1.5, 0}, {3., 5.184659889581331}], 
         Offset[{-1.5, 0}, {3., 5.184659889581331}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3., 4.797829129137538}], 
         Offset[{-1.5, 0}, {3., 4.797829129137538}]}]}, {
       LineBox[{{3.1000000000000005`, 5.342083678010764}, {
        3.1000000000000005`, 4.975933669545948}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.1000000000000005`, 5.342083678010764}], 
         Offset[{-1.5, 0}, {3.1000000000000005`, 5.342083678010764}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.1000000000000005`, 4.975933669545948}], 
         Offset[{-1.5, 0}, {3.1000000000000005`, 4.975933669545948}]}]}, {
       LineBox[{{3.2, 5.499770625211426}, {3.2, 5.153510902023546}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.2, 5.499770625211426}], 
         Offset[{-1.5, 0}, {3.2, 5.499770625211426}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.2, 5.153510902023546}], 
         Offset[{-1.5, 0}, {3.2, 5.153510902023546}]}]}, {
       LineBox[{{3.3000000000000007`, 5.657739424796154}, {
        3.3000000000000007`, 5.330572156501858}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.3000000000000007`, 5.657739424796154}], 
         Offset[{-1.5, 0}, {3.3000000000000007`, 5.657739424796154}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.3000000000000007`, 5.330572156501858}], 
         Offset[{-1.5, 0}, {3.3000000000000007`, 5.330572156501858}]}]}, {
       LineBox[{{3.4000000000000004`, 5.816004170447538}, {
        3.4000000000000004`, 5.507130231432516}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.4000000000000004`, 5.816004170447538}], 
         Offset[{-1.5, 0}, {3.4000000000000004`, 5.816004170447538}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.4000000000000004`, 5.507130231432516}], 
         Offset[{-1.5, 0}, {3.4000000000000004`, 5.507130231432516}]}]}, {
       LineBox[{{3.5, 5.974574935813383}, {3.5, 5.683199095885433}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.5, 5.974574935813383}], 
         Offset[{-1.5, 0}, {3.5, 5.974574935813383}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.5, 5.683199095885433}], 
         Offset[{-1.5, 0}, {3.5, 5.683199095885433}]}]}, {
       LineBox[{{3.6000000000000005`, 6.133458297017736}, {
        3.6000000000000005`, 5.858793630804053}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.6000000000000005`, 6.133458297017736}], 
         Offset[{-1.5, 0}, {3.6000000000000005`, 6.133458297017736}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.6000000000000005`, 5.858793630804053}], 
         Offset[{-1.5, 0}, {3.6000000000000005`, 5.858793630804053}]}]}, {
       LineBox[{{3.7, 6.292657802801583}, {3.7, 6.033929404349792}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.7, 6.292657802801583}], 
         Offset[{-1.5, 0}, {3.7, 6.292657802801583}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.7, 6.033929404349792}], 
         Offset[{-1.5, 0}, {3.7, 6.033929404349792}]}]}, {
       LineBox[{{3.8000000000000007`, 6.45217439679626}, {3.8000000000000007`,
         6.208622477056225}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.8000000000000007`, 6.45217439679626}], 
         Offset[{-1.5, 0}, {3.8000000000000007`, 6.45217439679626}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.8000000000000007`, 6.208622477056225}], 
         Offset[{-1.5, 0}, {3.8000000000000007`, 6.208622477056225}]}]}, {
       LineBox[{{3.9000000000000004`, 6.612006796015466}, {
        3.9000000000000004`, 6.3828892331497435`}}], 
       LineBox[{
        Offset[{1.5, 0}, {3.9000000000000004`, 6.612006796015466}], 
         Offset[{-1.5, 0}, {3.9000000000000004`, 6.612006796015466}]}], 
       LineBox[{
        Offset[{1.5, 0}, {3.9000000000000004`, 6.3828892331497435`}], 
         Offset[{-1.5, 0}, {3.9000000000000004`, 6.3828892331497435`}]}]}, {
       LineBox[{{4., 6.772151829303441}, {4., 6.55674623491065}}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 6.772151829303441}], 
         Offset[{-1.5, 0}, {4., 6.772151829303441}]}], 
       LineBox[{
        Offset[{1.5, 0}, {4., 6.55674623491065}], 
         Offset[{-1.5, 0}, {4., 6.55674623491065}]}]}}}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"k.real\"", TraditionalForm], None}, {
     FormBox["\"omega\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotLabel->FormBox["\"Error Bar Plot\"", TraditionalForm],
  PlotRange->{{0, 4.}, {-2, 2}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.701548958640252*^9, 3.701549005269816*^9, 3.701550496369546*^9, 
   3.701553293591155*^9, 3.701553731560471*^9, 3.701553789082683*^9, {
   3.7015538254123907`*^9, 3.70155385364255*^9}, 3.701555386218164*^9, 
   3.7020454774779778`*^9, 3.7020455111238623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Point", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
        "omegakSpectBox2OmegaRealMZAmPointsClean"}], ",", 
       RowBox[{"VertexColors", "\[Rule]", 
        RowBox[{"colorf", "/@", 
         RowBox[{"Rescale", "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
            "omegakSpectBox2OmegaRealMZAmPointsClean"}], ")"}]}]}]}]}], "]"}],
      ",", 
     RowBox[{"Inset", "[", 
      RowBox[{
       RowBox[{"plotLegend", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Min", "@", "#"}], ",", 
             RowBox[{"Max", "@", "#"}]}], "}"}], "&"}], "@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
            "omegakSpectBox2OmegaRealMZAmPointsClean"}], ")"}]}], ",", "20", 
         ",", "colorf"}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
       RowBox[{"ImageScaled", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", 
          RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "4"}], ",", "0.9"}], "}"}], "]"}]}], "]"}]}], 
    "\n", "}"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<k.real\>\"", ",", "\"\<omega\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<k.imag values for different omega and k.real values\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7015553978577967`*^9, 3.7015554597510977`*^9}, {
  3.701555646666752*^9, 3.7015556843623667`*^9}, {3.701555719028406*^9, 
  3.70155585950384*^9}, {3.701555901146501*^9, 3.701555908138728*^9}, {
  3.7015560614434233`*^9, 3.7015560655994377`*^9}, {3.701556299865429*^9, 
  3.70155630274431*^9}, {3.702045518368565*^9, 3.70204552013439*^9}}],

Cell[BoxData[
 GraphicsBox[{PointBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQMHZoLATvsFd9/WrI4B0mD+SfsCF9kypbRL9gbG
IHDZXl9H0qs58h5U/qb958wg+VzJp/YQUx7Y77I80Xju5yt7C7D6x/bW76ds
9k3/YJ+RBgLP7K1nBhk5+3yG6n9p/+67yDZ5nW/2F86AwBv75DrRtZbsP6Hm
fbD3s7s95end3/ZzwOo/2u86VdheuuGfvQnY/M/2f3VmpM3Zz+AA0f/F3tbF
YJ+tKpMDxL5v9nsXzxN17mR2gJj3w94g4OGtc69ZHCDm/bSPPVHWzejL5gAx
77f9RNVfK3+uYYea98f+cOjW3Ze5OaHm/bMvzWTxXZXJBTWPwYHvZeLvqce4
Hc6B1TM4xJkztaxV4nWYBTaf0eHSrt9XWev4oPqZHJJviapvusEPtY/ZAQBJ
Iqju
    "],
    VertexColors->{
      RGBColor[0.09100029430145518, 0., 0.9089997056985448], 
      RGBColor[0.03147942711774787, 0., 0.9685205728822521], 
      RGBColor[0.39100968467310215`, 0., 0.6089903153268978], 
      RGBColor[0.6291375602385925, 0., 0.37086243976140754`], 
      RGBColor[0.7900122670422571, 0., 0.20998773295774287`], 
      RGBColor[0.8959669950852382, 0., 0.10403300491476175`], 
      RGBColor[0.9605794384351412, 0., 0.03942056156485885], 
      RGBColor[0.9930368298268641, 0., 0.0069631701731358575`], 
      RGBColor[1., 0., 0.], 
      RGBColor[0.9865309763018515, 0., 0.013469023698148508`], 
      RGBColor[0.9566067755685728, 0., 0.043393224431427235`], 
      RGBColor[0.9134278183558329, 0., 0.08657218164416713], 
      RGBColor[0.859615124522513, 0., 0.14038487547748701`], 
      RGBColor[0.7973430073114893, 0., 0.20265699268851067`], 
      RGBColor[0.7284322155916412, 0., 0.2715677844083588], 
      RGBColor[0.6544176705699694, 0., 0.34558232943003064`], 
      RGBColor[0.5765992283872077, 0., 0.4234007716127923], 
      RGBColor[0.49608071186582103`, 0., 0.503919288134179], 
      RGBColor[0.4138005938055209, 0., 0.5861994061944791], 
      RGBColor[0.3305565846355525, 0., 0.6694434153644475], 
      RGBColor[0.24702566752040966`, 0., 0.7529743324795903], 
      RGBColor[0.16378066426150917`, 0., 0.8362193357384908], 
      RGBColor[0.08130410926029019, 0., 0.9186958907397098], 
      RGBColor[0., 0., 1.]}], InsetBox[
    GraphicsBox[{{
       {RGBColor[0, 0, 1], RectangleBox[{0, 0}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.26\"\>",
           0.2630309319958392,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 0.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[1, 19], 0.05263157894736842], 0, 
         NCache[
          Rational[18, 19], 0.9473684210526315]], RectangleBox[{0, 1}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.27\"\>",
           0.27120569958040647`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 1.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[2, 19], 0.10526315789473684`], 0, 
         NCache[
          Rational[17, 19], 0.8947368421052632]], RectangleBox[{0, 2}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.28\"\>",
           0.2793804671649738,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 2.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[3, 19], 0.15789473684210525`], 0, 
         NCache[
          Rational[16, 19], 0.8421052631578947]], RectangleBox[{0, 3}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.29\"\>",
           0.28755523474954103`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 3.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[4, 19], 0.21052631578947367`], 0, 
         NCache[
          Rational[15, 19], 0.7894736842105263]], RectangleBox[{0, 4}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.30\"\>",
           0.29573000233410834`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 4.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[5, 19], 0.2631578947368421], 0, 
         NCache[
          Rational[14, 19], 0.7368421052631579]], RectangleBox[{0, 5}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.30\"\>",
           0.3039047699186756,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 5.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[6, 19], 0.3157894736842105], 0, 
         NCache[
          Rational[13, 19], 0.6842105263157895]], RectangleBox[{0, 6}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.31\"\>",
           0.3120795375032429,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 6.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[7, 19], 0.3684210526315789], 0, 
         NCache[
          Rational[12, 19], 0.631578947368421]], RectangleBox[{0, 7}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.32\"\>",
           0.32025430508781016`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 7.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[8, 19], 0.42105263157894735`], 0, 
         NCache[
          Rational[11, 19], 0.5789473684210527]], RectangleBox[{0, 8}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.33\"\>",
           0.3284290726723775,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 8.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[9, 19], 0.47368421052631576`], 0, 
         NCache[
          Rational[10, 19], 0.5263157894736842]], RectangleBox[{0, 9}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.34\"\>",
           0.33660384025694473`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 9.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[10, 19], 0.5263157894736842], 0, 
         NCache[
          Rational[9, 19], 0.47368421052631576`]], RectangleBox[{0, 10}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.34\"\>",
           0.34477860784151204`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 10.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[11, 19], 0.5789473684210527], 0, 
         NCache[
          Rational[8, 19], 0.42105263157894735`]], RectangleBox[{0, 11}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.35\"\>",
           0.3529533754260793,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 11.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[12, 19], 0.631578947368421], 0, 
         NCache[
          Rational[7, 19], 0.3684210526315789]], RectangleBox[{0, 12}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.36\"\>",
           0.3611281430106466,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 12.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[13, 19], 0.6842105263157895], 0, 
         NCache[
          Rational[6, 19], 0.3157894736842105]], RectangleBox[{0, 13}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.37\"\>",
           0.3693029105952139,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 13.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[14, 19], 0.7368421052631579], 0, 
         NCache[
          Rational[5, 19], 0.2631578947368421]], RectangleBox[{0, 14}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.38\"\>",
           0.3774776781797812,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 14.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[15, 19], 0.7894736842105263], 0, 
         NCache[
          Rational[4, 19], 0.21052631578947367`]], RectangleBox[{0, 15}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.39\"\>",
           0.38565244576434843`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 15.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[16, 19], 0.8421052631578947], 0, 
         NCache[
          Rational[3, 19], 0.15789473684210525`]], RectangleBox[{0, 16}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.39\"\>",
           0.39382721334891574`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 16.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[17, 19], 0.8947368421052632], 0, 
         NCache[
          Rational[2, 19], 0.10526315789473684`]], RectangleBox[{0, 17}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.40\"\>",
           0.40200198093348305`,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 17.5}, {1, 0}]}}, {
       {RGBColor[
         NCache[
          Rational[18, 19], 0.9473684210526315], 0, 
         NCache[
          Rational[1, 19], 0.05263157894736842]], RectangleBox[{0, 18}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.41\"\>",
           0.4101767485180503,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 18.5}, {1, 0}]}}, {
       {RGBColor[1, 0, 0], RectangleBox[{0, 19}]}, 
       {GrayLevel[0], InsetBox[
         TagBox[
          InterpretationBox["\<\"0.42\"\>",
           0.4183515161026176,
           AutoDelete->True],
          NumberForm[#, {4, 2}]& ], {3, 19.5}, {1, 0}]}}},
     Frame->True,
     FrameTicks->None,
     PlotRangePadding->0.5], NCache[
    Scaled[{1, Rational[1, 2]}], Scaled[{1, 0.5}]], 
    ImageScaled[{-0.1, Rational[1, 2]}], NCache[
    Scaled[{Rational[1, 4], 0.9}], Scaled[{0.25, 0.9}]]]},
  Axes->True,
  Frame->True,
  FrameLabel->{
    FormBox["\"k.real\"", TraditionalForm], 
    FormBox["\"omega\"", TraditionalForm]},
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"k.imag values for different omega and k.real values\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{{3.701555448170561*^9, 3.701555460324585*^9}, {
   3.701555679674741*^9, 3.701555684597224*^9}, {3.7015557238138*^9, 
   3.70155585982377*^9}, 3.701555908445928*^9, 3.701556065866624*^9, 
   3.701556303755403*^9, 3.701557583158242*^9, 3.702045520587673*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For Real K", "Subsection",
 CellChangeTimes->{{3.702045767741941*^9, 3.702045769380968*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBox2KRealMZAp", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kreal", ",", "0"}], "}"}]}], "}"}], "/.", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
          RowBox[{
          "omegareal", ",", "omegaimag", ",", "kreal", ",", "0", ",", 
           "spectBox2"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"omegareal", ",", 
            RowBox[{"kreal", " ", "0.3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"omegaimag", ",", "0.1"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "listofK"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702045646386573*^9, 3.702045710087822*^9}, {
   3.70204579873563*^9, 3.702045805643216*^9}, {3.702045915037332*^9, 
   3.702045918122847*^9}, {3.70204623542185*^9, 3.702046237242611*^9}, 
   3.702046334408038*^9, {3.7020545526401443`*^9, 3.702054586454506*^9}, {
   3.702054690909244*^9, 3.702054697247809*^9}, {3.702054791912075*^9, 
   3.702054791999185*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"omegakSpectBox2KRealMZAm", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"omegareal", ",", "omegaimag"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"kreal", ",", "0"}], "}"}]}], "}"}], "/.", 
      RowBox[{"FindRoot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConAxialSymOmegaKMZAEqn", "[", 
          RowBox[{
          "omegareal", ",", "omegaimag", ",", "kreal", ",", "0", ",", 
           "spectBox2"}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"omegareal", ",", 
            RowBox[{"kreal", " ", "0.3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"omegaimag", ",", "0.1"}], "}"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"kreal", ",", "listofK"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702054939042309*^9, 3.702054941576886*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"omegakSpectBox2KRealMZApPoints", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"#", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"(", "omegakSpectBox2KRealMZAp", ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegakSpectBox2KRealMZApPointsClean", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"omegakSpectBox2KRealMZApPoints", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "<", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.702054949450017*^9, 3.702054968974062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<export/unstable-regions/lsaGraphc963-omegakKRealMZApPoints.csv\>\"", 
   ",", "omegakSpectBox2KRealMZApPoints"}], "]"}]], "Input",
 CellChangeTimes->{{3.702055051354245*^9, 3.7020550674444323`*^9}}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc963-omegakKRealMZApPoints.\
csv\"\>"], "Output",
 CellChangeTimes->{3.70205507037442*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Data", "Section",
 CellChangeTimes->{{3.701553269182135*^9, 3.701553271382031*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<export/unstable-regions/lsaGraphc963MZAm.csv\>\"", ",", 
    "omegakSpectBox2OmegaRealMZAmPoints"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", ".", "real"}], ",", "omega", ",", 
     RowBox[{"k", ".", "imag"}]}], "}"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.701556106435556*^9, 3.701556115404776*^9}, {
   3.701556334229286*^9, 3.701556345513673*^9}, 3.701620928414481*^9, 
   3.7020455466101294`*^9}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc963MZAm.csv\"\>"], "Output",
 CellChangeTimes->{3.701556360131659*^9, 3.701557583424109*^9, 
  3.7020455619206753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<export/unstable-regions/lsaGraphc963MZAp.csv\>\"", ",", 
    "omegakSpectBox2OmegaRealMZApPoints"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"k", ".", "real"}], ",", "omega", ",", 
     RowBox[{"k", ".", "imag"}]}], "}"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.701556235362578*^9, 3.7015562443704443`*^9}, 
   3.70155635107672*^9, {3.701620930840475*^9, 3.7016209321716547`*^9}, {
   3.702045548521286*^9, 3.702045552365717*^9}}],

Cell[BoxData["\<\"export/unstable-regions/lsaGraphc963MZAp.csv\"\>"], "Output",
 CellChangeTimes->{3.701556354287195*^9, 3.701557583625093*^9, 
  3.702045563701626*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Import", "[", "\"\<graphicMZAp.csv\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}],
            "]"}]}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"colorf", "/@", 
           RowBox[{"Rescale", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Import", "[", "\"\<graphicMZAp.csv\>\"", "]"}], ",", 
                
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], 
                 "&"}]}], "]"}]}], ")"}]}]}]}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"plotLegend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "@", "#"}], ",", 
               RowBox[{"Max", "@", "#"}]}], "}"}], "&"}], "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Import", "[", "\"\<graphicMZAp.csv\>\"", "]"}], ",", 
                
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], 
                 "&"}]}], "]"}]}], ")"}]}], ",", "20", ",", "colorf"}], "]"}],
          ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
         RowBox[{"ImageScaled", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "0.9"}], "}"}], "]"}]}], "]"}]}], 
      "\n", "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<k.real\>\"", ",", "\"\<omega\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<k.imag values for different omega and k.real values\>\""}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.9", "x"}], ",", 
       RowBox[{"0.6", "x"}], ",", 
       RowBox[{"0.3", "x"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"LightGray", ",", 
        RowBox[{"Dashing", "[", "0.03", "]"}]}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<MZA and MAA Dispersion Relation with Crossing\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.70160899341278*^9, 3.701609070154498*^9}, {
  3.701610872432537*^9, 3.701610884862444*^9}}],

Cell[BoxData[
 GraphicsBox[{{PointBox[CompressedData["
1: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
WuPY93Q+xPh/4YCEpA==
     "],
     VertexColors->{
       RGBColor[0.5122140190039518, 0., 0.4877859809960482], 
       RGBColor[0.4951244035088029, 0., 0.5048755964911971], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779893, 0., 0.5048756429220107], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779891, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951242941639524, 0., 0.5048757058360476], 
       RGBColor[0.4951418764631269, 0., 0.5048581235368731], 
       RGBColor[0.49514455627248616`, 0., 0.5048554437275139], 
       RGBColor[0.4951413610842414, 0., 0.5048586389157586], 
       RGBColor[0.48377486262194075`, 0., 0.5162251373780593], 
       RGBColor[0.49514315278942606`, 0., 0.5048568472105739], 
       RGBColor[0.4951243570779959, 0., 0.504875642922004], 
       RGBColor[0.4951243570779891, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779506, 0., 0.5048756429220493], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.49512435707799024`, 0., 0.5048756429220098], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779892, 0., 0.5048756429220108], 
       RGBColor[0.4951243282835483, 0., 0.5048756717164518], 
       RGBColor[0.4951242896951374, 0., 0.5048757103048627], 
       RGBColor[0.49512435707624103`, 0., 0.504875642923759], 
       RGBColor[0.4951243570779893, 0., 0.5048756429220107], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779903, 0., 0.5048756429220097], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.49512435707798913`, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779893, 0., 0.5048756429220107], 
       RGBColor[0.49512435707798974`, 0., 0.5048756429220103], 
       RGBColor[0.4951243570779903, 0., 0.5048756429220097], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.49512435707798946`, 0., 0.5048756429220105], 
       RGBColor[0.49512435110264497`, 0., 0.504875648897355], 
       RGBColor[0.4951242793628097, 0., 0.5048757206371903], 
       RGBColor[0.4951241598266222, 0., 0.5048758401733777], 
       RGBColor[0.49512435590208315`, 0., 0.5048756440979169], 
       RGBColor[0.49512434479087075`, 0., 0.5048756552091292], 
       RGBColor[0.49512435106322444`, 0., 0.5048756489367756], 
       RGBColor[0.4951264198270596, 0., 0.5048735801729404], 
       RGBColor[0.4951243038814576, 0., 0.5048756961185423], 
       RGBColor[0.4951243201197901, 0., 0.5048756798802099], 
       RGBColor[0.4951243133404619, 0., 0.5048756866595381], 
       RGBColor[0.4951243522400837, 0., 0.5048756477599163], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779909, 0., 0.5048756429220091], 
       RGBColor[0.4951243538728741, 0., 0.5048756461271259], 
       RGBColor[0.4951241965187552, 0., 0.5048758034812448], 
       RGBColor[0.49512426887364774`, 0., 0.5048757311263523], 
       RGBColor[0.4951243486508262, 0., 0.5048756513491738], 
       RGBColor[0.4951243132341749, 0., 0.5048756867658251], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.49512435707798896`, 0., 0.504875642922011], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.4951243570779906, 0., 0.5048756429220094], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.49512435707798697`, 0., 0.504875642922013], 
       RGBColor[0.4951243570779895, 0., 0.5048756429220105], 
       RGBColor[0.49512435707798547`, 0., 0.5048756429220145], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495124357077989, 0., 0.5048756429220109], 
       RGBColor[0.495134112397555, 0., 0.504865887602445], 
       RGBColor[0.49511954912814093`, 0., 0.5048804508718591], 
       RGBColor[0.4951242807164886, 0., 0.5048757192835114], 
       RGBColor[0.49515483896408685`, 0., 0.5048451610359131], 
       RGBColor[0.49512435240100444`, 0., 0.5048756475989955], 
       RGBColor[0.5913717619879528, 0., 0.4086282380120472], 
       RGBColor[0.5550147440033659, 0., 0.4449852559966341], 
       RGBColor[0.4951242649056434, 0., 0.5048757350943567], 
       RGBColor[0.49512413878540595`, 0., 0.504875861214594], 
       RGBColor[0.3981294919632647, 0., 0.6018705080367353], 
       RGBColor[0.49514229309664437`, 0., 0.5048577069033556], 
       RGBColor[0.4885028921599562, 0., 0.5114971078400439], 
       RGBColor[0.4951242645425831, 0., 0.5048757354574169], 
       RGBColor[0.4404915955592404, 0., 0.5595084044407597], 
       RGBColor[0.4951242413372449, 0., 0.504875758662755], 
       RGBColor[0.30073523656874435`, 0., 0.6992647634312557], 
       RGBColor[0.49522505050036614`, 0., 0.5047749494996339], 
       RGBColor[0.49578983334988536`, 0., 0.5042101666501146], 
       RGBColor[0.488541051637358, 0., 0.5114589483626419], 
       RGBColor[0.48721266370403166`, 0., 0.5127873362959683], 
       RGBColor[0.4868246936903766, 0., 0.5131753063096234], 
       RGBColor[0.49482660163073217`, 0., 0.5051733983692679], 
       RGBColor[0.43755626100680256`, 0., 0.5624437389931974], 
       RGBColor[0.5669063713367984, 0., 0.43309362866320156`], 
       RGBColor[0.5704107154606406, 0., 0.4295892845393594], 
       RGBColor[0.537042456206698, 0., 0.462957543793302], 
       RGBColor[0.50096175482015, 0., 0.49903824517984996`], 
       RGBColor[0.500481342945591, 0., 0.499518657054409], 
       RGBColor[0.5455459024358886, 0., 0.45445409756411137`], 
       RGBColor[0.4982284871738, 0., 0.5017715128261999], 
       RGBColor[0.4968760927842454, 0., 0.5031239072157546], 
       RGBColor[0.4953307588562241, 0., 0.5046692411437759], 
       RGBColor[0.47256013187412, 0., 0.5274398681258801], 
       RGBColor[0.4167515739856052, 0., 0.5832484260143949], 
       RGBColor[0.4208908788698539, 0., 0.5791091211301461], 
       RGBColor[0.4940480726891625, 0., 0.5059519273108375], 
       RGBColor[0.6283303644221824, 0., 0.3716696355778176], 
       RGBColor[0.4139092761480091, 0., 0.5860907238519909], 
       RGBColor[0.49186623628117526`, 0., 0.5081337637188248], 
       RGBColor[0.49186598927441094`, 0., 0.5081340107255891], 
       RGBColor[0.47392502810334863`, 0., 0.5260749718966513], 
       RGBColor[0.4950941628087305, 0., 0.5049058371912696], 
       RGBColor[0.49508937856345986`, 0., 0.5049106214365402], 
       RGBColor[0.49447855573065563`, 0., 0.5055214442693443], 
       RGBColor[0.494910496375014, 0., 0.5050895036249861], 
       RGBColor[0.5067215975147774, 0., 0.4932784024852226], 
       RGBColor[0.5071156379945722, 0., 0.49288436200542785`], 
       RGBColor[0.4906606182262976, 0., 0.5093393817737024], 
       RGBColor[0.4945625919249032, 0., 0.5054374080750967], 
       RGBColor[0.4934864906570962, 0., 0.5065135093429038], 
       RGBColor[0.46222579336273784`, 0., 0.5377742066372622], 
       RGBColor[0.46242808865418994`, 0., 0.5375719113458101], 
       RGBColor[0.4932201311366453, 0., 0.5067798688633547], 
       RGBColor[0.49269305521815504`, 0., 0.507306944781845], 
       RGBColor[0.49506669229234523`, 0., 0.5049333077076548], 
       RGBColor[0.4914673605899965, 0., 0.5085326394100035], 
       RGBColor[0.49534760439028613`, 0., 0.5046523956097139], 
       RGBColor[0.4951243508783761, 0., 0.504875649121624], 
       RGBColor[0.4955874681112119, 0., 0.5044125318887881], 
       RGBColor[0.6255162062879996, 0., 0.37448379371200036`], 
       RGBColor[0.6307006364419224, 0., 0.3692993635580776], 
       RGBColor[0.6386057542239941, 0., 0.3613942457760059], 
       RGBColor[0.6387345971962698, 0., 0.3612654028037302], 
       RGBColor[0.3532585870724272, 0., 0.6467414129275728], 
       RGBColor[0.45132186461321366`, 0., 0.5486781353867863], 
       RGBColor[0.414727431041457, 0., 0.585272568958543], 
       RGBColor[0.4463846598612811, 0., 0.5536153401387189], 
       RGBColor[0.3231203668772979, 0., 0.676879633122702], 
       RGBColor[0.44418606906074415`, 0., 0.5558139309392558], 
       RGBColor[0.49114181195389506`, 0., 0.5088581880461049], 
       RGBColor[0.4878336893393122, 0., 0.5121663106606877], 
       RGBColor[0.4909949594607134, 0., 0.5090050405392865], 
       RGBColor[0.4317967486284816, 0., 0.5682032513715184], 
       RGBColor[0.43570020663484704`, 0., 0.564299793365153], 
       RGBColor[0.4950806807718503, 0., 0.5049193192281497], 
       RGBColor[0.4825680382746967, 0., 0.5174319617253034], 
       RGBColor[0.48759689970938386`, 0., 0.5124031002906162], 
       RGBColor[0.428782048647777, 0., 0.571217951352223], 
       RGBColor[0.4971600838170273, 0., 0.5028399161829726], 
       RGBColor[0.5132514770744232, 0., 0.4867485229255768], 
       RGBColor[0.5381798045819611, 0., 0.46182019541803887`], 
       RGBColor[0.5273363948158276, 0., 0.4726636051841724], 
       RGBColor[0.5188809849260376, 0., 0.4811190150739624], 
       RGBColor[0.49624329709839354`, 0., 0.5037567029016065], 
       RGBColor[0.5362816778938924, 0., 0.46371832210610764`], 
       RGBColor[0.5154723939357905, 0., 0.4845276060642095], 
       RGBColor[0.5496026416068165, 0., 0.4503973583931835], 
       RGBColor[0.50528251175205, 0., 0.49471748824795003`], 
       RGBColor[0.49505077672476855`, 0., 0.5049492232752315], 
       RGBColor[0.3720799308975422, 0., 0.6279200691024578], 
       RGBColor[0.4950192945118429, 0., 0.5049807054881571], 
       RGBColor[0.495032767862758, 0., 0.504967232137242], 
       RGBColor[0.46076672864689106`, 0., 0.539233271353109], 
       RGBColor[0.4948642986680919, 0., 0.5051357013319081], 
       RGBColor[0.4275009973609276, 0., 0.5724990026390724], 
       RGBColor[0.4892217899142369, 0., 0.5107782100857631], 
       RGBColor[0.49484661907523425`, 0., 0.5051533809247657], 
       RGBColor[0.49454524004466505`, 0., 0.505454759955335], 
       RGBColor[0.4951148425767282, 0., 0.5048851574232718], 
       RGBColor[0.48608216437091506`, 0., 0.513917835629085], 
       RGBColor[0.48829895349764696`, 0., 0.511701046502353], 
       RGBColor[0.49241568838747724`, 0., 0.5075843116125227], 
       RGBColor[0.48334402243892566`, 0., 0.5166559775610744], 
       RGBColor[0.4953720215495002, 0., 0.5046279784504998], 
       RGBColor[0.5303653830492974, 0., 0.46963461695070263`], 
       RGBColor[0.5228207019638477, 0., 0.47717929803615233`], 
       RGBColor[0.5012210830105414, 0., 0.49877891698945864`], 
       RGBColor[0.5845127655362771, 0., 0.41548723446372293`], 
       RGBColor[0.49674356346878823`, 0., 0.5032564365312118], 
       RGBColor[0.4951258856806089, 0., 0.5048741143193911], 
       RGBColor[0.4982865793563717, 0., 0.5017134206436282], 
       RGBColor[0.4962661018656188, 0., 0.5037338981343812], 
       RGBColor[0.4952998294702832, 0., 0.5047001705297167], 
       RGBColor[0.5161750587454679, 0., 0.4838249412545321], 
       RGBColor[0.5440547899844175, 0., 0.4559452100155825], 
       RGBColor[0.5212962438338277, 0., 0.47870375616617233`], 
       RGBColor[0.5808387689531622, 0., 0.4191612310468378], 
       RGBColor[0.4951263973135219, 0., 0.5048736026864781], 
       RGBColor[0.49685710655392373`, 0., 0.5031428934460762], 
       RGBColor[0.41546893964096465`, 0., 0.5845310603590353], 
       RGBColor[0.4814507533495379, 0., 0.5185492466504621], 
       RGBColor[0.41700567595590277`, 0., 0.5829943240440972], 
       RGBColor[0.4727184738585658, 0., 0.5272815261414342], 
       RGBColor[0.48249058603746553`, 0., 0.5175094139625345], 
       RGBColor[0.4124448186812239, 0., 0.587555181318776], 
       RGBColor[0.49506471544477215`, 0., 0.5049352845552278], 
       RGBColor[0.4713272819567968, 0., 0.5286727180432031], 
       RGBColor[0.4825649787913476, 0., 0.5174350212086525], 
       RGBColor[0.4941924590207034, 0., 0.5058075409792966], 
       RGBColor[0.49512435581923536`, 0., 0.5048756441807647], 
       RGBColor[0.4740888414227034, 0., 0.5259111585772966], 
       RGBColor[0.4949271883132515, 0., 0.5050728116867484], 
       RGBColor[0.49441285094228554`, 0., 0.5055871490577144], 
       RGBColor[0.4734667035379584, 0., 0.5265332964620416], 
       RGBColor[0.48334162207737347`, 0., 0.5166583779226266], 
       RGBColor[0.49465721941969726`, 0., 0.5053427805803028], 
       RGBColor[0.4827859297977259, 0., 0.5172140702022741], 
       RGBColor[0., 0., 1.], 
       RGBColor[0.4951223176872793, 0., 0.5048776823127207], 
       RGBColor[0.49508783018684166`, 0., 0.5049121698131583], 
       RGBColor[0.39787322448020124`, 0., 0.6021267755197988], 
       RGBColor[0.49336863314384594`, 0., 0.5066313668561541], 
       RGBColor[0.3353989035492267, 0., 0.6646010964507734], 
       RGBColor[0.4718957979912571, 0., 0.528104202008743], 
       RGBColor[0.4923042019576063, 0., 0.5076957980423937], 
       RGBColor[0.4128726133462883, 0., 0.5871273866537117], 
       RGBColor[0.4950836145203077, 0., 0.5049163854796923], 
       RGBColor[0.5168637196863616, 0., 0.4831362803136384], 
       RGBColor[0.5411677919574517, 0., 0.4588322080425483], 
       RGBColor[0.572450984116878, 0., 0.427549015883122], 
       RGBColor[0.5482981161301171, 0., 0.45170188386988286`], 
       RGBColor[0.6817690686079898, 0., 0.3182309313920102], 
       RGBColor[0.49813197662334613`, 0., 0.5018680233766539], 
       RGBColor[0.5438756602822502, 0., 0.4561243397177498], 
       RGBColor[0.7012389852862834, 0., 0.29876101471371663`], 
       RGBColor[0.49616859329044877`, 0., 0.5038314067095513], 
       RGBColor[0.5034283131116011, 0., 0.4965716868883989], 
       RGBColor[0.5559153785219731, 0., 0.44408462147802685`], 
       RGBColor[0.5300485622147592, 0., 0.46995143778524084`], 
       RGBColor[0.5437458953018778, 0., 0.4562541046981222], 
       RGBColor[0.5970726500200516, 0., 0.4029273499799484], 
       RGBColor[0.5201917248331006, 0., 0.4798082751668994], 
       RGBColor[0.49930106853906353`, 0., 0.5006989314609365], 
       RGBColor[0.5091055149921089, 0., 0.4908944850078911], 
       RGBColor[0.7220223464960034, 0., 0.2779776535039966], 
       RGBColor[0.8557570013212289, 0., 0.1442429986787711], 
       RGBColor[0.8527587117651692, 0., 0.14724128823483085`], 
       RGBColor[0.8521894326459272, 0., 0.14781056735407283`], 
       RGBColor[0.8541576831540748, 0., 0.1458423168459252], 
       RGBColor[0.858671637659435, 0., 0.141328362340565], 
       RGBColor[0.8659194409006482, 0., 0.1340805590993518], 
       RGBColor[0.5136174638970661, 0., 0.4863825361029339], 
       RGBColor[0.4951269945044723, 0., 0.5048730054955277], 
       RGBColor[0.5403085479102653, 0., 0.4596914520897347], 
       RGBColor[0.5192537234410501, 0., 0.48074627655894986`], 
       RGBColor[0.5976487033438865, 0., 0.40235129665611347`], 
       RGBColor[0.5086207103466563, 0., 0.49137928965334365`], 
       RGBColor[0.5128272317807177, 0., 0.48717276821928235`], 
       RGBColor[0.8703254939215403, 0., 0.12967450607845965`], 
       RGBColor[0.5428671926058756, 0., 0.45713280739412443`], 
       RGBColor[0.4971423554049055, 0., 0.5028576445950945], 
       RGBColor[0.7093956175635578, 0., 0.29060438243644215`], 
       RGBColor[0.5541601146691095, 0., 0.4458398853308905], 
       RGBColor[0.4951243757349479, 0., 0.5048756242650521], 
       RGBColor[0.7304980126593533, 0., 0.2695019873406467], 
       RGBColor[0.25090365190228825`, 0., 0.7490963480977118], 
       RGBColor[0.2677310082965435, 0., 0.7322689917034565], 
       RGBColor[0.46212927312231183`, 0., 0.5378707268776881], 
       RGBColor[0.26566510009805155`, 0., 0.7343348999019484], 
       RGBColor[0.36738483405380645`, 0., 0.6326151659461936], 
       RGBColor[0.49332220577307606`, 0., 0.5066777942269239], 
       RGBColor[0.4388504599422819, 0., 0.5611495400577181], 
       RGBColor[0.4943346000346296, 0., 0.5056653999653704], 
       RGBColor[0.10234081893883484`, 0., 0.8976591810611652], 
       RGBColor[0.47959290985598724`, 0., 0.5204070901440128], 
       RGBColor[0.4942624568322376, 0., 0.5057375431677624], 
       RGBColor[0.4879877536683685, 0., 0.5120122463316314], 
       RGBColor[0.4576512184757578, 0., 0.5423487815242423], 
       RGBColor[0.14279903092442298`, 0., 0.8572009690755771], 
       RGBColor[0.39444952055435956`, 0., 0.6055504794456404], 
       RGBColor[0.34533555736544064`, 0., 0.6546644426345594], 
       RGBColor[0.36121017949847833`, 0., 0.6387898205015217], 
       RGBColor[0.08477922742168847, 0., 0.9152207725783115], 
       RGBColor[0.44400649265675696`, 0., 0.555993507343243], 
       RGBColor[0.4193172934018008, 0., 0.5806827065981992], 
       RGBColor[0.28909642488057685`, 0., 0.7109035751194231], 
       RGBColor[0.4950992574073264, 0., 0.5049007425926736], 
       RGBColor[0.32705112244338164`, 0., 0.6729488775566184], 
       RGBColor[0.5309135830117616, 0., 0.4690864169882384], 
       RGBColor[0.9032510197099424, 0., 0.09674898029005763], 
       RGBColor[0.893989591352865, 0., 0.10601040864713496`], 
       RGBColor[0.5143943909883198, 0., 0.48560560901168015`], 
       RGBColor[0.5665224527037858, 0., 0.43347754729621424`], 
       RGBColor[0.49512773653037223`, 0., 0.5048722634696278], 
       RGBColor[0.8736358310518486, 0., 0.1263641689481514], 
       RGBColor[0.49514181023654286`, 0., 0.5048581897634572], 
       RGBColor[0.6049337858866777, 0., 0.3950662141133223], 
       RGBColor[0.8816489700329162, 0., 0.1183510299670838], 
       RGBColor[0.5205715886030117, 0., 0.47942841139698833`], 
       RGBColor[0.5773836414438922, 0., 0.4226163585561078], 
       RGBColor[0.49966337037095876`, 0., 0.5003366296290412], 
       RGBColor[0.4951435051964754, 0., 0.5048564948035246], 
       RGBColor[0.6231132744573017, 0., 0.3768867255426983], 
       RGBColor[0.525406891478569, 0., 0.474593108521431], 
       RGBColor[0.6428332636926556, 0., 0.3571667363073444], 
       RGBColor[0.6159926221485525, 0., 0.38400737785144745`], 
       RGBColor[0.5267503606644393, 0., 0.47324963933556075`], 
       RGBColor[0.765505317436683, 0., 0.23449468256331696`], 
       RGBColor[0.5048594567160043, 0., 0.4951405432839957], 
       RGBColor[0.6343544873158452, 0., 0.3656455126841548], 
       RGBColor[0.501951471972527, 0., 0.498048528027473], 
       RGBColor[0.49668879717905423`, 0., 0.5033112028209458], 
       RGBColor[0.6211897933905667, 0., 0.3788102066094333], 
       RGBColor[0.5582899399013234, 0., 0.44171006009867664`], 
       RGBColor[0.775168283299335, 0., 0.22483171670066504`], 
       RGBColor[0.7234557633804006, 0., 0.27654423661959937`], 
       RGBColor[0.5197356513438225, 0., 0.4802643486561775], 
       RGBColor[0.49637767505784897`, 0., 0.503622324942151], 
       RGBColor[0.49627785545088865`, 0., 0.5037221445491114], 
       RGBColor[0.49537204572110183`, 0., 0.5046279542788982], 
       RGBColor[0.7598757748979904, 0., 0.2401242251020096], 
       RGBColor[0.4954855428296541, 0., 0.5045144571703459], 
       RGBColor[0.5681191293436121, 0., 0.4318808706563879], 
       RGBColor[0.6240518710562883, 0., 0.37594812894371166`], 
       RGBColor[0.5827567072068048, 0., 0.41724329279319516`], 
       RGBColor[0.7705305741320756, 0., 0.2294694258679244], 
       RGBColor[0.5084209067306701, 0., 0.4915790932693299], 
       RGBColor[0.6165587475018284, 0., 0.3834412524981716], 
       RGBColor[0.6623548086486875, 0., 0.33764519135131255`], 
       RGBColor[0.5189446523212699, 0., 0.48105534767873015`], 
       RGBColor[0.7850307599148114, 0., 0.21496924008518858`], 
       RGBColor[0.49814767528137954`, 0., 0.5018523247186204], 
       RGBColor[0.5402795635651492, 0., 0.45972043643485083`], 
       RGBColor[0.5686329067126723, 0., 0.4313670932873277], 
       RGBColor[0.9720670235269733, 0., 0.027932976473026727`], 
       RGBColor[0.7623277284539032, 0., 0.23767227154609682`], 
       RGBColor[0.5615141835128085, 0., 0.43848581648719154`], 
       RGBColor[0.509751767146038, 0., 0.490248232853962], 
       RGBColor[0.5148700006487571, 0., 0.4851299993512429], 
       RGBColor[0.5104416358019959, 0., 0.48955836419800414`], 
       RGBColor[0.5118659477680535, 0., 0.4881340522319465], 
       RGBColor[1., 0., 0.], 
       RGBColor[0.6298509863319248, 0., 0.3701490136680752], 
       RGBColor[0.5658507075158226, 0., 0.43414929248417744`], 
       RGBColor[0.564206332375632, 0., 0.435793667624368], 
       RGBColor[0.5077965150455752, 0., 0.4922034849544248], 
       RGBColor[0.7348999890296991, 0., 0.2651000109703009], 
       RGBColor[0.9484442593470273, 0., 0.05155574065297275], 
       RGBColor[0.5904425262182859, 0., 0.40955747378171414`], 
       RGBColor[0.5075432796153125, 0., 0.49245672038468746`], 
       RGBColor[0.6740727710650675, 0., 0.32592722893493253`], 
       RGBColor[0.9514020923640788, 0., 0.0485979076359212], 
       RGBColor[0.954610258355431, 0., 0.04538974164456899], 
       RGBColor[0.4968191605112936, 0., 0.5031808394887064], 
       RGBColor[0.9730986203373055, 0., 0.026901379662694458`], 
       RGBColor[0.786895356037661, 0., 0.21310464396233897`], 
       RGBColor[0.800230324321963, 0., 0.19976967567803705`], 
       RGBColor[0.8169537361635778, 0., 0.1830462638364222], 
       RGBColor[0.4955156143512768, 0., 0.5044843856487232], 
       RGBColor[0.4955740596935758, 0., 0.5044259403064242], 
       RGBColor[0.4951846721664039, 0., 0.5048153278335961], 
       RGBColor[0.49512428317831353`, 0., 0.5048757168216864], 
       RGBColor[0.8438957510366807, 0., 0.15610424896331931`], 
       RGBColor[0.4951526480594521, 0., 0.5048473519405479], 
       RGBColor[0.49557481288637095`, 0., 0.504425187113629], 
       RGBColor[0.4951248023599102, 0., 0.5048751976400898], 
       RGBColor[0.4951243429029176, 0., 0.5048756570970824], 
       RGBColor[0.4953482582107113, 0., 0.5046517417892886], 
       RGBColor[0.4951242589850296, 0., 0.5048757410149705], 
       RGBColor[0.5536398150563359, 0., 0.44636018494366414`], 
       RGBColor[0.5522935508679976, 0., 0.4477064491320024], 
       RGBColor[0.5502379454353089, 0., 0.4497620545646911], 
       RGBColor[0.5499897812849808, 0., 0.45001021871501923`], 
       RGBColor[0.5432981132512361, 0., 0.4567018867487639], 
       RGBColor[0.4951243360076853, 0., 0.5048756639923146], 
       RGBColor[0.49512432011570745`, 0., 0.5048756798842926], 
       RGBColor[0.4951530236286751, 0., 0.5048469763713249], 
       RGBColor[0.4955991231617176, 0., 0.5044008768382824], 
       RGBColor[0.5022189763584758, 0., 0.4977810236415242], 
       RGBColor[0.5523189401650568, 0., 0.4476810598349432], 
       RGBColor[0.49515316398174697`, 0., 0.504846836018253], 
       RGBColor[0.49512429342394654`, 0., 0.5048757065760534], 
       RGBColor[0.4951242355802858, 0., 0.5048757644197142], 
       RGBColor[0.5059326055901788, 0., 0.49406739440982117`], 
       RGBColor[0.6017836573431145, 0., 0.39821634265688555`], 
       RGBColor[0.6102142614046275, 0., 0.38978573859537247`], 
       RGBColor[0.5095492733022338, 0., 0.49045072669776624`], 
       RGBColor[0.4952298705280179, 0., 0.5047701294719821], 
       RGBColor[0.4960730771180533, 0., 0.5039269228819467], 
       RGBColor[0.49610180701776, 0., 0.5038981929822399], 
       RGBColor[0.49555034749066024`, 0., 0.5044496525093398], 
       RGBColor[0.4951263773566673, 0., 0.5048736226433327], 
       RGBColor[0.49879256598568, 0., 0.50120743401432], 
       RGBColor[0.4960758018871506, 0., 0.5039241981128494], 
       RGBColor[0.4951261942292493, 0., 0.5048738057707507], 
       RGBColor[0.49559974356716024`, 0., 0.5044002564328398], 
       RGBColor[0.4989624239255876, 0., 0.5010375760744123], 
       RGBColor[0.49513838417383754`, 0., 0.5048616158261625], 
       RGBColor[0.49515563190743894`, 0., 0.5048443680925611], 
       RGBColor[0.49525150578620675`, 0., 0.5047484942137932], 
       RGBColor[0.49524874113396294`, 0., 0.504751258866037], 
       RGBColor[0.5109755443349743, 0., 0.4890244556650257], 
       RGBColor[0.49523728932121297`, 0., 0.5047627106787871], 
       RGBColor[0.4955967978873248, 0., 0.5044032021126752], 
       RGBColor[0.495126219243397, 0., 0.504873780756603], 
       RGBColor[0.4987601956886404, 0., 0.5012398043113596], 
       RGBColor[0.524807868623742, 0., 0.47519213137625804`], 
       RGBColor[0.5602759989330157, 0., 0.4397240010669843], 
       RGBColor[0.4953713186972942, 0., 0.5046286813027058], 
       RGBColor[0.4951243196916021, 0., 0.5048756803083979], 
       RGBColor[0.4952380808066871, 0., 0.5047619191933129], 
       RGBColor[0.4951242603447375, 0., 0.5048757396552626], 
       RGBColor[0.4951242819774586, 0., 0.5048757180225414], 
       RGBColor[0.4951242253495376, 0., 0.5048757746504624], 
       RGBColor[0.49512431964161857`, 0., 0.5048756803583814], 
       RGBColor[0.49511658766450717`, 0., 0.5048834123354928], 
       RGBColor[0.49512417565810657`, 0., 0.5048758243418934], 
       RGBColor[0.49512435686435036`, 0., 0.5048756431356496], 
       RGBColor[0.4951242868041158, 0., 0.5048757131958842], 
       RGBColor[0.49512427667822634`, 0., 0.5048757233217737], 
       RGBColor[0.49512421917594446`, 0., 0.5048757808240556], 
       RGBColor[0.49512420505396826`, 0., 0.5048757949460317], 
       RGBColor[0.4951240473314152, 0., 0.5048759526685849], 
       RGBColor[0.4951242455440898, 0., 0.5048757544559102], 
       RGBColor[0.49512412677322104`, 0., 0.504875873226779], 
       RGBColor[0.49512428163886557`, 0., 0.5048757183611344], 
       RGBColor[0.4951243316972427, 0., 0.5048756683027573], 
       RGBColor[0.49512429846489164`, 0., 0.5048757015351084], 
       RGBColor[0.5081529345262277, 0., 0.4918470654737723], 
       RGBColor[0.4951242416962476, 0., 0.5048757583037524], 
       RGBColor[0.49562742998125164`, 0., 0.5043725700187484], 
       RGBColor[0.6201031017090697, 0., 0.3798968982909303], 
       RGBColor[0.4951572079319016, 0., 0.5048427920680985], 
       RGBColor[0.4951243513980781, 0., 0.5048756486019219], 
       RGBColor[0.4999257129786731, 0., 0.5000742870213268], 
       RGBColor[0.49731743109634063`, 0., 0.5026825689036594], 
       RGBColor[0.5310174674500714, 0., 0.4689825325499286], 
       RGBColor[0.5121639392496611, 0., 0.4878360607503389], 
       RGBColor[0.7365173554245863, 0., 0.2634826445754137], 
       RGBColor[0.5124785241020303, 0., 0.4875214758979697], 
       RGBColor[0.5307951000123683, 0., 0.4692048999876317], 
       RGBColor[0.4951328890240295, 0., 0.5048671109759705], 
       RGBColor[0.4994648930135009, 0., 0.5005351069864992], 
       RGBColor[0.49512418495848287`, 0., 0.5048758150415171], 
       RGBColor[0.49526535879857986`, 0., 0.5047346412014202], 
       RGBColor[0.4951982839050857, 0., 0.5048017160949143], 
       RGBColor[0.49513351525978516`, 0., 0.5048664847402149], 
       RGBColor[0.49519426533664934`, 0., 0.5048057346633507], 
       RGBColor[0.6226500880247028, 0., 0.3773499119752972], 
       RGBColor[0.4951243092033752, 0., 0.5048756907966248], 
       RGBColor[0.49539921542967136`, 0., 0.5046007845703286], 
       RGBColor[0.5301633637490722, 0., 0.46983663625092775`], 
       RGBColor[0.5036717425972987, 0., 0.49632825740270126`], 
       RGBColor[0.5126737305813378, 0., 0.4873262694186622], 
       RGBColor[0.4951242975265145, 0., 0.5048757024734856], 
       RGBColor[0.49512425512045594`, 0., 0.504875744879544], 
       RGBColor[0.49512434165421454`, 0., 0.5048756583457854], 
       RGBColor[0.4951243473796428, 0., 0.5048756526203573], 
       RGBColor[0.49512411371205733`, 0., 0.5048758862879427], 
       RGBColor[0.4951242545100804, 0., 0.5048757454899195], 
       RGBColor[0.4951243468557692, 0., 0.5048756531442308], 
       RGBColor[0.4951241535450977, 0., 0.5048758464549024], 
       RGBColor[0.4951243554636841, 0., 0.5048756445363158], 
       RGBColor[0.4951242425703638, 0., 0.5048757574296362], 
       RGBColor[0.4951243507484973, 0., 0.5048756492515027], 
       RGBColor[0.49512419328147655`, 0., 0.5048758067185235], 
       RGBColor[0.49512416945476734`, 0., 0.5048758305452327], 
       RGBColor[0.4951243312189784, 0., 0.5048756687810216], 
       RGBColor[0.49512425096150947`, 0., 0.5048757490384905], 
       RGBColor[0.49512425377675706`, 0., 0.5048757462232429], 
       RGBColor[0.4951242456451698, 0., 0.5048757543548301], 
       RGBColor[0.4951243021332727, 0., 0.5048756978667273], 
       RGBColor[0.49512409644566135`, 0., 0.5048759035543386], 
       RGBColor[0.49512435639222596`, 0., 0.504875643607774], 
       RGBColor[0.49512425689324074`, 0., 0.5048757431067592]}], InsetBox[
     GraphicsBox[{{
        {RGBColor[0, 0, 1], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.02\"\>",
            -0.021635948542120843`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 0.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[1, 19], 0.05263157894736842], 0, 
          NCache[
           Rational[18, 19], 0.9473684210526315]], RectangleBox[{0, 1}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.02\"\>",
            -0.019336053338992173`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 1.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[2, 19], 0.10526315789473684`], 0, 
          NCache[
           Rational[17, 19], 0.8947368421052632]], RectangleBox[{0, 2}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.02\"\>",
            -0.017036158135863504`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 2.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[3, 19], 0.15789473684210525`], 0, 
          NCache[
           Rational[16, 19], 0.8421052631578947]], RectangleBox[{0, 3}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.01\"\>",
            -0.014736262932734832`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 3.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[4, 19], 0.21052631578947367`], 0, 
          NCache[
           Rational[15, 19], 0.7894736842105263]], RectangleBox[{0, 4}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.01\"\>",
            -0.012436367729606162`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 4.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[5, 19], 0.2631578947368421], 0, 
          NCache[
           Rational[14, 19], 0.7368421052631579]], RectangleBox[{0, 5}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.01\"\>",
            -0.01013647252647749,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 5.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[6, 19], 0.3157894736842105], 0, 
          NCache[
           Rational[13, 19], 0.6842105263157895]], RectangleBox[{0, 6}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.01\"\>",
            -0.00783657732334882,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 6.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[7, 19], 0.3684210526315789], 0, 
          NCache[
           Rational[12, 19], 0.631578947368421]], RectangleBox[{0, 7}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.01\"\>",
            -0.005536682120220151,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 7.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[8, 19], 0.42105263157894735`], 0, 
          NCache[
           Rational[11, 19], 0.5789473684210527]], RectangleBox[{0, 8}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.00\"\>",
            -0.003236786917091481,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 8.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[9, 19], 0.47368421052631576`], 0, 
          NCache[
           Rational[10, 19], 0.5263157894736842]], RectangleBox[{0, 9}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.00\"\>",
            -0.0009368917139628112,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 9.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[10, 19], 0.5263157894736842], 0, 
          NCache[
           Rational[9, 19], 0.47368421052631576`]], RectangleBox[{0, 10}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.00\"\>",
            0.0013630034891658586`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 10.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[11, 19], 0.5789473684210527], 0, 
          NCache[
           Rational[8, 19], 0.42105263157894735`]], RectangleBox[{0, 11}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.00\"\>",
            0.003662898692294532,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 11.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[12, 19], 0.631578947368421], 0, 
          NCache[
           Rational[7, 19], 0.3684210526315789]], RectangleBox[{0, 12}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.01\"\>",
            0.005962793895423202,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 12.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[13, 19], 0.6842105263157895], 0, 
          NCache[
           Rational[6, 19], 0.3157894736842105]], RectangleBox[{0, 13}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.01\"\>",
            0.008262689098551872,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 13.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[14, 19], 0.7368421052631579], 0, 
          NCache[
           Rational[5, 19], 0.2631578947368421]], RectangleBox[{0, 14}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.01\"\>",
            0.010562584301680542`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 14.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[15, 19], 0.7894736842105263], 0, 
          NCache[
           Rational[4, 19], 0.21052631578947367`]], RectangleBox[{0, 15}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.01\"\>",
            0.012862479504809211`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 15.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[16, 19], 0.8421052631578947], 0, 
          NCache[
           Rational[3, 19], 0.15789473684210525`]], RectangleBox[{0, 16}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.02\"\>",
            0.015162374707937881`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 16.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[17, 19], 0.8947368421052632], 0, 
          NCache[
           Rational[2, 19], 0.10526315789473684`]], RectangleBox[{0, 17}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.02\"\>",
            0.01746226991106655,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 17.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[18, 19], 0.9473684210526315], 0, 
          NCache[
           Rational[1, 19], 0.05263157894736842]], RectangleBox[{0, 18}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.02\"\>",
            0.01976216511419522,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 18.5}, {1, 0}]}}, {
        {RGBColor[1, 0, 0], RectangleBox[{0, 19}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.02\"\>",
            0.02206206031732389,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 19.5}, {1, 0}]}}},
      Frame->True,
      FrameTicks->None,
      PlotRangePadding->0.5], NCache[
     Scaled[{1, Rational[1, 2]}], Scaled[{1, 0.5}]], 
     ImageScaled[{-0.1, Rational[1, 2]}], NCache[
     Scaled[{Rational[1, 4], 0.9}], Scaled[{0.25, 0.9}]]]}, {{}, {}, 
    {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], Dashing[0.03], 
     LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAchzHcRzHAcAAAAAAAAAAwOB0oS7W
qAHALZ8ih4HJ/79pnJGjnGoAwFfm0oyzjP2/WH5ZI6wi/r+28TaGNB/7vyjr
KVtUnvu/C7ql60vb+L9rTlCF4uP4v5RGyESyZva/WnNPPTY29r/R5y03l/3z
v5O/6FC/tvO/BEaelRK+8b8/AthWLgHxv9jQhM+5m+6/atjCcKXz7L+Tj+JL
ew7qvzyZgRi6eOe/ttanr9of5b9o3fHbWRfiv0RH80U3SOC/T+Asrcgk2r96
Y6hogYfXvza/m9fqhM6/fpJyKKB3y7858F1j3mO0v2eL1L/hWbK/K4PvCsB1
sz/awgo9k4OxP6/H7ql/WM8/6uZWfww2zD+9Sco4OsLZP11C6f/NLtc/66qi
aU5Y4j86AKz4rILgP52tLpv0tec/2jXdvvVW5T+8YYYVMLfsP5Dx+KwR2Ok/
ehSZ1U8S8T/cJK2zj7ruP8zQ1ETSmvM/Hu8lcfCk8T9xyzcmjxb2Pxk3Mm8a
4fM/pM9EFWbI+D/huop59U32P4yst6gHTPs/sYHYFzqR+D8Bk9RJwwX+P06E
csIvBfs/F6mrx6RIAED2yQEBj0/9P9angCMFiAFA6PpNpm+O/z9yHMdxHMcB
QAAAAAAAAABAkzYB/w==
      "]]}, 
    {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], Dashing[0.03], 
     LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAqqqqqqqqCsAAAAAAAAAAwKQTo/TZ
ggnAXuT2iwWd/r/DW8qNvz8IwFChv0NMGf2/HJ8cIJjhBsC7i1XzHHX7v0tD
W3nTiQXA84NtXpfY+b8f+2aAKUkEwCX64WbLV/i/La6dgHLtAsDPnSNnibb2
v+B0oS7WqAHAc7/BBAEx9b9pnJGjnGoAwOTu4V0is/O/WH5ZI6wi/r/OS8+u
zRTyvyjrKVtUnvu/sSYZnTKS8L9rTlCF4uP4vxpeYAZD3u2/WnNPPTY29r9s
ipJJdKfqv5O/6FC/tvO/sLJ9xxio578/AthWLgHxv+U1AzXRZ+S/atjCcKXz
7L8MtUHd/F7hvzyZgRi6eOe/SB416ngq3L9o3fHbWRfiv7AJ7weftdW/T+As
rcgk2r/42TU2V1/Pvza/m9fqhM6/Uwz3GsBPwr858F1j3mO0v965cKrXd6i/
K4PvCsB1sz/NA7mmGVqnP6/H7ql/WM8/nESP/7LOwj+9Sco4OsLZP3xYjKoS
6c4/66qiaU5Y4j9NAJBLkQPWP52tLpv0tec/I53RU/Jz3D+8YYYVMLfsPwqh
UHO2OuE/ehSZ1U8S8T+SGB7NX3zkP8zQ1ETSmvM/KJQy7JWG5z9xyzcmjxb2
PyH0QpR4geo/pM9EFWbI+D8r+bhMR73tP4yst6gHTPs/IQE7ZdFg8D8Bk9RJ
wwX+PzRYTCx1A/I/F6mrx6RIAEBPMQFWX4rzP9angCMFiAFAmvwzxJ8J9T9b
qyqGcuICQG2amTpWqfY/PJsHO8UlBEBIuqITUy34P+OPufYkhAVAqqze9MXR
+T+0I3/rIdwGQD6RmBqPbvs/4KN3MgQdCEDZ9/Winu/8P9IoRYDzeAlA/DCG
MySR/j+sqqqqqqoKQAAAAAAAAABA6tNalA==
      "]]}, 
    {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], Dashing[0.03], 
     LineBox[CompressedData["
1:eJwt1Pk/1HkcwHGMI9d89xHKILmS5Ch23Hl/QhtLjZJcNY4OHTql1KM2RR5d
mx1dDJPESJJypJro8y3JncXkKnYaXRo5vl9Nis1uj0c/vB6v/+BpGrNr9SYl
BQWFFf/343Yw6+P0NEEahmlbOjrSeM22+Se/fiPIZihdZb+IxocuuljSnwny
sGXwkYW2NK6Thce8kxFkP50tNp9P46iMnN7mLoK8es4mWdeQxrwxq6bM2wRp
8dRf8lmJxuN57sWOkQRpY3+af7+dwqIZ0TtjHzFJDxU1wnMvhY+2dMoeR2uT
LN/3tHbuGB4UsmY7G2mRVEPCdVHfKLb+x1ed6NMgy1fXungYj+J8nbzxnuPq
JPeN/IyKYBjXRDT+iWEGGZiLvQNYn7BRjpFJxmtV8uGZYNooQYb9vSMOdpxS
IenkHdzL3YN47uTmpAV+yuS8b683N4V8wLYlgqS9n5TIVoF57KnKd1iyL9eu
s1CRjMePlRUXv8Vbs3l52dsUyDfDr9eblQ/g0D/CzIvNvuPn/q0lLbpSbCVb
ELHmyiQutWQJHNIlePvKwBPSgQlswI1S9e7vw+HxnCVOTnIcdzrdb9/1Xnwe
fwjElTS+U3akTr+wC4NS91o7xTH8ls1gt8WK8bbuJ7uF9BDWuru0b4rbhj0y
j+mLEt9jX2P2x0TrZrylb+xl2GwpvqM+opZztxZzJDa36i168UQP2ykkEmMn
nNX1MeU5DtL6YkByyrDr6PoN/RsqcP+D3UVdBzLwwuQRDTKhHFoYDwpY4Zfh
dt3wjaOhrZDtkzZd9rwMqv0aXdye9MDh0LNFMwcfgazo2taVoVJYofCXP4/x
DAS37LLG774Hc0FbEBXfDFXRqXqL7g2BRm5gfKVbGxzSzXzBmTkG6frGLZGH
xdD8t9innU+D1QWHoYupXbCnydkybZYcTMe9LiQe64X8Vh+9zfUTsPDr/YDl
1X1wtvheoVrAJJgqum9qi5KA4nmxX43Kd/g1NMAmgSGF2Tdu1uX7KiDOYsW1
kacHoPN6krnKSUXEn3J8mqP+FiJuWqfulSqhHfxMt7U33oFHlpp77Txl5Cu6
phNk+wEG0h7ILVJUUFFx/3ht2yBUmB+Vmb5SRZ68DIO0nTKQ5B1wUJ4zA/V8
+XztysgQtFstS6IT1dHUolRHC94wzOUvM6mv1kAz5et0EjVH4VJR2FfXKU1E
NrPtTzWOQgf26rkfrI3KtKw4LzLHYPtjruacDCYq0I676hNBQUxOz6UqAROJ
04+H53MpCD+yxmxdHhMx9DN1lWMo8HX93TWrhIm4Zs9O1myhwKKUHcuqZSI9
Z5M9XvspeHVVq0aPYqKUKPFSxKMgIEl0iBlAoOhyjwH3Ogq8uWzVklUEOucS
JMhqpMDN4w5vRQiBqqq3hky2UGA1ISw8G0Mg/fpLTSIxBcq7eZ0aBwnU+mq0
3FVKQXXkFge1AgJ5qgpTnP+loGLJQHXBTQLFnXnoeVmBhmJDrt9vpQTi/9I+
IWfQwO8KijpRRSC5wXRcpQYN+zlwjtFBoFv2YcFsfRp22IpYed0Eelmxi7ho
SMNGTbbQq59A6m6pDePGNKyus646NkigjT7lSyrm0eAnFC43HSFQekPDF50F
NKBkkw5ynEDkSklpvA0NztFZ3KhvBBrukG/vsKfhp1/op1/wH+JeZS0=
      "]]}}},
  Axes->True,
  Frame->True,
  FrameLabel->{
    FormBox["\"k.real\"", TraditionalForm], 
    FormBox["\"omega\"", TraditionalForm]},
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"k.imag values for different omega and k.real values\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.7016090266633463`*^9, 3.7016090721055403`*^9, {3.701610880103304*^9, 
   3.701610885245201*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<export/unstable-regions/lsaGraphc963MZAm.csv\>\"", 
     "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "<", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "<", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}]}], "&"}]}], "]"}], 
  "//", "Length"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<export/unstable-regions/lsaGraphc963MZAp.csv\>\"", 
     "]"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "<", 
        RowBox[{"#", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "<", 
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "<", 
        RowBox[{"##", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "<", "1"}], ")"}]}], "&"}]}], "]"}], 
  "//", "Length"}]}], "Input",
 CellChangeTimes->{{3.701609112662895*^9, 3.701609147831954*^9}, {
  3.701620901238737*^9, 3.701620916809314*^9}}],

Cell[BoxData["334"], "Output",
 CellChangeTimes->{3.701609105152247*^9, 3.7016091482556887`*^9}],

Cell[BoxData["329"], "Output",
 CellChangeTimes->{3.701609105152247*^9, 3.701609148332152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"Import", "[", "\"\<graphicMZAm.csv\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "<", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "<", 
                RowBox[{"##", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "<", "1"}], ")"}]}], "&"}]}],
            "]"}]}], ",", 
         RowBox[{"VertexColors", "\[Rule]", 
          RowBox[{"colorf", "/@", 
           RowBox[{"Rescale", "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Import", "[", "\"\<graphicMZAm.csv\>\"", "]"}], ",", 
                
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "<", 
                    RowBox[{"##", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "<", "1"}], ")"}]}], 
                 "&"}]}], "]"}]}], ")"}]}]}]}]}], "]"}], ",", 
       RowBox[{"Inset", "[", 
        RowBox[{
         RowBox[{"plotLegend", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "@", "#"}], ",", 
               RowBox[{"Max", "@", "#"}]}], "}"}], "&"}], "@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "&"}], "/@", 
              RowBox[{"Select", "[", 
               RowBox[{
                RowBox[{"Import", "[", "\"\<graphicMZAm.csv\>\"", "]"}], ",", 
                
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "<", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", "4"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "<", 
                    RowBox[{"##", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "<", "1"}], ")"}]}], 
                 "&"}]}], "]"}]}], ")"}]}], ",", "20", ",", "colorf"}], "]"}],
          ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
         RowBox[{"ImageScaled", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], "]"}], ",", 
         RowBox[{"Scaled", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", "0.9"}], "}"}], "]"}]}], "]"}]}], 
      "\n", "}"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<k.real\>\"", ",", "\"\<omega\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<k.imag values for different omega and k.real values\>\""}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.9", "x"}], ",", 
       RowBox[{"0.6", "x"}], ",", 
       RowBox[{"0.3", "x"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"LightGray", ",", 
        RowBox[{"Dashing", "[", "0.03", "]"}]}], "]"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<MZA and MAA Dispersion Relation with Crossing\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.701609085582417*^9, 3.701609092821556*^9}, {
  3.701609159530766*^9, 3.701609165432568*^9}, {3.701610643509276*^9, 
  3.70161065934726*^9}, {3.701610845233347*^9, 3.70161084621764*^9}}],

Cell[BoxData[
 GraphicsBox[{{PointBox[CompressedData["
1:eJw12Hk8VOsbAPAzY2eQytJtUWlflfbieZPSgtAudVtR3frRou1WWhTahFa5
LVS3UqlcZHvHWklSyJbsu+zMMGPmxzlP5x+f+RjveZ/n+7yP55wR2/5nv5PP
MMwyHsP0/TQ+pZM0p5sR+iZ2jHO8KqNTJ6Y/bnJghK6m6rnBrj305tf6/nsn
M8JhnvV2UcN66Eydi8nP9RhhZ++3EzukNMYuoyRbLqfp7CWl7/MVltl/k9MQ
dgEpDV5QHPolRE6PDXxpWXpMSl/UlBhZH5ZT+6i+FaVUN37akbRlcsouN05K
f/hWl1sOkVOGvaQ0wvtf+5RGGf0e3LeghH46NfyFeYKM9q028KWExpo5jBX6
y+i5vu15SuiOVK+jpk4yyi7nKKG//u3Ii54jo9NN+i4J7di333qOhoz2RWeq
LqHrjt80HWYhpVy8XZQYfgwO1JPSpX3LW3bRu5szFQfVSigXfxf1ueLjeCNG
Qrn4xbSxbG/7RSUJxiOmqY4x5yKTtIVcPGJamWemmHxFW8jFI6bOinlhxeu0
hVw8Itru531ugJG2kItHRIPsVkwe1KAl5OIR0cDok5YbI7WEXDwiGmuXl+Tu
oSXk4hHR19cjk9JWaAm5eET0uE7orvODtIRlbMI76XT/WKUrpZpCdntRnfSp
2dvzb55poncnbThut9TwiKbQib06qal+teYh0BSasQt20jtb7k0w19AUsnwD
O+mFKuPYU1kCYUPf9uo7qO4ii2+G9wRCdrnEDrr/4QuF184C4Z3bfVcHnRtd
X7jTRID11EHHW254oybSEHL57f1743ExjokaWF8ddOSZwL/pZQ2sr3a6xtJt
pvEGDSFXX+3U842K5/lRGkKuvtqpn8vlmiGt6kKuvtqpyZbRB6yj1YWcRzsl
d8Tv0s6qo0c75Vemt22zVkeP3vWaLxZb6qujRxv9bKf7alGpGnq00WpHq5Xu
oWro0UbDi0P3XnFXQ482OsBYsj6cqKFHG73utHtxhboaerTRJ5mH5fq3GqiQ
zU8OXU1vzzqYWE+Hs/Hm0OT0qMai2jp6hN1/NtXpVK/c2r+O5rH7yaL9b7b6
mZnVUmN2/SzaEuxht21XDeX8vtGeMGae+Eo1rWE9vtJ9WoPX50dUYf1+pR8D
TzwJKa6k99l8ZdJo1xUxk9Uq8Xxl0jtWMv+f0ypoGAuQQU/tPuNZsrEcz8Nn
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
     "],
     VertexColors->{
       RGBColor[0.4996194121802483, 0., 0.5003805878197517], 
       RGBColor[0.4996194134499158, 0., 0.5003805865500842], 
       RGBColor[0.49961941972488466`, 0., 0.5003805802751153], 
       RGBColor[0.49961941625786915`, 0., 0.5003805837421309], 
       RGBColor[0.49961941290456474`, 0., 0.5003805870954352], 
       RGBColor[0.4996194141593555, 0., 0.5003805858406445], 
       RGBColor[0.4996194135994665, 0., 0.5003805864005335], 
       RGBColor[0.4996194183614489, 0., 0.5003805816385511], 
       RGBColor[0.4996194139965607, 0., 0.5003805860034394], 
       RGBColor[0.49961941563670886`, 0., 0.5003805843632911], 
       RGBColor[0.49961941800758297`, 0., 0.500380581992417], 
       RGBColor[0.49961941670851073`, 0., 0.5003805832914893], 
       RGBColor[0.49961941883873817`, 0., 0.5003805811612618], 
       RGBColor[0.4996194187325689, 0., 0.5003805812674311], 
       RGBColor[0.49961941504763385`, 0., 0.5003805849523661], 
       RGBColor[0.4996194193065071, 0., 0.5003805806934929], 
       RGBColor[0.4996194236361605, 0., 0.5003805763638395], 
       RGBColor[0.499619422207798, 0., 0.500380577792202], 
       RGBColor[0.4996194216064676, 0., 0.5003805783935324], 
       RGBColor[0.49961940851424025`, 0., 0.5003805914857598], 
       RGBColor[0.4996194133392549, 0., 0.5003805866607451], 
       RGBColor[0.5104513180111274, 0., 0.4895486819888726], 
       RGBColor[0.5123157184576306, 0., 0.4876842815423694], 
       RGBColor[0.5100112001803304, 0., 0.4899887998196696], 
       RGBColor[0.5122054083339777, 0., 0.48779459166602235`], 
       RGBColor[0.5097162651672994, 0., 0.4902837348327006], 
       RGBColor[0.5120300863982726, 0., 0.48796991360172737`], 
       RGBColor[0.509723946068517, 0., 0.490276053931483], 
       RGBColor[0.5121884549175105, 0., 0.4878115450824895], 
       RGBColor[0.4793848032925759, 0., 0.5206151967074242], 
       RGBColor[0.4840329837349597, 0., 0.5159670162650403], 
       RGBColor[0.4862701225143427, 0., 0.5137298774856573], 
       RGBColor[0.5199742479343368, 0., 0.4800257520656632], 
       RGBColor[0.5138262394681173, 0., 0.48617376053188266`], 
       RGBColor[0.5173235497176245, 0., 0.4826764502823755], 
       RGBColor[0.5131369504197004, 0., 0.4868630495802996], 
       RGBColor[0.5162527481614964, 0., 0.48374725183850364`], 
       RGBColor[0.5127725044094891, 0., 0.48722749559051093`], 
       RGBColor[0.5160630427847471, 0., 0.48393695721525287`], 
       RGBColor[0.502025230452039, 0., 0.49797476954796105`], 
       RGBColor[0.5044654012813642, 0., 0.4955345987186358], 
       RGBColor[0.5070430981797024, 0., 0.4929569018202976], 
       RGBColor[0.5097447224674266, 0., 0.49025527753257336`], 
       RGBColor[0.5122316302200105, 0., 0.4877683697799895], 
       RGBColor[0.5195946504060119, 0., 0.48040534959398806`], 
       RGBColor[0.5152847999066509, 0., 0.4847152000933491], 
       RGBColor[0.5137921582590348, 0., 0.4862078417409652], 
       RGBColor[0.5125282345813732, 0., 0.4874717654186268], 
       RGBColor[0.5119107254017592, 0., 0.4880892745982408], 
       RGBColor[0.511485995620671, 0., 0.488514004379329], 
       RGBColor[0.5136782311656253, 0., 0.4863217688343747], 
       RGBColor[0.5134914500759176, 0., 0.48650854992408243`], 
       RGBColor[0.513421028675437, 0., 0.48657897132456296`], 
       RGBColor[0.5134349445709441, 0., 0.4865650554290559], 
       RGBColor[0.5000073826909087, 0., 0.4999926173090913], 
       RGBColor[0.5008799284954877, 0., 0.4991200715045123], 
       RGBColor[0.4990588039263696, 0., 0.5009411960736304], 
       RGBColor[0.4991701981748126, 0., 0.5008298018251873], 
       RGBColor[0.5017461632041992, 0., 0.4982538367958008], 
       RGBColor[0.49619244515361477`, 0., 0.5038075548463852], 
       RGBColor[0.4978803420354281, 0., 0.5021196579645719], 
       RGBColor[0.49833274989614956`, 0., 0.5016672501038504], 
       RGBColor[0.498295344649834, 0., 0.5017046553501661], 
       RGBColor[0.5013782632341012, 0., 0.4986217367658988], 
       RGBColor[0.49787836723343226`, 0., 0.5021216327665677], 
       RGBColor[0.4971878653822715, 0., 0.5028121346177286], 
       RGBColor[0.49620503750573747`, 0., 0.5037949624942626], 
       RGBColor[0.5015184690008025, 0., 0.49848153099919745`], 
       RGBColor[0.4975850850901053, 0., 0.5024149149098946], 
       RGBColor[0.5012959520117184, 0., 0.4987040479882816], 
       RGBColor[0.5015380784820069, 0., 0.49846192151799307`], 
       RGBColor[0.5016272585417344, 0., 0.4983727414582656], 
       RGBColor[0.5016995157631051, 0., 0.4983004842368949], 
       RGBColor[0.49736369220293225`, 0., 0.5026363077970677], 
       RGBColor[0.5012553083644223, 0., 0.49874469163557766`], 
       RGBColor[0.49804176067489997`, 0., 0.5019582393251001], 
       RGBColor[0.497597336108025, 0., 0.502402663891975], 
       RGBColor[0.500077053282491, 0., 0.49992294671750903`], 
       RGBColor[0.4990984586474666, 0., 0.5009015413525334], 
       RGBColor[0.5004752216795757, 0., 0.4995247783204243], 
       RGBColor[0.49876374889850433`, 0., 0.5012362511014956], 
       RGBColor[0.500460834837512, 0., 0.499539165162488], 
       RGBColor[0.4987960698542985, 0., 0.5012039301457015], 
       RGBColor[0.5001047116175377, 0., 0.49989528838246233`], 
       RGBColor[0.4996194239078754, 0., 0.5003805760921246], 
       RGBColor[0.4996194239078753, 0., 0.5003805760921247], 
       RGBColor[0.49961942390787534`, 0., 0.5003805760921247], 
       RGBColor[0.49961942390787567`, 0., 0.5003805760921243], 
       RGBColor[0.4996194239078754, 0., 0.5003805760921246], 
       RGBColor[0.4996194239078754, 0., 0.5003805760921246], 
       RGBColor[0.4996194239078754, 0., 0.5003805760921246], 
       RGBColor[0.5074127289002545, 0., 0.49258727109974554`], 
       RGBColor[0.5865052186964879, 0., 0.41349478130351214`], 
       RGBColor[0.6216294520886851, 0., 0.37837054791131486`], 
       RGBColor[0.35104523824269507`, 0., 0.6489547617573049], 
       RGBColor[0.6702485491617225, 0., 0.3297514508382775], 
       RGBColor[0.30986139600028284`, 0., 0.6901386039997172], 
       RGBColor[0.2928409021490741, 0., 0.7071590978509259], 
       RGBColor[0.2774400323164946, 0., 0.7225599676835054], 
       RGBColor[0.2633383883178523, 0., 0.7366616116821477], 
       RGBColor[0.25031210139572435`, 0., 0.7496878986042756], 
       RGBColor[0.23819721555273704`, 0., 0.761802784447263], 
       RGBColor[0.7723696177320674, 0., 0.22763038226793264`], 
       RGBColor[0.7830079976611201, 0., 0.21699200233887994`], 
       RGBColor[0.7930346043742902, 0., 0.2069653956257098], 
       RGBColor[0.8025129211413147, 0., 0.19748707885868533`], 
       RGBColor[0.18774326515087147`, 0., 0.8122567348491285], 
       RGBColor[0.8200268448295907, 0., 0.17997315517040935`], 
       RGBColor[0.8281443725843762, 0., 0.17185562741562377`], 
       RGBColor[0.8358805632083675, 0., 0.16411943679163254`], 
       RGBColor[0.8432635447886534, 0., 0.1567364552113466], 
       RGBColor[0.8503179425232396, 0., 0.14968205747676044`], 
       RGBColor[0.14217337206573266`, 0., 0.8578266279342673], 
       RGBColor[0.13571341843472717`, 0., 0.8642865815652728], 
       RGBColor[0.1295238171368538, 0., 0.8704761828631462], 
       RGBColor[0.12358909413676417`, 0., 0.8764109058632359], 
       RGBColor[0.11789528022053325`, 0., 0.8821047197794667], 
       RGBColor[0.11242970646320016`, 0., 0.8875702935367998], 
       RGBColor[0.107180834425112, 0., 0.892819165574888], 
       RGBColor[0.10213811410688473`, 0., 0.8978618858931153], 
       RGBColor[0.09729186429097486, 0., 0.9027081357090252], 
       RGBColor[0.09263317108716496, 0., 0.907366828912835], 
       RGBColor[0.08815380139439583, 0., 0.9118461986056041], 
       RGBColor[0.08384612867222774, 0., 0.9161538713277723], 
       RGBColor[0.07970306893819157, 0., 0.9202969310618084], 
       RGBColor[0.07571802531266769, 0., 0.9242819746873323], 
       RGBColor[0.9273540080659387, 0., 0.0726459919340613], 
       RGBColor[0.9310410969729987, 0., 0.06895890302700125], 
       RGBColor[0.9345874910262271, 0., 0.06541250897377293], 
       RGBColor[0.9379982650510803, 0., 0.062001734948919696`], 
       RGBColor[0.9412781957467791, 0., 0.05872180425322093], 
       RGBColor[0.9444317872827297, 0., 0.055568212717270304`], 
       RGBColor[0.947463294081265, 0., 0.05253670591873505], 
       RGBColor[0.950376741157985, 0., 0.04962325884201502], 
       RGBColor[0.953175942334272, 0., 0.04682405766572795], 
       RGBColor[0.9558645165895976, 0., 0.04413548341040241], 
       RGBColor[0.9584459027822612, 0., 0.04155409721773884], 
       RGBColor[0.9609233729345775, 0., 0.039076627065422476`], 
       RGBColor[0.9633000442512125, 0., 0.03669995574878748], 
       RGBColor[0.96557889001636, 0., 0.03442110998364001], 
       RGBColor[0.9677627494959757, 0., 0.03223725050402426], 
       RGBColor[0.969854336954773, 0., 0.030145663045227034`], 
       RGBColor[0.9718562498836297, 0., 0.02814375011637027], 
       RGBColor[0.9737709765210149, 0., 0.026229023478985147`], 
       RGBColor[0.9756009027417758, 0., 0.0243990972582242], 
       RGBColor[0.9773483183776874, 0., 0.02265168162231257], 
       RGBColor[0.979015423026618, 0., 0.020984576973381963`], 
       RGBColor[0.980604331400462, 0., 0.019395668599538007`], 
       RGBColor[0.9821170782562983, 0., 0.017882921743701652`], 
       RGBColor[0.9835556229502207, 0., 0.016444377049779302`], 
       RGBColor[0.9849218536489242, 0., 0.01507814635107585], 
       RGBColor[0.9862175912303504, 0., 0.013782408769649646`], 
       RGBColor[0.9874445929013207, 0., 0.012555407098679305`], 
       RGBColor[0.9886045555571746, 0., 0.011395444442825364`], 
       RGBColor[0.989699118905841, 0., 0.010300881094159053`], 
       RGBColor[0.9907298683764978, 0., 0.009270131623502209], 
       RGBColor[0.991698337830947, 0., 0.008301662169053037], 
       RGBColor[0.9926060120940596, 0., 0.007393987905940369], 
       RGBColor[0.9934543293180539, 0., 0.006545670681946114], 
       RGBColor[0.9942446831939584, 0., 0.005755316806041577], 
       RGBColor[0.0042604227933888406`, 0., 0.9957395772066111], 
       RGBColor[0.0035819821613324865`, 0., 0.9964180178386675], 
       RGBColor[0.0029575705026596566`, 0., 0.9970424294973403], 
       RGBColor[0.002385952512052425, 0., 0.9976140474879476], 
       RGBColor[0.0018659281937157823`, 0., 0.9981340718062842], 
       RGBColor[0.0013963313481321626`, 0., 0.9986036686518678], 
       RGBColor[0.0009760281468100263, 0., 0.9990239718531899], 
       RGBColor[0.0006039157887137714, 0., 0.9993960842112862], 
       RGBColor[0.00027892123260730983`, 0., 0.9997210787673927], 
       RGBColor[0., 0., 1.], 
       RGBColor[0.999472712771879, 0., 0.0005272872281210095], 
       RGBColor[0.9996625121370918, 0., 0.00033748786290821453`], 
       RGBColor[0.9998092112483217, 0., 0.00019078875167832798`], 
       RGBColor[0.9999137510532992, 0., 0.00008624894670083982], 
       RGBColor[0.9999770490201, 0., 0.000022950979900016044`], 
       RGBColor[1., 0., 0.], 
       RGBColor[0.9999834770466426, 0., 0.00001652295335741183], 
       RGBColor[0.9999283321942548, 0., 0.00007166780574519027], 
       RGBColor[0.9998353971974683, 0., 0.00016460280253172144`], 
       RGBColor[0.9997054842351115, 0., 0.0002945157648884811], 
       RGBColor[0.9995393865801498, 0., 0.00046061341985015325`], 
       RGBColor[0.9993378792378247, 0., 0.0006621207621753111], 
       RGBColor[0.9991017195538685, 0., 0.0008982804461314942], 
       RGBColor[0.9988316477945522, 0., 0.0011683522054477535`], 
       RGBColor[0.99852838770021, 0., 0.0014716122997899816`], 
       RGBColor[0.9981926470137512, 0., 0.0018073529862487892`], 
       RGBColor[0.9978251179855916, 0., 0.002174882014408408], 
       RGBColor[0.9974264778563168, 0., 0.0025735221436832267`], 
       RGBColor[0.9969973893183157, 0., 0.0030026106816842812`], 
       RGBColor[0.9965385009575485, 0., 0.0034614990424515213`], 
       RGBColor[0.9960504476765144, 0., 0.0039495523234855945`], 
       RGBColor[0.9955338510994396, 0., 0.004466148900560407], 
       RGBColor[0.9949893199606279, 0., 0.005010680039372106], 
       RGBColor[0.9944174504768519, 0., 0.005582549523148073], 
       RGBColor[0.9938188267046382, 0., 0.00618117329536183], 
       RGBColor[0.9931940208831926, 0., 0.006805979116807359], 
       RGBColor[0.9925435937637257, 0., 0.007456406236274304], 
       RGBColor[0.99186809492585, 0., 0.008131905074149959], 
       RGBColor[0.9911680630817055, 0., 0.008831936918294536], 
       RGBColor[0.9904440263684022, 0., 0.00955597363159777], 
       RGBColor[0.9896965026293774, 0., 0.010303497370622638`], 
       RGBColor[0.9889259996851786, 0., 0.01107400031482142], 
       RGBColor[0.9881330155942054, 0., 0.01186698440579459], 
       RGBColor[0.9873180389038652, 0., 0.012681961096134842`], 
       RGBColor[0.9864815488926106, 0., 0.013518451107389362`], 
       RGBColor[0.9856240158032696, 0., 0.014375984196730363`], 
       RGBColor[0.9847459010680866, 0., 0.015254098931913429`], 
       RGBColor[0.983847657525837, 0., 0.016152342474162973`], 
       RGBColor[0.9829297296313915, 0., 0.01707027036860853], 
       RGBColor[0.981992553658048, 0., 0.01800744634195195], 
       RGBColor[0.9810365578929744, 0., 0.018963442107025608`], 
       RGBColor[0.980062162826052, 0., 0.019937837173948036`], 
       RGBColor[0.9790697813324138, 0., 0.020930218667586153`], 
       RGBColor[0.9780598188489338, 0., 0.021940181151066218`], 
       RGBColor[0.9770326735449748, 0., 0.022967326455025194`], 
       RGBColor[0.9759887364875605, 0., 0.02401126351243954], 
       RGBColor[0.9749283918012854, 0., 0.025071608198714568`], 
       RGBColor[0.9738520168231268, 0., 0.02614798317687317], 
       RGBColor[0.9727599822524029, 0., 0.0272400177475971], 
       RGBColor[0.027586195519701595`, 0., 0.9724138044802983], 
       RGBColor[0.028708463006320406`, 0., 0.9712915369936796], 
       RGBColor[0.029845316382906273`, 0., 0.9701546836170938], 
       RGBColor[0.030996410091849003`, 0., 0.969003589908151], 
       RGBColor[0.03216140452980154, 0., 0.9678385954701985], 
       RGBColor[0.03333996592308064, 0., 0.9666600340769194], 
       RGBColor[0.03453176620670989, 0., 0.96546823379329], 
       RGBColor[0.03573648290699233, 0., 0.9642635170930076], 
       RGBColor[0.03695379902746426, 0., 0.9630462009725358], 
       RGBColor[0.03818340293810385, 0., 0.9618165970618962], 
       RGBColor[0.039424988267674654`, 0., 0.9605750117323253], 
       RGBColor[0.040678253799089015`, 0., 0.9593217462009109], 
       RGBColor[0.04194290336766893, 0., 0.9580570966323311], 
       RGBColor[0.04321864576221668, 0., 0.9567813542377833], 
       RGBColor[0.04450519462876984, 0., 0.9554948053712302], 
       RGBColor[0.04580226837697021, 0., 0.9541977316230298], 
       RGBColor[0.9521292577268237, 0., 0.04787074227317634], 
       RGBColor[0.9508119603852448, 0., 0.04918803961475515], 
       RGBColor[0.9494849552508005, 0., 0.050515044749199545`], 
       RGBColor[0.05109034206874696, 0., 0.948909657931253], 
       RGBColor[0.05243597684967449, 0., 0.9475640231503255], 
       RGBColor[0.9454483057488015, 0., 0.054551694251198546`], 
       RGBColor[0.9440850607623636, 0., 0.05591493923763635], 
       RGBColor[0.056525465239539274`, 0., 0.9434745347604607], 
       RGBColor[0.05790533407971421, 0., 0.9420946659202858], 
       RGBColor[0.05929315497982468, 0., 0.9407068450201753], 
       RGBColor[0.06068869322701648, 0., 0.9393113067729835], 
       RGBColor[0.06209171792099227, 0., 0.9379082820790077], 
       RGBColor[0.06350200190700817, 0., 0.9364979980929918], 
       RGBColor[0.06491932171045911, 0., 0.9350806782895409], 
       RGBColor[0.06634345747302373, 0., 0.9336565425269763], 
       RGBColor[0.06777419289030573, 0., 0.9322258071096943], 
       RGBColor[0.06921131515093204, 0., 0.930788684849068], 
       RGBColor[0.07065461487705965, 0., 0.9293453851229403], 
       RGBColor[0.07210388606624502, 0., 0.9278961139337549], 
       RGBColor[0.07355892603463976, 0., 0.9264410739653602], 
       RGBColor[0.07501953536146472, 0., 0.9249804646385353], 
       RGBColor[0.07648551783473029, 0., 0.9235144821652697], 
       RGBColor[0.07795668039816134, 0., 0.9220433196018387], 
       RGBColor[0.9198060147164617, 0., 0.08019398528353827], 
       RGBColor[0.9183250587770666, 0., 0.0816749412229334], 
       RGBColor[0.08239936432028383, 0., 0.9176006356797162], 
       RGBColor[0.08388937800278967, 0., 0.9161106219972104], 
       RGBColor[0.08538365205210935, 0., 0.9146163479478906], 
       RGBColor[0.9123568365209549, 0., 0.0876431634790451], 
       RGBColor[0.08838428337247584, 0., 0.9116157166275242], 
       RGBColor[0.9093485491185329, 0., 0.09065145088146709], 
       RGBColor[0.9078389574079133, 0., 0.09216104259208668], 
       RGBColor[0.9063259534886632, 0., 0.09367404651133682], 
       RGBColor[0.9048096988960181, 0., 0.09519030110398186], 
       RGBColor[0.9032903525642884, 0., 0.09670964743571164], 
       RGBColor[0.09747077694863682, 0., 0.9025292230513632], 
       RGBColor[0.09899584015883339, 0., 0.9010041598411667], 
       RGBColor[0.8987153143035749, 0., 0.10128468569642513`], 
       RGBColor[0.8971851397323434, 0., 0.10281486026765663`], 
       RGBColor[0.895652630460992, 0., 0.10434736953900803`], 
       RGBColor[0.8941179306363243, 0., 0.10588206936367572`], 
       RGBColor[0.8925811820698673, 0., 0.10741881793013275`], 
       RGBColor[0.8910425242729706, 0., 0.10895747572702941`], 
       RGBColor[0.8895020944912091, 0., 0.1104979055087909], 
       RGBColor[0.8879600277381359, 0., 0.11203997226186413`], 
       RGBColor[0.8864164568284105, 0., 0.11358354317158947`], 
       RGBColor[0.8848715124103192, 0., 0.11512848758968075`], 
       RGBColor[0.11591352481808004`, 0., 0.88408647518192], 
       RGBColor[0.11746083281461073`, 0., 0.8825391671853893], 
       RGBColor[0.11900913505672789`, 0., 0.8809908649432721], 
       RGBColor[0.12055830924831207`, 0., 0.879441690751688], 
       RGBColor[0.12210823510575386`, 0., 0.8778917648942461], 
       RGBColor[0.1236587943288247, 0., 0.8763412056711752], 
       RGBColor[0.12520987057205202`, 0., 0.874790129427948], 
       RGBColor[0.1267613494166075, 0., 0.8732386505833925], 
       RGBColor[0.12831311834267706`, 0., 0.8716868816573229], 
       RGBColor[0.869373781113433, 0., 0.130626218886567], 
       RGBColor[0.8678217621229715, 0., 0.13217823787702854`], 
       RGBColor[0.8662697794854732, 0., 0.13373022051452677`], 
       RGBColor[0.8647179383915268, 0., 0.13528206160847323`], 
       RGBColor[0.8631663422638722, 0., 0.13683365773612777`], 
       RGBColor[0.8616150927823174, 0., 0.1383849072176826], 
       RGBColor[0.8600642899082247, 0., 0.1399357100917753], 
       RGBColor[0.8585140319086242, 0., 0.1414859680913758], 
       RGBColor[0.856964415379895, 0., 0.14303558462010502`], 
       RGBColor[0.8554155352710848, 0., 0.14458446472891517`], 
       RGBColor[0.14537136290891844`, 0., 0.8546286370910816], 
       RGBColor[0.1469184918058189, 0., 0.8530815081941812], 
       RGBColor[0.8507742387235246, 0., 0.14922576127647535`], 
       RGBColor[0.8492292216329446, 0., 0.15077077836705544`], 
       RGBColor[0.15155345602853865`, 0., 0.8484465439714614], 
       RGBColor[0.15309601309556126`, 0., 0.8469039869044388], 
       RGBColor[0.15463721334434838`, 0., 0.8453627866556517], 
       RGBColor[0.1561769742092085, 0., 0.8438230257907915], 
       RGBColor[0.15771521457810572`, 0., 0.8422847854218942], 
       RGBColor[0.1592518547727903, 0., 0.8407481452272096], 
       RGBColor[0.16078681652923704`, 0., 0.839213183470763], 
       RGBColor[0.16232002297836112`, 0., 0.8376799770216389], 
       RGBColor[0.16385139862708153`, 0., 0.8361486013729185], 
       RGBColor[0.16538086933959006`, 0., 0.8346191306604099], 
       RGBColor[0.16690836231897455`, 0., 0.8330916376810255], 
       RGBColor[0.1684338060890681, 0., 0.8315661939109319], 
       RGBColor[0.16995713047659522`, 0., 0.8300428695234048], 
       RGBColor[0.17147826659356458`, 0., 0.8285217334064354], 
       RGBColor[0.1729971468199294, 0., 0.8270028531800706], 
       RGBColor[0.17451370478649675`, 0., 0.8254862952135033], 
       RGBColor[0.17602787535809206`, 0., 0.8239721246419079], 
       RGBColor[0.17753959461695362`, 0., 0.8224604053830464], 
       RGBColor[0.1790487998463775, 0., 0.8209512001536226], 
       RGBColor[0.18055542951459697`, 0., 0.819444570485403], 
       RGBColor[0.8171794245568735, 0., 0.18282057544312647`], 
       RGBColor[0.8156781259458943, 0., 0.18432187405410572`], 
       RGBColor[0.8141795805396681, 0., 0.1858204194603319], 
       RGBColor[0.8126838452869523, 0., 0.18731615471304774`]}], InsetBox[
     GraphicsBox[{{
        {RGBColor[0, 0, 1], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.42\"\>",
            -0.4177749786268724,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 0.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[1, 19], 0.05263157894736842], 0, 
          NCache[
           Rational[18, 19], 0.9473684210526315]], RectangleBox[{0, 1}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.37\"\>",
            -0.37376516692289474`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 1.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[2, 19], 0.10526315789473684`], 0, 
          NCache[
           Rational[17, 19], 0.8947368421052632]], RectangleBox[{0, 2}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.33\"\>",
            -0.3297553552189171,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 2.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[3, 19], 0.15789473684210525`], 0, 
          NCache[
           Rational[16, 19], 0.8421052631578947]], RectangleBox[{0, 3}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.29\"\>",
            -0.2857455435149394,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 3.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[4, 19], 0.21052631578947367`], 0, 
          NCache[
           Rational[15, 19], 0.7894736842105263]], RectangleBox[{0, 4}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.24\"\>",
            -0.24173573181096178`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 4.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[5, 19], 0.2631578947368421], 0, 
          NCache[
           Rational[14, 19], 0.7368421052631579]], RectangleBox[{0, 5}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.20\"\>",
            -0.19772592010698414`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 5.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[6, 19], 0.3157894736842105], 0, 
          NCache[
           Rational[13, 19], 0.6842105263157895]], RectangleBox[{0, 6}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.15\"\>",
            -0.15371610840300648`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 6.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[7, 19], 0.3684210526315789], 0, 
          NCache[
           Rational[12, 19], 0.631578947368421]], RectangleBox[{0, 7}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.11\"\>",
            -0.10970629669902882`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 7.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[8, 19], 0.42105263157894735`], 0, 
          NCache[
           Rational[11, 19], 0.5789473684210527]], RectangleBox[{0, 8}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.07\"\>",
            -0.06569648499505115,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 8.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[9, 19], 0.47368421052631576`], 0, 
          NCache[
           Rational[10, 19], 0.5263157894736842]], RectangleBox[{0, 9}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"-0.02\"\>",
            -0.02168667329107349,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 9.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[10, 19], 0.5263157894736842], 0, 
          NCache[
           Rational[9, 19], 0.47368421052631576`]], RectangleBox[{0, 10}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.02\"\>",
            0.022323138412904175`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 10.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[11, 19], 0.5789473684210527], 0, 
          NCache[
           Rational[8, 19], 0.42105263157894735`]], RectangleBox[{0, 11}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.07\"\>",
            0.06633295011688178,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 11.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[12, 19], 0.631578947368421], 0, 
          NCache[
           Rational[7, 19], 0.3684210526315789]], RectangleBox[{0, 12}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.11\"\>",
            0.11034276182085945`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 12.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[13, 19], 0.6842105263157895], 0, 
          NCache[
           Rational[6, 19], 0.3157894736842105]], RectangleBox[{0, 13}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.15\"\>",
            0.1543525735248371,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 13.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[14, 19], 0.7368421052631579], 0, 
          NCache[
           Rational[5, 19], 0.2631578947368421]], RectangleBox[{0, 14}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.20\"\>",
            0.19836238522881477`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 14.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[15, 19], 0.7894736842105263], 0, 
          NCache[
           Rational[4, 19], 0.21052631578947367`]], RectangleBox[{0, 15}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.24\"\>",
            0.24237219693279244`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 15.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[16, 19], 0.8421052631578947], 0, 
          NCache[
           Rational[3, 19], 0.15789473684210525`]], RectangleBox[{0, 16}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.29\"\>",
            0.2863820086367701,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 16.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[17, 19], 0.8947368421052632], 0, 
          NCache[
           Rational[2, 19], 0.10526315789473684`]], RectangleBox[{0, 17}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.33\"\>",
            0.33039182034074777`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 17.5}, {1, 0}]}}, {
        {RGBColor[
          NCache[
           Rational[18, 19], 0.9473684210526315], 0, 
          NCache[
           Rational[1, 19], 0.05263157894736842]], RectangleBox[{0, 18}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.37\"\>",
            0.37440163204472543`,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 18.5}, {1, 0}]}}, {
        {RGBColor[1, 0, 0], RectangleBox[{0, 19}]}, 
        {GrayLevel[0], InsetBox[
          TagBox[
           InterpretationBox["\<\"0.42\"\>",
            0.4184114437487031,
            AutoDelete->True],
           NumberForm[#, {4, 2}]& ], {3, 19.5}, {1, 0}]}}},
      Frame->True,
      FrameTicks->None,
      PlotRangePadding->0.5], NCache[
     Scaled[{1, Rational[1, 2]}], Scaled[{1, 0.5}]], 
     ImageScaled[{-0.1, Rational[1, 2]}], NCache[
     Scaled[{Rational[1, 4], 0.9}], Scaled[{0.25, 0.9}]]]}, {{}, {}, 
    {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], Dashing[0.03], 
     LineBox[CompressedData["
1:eJwB8QEO/iFib1JlAgAAAB4AAAACAAAAchzHcRzHAcAAAAAAAAAAwOB0oS7W
qAHALZ8ih4HJ/79pnJGjnGoAwFfm0oyzjP2/WH5ZI6wi/r+28TaGNB/7vyjr
KVtUnvu/C7ql60vb+L9rTlCF4uP4v5RGyESyZva/WnNPPTY29r/R5y03l/3z
v5O/6FC/tvO/BEaelRK+8b8/AthWLgHxv9jQhM+5m+6/atjCcKXz7L+Tj+JL
ew7qvzyZgRi6eOe/ttanr9of5b9o3fHbWRfiv0RH80U3SOC/T+Asrcgk2r96
Y6hogYfXvza/m9fqhM6/fpJyKKB3y7858F1j3mO0v2eL1L/hWbK/K4PvCsB1
sz/awgo9k4OxP6/H7ql/WM8/6uZWfww2zD+9Sco4OsLZP11C6f/NLtc/66qi
aU5Y4j86AKz4rILgP52tLpv0tec/2jXdvvVW5T+8YYYVMLfsP5Dx+KwR2Ok/
ehSZ1U8S8T/cJK2zj7ruP8zQ1ETSmvM/Hu8lcfCk8T9xyzcmjxb2Pxk3Mm8a
4fM/pM9EFWbI+D/huop59U32P4yst6gHTPs/sYHYFzqR+D8Bk9RJwwX+P06E
csIvBfs/F6mrx6RIAED2yQEBj0/9P9angCMFiAFA6PpNpm+O/z9yHMdxHMcB
QAAAAAAAAABAkzYB/w==
      "]]}, 
    {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], Dashing[0.03], 
     LineBox[CompressedData["
1:eJwBsQJO/SFib1JlAgAAACoAAAACAAAAqqqqqqqqCsAAAAAAAAAAwKQTo/TZ
ggnAXuT2iwWd/r/DW8qNvz8IwFChv0NMGf2/HJ8cIJjhBsC7i1XzHHX7v0tD
W3nTiQXA84NtXpfY+b8f+2aAKUkEwCX64WbLV/i/La6dgHLtAsDPnSNnibb2
v+B0oS7WqAHAc7/BBAEx9b9pnJGjnGoAwOTu4V0is/O/WH5ZI6wi/r/OS8+u
zRTyvyjrKVtUnvu/sSYZnTKS8L9rTlCF4uP4vxpeYAZD3u2/WnNPPTY29r9s
ipJJdKfqv5O/6FC/tvO/sLJ9xxio578/AthWLgHxv+U1AzXRZ+S/atjCcKXz
7L8MtUHd/F7hvzyZgRi6eOe/SB416ngq3L9o3fHbWRfiv7AJ7weftdW/T+As
rcgk2r/42TU2V1/Pvza/m9fqhM6/Uwz3GsBPwr858F1j3mO0v965cKrXd6i/
K4PvCsB1sz/NA7mmGVqnP6/H7ql/WM8/nESP/7LOwj+9Sco4OsLZP3xYjKoS
6c4/66qiaU5Y4j9NAJBLkQPWP52tLpv0tec/I53RU/Jz3D+8YYYVMLfsPwqh
UHO2OuE/ehSZ1U8S8T+SGB7NX3zkP8zQ1ETSmvM/KJQy7JWG5z9xyzcmjxb2
PyH0QpR4geo/pM9EFWbI+D8r+bhMR73tP4yst6gHTPs/IQE7ZdFg8D8Bk9RJ
wwX+PzRYTCx1A/I/F6mrx6RIAEBPMQFWX4rzP9angCMFiAFAmvwzxJ8J9T9b
qyqGcuICQG2amTpWqfY/PJsHO8UlBEBIuqITUy34P+OPufYkhAVAqqze9MXR
+T+0I3/rIdwGQD6RmBqPbvs/4KN3MgQdCEDZ9/Winu/8P9IoRYDzeAlA/DCG
MySR/j+sqqqqqqoKQAAAAAAAAABA6tNalA==
      "]]}, 
    {GrayLevel[0.85], AbsoluteThickness[1.6], Opacity[1.], Dashing[0.03], 
     LineBox[CompressedData["
1:eJwt1Pk/1HkcwHGMI9d89xHKILmS5Ch23Hl/QhtLjZJcNY4OHTql1KM2RR5d
mx1dDJPESJJypJro8y3JncXkKnYaXRo5vl9Nis1uj0c/vB6v/+BpGrNr9SYl
BQWFFf/343Yw6+P0NEEahmlbOjrSeM22+Se/fiPIZihdZb+IxocuuljSnwny
sGXwkYW2NK6Thce8kxFkP50tNp9P46iMnN7mLoK8es4mWdeQxrwxq6bM2wRp
8dRf8lmJxuN57sWOkQRpY3+af7+dwqIZ0TtjHzFJDxU1wnMvhY+2dMoeR2uT
LN/3tHbuGB4UsmY7G2mRVEPCdVHfKLb+x1ed6NMgy1fXungYj+J8nbzxnuPq
JPeN/IyKYBjXRDT+iWEGGZiLvQNYn7BRjpFJxmtV8uGZYNooQYb9vSMOdpxS
IenkHdzL3YN47uTmpAV+yuS8b683N4V8wLYlgqS9n5TIVoF57KnKd1iyL9eu
s1CRjMePlRUXv8Vbs3l52dsUyDfDr9eblQ/g0D/CzIvNvuPn/q0lLbpSbCVb
ELHmyiQutWQJHNIlePvKwBPSgQlswI1S9e7vw+HxnCVOTnIcdzrdb9/1Xnwe
fwjElTS+U3akTr+wC4NS91o7xTH8ls1gt8WK8bbuJ7uF9BDWuru0b4rbhj0y
j+mLEt9jX2P2x0TrZrylb+xl2GwpvqM+opZztxZzJDa36i168UQP2ykkEmMn
nNX1MeU5DtL6YkByyrDr6PoN/RsqcP+D3UVdBzLwwuQRDTKhHFoYDwpY4Zfh
dt3wjaOhrZDtkzZd9rwMqv0aXdye9MDh0LNFMwcfgazo2taVoVJYofCXP4/x
DAS37LLG774Hc0FbEBXfDFXRqXqL7g2BRm5gfKVbGxzSzXzBmTkG6frGLZGH
xdD8t9innU+D1QWHoYupXbCnydkybZYcTMe9LiQe64X8Vh+9zfUTsPDr/YDl
1X1wtvheoVrAJJgqum9qi5KA4nmxX43Kd/g1NMAmgSGF2Tdu1uX7KiDOYsW1
kacHoPN6krnKSUXEn3J8mqP+FiJuWqfulSqhHfxMt7U33oFHlpp77Txl5Cu6
phNk+wEG0h7ILVJUUFFx/3ht2yBUmB+Vmb5SRZ68DIO0nTKQ5B1wUJ4zA/V8
+XztysgQtFstS6IT1dHUolRHC94wzOUvM6mv1kAz5et0EjVH4VJR2FfXKU1E
NrPtTzWOQgf26rkfrI3KtKw4LzLHYPtjruacDCYq0I676hNBQUxOz6UqAROJ
04+H53MpCD+yxmxdHhMx9DN1lWMo8HX93TWrhIm4Zs9O1myhwKKUHcuqZSI9
Z5M9XvspeHVVq0aPYqKUKPFSxKMgIEl0iBlAoOhyjwH3Ogq8uWzVklUEOucS
JMhqpMDN4w5vRQiBqqq3hky2UGA1ISw8G0Mg/fpLTSIxBcq7eZ0aBwnU+mq0
3FVKQXXkFge1AgJ5qgpTnP+loGLJQHXBTQLFnXnoeVmBhmJDrt9vpQTi/9I+
IWfQwO8KijpRRSC5wXRcpQYN+zlwjtFBoFv2YcFsfRp22IpYed0Eelmxi7ho
SMNGTbbQq59A6m6pDePGNKyus646NkigjT7lSyrm0eAnFC43HSFQekPDF50F
NKBkkw5ynEDkSklpvA0NztFZ3KhvBBrukG/vsKfhp1/op1/wH+JeZS0=
      "]]}}},
  Axes->True,
  Frame->True,
  FrameLabel->{
    FormBox["\"k.real\"", TraditionalForm], 
    FormBox["\"omega\"", TraditionalForm]},
  ImageSize->Large,
  PlotLabel->FormBox[
   "\"k.imag values for different omega and k.real values\"", 
    TraditionalForm]]], "Output",
 CellChangeTimes->{3.701609093338889*^9, 3.701609166193534*^9, 
  3.701610660450892*^9, 3.701610846582901*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Draft", "Chapter",
 CellChangeTimes->{{3.70154236440947*^9, 3.701542365767828*^9}}],

Cell["isotropic case", "Text",
 CellChangeTimes->{{3.70084723831399*^9, 3.700847240376834*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"i0mi2", "[", 
   RowBox[{"nr_", ",", "ni_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      RowBox[{"(", 
       RowBox[{"nr", "+", 
        RowBox[{"I", " ", "ni"}]}], ")"}]]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"c2", "-", "c1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"(", 
          RowBox[{"nr", "+", 
           RowBox[{"I", " ", "ni"}]}], ")"}]], "+", "c1", "+", "c2"}], 
       ")"}]}], ")"}]}], "+", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"(", 
      RowBox[{"nr", "+", 
       RowBox[{"I", " ", "ni"}]}], ")"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       RowBox[{"(", 
        FractionBox["1", 
         RowBox[{"(", 
          RowBox[{"nr", "+", 
           RowBox[{"I", " ", "ni"}]}], ")"}]], ")"}], "^", "2"}]}], ")"}], 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"c2", " ", 
         RowBox[{"(", 
          RowBox[{"nr", "+", 
           RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"c1", 
         RowBox[{"(", 
          RowBox[{"(", 
           RowBox[{"nr", "+", 
            RowBox[{"I", " ", "ni"}]}], ")"}], ")"}]}]}], ")"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7008484888437967`*^9, 3.700848655198995*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqnHR", "[", 
   RowBox[{"nr_", ",", "ni_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
    RowBox[{"Re", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i0mi2", "[", 
       RowBox[{"nr", ",", "ni", ",", "c1", ",", "c2"}], "]"}], "+", "4"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqnHI", "[", 
   RowBox[{"nr_", ",", "ni_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
    RowBox[{"Im", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"i0mi2", "[", 
       RowBox[{"nr", ",", "ni", ",", "c1", ",", "c2"}], "]"}], "+", "4"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "\[Equal]", 
   "0"}]}]}], "Input",
 CellChangeTimes->{{3.700848730468899*^9, 3.700848824227416*^9}, {
  3.700849005632803*^9, 3.700849008935779*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqnH", "[", 
   RowBox[{"nr_", ",", "ni_", ",", "c1_", ",", "c2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"i0mi2", "[", 
     RowBox[{"nr", ",", "ni", ",", "c1", ",", "c2"}], "]"}], "+", "4"}], 
   "\[Equal]", "0"}]}]], "Input",
 CellChangeTimes->{{3.7008486664714603`*^9, 3.700848704357538*^9}, 
   3.700848766978013*^9, {3.700848826565851*^9, 3.7008488273323812`*^9}, 
   3.700849013710862*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRoot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eqnHR", "[", 
     RowBox[{"nreal", ",", "nimag", ",", "0.9", ",", "0.3"}], "]"}], "&&", 
    RowBox[{"eqnHI", "[", 
     RowBox[{"nreal", ",", "nimag", ",", "0.9", ",", "0.3"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"nreal", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"nimag", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7008488829914494`*^9, 3.700848891375602*^9}, {
  3.7008489231207123`*^9, 3.70084898619515*^9}, {3.700849042888438*^9, 
  3.7008490456559563`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"nreal", "\[Rule]", "3.3333344075607747`"}], ",", 
   RowBox[{"nimag", "\[Rule]", "1.1681957326896768`*^-20"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.700848892368617*^9, {3.70084892412284*^9, 3.7008489453908653`*^9}, {
   3.700848986735403*^9, 3.700848991237261*^9}, {3.7008490362284327`*^9, 
   3.7008490541824503`*^9}}]
}, Open  ]],

Cell["box spectrum", "Text",
 CellChangeTimes->{{3.7008490600141373`*^9, 3.7008490638545113`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eqnBR", "[", 
   RowBox[{
   "nr_", ",", "ni_", ",", "c1_", ",", "c2_", ",", "c0_", ",", "g1_", ",", 
    "g2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
    RowBox[{"Re", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g1", " ", 
       RowBox[{"i0mi2", "[", 
        RowBox[{"nr", ",", "ni", ",", "c1", ",", "c0"}], "]"}]}], "+", 
      RowBox[{"g2", " ", 
       RowBox[{"i0mi2", "[", 
        RowBox[{"nr", ",", "ni", ",", "c0", ",", "c2"}], "]"}]}], "+", "4"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqnBI", "[", 
   RowBox[{
   "nr_", ",", "ni_", ",", "c1_", ",", "c2_", ",", "c0_", ",", "g1_", ",", 
    "g2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
    RowBox[{"Im", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"g1", " ", 
       RowBox[{"i0mi2", "[", 
        RowBox[{"nr", ",", "ni", ",", "c1", ",", "c0"}], "]"}]}], "+", 
      RowBox[{"g2", " ", 
       RowBox[{"i0mi2", "[", 
        RowBox[{"nr", ",", "ni", ",", "c0", ",", "c2"}], "]"}]}], "+", "4"}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], "\[Equal]", 
   "0"}]}]}], "Input",
 CellChangeTimes->{{3.70084906701717*^9, 3.700849182919746*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootB", "[", 
   RowBox[{"g1_", ",", "g2_"}], "]"}], ":=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eqnBR", "[", 
      RowBox[{
      "nreal", ",", "nimag", ",", "0.9", ",", "0.3", ",", "0.6", ",", "g1", 
       ",", "g2"}], "]"}], "&&", 
     RowBox[{"eqnBI", "[", 
      RowBox[{
      "nreal", ",", "nimag", ",", "0.9", ",", "0.3", ",", "0.6", ",", "g1", 
       ",", "g2"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nreal", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nimag", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.700849124397813*^9, 3.700849133628887*^9}, {
  3.700849186527637*^9, 3.7008492182079077`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"nreal", ",", "nimag"}], "}"}], "/.", 
  RowBox[{"rootB", "[", 
   RowBox[{"3", ",", 
    RowBox[{"-", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.70085179967517*^9, 3.7008518021353197`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6524083219594974`", ",", "0.13012534291594413`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.700851802463711*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"g1", ",", "g2"}], "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"nreal", ",", "nimag"}], "}"}], "/.", 
         RowBox[{"rootB", "[", 
          RowBox[{"g1", ",", "g2"}], "]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"g1", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g2", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "1"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], "//", "Grid"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.7008492205763817`*^9, 3.700849232126459*^9}, {
  3.700849340235038*^9, 3.700849410309443*^9}, {3.700849464909852*^9, 
  3.700849465091318*^9}, {3.700849498450974*^9, 3.70084956903609*^9}, {
  3.7008496067655773`*^9, 3.700849608071733*^9}, {3.7008497729504232`*^9, 
  3.700849777308147*^9}, {3.70084980833456*^9, 3.700849812267015*^9}, {
  3.7008521655056267`*^9, 3.700852180239827*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "nlnum"}], "MessageName"], ":", 
  " ", "\<\"The function value \[NoBreak]\\!\\({False}\\)\[NoBreak] is not a \
list of numbers with dimensions \[NoBreak]\\!\\({1}\\)\[NoBreak] at \
\[NoBreak]\\!\\({nreal, nimag}\\)\[NoBreak] = \[NoBreak]\\!\\({1.`, 1.`}\\)\
\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindRoot\\\", ButtonNote -> \
\\\"FindRoot::nlnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.700849570456047*^9, 3.7008496104258966`*^9, 
  3.700849782807765*^9, 3.700849814927011*^9, 3.700852183949952*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ReplaceAll", "::", "reps"}], "MessageName"], ":", 
  " ", "\<\"\[NoBreak]\\!\\({\\(FindRoot[\\(\\(\\(\\(\\(\\(eqnBR[\\(\\(nreal, \
nimag, 0.9`, 0.3`, 0.6`, 0, 0\\)\\)]\\)\\) && \\(\\(eqnBI[\\(\\(nreal, nimag, \
0.9`, 0.3`, 0.6`, 0, 0\\)\\)]\\)\\)\\)\\), \\(\\({\\(\\({nreal, 1}\\)\\), \\(\
\\({nimag, 1}\\)\\)}\\)\\)\\)\\)]\\)}\\)\[NoBreak] is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/ReplaceAll/reps\\\
\", ButtonNote -> \\\"ReplaceAll::reps\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.700849570456047*^9, 3.7008496104258966`*^9, 
  3.700849782807765*^9, 3.700849814927011*^9, 3.700852184004787*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.006538802149848`", ",", "1.1453094867651754`*^-16"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.32117794768141444`", ",", "3.0469973345215043`*^-24"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.24834773873205712`", ",", 
         RowBox[{"-", "5.774461826217806`*^-28"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.19008134270330454`", ",", "6.432298614880126`*^-23"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.14130036900365905`", ",", "6.943288630491192`*^-24"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.09929468017402036`", ",", 
         RowBox[{"-", "1.685540086906006`*^-38"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3485994008451625`", ",", 
         RowBox[{"-", "1.0829256427590691`*^-41"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.3000179306243077`", ",", "8.034540999046805`*^-22"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.2275762292869896`", ",", "1.6526325468727902`*^-22"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.16958577562263577`", ",", 
         RowBox[{"-", "4.892515334180715`*^-27"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1109755480158172`", ",", 
         RowBox[{"-", "5.2274767328275915`*^-15"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.07930742960575406`", ",", 
         RowBox[{"-", "3.2332434435439535`*^-16"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.334668434324125`", ",", 
         RowBox[{"-", "7.046592480524019`*^-29"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3491049233564705`", ",", 
         RowBox[{"-", "5.418411305539049`*^-30"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1110653752626345`", ",", "5.898031546114988`*^-15"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1111097742642813`", ",", "1.2231140305261161`*^-17"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.111111072136002`", ",", "1.0094157525100969`*^-23"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.05820989488562994`", ",", 
         RowBox[{"-", "6.470189432295707`*^-17"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3333342132934303`", ",", 
         RowBox[{"-", "2.5397762353902946`*^-25"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.334736522639671`", ",", "7.795705611783722`*^-14"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3496265922597077`", ",", 
         RowBox[{"-", "2.437768569228484`*^-22"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.611771304341168`", ",", "4.796678200527225`*^-24"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.657386231560647`", ",", 
         RowBox[{"-", "3.5937045522238154`*^-16"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6666162828216025`", ",", 
         RowBox[{"-", "5.950096138729995`*^-14"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nreal", ",", "nimag"}], "}"}], "/.", "\[VeryThinSpace]", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"eqnBR", "[", 
            RowBox[{
            "nreal", ",", "nimag", ",", "0.9`", ",", "0.3`", ",", "0.6`", ",",
              "0", ",", "0"}], "]"}], "&&", 
           RowBox[{"eqnBI", "[", 
            RowBox[{
            "nreal", ",", "nimag", ",", "0.9`", ",", "0.3`", ",", "0.6`", ",",
              "0", ",", "0"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nreal", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"nimag", ",", "1"}], "}"}]}], "}"}]}], "]"}]}]}], "}"}], 
     
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3333343055870825`", ",", 
         RowBox[{"-", "2.084888282377784`*^-19"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.334808069163182`", ",", "4.740102541466686`*^-17"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.08644797642640016`"}], ",", 
         RowBox[{"-", "3.2448957724308413`*^-19"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.60809833733513`", ",", "0.057540701713745306`"}], "}"}]}], 
      "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6515710592154522`", ",", "0.025552646398044703`"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6666496332670793`", ",", "0.003961084703215501`"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.05455733768450815`"}], ",", 
         RowBox[{"-", "1.969155853790138`*^-23"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.333334407560776`", ",", "1.4591304652072373`*^-20"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.33488324781759`", ",", "3.330807500483029`*^-18"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3507202542819283`", ",", 
         RowBox[{"-", "6.115315765673211`*^-17"}]}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6275692522799845`", ",", "0.09951933370240226`"}], "}"}]}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.664078015799263`", ",", 
         RowBox[{"-", "0.05379589793803959`"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.0784544467326588`"}], ",", 
         RowBox[{"-", "4.8963599266884003`*^-23"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.10614189264158495`"}], ",", 
         "6.166858496807039`*^-26"}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3333345202298297`", ",", "8.184046026114893`*^-20"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3349622410678084`", ",", 
         RowBox[{"-", "4.3324177360771295`*^-16"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.17487446772614768`"}], ",", 
         "7.989583248078408`*^-26"}], "}"}]}], "}"}]},
    {
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "3"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6524083219594974`", ",", "0.13012534291594413`"}], "}"}]}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "2"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6844981185324879`", ",", "0.07693785468733239`"}], "}"}]}],
       "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", 
         RowBox[{"-", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.13076707992558262`"}], ",", 
         RowBox[{"-", "7.030619016929113`*^-30"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.15524556327844086`"}], ",", 
         RowBox[{"-", "9.412054459033816`*^-26"}]}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3333346447159475`", ",", "1.5961461234157997`*^-19"}], 
        "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.19792270614058372`"}], ",", 
         "5.445137611585132`*^-17"}], "}"}]}], "}"}], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.351884257086511`", ",", "8.773615304720089`*^-20"}], 
        "}"}]}], "}"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.700849856749119*^9, 3.700852184023222*^9}]
}, Open  ]],

Cell["\<\
This indicates that {g1,g2}={3,-3} has a large imaginary part of n.

To have a better understanding, I can make a heat map.\
\>", "Text",
 CellChangeTimes->{{3.700849716769403*^9, 3.700849768556765*^9}, {
  3.700849924451664*^9, 3.7008499354903316`*^9}, {3.700850544022533*^9, 
  3.700850545429039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListDensityPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "@", 
       RowBox[{"{", "nimag", "}"}]}], "/.", 
      RowBox[{"rootB", "[", 
       RowBox[{"g1", ",", "g2"}], "]"}]}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"g1", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "0.09"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"g2", ",", 
       RowBox[{"-", "3"}], ",", "3", ",", "0.09"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.700849941277142*^9, 3.7008499710268803`*^9}, {
  3.700850064614362*^9, 3.7008501534997587`*^9}, {3.700850192210307*^9, 
  3.7008502055388317`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], ":", 
  " ", "\<\"The line search decreased the step size to within tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.7008502081990843`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], ":", 
  " ", "\<\"The line search decreased the step size to within tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.7008502088319902`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "lstol"}], "MessageName"], ":", 
  " ", "\<\"The line search decreased the step size to within tolerance \
specified by AccuracyGoal and PrecisionGoal but was unable to find a \
sufficient decrease in the merit function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/lstol\\\", ButtonNote -> \
\\\"FindRoot::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.700850208899592*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot :: \
lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.700850208918598*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.700850286706759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.700850290081873*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.700850293017346*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindRoot :: \
cvmit\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.700849972440661*^9, {3.7008501001401777`*^9, 3.700850146004443*^9}, 
   3.7008502930407343`*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx03WV8FGfXx3HcHQoUKxSH4k4hwW/c3V2Ku1PcXYsUd3eHDQ4JrsEhIUAI
hEAgkGDPDJnfmdmTp32zn293SLI753+NXZKlfe/6nWJEixZtXrpo0czXyP/i
efFaJU2rAdcqxxVPz3/45eppccTXK5sbxBanNTdPY7u1yVaxxGunmT8gpvjV
avN/xBAXNH98ftuDzH8+ILr4qPn24Whi628Wz/7593134Qw//55v4o0/f/8X
cdGfvy9C7PXz538W1/z5+T+JfX9+3o/ijj8/3wdxyM/P81484uff/04c7+dr
iDjnz7/vjdjj59/zStzo5+9/Ie7x8/c9E4/7+fOf2p/n5897KG7/89/fEc/+
uf018cif758T7/3pA+KfL6PvH5XPn/rn+544aeS/FzeL/PniPJG/X/y15c+/
T9wl8u8X1438fOJSkZ9f/Hvk9yNOGPn9iT/8MP97K+4V+f2L/SL3j7hx5P4T
e0fuX7FH5P4X746sD3GOyPoRL4msL3GSyPoTj42sT3HYz7/3h3hfZH2Xw70j
61+cOzIfYp/I/IknROZT7BmZX7H1qi0516/kHZN3TN4xecfkHZN3TN4xecfk
HZN3TN4xecfkHZN3TN4xecfkHZN3TN4xecfkHZN3TN4xecfkHZN3+TxW3jF5
l+/Hyjsm75i8u7XzRt7l81t5x+Qdk3dM3jF5x+Qdk3dM3jF5x+Qdk3dM3jF5
x+Qdk3fZH1beMXnH5B2Td0zeMXnH5B2Td0zecfLIfInJOybvmLyr47Z2lFxj
/UreMXnH5B2Td0zeMXnH5B2Td0zeMXnH5B2Td0zeMXnH5B2Td0zeMXnH5B2T
d0zeMXnH5B2Td0ze5fNYecfkXb4fK++YvGPy7nYeZ+RdPr+Vd0zeMXnH5B2T
d0zeMXnH5B2Td0zeMXnH5B2Td0zeMXmX/WHlHZN3TN4xecfkHZN3TN4xecdN
IvMjJu+YvGPyjsm7Oi/XjnLc1rnG+pW8Y/KOyTsm75i8Y/KOyTsm75i8Y/KO
yTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm7/J5rLxj8i7fj5V3TN4x
eXe7TjPyLp/fyjsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8y/6w
8o7JOybvmLxj8o7JOybv+N/IfJTD5B2Td0zeMXnH5F1dd2tHOS/Xx22da6xf
yTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KO
yTsm75i8y+ex8o7Ju3w/Vt4xecfk3e0+jJF3+fxW3jF5x+Qdk3dM3jF5x+Qd
k3dM3jF5x+Qdk3dM3jF5x+Rd9oeVd0zeMXnH5B2Td0zeMfnG5BuTb0y+MfnG
5FvdR9OOcp2tz8P1cVrnGOtX8o3JNybfmHxj8o3JNybfmHxj8o3JNybfmHxj
8o3JNybfmHxj8o3JNybfmHxj8o3Jt3weK9+YfMv3Y+Ubk29Mvt3uqxr5ls9v
5RuTb0y+MfnG5BuTb0y+MfnG5BuTb0y+MfnG5BuTb0y+ZX9Y+cbkG5NvTL4x
+cbkG/tH1n85TN4xecfkHZN3TN4xeVf3ybWj3EfT19n6PFwfp3WusX4l75i8
Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm7/J5
rLxj8i7fj5V3TN4xeXd7bmLkXT6/lXdM3jF5x+Qdk3dM3jF5x+Qdk3dM3jF5
x+Qdk3dM3jF5l/1h5R2Td0zeMXnH5B1zPx2Td0zeMXnH5B2Td0zeMXlXz8G0
o9wn1/fR9HW2Pg/Xx22da6xfyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KO
yTsm75i8Y/KOyTsm75i8Y/Iun8fKOybv8v1YecfkHZN3t+eiRt7l81t5x+Qd
k3dM3jF5x+Qdk3dM3jF5x+Qdk3dM3jF5x+Qdk3fZH1beMXnH5B2Td8z9dEze
MXnH5B2Td0zeMXnH5B2Td/WcWzvKczB9n1zfR9PX2fq8XB+3da6xfiXvmLxj
8o7JOybvmLxj8o7JOybvmLxj8o7JOybvmLxj8o7JOybvmLxj8i6fx8o7Ju/y
/Vh5x+Qdk3e3fg9G3uXzW3nH5B2Td0zeMXnH5B2Td0zeMXnH5B2Td0zeMXnH
5B2Td9kfVt4xecfkHZNvTL4x+cbkG5NvTL4x+cbkG5Nv1W9FO8pzbf3cS98X
1/fN9HW2Pg/Xx2mdY6xfyTcm35h8Y/KNyTcm35h8Y/KNyTcm35h8Y/KNyTcm
35h8Y/KNyTcm3/J5rHxj8i3fj5VvTL4x+Xbrx2TkWz6/lW9MvjH5xuQbk29M
vjH5xuQbk29MvjH5xuQbk29MvjH5lv1h5RuTb0y+Mc/LMHnH5B2Td0zeMXnH
5B2Td0zeMXlX/dK0o/Rb0c+19XMvfV9c30fT19n6PFwfp3WusX4l75i8Y/KO
yTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm7/J5rLxj8i7fj5V3TN4x
eXfrp2jkXT6/lXdM3jF5x+Qdk3dM3jF5x+Qdk3dM3jF5x+Qdk3dM3jF5l/1h
5R2Td8zzMkzeMXnH5B2Td0zeMXnH5B2Td0zeMXlX/U61o/RL0/1W9HNt/dxL
3yfX99H0dbY+D9fHbZ1rrF/JOybvmLxj8o7JOybvmLxj8o7JOybvmLxj8o7J
OybvmLxj8i6fx8o7Ju/y/Vh5x+Qdk3e3fshG3uXzW3nH5B2Td0zeMXnH5B2T
d0zeMXnH5B2Td0zeMXnH5B2Td9kfVt4x99sw99cx+cfkH5N/TP4x+cfkH5N/
TP4x+cfkH5N/1c9cO0o/VN1PTfdj0c+59XMxfd9c31fT1936PF0fx3XOsX4l
/5j8Y/KPyT8m/5j8Y/KPyT8m/5j8Y/KPyT8m/5j8Y/Ivn8fKPyb/8r1Y+cfk
H5N/t3EHRv7l81v5x+Qfk39M/jH5x+Qfk39M/jH5x+Qfk39M/jH5x+Qfk3/Z
H1b+MfnH5B+Tf0z+MfnH5B+Tf0z+MfnH5B+Tf0z+MflX40q0o/Q71/1Sdb81
3a9FPwfXz8n0fXR9n01fl+vzdn1c1znH+pX8Y/KPyT8m/5j8Y/KPyT8m/5j8
Y/KPyT8m/5j8Y/Ivn8fKPyb/8v1Y+cfkH5N/t3FGRv7l81v5x+Qfk39M/jH5
x+Qfk39M/jH5x+Qfk39M/jH5x+Qfk3/M/XdM/jH5x+Qfk39M/jH5x+Qfk39M
/jH5x+Qfk39M/tU4Mu0o40x0P3TdT1X3Y9P9XvRzcf3cTN9X1/fh9HW6Po/X
x3Wdc6xfyT8m/5j8Y/KPyT8m/5j8Y/KPyT8m/5j8Y/KPyb98Hiv/mPzL92Pl
H5N/TP7dxhUa+ZfPb+Ufk39M/jH5x+Qfk39M/jH5x+Qfk39M/jH5x+Qfk3/M
/TpM/jH5x+Qfk39M/jH5x+Qfk39M/jH5x+Qfk39M/jH5V+NGtaOMK9PjTnS/
dN1vVfdz0/1g9HNy/RxN33fX9+X0dbs+j9fHdZ1zrF/JPyb/mPxj8o/JPyb/
mPxj8o/JPyb/mPxj8i+fw8o/Jv/y/Vj5x+Qfk3+3ccRG/uXzW/nH5B+Tf0z+
MfnH5B+Tf0z+MfnH5B+Tf0z+MfnH3L/D5B+Tf0z+MfnH5B+Tf0z+MfnH5B+T
f0z+MfnH5B+Tf0z+1Thx7SjjSPU4Mz0ORfdT1/1adb833S9GPzfXz9n0fXh9
n05ft+vzeH1c1znH+pX8Y/KPyT8m/5j8Y/KPyT8m/5j8Y/KPyb98Hiv/mPzL
92PlH5N/TP7d5g0w8i+f38o/Jv+Y/GPyj8k/Jv+Y/GPyj8k/Jv+Y/GPyj8k/
Jv+Y/GPyj8k/Jv+Y/GPyj8k/Jv+Y/GPyj8k/Jv+Y/GPyj8m/mhdCO8q4cT2u
VI870+NSdD923c9V94PT/WT0c3X93E3fl9f36fR1uz6P18d1nXOsX8k/Jv+Y
/GPyj8k/Jv+Y/GPyj8k/Jv/yeaz8Y/Iv34+Vf0z+Mfl3myfEyL98fiv/mPxj
8o/JPyb/mPxj8o/JPyb/mPxj8o/JP+b6Xr7vyFcx7QGmPcC0B5j2ANMeYNoD
THuAaQ8w7QGmPcC0B5j2ANMeYNoDTHuAaQ/UvDDaUeaN0OPK9bhTPS5Nj2PR
/dx1P1jdT073q9HP3fVzOX2fXt+309fx+rxeH+d17rF+pT3AtAeY9gDTHmDa
A0x7gGkPMO0Bpj2Qz2O1B5j2QL4fqz3AtAeY9sBtniCjPZDPbbUHmPYA0x5g
2gNMe4BpDzDtAaY9wLQHmPYA0x5g2gPM9T+mfZDv32ofMO0Dpn3AtA+Y9gHT
PmDaB0z7gGkfMO0Dpn3AtA+Y9gHTPmDaB0z7gGkf1DxR2lHmkdHzTOhx6Hqc
qh7Xpse96H7xut+s7men++Ho5/T6uZ2+j6/v6+nrfH3er88DdDuA9SvtA6Z9
wLQPmPYB0z5g2gdM+4BpH+TzWO0Dpn2Q78dqHzDtA6Z9cJs3zGgf5PNb7QOm
fcC0D5j2AdM+YNoHTPuAaR8w7QOmfcC0D5jrA0z7gGkf5Pu32gdM+4BpHzDt
A6Z9wLQPmPYB0z5g2gdM+4BpHzDtA6Z9wLQPmPYB0z5g2gc1b5x2lHml9Lwz
el4KPW5dj3PV4+D0OBndj173u9X98nS/Hf0cXz/X0/f59X0/fR9AXxfo8wLd
DmD9SvuAaR8w7QOmfcC0D5j2AdM+yOex2gdM+yDfj9U+YNoHTPvgNo+g0T7I
57faB0z7gGkfMO0Dpn3AtA+Y9gHTPmDaB0z7gGkPMO0Bpj2Q79tqDzDtAaY9
wLQHmPYA0x5g2gNMe4BpDzDtAaY9wLQHmPYA0x5g2gNMe4BpD9S8kdpR5pXT
807peWn0vBV6nLseB6vHyelxNLrfve6Xq/vt6X48+rm+fs6n7/vr+4D6voC+
LtDnATr3WL/SHmDaA0x7gGkPMO0Bpj2Qz2O1B5j2QL4fqz3AtAeY9sBtHlGj
PZDPb7UHmPYA0x5g2gNMe4BpDzDtASb/mOsDTP4x+cfkX75fK/+Y/GPyj8k/
Jv+Y/GPyj8k/Jv+Y/GPyj8k/Jv+Y/GPyj8k/Jv9qnljtKPNI6nnm9DxUep4a
Pa+FHveux8XqcXN6nI3uh6/76ep+e7ofj36ur5/z6fv++j6gvg+gz/v1cV7n
HOtX8o/JPyb/mPxj8i+fx8o/Jv/y/Vj5x+Qfk3+3eYON/Mvnt/KPyT8m/5j8
Y/KPyT8m/5jzf0z+MfnH5B+Tf/l+rfxj8o/JPyb/mPxj8o/JPyb/mPxj8o/J
Pyb/mPxj8o/JPyb/mPyreaG1o8wbq+eV1PPO6Xmp9Dw2ep4LPQ5ej5PV4+r0
uBvdL1/309X99vRzfP1cT9/n1/f59HW9Po/Xx3Gda6xfyTsm75i8Y/Iun8fK
Oybv8n1YecfkHZN3t3nBjbzL57fyjsk7Ju+YvGPyjck35nwek3dM3jF5x+Qd
k3f5fq28Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8Y/KOyTsm75i8q3nf
taPMC63njdXzSup55/Q8VXoeGz3PhR4Hr8fN6nF1etyN7oev++Xqfnq6345+
jq+f6+n7+vo6HZNPTD7l91n5xORT/n4rn5g8us3Lb+RR/h4rj5g8YvKIySPm
+IvJJ+Z8G5NPTD4x+cTkE5NPTD4x+cTkE5NPTD4x+cTkE5NPTD4x+cTkE5NP
TD4x+cTkE5NPTD4x+VTrMGhHmaddz+Os53nV80DqeeP0vFJ63hk9L4Uex67H
uepxcHpcjO4nr/vN6vvi+rpXnwdj8ib98Ky8YfImf4+VN8zxEJM/t3UwjPzJ
cz0rf5j8YfKHyRsmb5j7XZj8YfKHyR8mf5j8YfKHyR8mf5j8YfKHyR8mf5j8
YfKHyR8mf5j8YfKHyR8mf5j8YfKHyR8mf2rdE+0o6yLoedP1vMp63lU9T6Oe
x033G9f9SPR9YH0fSF8XYvIh/VKtfMg4NSsPmDxg8uC2DoyRB3mubeUBkwdM
HjDHI8z5ICYPmDxg8oDJAyYPmDxg8oDJgxzHrTxg8oDJAyYPmDxg8oDJAyYP
mDxg8oDJAyYPmDxg8oDJAyYPmDyodX+0o8xLpMc563GPehyU7hel+0Xo5xz6
Poc+z8L6lXrHHA/k77PqH1P/mPp3W/fIqH/5e636x9Q/pv4x9Y+pf0y9Y+od
U++YesfUO6beMfUu359V75h6x9Q7pt4x9Y6pd0y9Y+odU++YesfUO6beMfWO
qXdMvWPqHVPval0r7Sjz4ut5dfW8XHoeHz3Ph54HQPcL1P2CdD8A/dxP3/eX
ccZWfWMZT2BZxhNYpr7l9zOewLKMJ7As4wksy/gAyzI+wLKMD7As4wMsy/gA
yzI+wLKMD7BMfWPqW667rPrGMp7AsownsCzjCSzLeALLMp7AsownsCzjCSzL
eALLMp7AsownsCzjCSzLeALLMp7AsownsCzjCSzLeALn/jXHE1jW6zjpeST1
vDR63go9jl2Pa9Xj3HQ/Fv2cSt+31ve19HW0Ps/nOIX1K3nA5AGTB7d17Iw8
SL88Kw+YPGDqHVPvmHrH1Dum3jH1jql3TL3L92PVO6beMfWOqXdMvWPqHVPv
mHrH1Dum3jH1jql3TL1j6h1T75h6x9S7WodQO8q6RXqdAz1vqp6HSc/ToMdt
6H5Z+j6PbpexzPdgWeZ7sEw9Sr9Q5nuwLPM9WJb5HSzL/A2WZb4GyzJfg2WZ
r8GyzNdgWeZrsCzzNViW+Rr4/FZ9YuoTU5+Y+sQyv4Nlmd/BsszvYFnmd7As
8ztYlvkdLMv8DpZlfgfLMr+DZZnfwbLM72BZ5newLPM7OPenOb+Du6Osm6fX
1dLr7uh5vPW8n3reMD2vkJ5nRM87oMch6nFJepyC7mek+xno5xD6Pow+T9Ht
NCYfbuuKGvmQftJWPjD1j6l/TP1j6h9T/5j6x9Q/pv4x9Y+pf0z9Y+ofU/+Y
+sfUP6b+MfWPqX9M/WPqH1P/mPrH1D+m/jH1r9aB1Y6yjpReZ0bPU6/nsdbz
YOp58vQ8OnpeDT3OXo+71ePwdD983e9W97PT/Wz0c3f9XE4/F9D3ZfR1qj6v
d1tn18gH5niBOV5g8oI5v8HkB5MfTH4w+cHkB5MfTH7k81v5weQHkx9MfjD5
weQHkx9MfjD5weQHkx9MfjD5weQHkx9MfjD5Uesmi/U6i3odNr2ug54HWs8b
q+eZ0/NO6Xlo9LwUepy6Hremx63ofuq6X6rul6b7qejn2Po5mr6vr+9r6vs8
+rpYXxfoXOlXt/WoDbutR23YbX1pw27rSxt2W1/asNv60obd1pc27La+tGG3
9aXN78PKD3ZbX9qw2/rSht3Wlzbstr60Ybf1pQ27rS9t2G19acNu60sbdltf
2jD5weQHkx9MfrDb+tSG3danNuy2PrW9zri7zbpk3JR6lfFTlmW8lGUZD2VZ
xkNZlvFQlmU8lGUZD2VZxkNZZn9jGR9lWcZH8ZzY2t9YxkdZlvFRlmV8lGUZ
H2VZxkdZlvFRlmV8lGUZH2VZxkdZlvFRlmV8lGUZH2VZxkdZlvFRlmV8lGUZ
H+W+jrxYHwfZ/3o/Y+53YfY/Zv9j9j9m/2P2P2b/Y/Y/Zv9j9j9m/0u/AGv/
Y/Y/Zv9j9j9m/2P2P2b/Y/Y/Zv9j9j9m/2P2P2b/Y/Y/Zv9j9j9m/7vtX2P/
6/Me9iv7X8ZFWvsf8/wWs78x+xezfzH7F7N/MfsXs38x+1f6eVj7F7N/MfsX
s38x+xezfzH7F7N/MfsXs38x+xezfzH7F7N/MfsXs38x+9dt/xn7F3Ndoc9r
9XFZt+M615g8Y/Y3Zn9j9jdmf2P2N2Z/Y/a39OOx9jdmf2P2N2Z/Y/Y3Zn9j
9jdmf2P2N2Z/Y/Y3Zn9j9jdmf2P2N2Z/Y/a32/4z9re+z8V5Fvsfs//1eZiM
c7b2P6aOMHnH7H/M/sfsf8z+x+x/zP7H7H/pt2Xtf8z+x+x/zP7H7H/M/sfs
f8z+x+x/zP7H7H/M/sfsf8z+x+x/zP7H7H+3/Wfsf8z5ucxba9UDph4w9YCp
BxnnbtUDpj3AtAeYesDUA6YeMPWAqQdMPWDqQfrtWfWAqQdMPWDqAVMPmHrA
1AOmHjD1gKkHTD1g6gFTD5h6wNQDph4w9eC2/4x6kHnLfv68h1Hue+v7gPo+
B6YesH5lf2P2N2Z/Y/Y3Zn9j9jdmf2P2N2Z/Y/Y3Zn9j9jdmf2P2N2Z/Y/Y3
Zn9j9jdmf2P2N2Z/Y/Y3Zn9j9rfb/jH29389d9bP5dj/mP2v72th9j+mncH8
Xkw9YOoBUw+YesDUA6YeMPWAqQdMPWDqAVMPmHrA1AOmHjD1gKkHTD1g6gFT
D5h6wNQDph4w9YCpB7f9ZdQD1v1qdD8E/ZxWPxfTzwn0fU/qQ1/X6fNC3U7o
OsH6lfrB1A+mfjD1g6kfTP1IP2+rfjD1g6kfTP1g6gdTP5j6wdQPpn4w9YOp
H0z9YOoHUz+Y+sHUD6Z+3PanUT//1Q9L91vRz/X1c1T9XElfF+rrBn0eqY8r
ui70K/WBqQ9MfWDqA1Mf0u/fqg9MfWDqA1MfmPrA1AemPjD1gakPTH1g6gNT
H5j6wNQHpj4w9YGpD7f7skZ9/Fe/bN0vVffb0/2cdD8Q/dxRP0fR9wn1fSN9
n0Ffh+rzEt2u6DrSr9QTpp4w9YSpJxk3YtUTpp4w9YSpJ0w9YeoJU0+YesLU
E6aeMPWEqSdMPWHqCVNPmHrC1JPbfX2jnv5rXI3u16z7fep+crofke63oZ9j
6+dy+r6zvg+p71vp6xh9XqOPU7pd0nWlX6kvTH1h6kvGIVn1hakvTH1h6gtT
X5j6wtQXpr4w9YWpL0x9YeoLU1+Y+sLUF6a+MPXl9pzIqK//Gkepx23pcSS6
H73uZ6z7Zep+a7qfkO43oZ8Dcz6ln3Po+976Pqm+j6bvq+jrLH2erc+b9HFS
t3O6LrF+pV4x9Srfv1WvmHrF1CumXjH1iqlXTL1i6hVTr5h6xdQrpl4x9Yqp
V0y9YuoVU69u+9+o1/8a56vHNel+7rqfpO6Xpvvp6H4H1J9+rqLvw+v7Mvq6
XZ936/MsfZzU7ZquG6xfqScZZ2nVE6aeMPWEqSdMPWHqCVNPmHrC1BOmnjD1
hKknTD1h6glTT5h6wtST2/406um/xv3ocRG6H7nuZ6v7Nep+XrrfCvWkn8vp
5zj6Po++ztfXbfo8XZ9n6eOibnd03WD9Sj1h6glTT5h6wtQTpp4w9YSpJ0w9
YeoJU0+YesLUE6aeMPWEqSdMPbntT6Oe/mvcmB5Xo8ch6H7aul+s7ieo+z1R
T/q5rn4upJ8T6PtE+rpfX+fp83R9XqWPW7rd0XUj47zVq4z3tizjvS3LeG/L
Mt7bsoz3tizjvS3LeG/LMt7bsoz3tizjvS3LeG/LMt7bsoz3tizjvS3LeG/L
Mt7buT/N8d6W9ThcPQ5Rj9PS41p0v3/dz1r3O9X96Kgv/RxZP2fU94n0fQF9
XafPw/V5jj5O6XZG1wnWr9QPpn4w9YOpH0z9YOoHUz+Y+sHUD6Z+MPWDqR9M
/WDqB1M/bvvLqJ//Gretx63qcX16HJQeJ6L7JVMf+jmzfu6on0Po+4j6vpG+
7tfXafo8WJ/H6OOQbkd0XWD9Sr1g6gVTL5h6wdQLpl4w9YKpF0y9YOoFUy+Y
esHUC6Ze3PafUS//Na+GHuevxznrcaB6nIbut6774VI/up+Zfk6tn1Pq5xb6
PrS+76jvG+nrfH0dpc+D9XmMPg7pdkXXDdav1BOmnjD1hKknTD1h6glTT5h6
wtQTpp4w9YSpJ0w9ue1Po57+a14WPU+EHmemx/XoftrUi+6HqPsx6OcQ+r6z
vm+o7/Po62h9HaTPY/V5iD6u6HZD73esX6kHTD1g6gFTD5h6wNQDph4w9YCp
B0w9YOoBUw9u+8uoh/+al0ePo9XjDPW4Fva/7neq+6np59j6OZR+7qDvG+v7
fPo+ir4O1tcx+jxUn1fo44bOvd7vWL9SD5h6wNQDph4w9YCpB0w9YOoBUw+Y
esDUg9v+M+rhv+ZN0/ME6HHVetypHuenxz1RL7pfsu6nqvs16n5vuh+Ufo6p
n1vp5w76PrG+D6fvo+jrYH0do89L9XmHPm7odkPXDdav1BOmnjD1hKknTD1h
6glTT5h6wtQTpp7c9q9RT1jPs6nnGdLzrOhx+nocsx43qsfRUV+6n7vu96z7
yep+lPo5uH7uqZ9b6ecM+j6uvg+n76Po62B9XaPPW/V5hz7u6HZH1w3Wr9QT
pp4w9YSpJ0w9YeoJU0+YesLUk9v+NOrpv+Zt1PPE6Xmr9Dwmet4HPS5ej0PW
4zL1ODPqTY+j0P3qdT9s3U9X99PT/XZ0Pwz93F0/N9XPufRzBH0fWN/H0/dh
9HW1vm7S5736vEcf93S7pesO61fqEVOPmHrE1COmHjH1iKlHTD267W+jHv9r
XkI9L5SeN0fPM6LnYdDj3vU4YD2ukfrT43Z0v2/dD1D3A9P9enQ/Dv0cXj83
1c+l9HMFfV9Y39fT92n0dbi+jtLn0fo8Sh8HdTum6wjrV+oLU1+Y+sLUF6a+
MPWFqS+3/WnU13/NO6/npdXz8Ol5yPQ8TXpeGz3vh55nQY871+NoqT89TkyP
K9HjDnS/Y90PUfcr0/2IdD8Q/dxePxfVz7X0cwl9X1nfJ9T3gfR1vL6O0+fx
+jxMH0d1O6brDutX6hFTj5h6xNQjph4x9ei2f416/K95z/W8yHoeVj0vpJ4X
T88bpudZ0uO0qTc9DlGPS9PjmPQ4F93PVfdb1P3UdD8j3S9EP3fXz031cy/9
3ELfh9b3GfV9In2fQF8n6vN8fZ6mj5O6XdN1hfUr9YapN0y9YeoNU29u+9eo
t/+aV1/Pu63n+dXzjup5F/U8RnreGOpLj2vV4xz1OCk9bkb3e9X9HHU/Nd2v
SPfb0M/d9XNT/dxLP8fQ96n1fUZ9n0nfZ9DXifo8X59n6eOibpd03WD9Sj1h
6glTT5h6ctufRj3917pMep0WvW6DntddzyOt5zXU88DpebL0vER6ngnqT4+j
1uNq9bg8PU5D97PW/Wp1v0jdj033E9L9PPRzev2cVT83089F9H1tfV9T39fS
9yX0daU+r9fnYfo4qNspXWdYv1J/mPrD1J/b/jTq77/WBdTrgul1gvS6IXre
cj2Psp5HVs+zqecl1PO26Xmy9Lwn1Kce16/HeetxonrckO73r/t56366ul+l
7rem+x3pfiP6ub9+jquf0+nnLPo+u77Pqu+T6fsc+jpTXxfo8zJ93NTtnq5D
rF+pT0x9uu1Poz7/a51KvU6dXrdGr2uh59HX83rreY31vK96nkw9j6Cet03P
Y0V96nkm9LwDetyyHneixxnofuK6X6/uN6n7vel+S7rfie5HoJ8T6+d8+jmP
vs+v79Pq+2z6Poe+LtXXBfq8TR93dTuo6w7rV+rRbf8Z9fhf6yLqddL0ukl6
XRW9joOeV17Pq63nHdbztOp5LPW8gXoeNT0vFPWp5z3R82DocXN6HJQe96LH
Leh+5rofr+6HqfvR6X5Qul+L7regnzvr5476uZN+bqDv++r7bvo+ib5O1dcR
+jxQH5d1O6jrEOtX6vO/1vXW6/jqdTz1un56nS+9DpBed0Svg6DngdfzZOt5
hfW8q3qeSz3vn57HjPrFet4ePY+LngdCzwugxwnrcaJ63J8e56XH6ehxFbrf
uu53rPuN6n5/uh+X7qej+1no5+z6Oat+Tqafc+j7zPq+oL4vo6+b9XWPPg/V
x33d7uo616/8Pa9+foy4XhOsv5d5UMu5/71e/H3vp9XK0/xmXPExy/Wfvqm6
rmBM+fcjlGOmSzLR/5R8Pq+8yny+Otb2cS3z70+6f14vvt/C1vsXrO+fefn4
fp/UvRqR7qXtTZazJvvo/erfGLJ9HWW+/4WWa1jmffb3EMtJI/+wcswDyPdb
Njyo+ZII2zEtj+xxOU3hRDFk+23KfL+PLM+yzPvU33HLm6z6ZN7OucsPDyg4
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
XP9bNWXY8FL29uuyDPU+HhE7ynp8t1xHhpTxvu7K1bHvkYcd7PeDHyXrUSMw
lrjviI4rl/WNKV5U6XCllSfs9fsetcrQrl6S6GKO5ykv9EvUL/UN14rotQck
bW6v7/fq8tsPCef/kPX3qG/fOF0eVTt2w+X1qPuZutu/yfvU+7ASv/3Z78N1
uX6YO/tq+NIs111FTl/c86hauGz/Yce3ZTFi2OsFpqmcqEBRx3qB/dOuTHHk
cqiY9vq3QXXydt92U+rb+0zX/N4pb0t9/7boYJqFTW+7ttU9XPJitKAo696/
3z0tRtPURr1fy90qxrzAKOuAL5zcOWucJXY7u7/Pm3UbOl53VXi4s+DsRI+i
rKO56Gq9K3XL3XIN8+j+/WLSB/K+zLd7sFj8bAduuAIerKvyR4fL8v+rD/t5
vRFlvcJR9yP92/uWA5zzuh8Z/bpPYEnfKPM4D2vXes7Ms9ddxRd2WlbooX+U
eX7/dyZFuxTpbrvGLqpf//oPex7oI93Dm/hPCxRTzw275Jpe/8JVaV/rreuW
u/AvV6Uewy75p3+w/Krrhr9HtXSjo66/N6llxhoNulx1tfteN7hjmL0eH+3x
8MPLW5Tcctm10ffVzodVo67XFzpldOMiO71dje//mDJpor1+35WPbxoPHxJd
vKd1sogMfaNHWc8vbcTqWvn2XJF6rZ53z9F1jXxcyWIm3pdx/dco6/nNmDvs
a8k7l1xzG2dKfvmNvb4f7fP6ep4Jp3S57Mo+K+bG8Z8/yvucT7xvsOD3PIt9
pH2OdfB+qT0HfVzxOwwttvV6aJT1/06nrzd/3IhLrmNTag4rmzfqeoA9Yl+4
nG+Qj2t8928Fb9y11wekvT5aadP4Pf2vuc7nvL7sYuqo6wc2Htu0U9pB3q6b
i75urF7Fvq6lvttUaO+VtKNd78/Sr/3+7N1VV6em08+kKGBvf21Raa+Ka+11
wV/GGTem0j3bPUpPPhA37FGU9QkDE56/8Hyyj6trzFw5Bv19S97nNeJuubvN
819xnTz8JdPsw8fl//N8+9ezkfW4t5Jpe/1Cmd/neb8j/TZddb0dfPBpywg/
eT96+fQVupwOED8tcWfEzf0vxdT3gSTbar6fetw15OGShyd7xPXS64d9WHO+
wPzy51xFYuTvs/B61PX3Ep+Zm+iffV5yvvHP5V4zlhg/Hx8uWzxrccM9c+2K
qOBYr2+078Lor/+f9fr8H31cuDDDUan/8hnHvy8z9rQrW5mCt3Pejbqe37VO
F6r+WHjW1avmk7SVJ9nr+1H/fz3/M6Dmy5OuP/oUuhDez17vb+7DrZsaL7XX
+6O97tkm3dhsy05IvQ+40ux5+MxTrvX5zk8eXiDq+n7LhqfPN7D8WVfFPwI2
FjOu//V6f9kTLwvfff+YtM+eWUYf/LP5ManfdI16/7q02gGp16WdJsSdXOmc
q9+rnf8r9f+s71fnRdFKg9IcdI3zfXu73f+z3p9fidgzkmTzkvo7eD9D2SYb
T7hmvvjyq0//+7I9r99T3Rh0KfEZ18sNv7/+zWuO/fms/hYxZ2xKser2KVeu
mjMTjxu6NMo6SbdKRXphnvaH0o09Le83PROn+tt6V6KssxI+8ZRr2f8Ou+bm
6j68Qf0b8v60We3KlqntK05QqeuaLsf8o8zDniJ3zCd+C4+7KrQo8+SuUb8/
v9bR948mKHJyxEuHOd8YNXRQg5jO9fAOrmja+JcEroubG2a7+U8c2Z56nlbs
3Fwf3wWu+RfvlJ7Vxl4vj3q+9+P4mPwz1x3Hv3rNeny//6vjmXb9eSlt8Viy
PfWctNPZkIzHtrq+Hfn1wpDKUdfbG99lTy6ffxa4VtQYcmX3Fnv9Pa73Km6I
+Ce970bXo8UzkyTNFHU9vlMrZmyv5bPKdaPMkdxnG9vr83G+UXnyqo1r4rd3
Dd3d98ZfJz9HWX9v7YeKH1eMnO9qlLBSkX0b7Pel/0+uXRUvLYwl9fSydmLP
291nu3I0SDEw8W83oqx/tzF5i+U9xkxy3UyT9U3GD4fs9f3KRcx+HmdMlHW1
6l4snNv//E7XqN7n9w1rfTvKOizTv2Y9MWrUXFeOL+3uNCnyKMo6DAOvRp+b
8O0qqY8/r1Sd+6LZPteBek/rj9sdKNvT3q1zZW9Tr3NPD5zh1cXlhdKN9xj/
bMiqOCvielH3W7e2XOo09RTtzoO9c1cUFvc7nHREhuWFPR3rLaYut7iIR406
n84teRZH/v0fL1dcdprzieQl+pZtOmGQR8mw8yNz5bHfL1dv5CCn+z+6tn17
79jifv0f7Heaehxw5fPKfoXKeeDoZS4nL/94nMeO8/E7/7Evlmz/ZX7GVk7b
60F6JS+Ts51H3JePc6+MiCnvv2txt4jT1Hfd2J0/lavawQOnmbw0Q+KL0z2K
9P5jWbxy9vYTswXPdpr6H1zzwZPSmUZ72OtNpq2acNk4j9BcAbV2eEeX7TN8
WtLSaeo/dqWvR8otHe0xNHT600SNosn7FX9vcclpe73KJ98Xf+/v8UvpxFfz
F/0h7Vy6Rv2iFXCY86ULDfJX7bZ5kcfw37Kdi3v8m7zfJyTddKfl+NG54cka
SVd42OtdZq7aqNG/Hl9SLzx+5WqEbN9qYvsMVx0mr0+6NL3QunlND5xkw6kY
fxTc7TFqw63b/zYLl+0zxvdq4bS9nuZXzwnjF3mE7zgT8OLpJ3k/KM6x6S8d
tvsT+hwrN2m/h92f8M2elkVOeEh/wtGtvy6Pe9HD7k9YcPwiL18PjmdXJvoN
HRX7ocf+b+XGJBsVIj//nN+/H+I7LP0NR29OG/IswqPigJu1C39/I+8nb9Ao
Wi2HOT4eKPlXw3uesT2XNEl5ct2XV/L+vw2HtOviMO3Vj6KD82WfnkXuQ/eO
H9CqwdWKct+v1caaHt+7jpX7MLnW5i9WI8USz07NXrzaGfBQfl7ZpJcPxh3+
SEz792RasSlBr3vKcWnZpziNMwcu9/QLTd5h5O219vdrvQbErLstYcG9Mt/I
9Gx5Oq7KtdPz1m8BxTqn8pHtNp47fy/ixq0o6041nXemadf0SzyLP3g1OGKK
b5T1JV81qL4z3HObp/fKTH80XO0XZb3JFaG/lul6ZJ8n7V3cNY8GX3hwTNy1
Xf1Ypmm/yh3ZN/HObdt/j5oQy9dwmw0t694y2i8Z9/jmaC2nac/OtO/ZoO/V
Y+KIlrsv9DGc5YPv8i557O1fFti3ymmOv92/j/o4+sIx8YHW+WeMMVzvaJeq
oUZ7x/ZxU1eu7DTtXdmn44a9P3FMXGt60+vvDKfY/8v/BhvtHdt/+za1utMr
PD5s7mC0T3h10o3rnU6ReearzD7RxSML/RLi9I6IKTWXG+0Nju2TobLTuTuW
7zm82A85b+rT5voop2lvbv/2OsCn5THxlDExjl8wfPHK6ZkNqn2V7Ys8ejPA
6bPD15S7fT1C/CPv+7ZOJylVauuPFuHiT5+vjXWa9mPJt5pLRgYfFT/KG7Jh
nOEeS0ssft8jTLafMN7l7zTtR9nxD5v/teCo+Kz/mFeDDC9P0qPYhA8fZPsZ
2Sb6jHc41pchJ6sNDxVH7GvXtrrDtD+v4lSZMeGXo+JTwx7XWm+4UYHH35NE
fy/bF7xRMbbTtFeHMrydXuLEEXG8JAdCvngd8SzrvW/+jAkh9vdRvX2ZWQ7T
HuX0ubOi1ePD4s3R47So/OiwZ4PxcRbNTfpSth/Xa2mbAQ7THs3P97jb27WH
xE1PTHhbdckhz1bVBrerECdAtl+y6eb8fxyOu+tV6+yfn4r7nlmW4E2Ybbn/
2GRB42alD4mTLPvFZ8jaw55HNj3/0//wHdn+TqG1yT/84htl3e/TXeO0Cp5y
2vPsmGxtGgzwkvd5nVVk06HXgcc8ByVskrNW5eNR1kP9PGTamnoJT3v2yNfj
VLWkV+X9pAVHV9xa01dcNWvA01Rf/cXfCm5bEz8gjhc/53arxKudpj1ZvvhA
swd7fMRdIvKPMk170eKu/55yO23vDAqaZrpK67pdCvaJLT/vzvQy3Zymvaie
o8WB+lt9xDH29/Y3nTrNtcBDRnvB9oWy7nvhNOdP7boEzom90Uccu+jDk6Y5
P4pWsUWnamtsNzgwN7/pxWOKZdtrtDf8vPFNLuZwetPyXs1/nxhDvNFnUhOn
OX8qXv1t58L/+IhjDOy+zfTh+mu2+iaLLtv71Gi/0+nB2RfNzGBcP+C9typO
dZrzp5XjntZ8OsZHfDlptGOmmxWr+Pmy1ze5j31pfsVYVxzm/GjOs/tJ6vT0
Ee9PeqRbbcOcLyUN7+I9t63tnivjLZ5nOEnKVEtm3IyQnxfoW22y05wvLS7h
4Xm8no8457wCxY8ZLta81KVorcNl+/OD5/o7HadEROW0Lz6Jvfvmz+0050tv
p+/t7pXXRxxyKV71k4Y5X3rncX/djY/e4iyHPy6/Y5j26qXPoJhVrttOkPCs
cTHg7ZlnZ8mVn2K/l983KsXs5J8d5vwpVqxuQ1f19Rb3efSoxz7DbT9/3OL9
W7Bs/1e3KWXOO0x7lWByk9/fF/AWN838bUP6gt7SHu2vMmn7u2EXxD2exV6X
fMQFOX+aO25L36xxbT9MNHdKRIwLnlvT5dxwOa2f/D5/3w5PU/5qO0Phr8Oz
pHok7v+/e8/TprDN+dWPlC+SNs5yXtz8SbI/0l487/m5x9PPlbJel+2TXT0d
/u8A2z7pcifMUfaoOGWbITkr5Dkq7ZJ8r5e73T9Q30fmd8udYM3SrEW9ZX7R
FQkKN2w7x2i3ejz69/r5R/LvOJ8KKL8wVpU6Fzx9/wz6u5C3vd5vxutXfJat
DhRzfrWm0cBP1Z/fEO/bERa9huk4CRctNq4vZX3XrqELnKZ9a9V8Sa+G/jfE
TeNUb2+6+c5kfa8b509sH3qlUT+naf96l5r7cPPTG+KFzaIHme4UFCOis9H+
sf2q26s+O0371Tv3vhV+D2+IkxfvOct04hK5B4z4ElO2D1pxdaDTXN8FVKlW
qd7dG+KSbyIKmA71vVjigXH+xPbbZo8r5jT3P+6nmj1m240b4oQlry41zfVf
qan1pzW6ant50q89TDdO1fvWVKP9kvV8s3T2dZr26+lC14EZF2+I3/9aZr5p
2qdyWQb/3fCU7eHLu+023StLvMMpa36V+1q1h/fZ6fSPgsO/7m0TLu7R82aC
fQ5zfpWjWK2VnXfcEK91NSltmval6dPDGVuttz2lSdyFLQ1veO/zdEPEB/l5
7Su0Puk07U+8soP/vjfzhnhn3Lr97hr2ftJl0aaxobL9nh7hJ52mfQra+PFL
z79viAd3yzyvt+FvHn90/Bb/vWz/dEaW7E4X/2XhosGzQ8TlYi395HS0E298
z+QNFifrfGjVaYe5nptfp8i7KqntfmY15zV5V9RwhoWLyu8tafdLC3iauPFB
h2m/rnqOHzjy1XVxBY8BN+oapv26/CAi1e49tju32D6u5N7rnpt75St8oqif
/LwhJQ+n2eLwAp9NycbGvi4+2TpezjzJbctzkdSba3+Ne9vze435foVu2vft
Zf7JXn2fDex4y3PrvQ6l/3zjLe0S7dGToOsdV769Ltd7I556D8v45w1pj8ZM
TX00NN9tzyTTdsQ7WfC5/Ptj0UPWexntCdeRJd+mdDPtSZ52WTf8ff2uOPvD
bjtNc/6zyffJx5ZXbI/P9PiV6fjHS1bIsz+W/Lz+czpUdHpwjC4Xcl+MLvYP
33zOafKa8FPRRv1P3BV/j/31L9PkMTjxuh1pj9uuVyLgvOldRaas8Dv5TZ5j
r8zQf53T5NXrdoYyn/bdFafYeTCt6QXX8gRVvRMh26c7f9vP6QrhfW7laRcu
vvxu3mOnyWuWWmfrLFl7V1w5e9Z5ps++evXw/KtPsv39dw2uOU2eN0w64n95
2V3x4Gtt/rxieO+pzN59J4TK9ruvNXjutN+0Va56id+L++7K8Y/TXN/UXb2u
yKPud+1+2XHKrHpsmPOHQQFlo29qajv1ljNb1hset6/GuSnFguXn/R7/wNCp
Du8oFfr3c88ge33tWLmbBzhMXrN0b3L/eNa7YledyX5nDVfwHbdjXA273+HT
CsX2TnJ4a8noO4vX8BOnfnP1RD6Hub5JNnJxvzP/+Iq/PEmwqpjhWFcWvXg/
9ZFsf2H8gVZZptnm/KLYipaXczb0FW8odWT/lXr2c+UjJ5su+eXqA890Xxqd
zjHIXk9crmOSLFrRMtzXc8rVvEnuLzseZb3w2WMDty8q+8DzZIkDz6Nvuyrv
lx5xZ3OHctejrCeeenul5HWKPfD83wUfjxt7/aOsM9tmbKLL/268a5wvPDtW
8ZG9/viA7QkHZP/2UjzCt9t6fyPvtCMdffesc/pHz3abmxl5lfWYizXa4jTH
+8yHXPl/2f1YvPtUw5KmU92//j3QON6z/Yn+F745HW9ZpwX9y9u+UmLyQqdl
nNe4rq8qbX0sLr+i2UPTcdYtPfAweXTZPmGRJPudpr34NfDP1uU3PBY/Xj+6
lunrey/lLd8kmmzvnWFmPqdpT8o/vZm52trH4kYt/0lsOkPe9q/b+UZIP69J
uxI8d5rri7s3sry+MO+xuEizMym8DZPns+NWnqk5yXbSnsUmmz5d7bel5waG
yc9b4Tq/3mnun5R7WLNvz78fiyeUO5zZNMfzai8fnMkyyHafTkmL/G74a7dl
+b0nhcrPq9I9OJ3T5P1w0NtNp2rZ4xy2f4yR8Ixhrg86BedPV6C07e3pOlz+
w/CXJ2O77awWJD9vbufU6XY5vHn/67yDGrwUryqwPuZAhzkeb8y+LlHcWI/F
h1dubp7UMHkePrjxyDw7HomvJx84rJVh8rr66LFyQ/o/9fz1za/eQY713sln
917/rMkZ+6nkMdXzUeN+GfHIM1aNxl1fNrbP+8nf5AvNc4X2sfP2b/K/34RV
eOL5T/Jrvfqcem6v5568aLKYK+N68e8adfknqdMTFlb4Y7yRJ1x5RrJ8TpOn
IqcTPGp+3k887n2qe6a5P/BmeIFRc87Zjjdh4ljTJ9utKr7eyBM/78CJbcWc
5ny7cbnkzfae9RP333+vlel+mZ9832Icj6VfV8W40bY6vKDD2ENZUtie+Evp
g073aPslaLqRJ3xhRvc3TnP/snCK79UOevmJsxW9V990Kt+meYed/ib9dirm
X5nT6fMlLh35UvureNu9dF5Oc38gIsPNWlmP+YmDms8ob7rX/NA+EzuEy/ZX
1338y2nymLl/uatT9/mJT69I+MI0eavzvNmVnLtthzzZ8to0eYvR7EOP/Ntt
tzufuYrpBlnSrjk/JVR+38rfl+5ymvPpXI/C/hq+yc++vxl6upjpuvf7dV6x
JMT+Pp7er+E0ea09dc6LnP/6ieNXijfI9IQ7NZvVqhQs2w+6unid0+S5cvto
L37Mt8fZrHdFWxptgZ/nweRXEnvXs8fl+J55uOSCw+R12IpXRw6O8hMXL3Fy
3H7DvpnbTa7fOUC23+zX8VQDhznfrth76LEOvf3EeUbsy97GMHkfGD80XQJj
+y6HOw6rbZh/T/7nX/lUt6eRx/ttk7XO7ng/8NKmqSMd/cJ4LnI7VpWf+Y1d
9lzYw51Dy/K+zIeSP8sqz3tPPXNlbP7T8vd+buJmXnOFbGrQO9jfM2+S+V/8
m/pHWQf+UjnPW+E1jfw9STr8ddoAef/vs91fBTcKFPM8OYMr6E6WQwHiIbkz
3zPN85hRS6c2KXnQ9tL9CRqZ3n/nw4NzAXG8+L2uoAkPnZ7etdT9Hnltf5y9
/J7T3B/4p+G/J3MfCBC/Wn/UZbrChfP3E/eNLdvv2NXrgdPnniZdccNof3Cq
gh7Lneb4XnT8iosL9gTYx/v8aa+Z5vp+XNvQ5Gt3247e/XMi0/vHeLZvbbQ/
/LwrbRt3cJr25eHgEcXT7wgQv6hdqoDpCWHnfwzvGC79BLLtCYxwmnxP/HEn
ov3qAPHL0NHPTEeLPSJ2zhgfZfvbW6okcZr8JmpbaeP7JQF2nnP+csX0/sTR
lw1OZY/rnJi53wynOT8fVvr76YILA8TvFueYZTroQ+Ja35eFyPbbO65p6zT5
n1HuecDY2QHiAkHXiowz/ODP2IXeVwuW7e90aBvxzmHy26Dphd4lBweIK356
dLyU4aa5jj6oNsRPtq9T/cWfNRzOdzbLkeqOfu3kM/GvW0qfMLw7QWyfHjsG
luX9s6ci84UXfGjqZs5jz+VLuT938+eeSQvuvufd+I68375XoyWJ/3gkLjq2
+C91ytu5m33ofZMzw2x7pw3J77EsUMz9uMVlQjvfX/tSXOvdk46myd+Oxscz
ll9nu2pt7/SmuV7+M06Jc5/X2G7W+cFp0zKvRWC610Md3ploVbDp66mrrc9n
5Idxie0T7V/nNNfbu9NcHhOy+qU4v/+E8abLt0peo8vXmLJ96e5H3Mz5Qo+S
ebIdXPVSvLLPp8ymOR/YfbnSytgOzy5wZpnpplmyx091Kbr8vLpTqsVzmnye
2F5vSdcVL8VFpixcbprz8R6PY9Qbstx2uOtcI9Ny/61V40M9/rU9N9P+46bJ
r8/mOK3KL7N9Kma2Dqan3Ko9q33drzKus9+hhnOd5nxg1xfvawMWvxTHGvLl
rulO/RpWfnMvQravWMe3vNOcz68dN7vTmUUvxaO6BbQwvT/l4ogGncJl+yn9
N3932mNwj92z334Sj12ydJvTnG+UmnPk0Zp5L8Wja8+7anp1xbnflg4Nk+2X
d28Vc5nDtE/dC48ZlWbOS/v5a8Ecs037Tw/+2iPmR9n+38a3PjrN+UqhNX7B
WWa+FH/4X5fYvxvOMbLzulgr7HHcX9503eu0jFPulf3S2TEv7fsJie/ON835
xIcHyarGGGHba1jxj9EN/3PC/2GNHi/t7797gslOcz7wOXaK/FPM+m5xZalp
3r8dsvvk2N+6lsUcvzONm/1xaUCgZ65SLX+a9y83CVnmM/y8mPtkVbPFeZyt
rnFdPXrv56GTb8n7tD9lehSpc7bES8+qNeq2Lx3kK+8PjnPg7O37/mLalSb9
fPOZ7QzH5/Nr2rn8ZwWJd01tccK0V9jRj1+M4zPjwDPnr+pm2pMnc0d1HWps
j6v/s/gv07QH/w5v2GTqTNtFOwY2NF1zh++7ION6g583q3rn905zvbGtRN/a
MY3t8alkieuZ7n6od/opRnvC9v3G30nn9OuA2PWzVLDdrdxmN6ffmatmOaO9
wNsSdq7hNO3BnYeV/MdNDbL7c/3I9Nh0ln9PjqvQNJps3/vm9vFO015M+Xar
+vwpQeKmxwtUMV21e+WzHme/yTj7oPVhp5zmfuDIacvytpoUJP58eXkh07QX
HV5X3ZVwou2H+ZtsNl17T920C+9HyM9L26VOeqdpL05tGH5qxvgg8dWty3xM
n6/W91OKzuGyfeVE4aFO0x4kOlguddDoIPHV0oFZTMv44nppVu0cZbtt8PG5
ph//aLtjSqyP8vOex62wz+lP447XKD8z1P57+w+v5HT207XXnlxpz9Nwfk/B
nU73WNzfP1m/l+LgftXWOs35Q8jCxmv/bRMkXhVrVkrT1XNtiuj0d4Bs36Rz
headHe4bZ/pOM++Y/gnz8naZ99nI28F6HXZnrHRO3qef5636izbOKvTKc2WW
3lW/Vxgp73/oUu/72vcjxLQXzWe/+PBk+ivPicMi2wvev3KnhZu5f1Bnfq6s
PdK+9jwdknTCvAaX5X257xpveVjd7K89468ekHN0xBN5/0y5RD3ixvATy3nn
lVE+/eIGef7PN/rIr+kC5P056RcMW2tcH2DOT9rdqb0y9/BgsdekaKtNF5z1
9GzHlXG9mCejwpQRbp56fWTOeAdiiYeP+u7mEk1eHd5g5BuvbtvWzZw/tKg1
KmzhkGBxietxw01v+3dwZ99JMWT7We3TdnGa8/3ZwV92dBocLM738PNW0z0m
de77zjifZ/uihTf0cXpuwjop+xv5x+UPZEnlNOcHjZeXevPHgGBxryUrXpqe
v6DXzFH1vso8IqvCs0x3mnwvOJ/0c2jfYPGvd5J+N839/bm/njn9W2/bpRfM
Omo6KMsR/9zvPsnPi9Wu7Aun5fnd+WZzu/UMFo96MXmyafLrvbqjX//utt8U
axxsetm31k/Gxf4oP29r/M73neb4vS9F/CWFuwWLD/kUm2Y6x+FJT9rOCpXt
G4xZ8tzpiXnipf+S1p4XJsW3gSmdXv2lS7LKq+15WOr8kzyd0xz/197OE/ql
TbA4RZniqb4aHuPR8UmLxsGy/VzfhOec5vzg87LYi861CBbXzpP1jGmeH/Tr
53nG3L5pYIx5pvn3tC+JfA51Ns39++JjtjyrauQn0ZXgWj7G9Qjb59lY6sTD
yufEMo5i5pik8wxnulI4eEyZA/b+s+4f7AmJdOy+Gd4Y78s6b7Qnvlcmt95/
L9heL843LHtvo/7m9utdMFu0e7L9x6bpHgQF+ItTLqx55+jmZ/Y6pZm2z905
MFDM9YfLq9AfEbtDxI8eBf805xctHl9rusXhss++NzH9rEmCGzmex/FiHp+b
b3u4OX3jWolv5LVdIvxZIqe5fnn842CyusbPw9MXeyc1/b97iXOPMK5f2H7D
9hFu5vykUN/gqxmM7XGq8m+umX7wIuvFLEZ7xPYfvLf5OE17c3V88SMbd4WI
l+1Netj0qMIP3rY1zj/Yfvq7DiFOc33TMF39nZ2N7fGO4XN2mS6xdFWfcKO9
Yvu+6ZO6mfbK6+2ZVpmM7fFenyxtTHP9s6/IqIDLO21PShn9memP0SoV+jVl
dPl5ETXeuZnznx8vqpQdbGyPC5UI8jC9s3qCV8uN9k7Wzc5RM9Dphnn+9CxV
5ofM03Sp+ONyTtMefpjVrfvmHSHitS0H9DS9N3+hPr+f+ybbVzvVqpfTnB8d
PpYjX2Fje5lvKYVvHtOPx2/0CjPaU7Yv827vSadpTx+nvjVsy/YQu71NUGSI
ac6PMq+uFJbSYe/TpUNN095WDX3u6rrN9ueYA06Z9ig76MZNo73l91Wp0vGq
00fXDZ5acESYuF1wsplOz/vx+lbbOPY8YduLrLvmNO3pkqmJ9ntvtuftKhNa
+ahp7vd8Wtf97bpNto+WWf7CdOD6LjUzpbPnCfv05Hx9p7nf4+9/c2L9jSHi
mqfvzTb95K9JiReuCZHtJ1YZFdtp2stDL9/HNZ1lwou9pnlf5qM+kCO5Oe9Z
m5pLRzvf/+CXqavZfmLaz6aem2e0MFzo5T+l55U/IO8v7nvQtKxryfXU6IS/
+efqEeI5K/eg0dGy35D3eW4y+WSz0kffhXgu75z5U+Y1T+R97oOW9Pa83rV5
iOffzbdcTHPHT97nfKnxzTlT3qZ55/nxUJydqf0D5H3OhwaFVfjrTc73dn+r
F1O6maa93Nv6Y8ZkuWz/vqbyT8u8pak6/7oyp+3fky1Ka7rVwzF5SxntEfPE
5ZyQys20R/knenZ/kMP2rxdr9TAt7cGF25NTO1wtd6Gppsl7xhUFsp7LbrvC
591ZTMe/+WXpWSPv/L5KeTctc5o8D+94OG2S7LbnnH6W2jR5atc334eVWW0f
+fEgzPTw4u+m3e8SLvPgVW81b4rT5G389l0RcbPa3rVw3ifTZXr2HNPzvT1v
XzzPHOOdlvElG3xTL8xi+0u7wSlMH6t/d3/ZOaGyfe2prXY7TZ4aXqzVfM9v
tj3jPm9rmvONEWWnZze3f1As2kPT/HtZHyqoY0aZp9m4Xghq87b6IMPUb9yL
tXx3er+X43f+qksudZv0Xur3+hC/Tc1933lO3tO0zcOpj2QdV7mvn2f304r/
vvccPOBFm0tpnsn7HC+9Fxe7NWxZqDhFmRi3TXsk9pq+zjheMo9h2/ht3Szz
wm5qczOLsT1ue2vQDdO5en+M+8E4X2f7wr+0j+c09ZjoyKypb5eG2vPAPlsw
xXT3Y62fFJ4cQ7Zv6ff0sdPU65MTjyr8aWyPvdKuKm9667c4SVobxzO235Vl
sZs5XixbNWVU4OJQu3/d6c6jTZ8Ys/nC6fpfZR7Hfou/nnOa40XVTYObjTC2
x2XWzm1hmnr2SnilSAyHj6XvWsj06CsvRzbqGi4/L/RzgtFOcz4e3bN14keL
QsVrsy9NZvrB257bB48Mk+1jfl+yxWnq2atKgdn5je1xn+mx55vmeFHvdC/f
zgttt7t15YbpeUWuzIg1N1R+3uF0rjlOU+9Lt+7uPXZBqLjp2rh/meZ4Me9a
/ZDh822nDC4ZaHp1teCnZh74eRwvlve8Xtysz23nnns53z++9dX4n+PnLXN+
vWZ5Mw9z+/e/nWjofD/2hafFzet12V8/6/uhy1U3XQNz+wsDc11u6Xj/9uVF
ca4b5+Py/TNuqu6ni2c/vPcssCX3Qo9fu8q6yKdW3hjSI+CsWPoVFulX1yNx
qGe/yR02b+h2Q94nvx/WfqtVvnio5Pf9xaJ7fg0P9TzWoGjW0xefyPYcX67v
WPPa+22oZ/Y6DfzLHH0u769YUvDQU+8X4kEZam4/YOSTeU3f+L/b5jTnt+Fn
q6Qrn9x24rzDfzXtezdWpvbG8YPtT4/u6OYvm7oG1zDyhxPm//DG6Ym1Kn4b
buQLx43t42aOH2NexM0XI5ntCUur5jc94lS+aQmbRZPtE2dbMtVpmSe4wr6j
h5LaHn7yl+OmOb4MyNpmRzeHR1QK2Gn62L7UC091teelnbck7j9Ok69nZ5tk
L5XY9ovx/X83vXpC7b594n2U7ZeVaNrLafIzdMjWTYEJbeesfWybaXue1NSD
Mznsny3eCNPRd8YrtWl9iPy8qm9zeTjN8STN07u1nXmZP7fK/A9xP4qbhWSf
aprjy7Z9BeqY29cs8Dz2+fEv5efF/PF3yDmHyVP86tVqmc73aUZT07xPft4s
mlzy5/dl5SN/v9xLfPLZXraoR+59GT56Ppn9OOOoK4Nk3fD9v/Ya12jWWXHP
/huTTWh9W0we/ip/s6zXHuPf185Zb1gfP3mfPMyt9k/G92s/yvXk3eGNio2d
GCb+N/enn844rMDMrsb1JPP4Lj3lN8NpzqcmTmlfvoOxPV6cMHEF0xwP19yO
/aq8wzuH1ws0nb1imubnjXzx82oP6+FmjoeeVduGhk0IE6/65Y8PprPuqncg
w7eYsv2nR+/2O83xcP38gB0Xje1xrF6unaY53n3e8+18MYcX+SXxNp22ec76
ObuFyzzGvgneNnCa86XjV1pOChkbJp4UZ8UU034jn9d9GmrPg7w9gV9tp08d
P9bn71Fh4qZZE/d3muNNpx61rgWMCbOfB80td9k0+fg2K11EZYfrFhgRZlry
MvLPv2aPtt2166NOpslD0UQVrt0YZbvFga93TPcICz7bvH2w/D3pzh094nTJ
dYUz5h0YJF5UoHFep8nPkdxld0wYESZ+l/LUGtOJcrZoa+ZDvl/GwecKnLrd
J0w8JLzU/csBYZ6te+VI0qLsGE+2r1N12Kkvhc6KuZ9bvHW0HVeHhnmWudco
dM/ki/K+9GOPnW7w/xKGeX4dGli07dqb8j7Hl/oLhjUcvSzMc/ODmJUz130s
73M+2HRsij/Hpw/zzBOU42zG5wHyPtcnUyZ6e7T7YjtiTEtP008/xulzYmVc
mUe+W/sTvZ0mP21b/pklzxc7X9tuLc5ses2mojFz/RFHtv+r5Rg3czw6H/Kt
yKuIT+KGx3YXNV0s6Ym9443jEdsfmd/dzZx/DUqT5I9Tnz/Z90u/9cljuuy4
mF7rH9nzmv+5ZvgJp6n/A+kf/Yjx2c5Hvc6XvpmW5xvXioUn/2Q7U6XPX0yv
6duz4Yj4H+XndfD8Vs/pne1bDng2L1Tc+XHRwU5T35caHyvy+OMn8cyWq0uY
brp/wM7fM72X7S8MSb3N6bj/2x+twMYQce3Kp2I5XaXE4yHfOwSLG91738tp
Wb+sfP9FbUI/iVtOC1tuWublTdp61M/v/+KrUab593kOnF6U5kkxTyzjCcLn
tP5r7CfPfLtnH+8ZdFbef3vg71n1rtim/if6rF+UMdVnz12ZU4z7OvGqvE99
z782ZGCyZZ88D9yuP/jScl95X/rRzA/cmHDBJ8+DYXNTx6weKO9/DCoUcNGo
V+bVX9D77TOnOX4cLrS/xvfe4eIJ2bP9dNom334baxw/ZB3HbxUyO83x4fiS
lkPOmdtzvNj//acPFgwPDjCOD2zvlW+rm7n+2HSzftfwnuHixxUiOpt+fTE0
2pcGX2VdgGur/4+rO4+H6msDAD72QuWHopAltNmFVmckhUK2LCGVSiRZyhpp
kwqptCEhCqVCEXGGyL5kp0T2pez7+t4zM3dM718+X+e4c93znOXemTmPHCO9
8XjPlk4pTsLq42YJUihFZm8pVh3G4p2Wx3nHuT30nrVNeFGDzQ+4HzjJR9Ob
9nnEceW0J+emaZZrPfkZOb1wq5mJ7wStfq/HdhN64/1F43C6igRWnzYfjCkq
ITdGGzkMYv0Fr894N8SR3tt9JJNSsXjHHZnAl0jvRwY/dGuweMe98O6qAb3x
+UFn1qfozdlpmp9yq+chTz364Jnu3k+rf070jSO9c++/u4ziHTf+PGruOWcq
Of5UP1VVYvcPeHlFUUJalUYBzbT89TIu6rJY/dz+po8ldOU8Nt/eLZuJy6Zd
b+r80bWVIc3UcJrmPY/9xH7oTwNCgphwnPIOgNfH+1tGXcw//Y8k8pLsF+4s
bujv8frL1rL/Y7z/9b35UkKYw47/kWK8vOvuvn/MvzGZ2NJdRTPtezfaW6MP
NUwDdWYTj753v2jl+PyznGGK0aZ2GmwZjdStedROK38U9ld3m1knzbxybU/8
tvbSTHt/MXbVTE7Hkl/43J5Gxuebyi3jH+/T2fiX/yfkL3qKLmrYfIPn7Qg3
/OtMb/x+4W228yHO9hma9bp1DiK7tImZSRUt5f3osVMwpzfe35yFN3Dfblvq
jz8Ns7iQ8fv/XjE3A1U6q8iyGSGf+nZ2p4jdNO14N5znttP7ktrRMxNjkzRr
5Y7Z0hvvj6ObHA/d/b3UXy9tdtBGxvub0JlFvQ10LrbUM0B+eHHrSlP2cdrx
fKXXcdIbX5+1qWT4vm2doTnU49xVZPz+fnxuVe39liXXfOtoQMb7WzKz/sue
X0vOMmeIR8bnm3adGx/J7bP8cTwy7fpS7z9Et9u+J4/Xtfvn0P07Xo5/vo/v
7Z40+v55uDYvBJUbRDy1Rcbr4/1xw34rRvL1o/avZwGlesZRs2B5phXF1Pp5
l8mJOmiOOaX2j/H1mZWh9+rr52dAXjSx+lXdT1o5fn+jE+Qz46k2S+sPCkNp
LBc9ZsBZsT4WG7Y2Wn18PguL6vt4UnQWPDlqO76Q0EUrx+enUS7fFXpmczQH
djGvRJ6tLhd4gs1PeF6eqeygf8yU85TdGotf3PVPnnHQG59/qh1ZlB6ZzNHc
VbJNGZknuiLOyWiOVl8l8VMsva/LX5FxbZmhOen6R1l64/FPWBk2/B92PNxP
psSHkPH1V9ANh195R5bczcndivyK+8Mh9fFJ2vFMK+QP0ruX4c0F9isTNPut
tHCmNx7/5WdK7FZhx8PNJPDaFtno4okBjdBRWv3PzlJ/6I2vz6rvP/i11XiO
ZpPzr38g7/ZN9novPEKrf21Kw4feM2aXtYbih2g23Oq8n960+5nFoufsRnM0
b1QOfIY89Fm1durMAK3+gZDAn/TeO8f4FvUf3Pj9vWyPGQnFj5QVqy2az2jn
R4lPWKjmnUvf37TfnuPw1pujWfO/7BkvzLaBGp7lV1tof3/kGiGJ3nh/FLIT
zkLW7ODLRcbL8e+jWu7MXdGLvd61NZOFR7H+iZf3MD15W4f1T9xzqZT+iTvT
mjI/4dad3PePRbOcGAyeNdCM9z8hW1Uvzp1zQD9HuOWUbwutHO9vHNsKlE/f
mwO/T2xKuGfYQyvH55v3vcHzC2VL7mtlX0Bm5rkY1oetJ/E8VyoMO/8x/rzq
42+v+U+lS3mqCufuzCFXvFP+ck51EeL1e4z5suj9GOSvjcP6F+5Kzkx+eo+/
5Rp6i/Uv3Fe4lYbpjfcv/gvCfQ0lS/2vrN2nH9niKY9RLDbf0F5/Z6UBvfH5
hO3H1wfqWH3cNQf8QpHx/sO69yXnn+IlO26IWokcdbo1SEhkhHa8lWbqIfRW
VFkss0sYojnup1wJvcfe3xzmPDtAsw7fzil6N/mLv0Hxjpv2fW3pjFrUfgpr
LZ/Rl+PxvixdI3jVt6X492tvvY6snOOTGJHSRqu/QNT+Qm+8P2h5HaxFjtJ0
YET78tPamzr/9MiRpsj9vUC6Hq0P8XI8/qGvZCjyoU+ZSWi9iJfj89PsY4Ls
fuzv1xBn/cvpyo+NDH5ZefJxNu6nfyj9Aze+nvNX33BKjnEBhH6hGC+3Pj2t
G55fRzO+fpMzzuCLOLBAm5+khM8/FxJeAP373NM+57TR6ufJ8K39u9hBM/G4
sUgbtl77v7yfJOX0Yv+Xe2l5P0mztrtvIYef3C8eisU3nrdO+pugBL3x9Vf9
9o4uJbUl69//2Y2cslOJ+Qs2X+H1Vf8eYqL3wPrc/e1Y/OPm8K8/QG8+rVWi
rVh84yYpNQvTG59vgm9H/zQkLnkjQe4HsoiTSGsxNt/g9YOjXX/TG+8fojZv
4ziIS76bwBGLvNxg00crjnFa/eNqHin05s3Ul/HD+gfuz9m35eiNr6+aHmkF
BKouOdrW5CYyPl9sWntiFtV/TbjTgEy7XtT11uCTun7UXrq3dpXQl+P9QSA/
ZxT53FElUWS8nLbvuFRqA/K2GmaWCiw+8fKT4RkCuZ4PsnHj9yP5MxTT9otn
exCfxrVIiz8+FjbvrL8LYH9qgDgXZwvA/x6Px4VaoZbXvxfA9fQF1mn2Hlo5
Lf+JU1DE6qMEIu45r81k+xZu7sk1I9DyNCbwBPxjPL4e+P46MGC+5GNitmQr
w9wQJuM5iNf/bPb9Hr1zjya/4m2dobnZPuM1vfHxNoL5eEWM+ZL5GPPKkfH4
qhv0gzforDEoR0LWyqxqZp2YpB2v0vreT3rLeaXItmPrG1oe0GwBeXrLz5/U
e43FF+650jIdeuPreTN1Np815ktu28N2Gbnd1tvY4NEorf5Er7YJvfH1zydG
jlc9ZksO2rbtNfJh+wmXn1j84vXP9v92ojcev9WgOQAZrnzHgIyX4/Fc9lMa
+z2BWHZXcxblVcPL8fH+4KZk8t8b/cfniYyX4+ufXawbyeW0PC6jYyhUiCyv
53egcrw+44RALxrfcRttuWaD4ht3jPO8XYXPvWza9aTG78jGG44RIgRin+hU
toxdA6C9vrZu2+/hHprx5/UGLT05zqsZaN78Johsx6KwQAVeBlpe1EdGw/8Y
j8/FDTf4VFcvWebQBNnfnKZ2chTPQ7x+ybcN/xhfz0PJ19KbVy/5Rr0U2bdt
lplIY/GN13fUHvzHeHz+CGiWa+Zd8pFYFbLx+X+TznH7cDoLtwfZIU89adGW
Ex2hHc98fb8mvfF42HU2+C59+0eM8a1B5fuOSdYi4/Vp45lB/WpkWn4qlZRA
cn/8IXAOxQNeH29/41+HeZFnOf2FkfFy2n6aCpoTFphvZu3d8a24AeDl+Hqy
Y8u2UeEqAvFWvMOe5a2ttPIjnhY/uba00Uz73qOw+CsFCQbisxcq50cMumjl
g78DTIlY++J5eFmO/fzH+4SMK2Ww9sNt3Hirgt4q9Xd3G2Htg3uTht0eeuPP
I8pbfJhPVDDQ3LS4SLaEzeM1Dth4hdevZI1bTe+VWsej3OynaZaaOxtNb7z9
5T51FstVLMVDsfe1EuS+37H1Tth4hdcXiParozc+P8buUz7Ci9XHHZzaRTbt
+wTF/c1j5Uv+1pz8CxkfrxLjzGa+09no1u5ZZDyePoydXvClc9ULpXnkP/lD
86OJQ7TzYT/LQxijM+15hfosP2ov92vZ5OcTtPagjj//zReSy9M4fobTl+Px
eNC+4QXyqNivg8h4OT4/vq6ixMPcHsp6Di/H13NS2kNzyZkMRL40ivHyxfB/
XTMoK8y8ppbmmXsTKn2ujTTj8dtNVIzb+oGBlo9ewugYQYyDkTi25/VsybN2
Wv1vq4LVdbB4xPNUX/366x/j488au57mmoAlj8tdIRsfXywcFj/k0vlY1IVk
ZOf1IrfcsXjFjxe576A/vfH5ssGSnfA0YMkWh++TjcdLhmLY89N03q01GoGs
n2k7Gug3QTtezd/nY/Tmcj/Pf4pznOZ5Mx4+euPx9K65UGZzwJLP8Y9II4dv
Ebm94fHo0vFEX9+hNz4fXlIsk0bmrzu8lvz+P7Ucj8crV0ruNN9ipIvPvrvI
cw9iVtPXx+MxVK5OiuyG9BpkvBwfD9mKVr1E7Zck2lBKX47Hq5rbMvL5lBtM
uyPj5Xg8ev6fVSIpnmB4UvTbMB/g9Wn7Np5eHrKlmJFod6f04N3iElp50g/X
jOf7mmjG409F9ZnvzWRGotIZ3bdGlq20cjwev/My8lU/ZCRKvp/aKba5nVZe
cDWhYbN8J83456dlRm63WO1jonnIXJ3scQNtZbYARlqe+JH6oH+Mf376rfDt
RMN9S/4irEo2fr8u4CG1WorOJt4BZF8QlzLZARYhfry8Kq8j9DYVZ5V0xMZr
3L3VX/8xf7bbxWdYvOM2Sk5wpTce71z3Pz3vUF/yB61tZD8zKy8swcZjvL5z
e04RvfHxmOX3Vu1y9SWH/w3TQqa9v1Pjkf6Rzi786z4jkwRzp7Kx/oIfb6Xx
00l64+PxQ73AmGfqS263bIxGDlE9LBCG9Se8flZUmCC98f6hY6MsS+4/O9lb
WcVGaOVjPsd/0RvvH83nLD8j/7hqTF4v4uV4/ENvNnI5/jwqav/QNnR8NaD3
HK3v8Pr4/cz5ZpbtqBy/P9dUHFRBDhrc8do9voRWX4lL+D96nxSveFGFrRdw
4/0lTqqPg9mTiRi4tzox60IDwMvx+M++bnL9gRATMVR4z15L2Ekrx+O34MY6
ixcLSxaYOUb2ntDoy1/KGUgm5OvMTIxn7f3Hod89JI2w+MOtr1whQW98fL4V
48x5AjsebifvarLx8dm6dLe4AZ0JPdUbkDmeeu3KwOITP97va2q76Z2mvObB
T2z9gLvmArhPbzx+N5Ae5EgvLMWzaydXLjIenyV6pb38dJY6cqQPGY+v6e3+
ZT3zS55arliOjI/Psudr5krpvD7t0TwyHm8nO17vTqIze0fxLmTJb8Ub9mHx
hp+vzdljEvT+e1WIEcUbbnw9uZNZ5Atqv+kQDlU0v+Pl+POitGqnbFReLLXx
sPGzFlo5w8DHM/TG4/Vp5TlA/ntTt0fIeDker6U7THYj4/EasN/5qNksE832
LwP1kEmahDjsFoX29/j69tv4bB06HwLhiZRd2d1svBwfzzm/XXWVnWMiciu0
Db/WLAN4+RNzWO6nUkMzfv+jt+xG4OJeZqKWGO8Me1EzrRxf/5YqC10T/oON
BztrfN8v76WV459vSln/4lpv+pKDdluTLc5St8JenYlETtPLx0I8YM+zkt5X
PuzatA4bz3HLj81spPca8Q9nv2H9A/fDsPF/PLxJ29wB6x+4T5W/NKM3Hv95
ipHfHmHng3uFB3MBMr6eFpZW8blJZy3OosvIVg4lfPNY/OPHu1/3jJ/eDdt1
NFefm6aZRd7+AL1p+2sxdVUi5ylflkXGy/H4fR52ilxO+7ySwux+dH1rodpz
NB7i9fH1qIQf8QB9/Lp2XK1A5V+YGYWQ8fp4/E7yypchKw1wvUfxhJfj8dQz
EpeKLBwr9181ZrwcjycY+298Kc5T7EuyJo+XeP1yLkp+Ndx4fDVVdvm23WEm
ugV+yLml1kgrx9cLcffNEsZ/MxM3WtgQMqfbaeVCEX/4VxzopHnb6lzF6j89
NKt2rRdyweKphPK+MTE+2/wf09YXrfbd612WHKi8hWz8/t3PaONZDjprKjiR
Hb1dKNIDWy/jx7N9UPec3vjzKuPEO64ElyVXn28iG48nwdOvjxY7L3kkn9sC
GR8fZ6w9T7+is0nszClkxqRv29UnsfEUf728jzvobbkvVRNcnaB5LOfNAXrj
4+tvr+cWyFKhUfuR8XLafk+3d1ah66lwqHsOPZ/BywXPM8Sh+MONx6e8/9+j
yHg8zm9/TXZeSmw6ii+8fltQ8wCaX3HvcT5Gjhfc/gcp8YKblNcgJ+nVQPMr
jaR6lpR2mosiJR7+59ZJ89/1q7j+m++hGf+85nTYccFz0qw0D41uJPvvxiMz
BfNMpBuU912JJ/MC/zE+fm3M7PG0kV5yg7WEF3JveXSWp/pS/Qu2tv9Y3Nqb
Yys2fuG++uvzP6btr54WfNZQesk5p6vJ3tun86IBG9/w+qwznP8Yj89lqsZN
WtJLVrFZQfajzU+krvEu1Vcc+/mPBy2VTbeYE2iuVv1rQm98fKw7XjCyTnrJ
Q5dtySYpH3RbeWQO4vU/sy/+43uZgpbbf8/QXKVrbkFvfL1gqbS7dU5qyVqD
JS3IViZmw8bY+InXf5koNULvgGOVmTZYfOPm4K/KoLeFyDNyfOPGx9f3x2PJ
8SFp7yiNxl/a+akIktefuGn7HzGMdSPj83Hplq6fyPh4WTyd54yOd6veb20l
Vo7/PYFQyJj69kY27oZYynoSd1kXJd5xh+qvFPSbaKQZHw9Td1m3KexgJWpa
vnO11u+hld9PXZdajsUroLyPSYzn0v/HeLyqjmTrveheit9WeI1sfPz71Hfw
1hM6H9S/TfZMQt13BSxe8eMFRD37x3i8ckts23iveyl+r2wdkUR+dWIV4TcW
r3j9Ndm6/5jv7S7BbVi84fZ1GhOgdyh7jdlGLJ5w82ZdNac3Pn6q+jEc0MFe
D7dRbsR+ZHz8LDRPOClDZ0l3URvkJscLL25g4yd+PNn8e5H0xu+fNNn25Ali
9XFfCPn8FfnRsHm3PxZveP3erMM99Kbt7xfv0Ivaq+DpCHm+x8vxeDSfLUd5
6mnxRDz5zgq5W5sSL3h9/P0W7pbeVF4CGzGFkWK8nLXU4h/j67XNft4JN8tZ
iUzXvkv0fO2ileOfzx3Q9z7fE7VkzcIDZC8bqVIRTqfmnyMsI4p9Y9lOb3w8
XZG4nqMNq487/bMx2dUWeWtq55lo9S9IBf9jN+5tVbfUl+zebP+P/wB2+Z0B
jDSX3K+Qo/fB87JDPeUMNM/qOfxjfP7d1fKCMwM7H9yj2qZkbzFqfJqHrQ/x
+tuNNf4xy9GgJlUs3nCXaW//Qe8ft9kHYyYnafZOkR+gN+39dk+rxcVFNmL0
3RxLSn4sSjntfvv6IXL5JRVKe+PleHsv16pUDLrDRlzOQTFejq+nhrKelKUm
sBEdNW/odQf/opXT9rks237hWCsb8eMmYSFibDut/Ab1uXUf+e03NpID9Tnh
F6qbVRSOaR9nIrLam1U4+rORxqkesKN4+PpByU+fmIhvWNsfKPxhIy2/QfFD
qhctKOsyU0q8kXKp87Ie1UXU91EUqI6gng8/1Y9S7kXc/MJIbBT66FGXxkp6
TzWkujOj/EAKNxNx3+Laow0CbKQFqrdSvYd6XxJHGS9JbNR14iOqV1EuBNGd
6ibq+Zyher8+x1TzWkbip6QxNrEuFtJJqp9SPbdAWM51npH4uTfq6vpDrKTV
ixS/oNqV+hxglvJ/kw5Sz+cX1fHU99mzqRagnk8y1X058lINhQxEE+OtmtPe
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
TZ91IesPTM12rGMgzVp6XN/T1AY8+4JnkI0dhG4jkxhy1z+0JpBMHYqKv2F2
kDQVQY5pupCHPHaHeUNR/TyMXPMhmutnG0hL+r0eed33iQRky6wLR43WjUPL
tvvrItragNxnJ13ktL5725DPm7vzfZUdgedOnNM42NUGCHnmMshawa/4kB9f
ctNYGTAAW83Lv+v2twGeRPkYZBtJXlfkrZoy973f90BPdcKmcyNtwIenP8YL
80Z39TUOmDsIDOVTuZ2woTsqS2myDdi3rXSbwazP+pB3G+a1DLFwV00bzNjn
HLF9vg0IK0WzAMypXBdNlDDzpHxcfpivGR4ver+Z27IDsFLzQ+L5IkujNFZN
+WSDb23RfX5H28DpPzZ7HTMLQda3gtt533+DCZ5WZZmKdtrPU2PBz5Ti2Ehf
okN+EPM6wT2ThafI3GsampHZoZjtTD8raW9txiUXzK6lWWQ/idR1RR72rz7q
68ZCqrFv1e7H7GN6wwI5cvNaTWRTtWgRkMVM0mtfu1whvxO4dxwXRa44IsCK
PFZWsj5dk4n0n71FSiPmW+29Qsi5vB2fkG2NCo38jxFIL/J3iaYWdIKsz+uO
IOvIjQgghwaI8f21noNWAhczCos6wYLXCgHku8qRychf3txwVXebhsTgx9Gv
SrDXbxV0RC7YePYt8r4CP77d/OPQw2mu0r+iEzD7e4gizwxzZiE7B3k+ZYsZ
hduIvs+Vv3eCuY9qccjCw0PXkdslOVs+SI9Au3OVHRurO8HPKflyZI/C66yb
MMvazNhvfNoPNR0OJir96ASOOcIcyMu4JDmVMeP5QiN7OoTLNLpp+UA5qfkI
XT6xkvMRZkVSnsOOGlPyEY6ctiC/r6ArT8lHWNR8lOyqscqAgeU/gPjJO5US
oAsUWdeV5HJ3gGSmEzPes10gYUxlAwm7P8d/VmQG9KP8nl38C1+2OXQBe+v2
HRdj2UjBoRV35971gDJFm53IyzRLbyP/ajNZvwNr/8Yep1KF9z1APruV7CAv
3WLklWniml5fmEnW78KezmIeG/I+gFxYsDMcWZ/7B0wIZCQ9NxOWXZXcA1yO
fyAhrxH6thUZ8jx6C60IJCn7e3/upvSA1CHXN8imk7zDyBlqQSuqNRdh6QOi
2dbUHnDjBAsHsoqBgRXy8+1gi1DNPBRiMhz+iZl4znojcmMY1yTy77UFjMF9
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
tiCRD+ufPrMlJ1y9p0G1/aQ68lHdYStkPH+FS0tUBPqeAb5/P76fP74/P75f
P+EVZb/99ibmiZzMKfB+1bWxCcc2UOev5jmrMg0WIzbwonwTq6VuHj3wZRrw
rm9+EoBd79tveswEemeAk6boU+QKE2uyT9Rb92pi19vLNiwKYG7XXku2p9+W
aOSZjRcLWbHrXT8uVXoa8/qfm8kODvxKdqOht0hU+TxsfihpH9g/A3bLPRRF
9kxfaYdsJWByudNsDnbMskz2Y1Y2ve2DzAmrxpE9Wf+OncOuJ9emslGlwRng
YXd+BPm/vIMTyKLXmT+rYtdzvMGRn21oBlgXrPmE/CnUUgA5KAV6L7oPwDOt
tzo4RmbA4nktV+QkxrweZKEozXdofbv1yUIK+p4Inj8B398d378d38/dOUTk
CvqcJb5/O54/Ad+/PfIMJT8Cvl97Ul7rJfT5OaZxrhhUX16ik2yOXf+RraxD
2a89JEGa/D0VQQnKfu13rCkuP+v4FOUXuNDuRN5fPfDbpidOWPtwSj92fm05
B8ZPdj9G3j2y1gW5tli0TQ5rHzbDYwWlmHftbP6NvNu1h2y/21uvumDXP142
S4Tfeg7opSpeQ/7B8lEYmZWdGJuOXf/3v050XcS87vP6l8jhste7kZdNrHUU
wq7v1e0vPG7YzIGbzMVOyMxbhi4hE4Mr1hZj15cxb//ba6fngHODlyjy2cgL
8cj4fvnHlNAnVedp+3vj+31zLVNWQuMTvr83l73tELr+1aoRZch6q44moM9l
8rSMfUV/j++Xj+/fje/Pje/XPUvdj9s7lPI9IKE4yv7bgJvyvaO5QHWyVUpd
yA5/fGiLjeEP8Mk+4YxO3BxITQ0gbrvcDG79HjW2+TILvAWnSo+/awPiH9hW
2xPngIazx8pwbDy77u6XuqJqHtgd2EP2zvJpsqskIp9bYO0zAYa8ZTEbq1mT
PbTs/GVkHQGJgvm9izBfTY9ds2Ye6PlwFCJ//WW7HLk5W/TQIax9cko5z4dj
duIV1EGWduN2QI66zr3tPtY+AUp156cxR4wQFJEDC7odkZ8WHT9U3jEDhYTV
gHXtPHB8GaSDfGAfryry+ij3bYuO01D8Ugeownzcdasi8u9oeTXkkCsXdm2Y
nYR78uNE9evmgcWbuR3Izk/XbUCut47j343NV6v2dq72qZ8HE++L1yAPDZP4
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
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxMnQW0VdXXxe8999z7EiSfgC12d3cLiI3dYmBgJxjY3YrYLaCAio2JiYnd
3d0d3/w55xv/bwzmWGfvtXOtufbZ5zzu2XPsPHyTfYtKpXLWjJVKTXJ1oSqQ
t7ewkLCwsIcwnzC/sJswjzCvsHskuh2E2YTZhb2EBVN/mLBA0g8IRwvHCFOE
EcJIYXl1+ofkn8Ke6Yc6OwtzCv2FnYQ5kt4leXMJk3tXKitKXtteqRwquayw
nHCIsEzS+wmLCYsLh0W/vHB45ArCcGHRlBsqzJ15dtfYpku+IOyaPtHtKyyS
OvvETqS7qfzzFdeZQdfPVZzuUXUbLwqlrh+RfFTop+s3JN+s2PgPSjwkNHT9
mOTjQquup0k+JdSrroeuRddPVqybqeo23hL+ja1p6x/h/qSbqm7vCaG5akn9
g4WlY69q1f0/DA+qllOF3rp+WfIVoZeuX6o43bPqOZHuq+vXK55PV10/W/H8
++j6tYp1HVW38arQVvWcnhZqVfeDXdqrzntGmLHqstTvUnUe7R4kLJVx7x/f
LiEcELmkcH3FfIWn4yvmJby+IXnwelzFHEV3Y/Lg4NhIdPcKR1bM102ZMzYQ
rgtX6GOz5ImOlaOEVYRVU2clYWVhE3iQ+pcL21ccN1cKO1bM8YkVcxHO3iMc
kb7vqJjTcHxKb3P3GnH+zuTB6wkV85L6N1fMS9JXVxxLxM1V6Yf0tRVzmjnc
FNtQ55qURTeLbP625DvC5plfh7AFvsG3wgb4Bp8L6wstQquwrtAkNAvrRaIb
hI9TZ0DKtgkDI9EdGB/i4+0YhzBr7DR7xWvByNh1ldgSPWvQkIyR8a1Z8dpW
CmtF1oWNhe7xx7bCzOljy8ypr7CNMFN0WyWvn7B1JLqNhG5pax2hkTmvUfE6
St9rp090GwozpM7g2Iz07RXHIT5eTDb/TvJ7YRFdfyP5bcV+uKxi7rxXMW/w
57vCFUl/FL/Czfejx/+fVBwPcP/j6El/VjHv4fun0ZP+PHnExxeRxNCHFfOD
Pj5I26S/jB4e/SjcJkwWfhBuTZo5wO9Jwk/RM++fI+H478LdFXOfeU9Ina/S
NrxeWob9RXb5Vfg6eZT7Tbgr9R/p7diYKDItq/K/qezvwnKF5R/CqXLO+sIA
4TBhWWE54QhheWEFYYSworCScHj06M4TNhE2FUZGv7JwtLCKsKpwTORqwpFp
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
0DcV+3smj/RWKcs8h6Rt2t0ucyUmmmXfx9lTCj11/QL7UWEGXT8r+ZzQQ9fT
C+u61Zz3vNC9ZomuSdePFW7rb2GKcJ/QVfnPFG7rL+He6BrKf7RwnbquHymc
Xis2Y6/dRflPF67fUvMYnxS2z9hZz3YpvMbh1x2Sxxqzc+E1Dt2OyWNd3CkS
3e3CwfFDa81tTxPadf1U4b7bas4jfUfKHircGXmYsFp8i+9XKby3xt+bFX5W
wa/XF+YinJ1UmNNwdmJhbpG+rjDnKHdtYb6SvqQwL+HppZH48ML4Fb7ckvaI
j4vjezg+JpL6o8MhdJelDWx5Q8YFpyYU5jdjGlWYr3D52ML8Jn1c8tbK/HlH
trxwQWEeM6aLMi76GycME/YSbi4cM/Rxa8ZLvN5UmOvofuptHr8vPo9PPXR/
CvcU5tAV8Te+vTzzIL1x4econqs2KvzcSHqT5PFctW7h5yieq9Yp/BxFeu3C
vCO9UuHnIp6rVij87MRz1Xqp15o58wyJbuXCZfH9ioXLUv+awhzFl5umfzgx
uPBzO8/BVxXmJZy9MnMifXXyqH9b7HRQYd4tG7uTZp3jHefAwu8FeNbfoPC7
APrYMP1gi0HRoxtQ+B0BddbPnEj/Ltwl3M38IrF7r5rXhpeEr+Mz/Pm5cKMw
lnn3Np8+le++LcwnOP5j/M08vkk9dD8U5i66jwvHALHyRdqDO4uXuh+z3+E9
Z9ojhr6PpP6HhW1N3HxVmDeM75XCcQIfWY9GCkcVnsd5wvmZ3+HCEcIDwtHC
McLUwlw/Xrg/9dA9XDg20L1cmPf08WXGOz42Oj+6B9MeMfRQ5KjY+LD0/Ubh
WCXWXy8cw6R5l8fzeOe7PSTvFHiHyDMZz2a8K+TZnHK/57mCNM9PPEfxbM57
R8p2/q0AybMh7yV55qMtnl14huE58++8q+LZnucT8mj3zYyRdei53h7Lw/L1
rM2q06Q+hY/iB3z5WuF1h/m8Gj+QfittsA69UziGiekPCvMeX74dPbpb1NdJ
6ufcflrj1de/+UPRe4Vjhhh6P5L676a9K+Mz7sGrhcf4+cjC6whyhLBEzXyC
j4vUzG94unDNfCI9r64/gdtwMlykzqI1l4Xvi9Us0c1Us1+x2UI184O25qqZ
r9ip6DDvv9Xc5q45j/TMNdfDTgvWHA/Un1/XnxWOubJmjnLv5A9HD4Rr/4Tr
cPbfSHS1mrlLnWrNZeFjUbNEt0DNbdPffDXPlf5mrDmW8OFvhe9/8Ld3zVwn
DqbElsRYv5p5zPz71swD0uwDzhTOKnxfPyNp7rWnJ80+49zC8cl+4iTh5ML7
jHOiey5tnJ35E6MnFL5Pn5a2Hk3eiYX3KWen/mPJo90+Nc+J8T2Rfk4pfM8/
NW3NVjNH4dQsNfsEbnbUPG/s0r9m7uLXWWvWU2fOmnmJbvaa24CzPwuTC+9B
nkyf9PdL8thrzFFzWer/mjzszjM876t4P8e8uQ9z72J9Yv8B17eqeW7Yfpua
/QEft04e6S1qngO+3aXmsTKPLZNH/W1TDz5uF4kNdq55fNTZPnmzZs/OfQJe
7Jr24Pt+NccJ8TG85hgjvWfNPIPXwyIXyL6/d8a3R82xR7m9oicm9o4ktvaJ
JF73Tz/E6E41252x7i7Mk7b2TVnGcUDKsgbskHng8x0jqc/zyS/xw++6vku4
Wyh0b3qIuBJqpeVU4Y/o7xF+E+5MnV+E24U7hF8j0VVV98Ga2ypLt/GI8Lcw
RbhP6K785yWnC3+m7Xtrfl7qGbt3VZlnJJ8VZigtnxOadf245BPp82DhEOG2
zP9AoUllHqu5XEPXj9acbild70mhtbScJtRLj5FyXXT9dM19dyvdJ2NtK132
KaG9tHw6/S8lLF3zuwzWL9Yk3m38m/XsovAAnl5cMy/h9SU18xhej44e3QWx
BRy8NHr4e3nN3IWnV0Ti5zFpj7auir/hy9WRcPyytEH9K1OPctdET9xMDJ/g
9Q3CbjVz7cZI+Ds2Er6Pi4Tv4yPh9U2R8PrmSHg9IZI+ZuhwXP2j+8Wk9Els
3RIJ968XhmYcf4UjcOjW6Dv9Dd+XrPnvzOz52Ovxd2n22Tyr8bdn8kjzd+xf
s/bz92wkdXhe5/kQ/vG3aOrx/LdG/Mm9hb8Jc+/hfsXfqv/OPYq/df+Te9Sa
KUu5Q8IL3gusnXo8I/J3Y55LeQbl79U8c/L8un4kz4gDInmeGxjJM9ygSJ7t
Nojk+XJwJM+pG0bSxzrpk+fUjdMnz7ubRDLndaNnHPxHkQdqjuF/ao7X+4V/
I9H17jBvGl20X4iP8e3X8T3pD2rmIhx8vWZ+w/03IuHsazXHBro3k0dMfJv2
4ONLNf+fA96pvFJzbPBO5dVI6r9dc5zA8Y+Fa4XrhK9q5iVj+qFmbt2aufH/
FY7JfI5K+sWa/08A/b2cPunvs5rjgTj4tGZekv6y5higj+8yXrj8Rc1xgu6T
jIU6n6cNdA+lf96Dvl9zTGKv92qObdLc13nGWy/3e54JN8n9f6Okuf+vk3In
5P65TvYvPPutnH3MyrmnspfneX7z7D9oj+c59pI8H/LMd2Qk9dnTLx/dW/EP
tj4541o/+5cNMya4/nPu/+/WvGYxn3fiH9LExE/ZOxC37FV/zB6FZ79B2UMM
SJp91eD0cV7GyxzYY20Q3SkZC3VOTxvoeF5hv8wzP1zm/7WMDJdHxvdzlLY7
fpiztIS//Tos28XzPqU5B2f7lpbwesbSvETXuzRf4c7MpTmNzRYuzUXio1/p
esRBR+my1O+p6xfCwdlL244xLVSaZ9SfS9cfSn4k9Cpdlv56lL6XUv9nYXLN
9+Z5S/MPzs5TOjZIz126DdLzldbD8UVLxzPxt0jp8ZJesDSnGcf8pcvC5QVK
S3QPh8v8H5+ZSs+P+c9S2gbEKPdY/t8P/6/n0Uj+rw33WP5fDv/XZmraoBz7
Av7vEf8v6d5I/j8R+5HDopuSPPzKHuGMtIUt+D86xDP7EtZi3tHeFUn92Urz
Els/n/75f0DTI6n/Y81rxm2x6UE13/NnLT0n6vM8T9yzvrCn4P8k8X+R2Guc
lDR7kROTZm9xesb6WGyAjv3EadFNSxv8X62nItHx/1943uVvoPw9jL/N838Z
bo/k795rlN6HsadbM5I93Qal9y7scVYvvdZTblDp/Q265Urv59jrLVt6n0d6
o9L7MPZEy5TmGbqldf1TeLd86XrsKwenH/Zxa6V/9oMbJo+2Diz9TmQJ4VZh
uLCfcLmwrbCdsH9pXi4mrFt6P8f+bp3S+zbSa6dt0gNL7+2Yzwqlx8IedkDp
/R+69dIGe8n1I9GtVHo/yl5jtdL3PGy0Yuk20O1bOiaJ6X1Kx8ZCGTt5xM1O
pWOYdWXH0jwjvUXpmGfN2DKSdWWT0nti4nio0L90rG9eOs5ZV4ZEUn+z0usF
usuEbWKv/dI/9tqrdKwSo6uU3n9zP1+59PxIr1o6j3keEBvjj43jZ8a0acZF
f3uUXkdYV4aVXjvoY+/0gy32jB7d7qXXGursljmRviK+3V64RNhK2Fq4Mnk7
CIeX5h98HFXaH3D2uEg4fkT08O6w0rykziHCUqW5eWgkumNLz5m2jk8bxMfI
+Bj/n1Oao/D9yLQNj0ZEUu7M0jFDPJ0VCd9PLs1LeLp4XbEq+Z2wpK6/l/xB
OKk0Xyl3YunYIH1K6sHNUyPh5gkZI+XOKM1v+j47fTLW01IWjp8eOTB2hV/c
r44JD5j/0aV5QPqq2BueXh0Jf68TdhZ2EUaX5h/8vTgS/l5UmqPoLijNFbh5
afwJLyeW5gexMib1GNeFKUv980pzjjg4Kn5gfBNK85j612csuwrnpyz9nRtf
Uf+g0mvJksLY0pyDgzeWjivSN6QN0uOih9e3lI5t4nhSxkv65tJcZxzjUxaO
3xSJboGGfC0ff1f3nLnHzxQb9E362fgJ/zwfX8Kjx0pzGj4+Fz266dHDr0dL
xwDlpsaXcPnu0lyH4/eWjgHi5p7kkX4kZan/TGluMY6nS3OO9FOluUt6Vs3h
Tcm3hNl1/bbkO8LMun5d8g1htrr16CaXXqNZP36KHVnLf4jvseW00rynjztK
r/v46vHMG44/WToeKPdE8kjfJRyceb4Qe8D9KZkra8AnwjXCtaXjbEL6/jo+
xm/fxZfovkkePvw2Et2HpdcgYuK10pyGp1+V5tO4zB/eExMflF7LqPN6yqKb
o26bvSt8WZp/1P80YyS27svYWWMeLh2T+PX+5LHePFQ6HtA9kDzWqgcj0f0Y
G2P3z9I2sfJFaa7T9+fJI/1i7Mc693Lp+CH+Zql7bvh+prrnz5x61c1FbD9D
3byBR13r5g3pbnXnwfF63fOBp2XdcyBdq3vcpP8Q7oxvfy3NoduFRt314Owv
wm3R/Zmy8P23lIVHPeqOGeKpe939k26vm0/wjvsMe3H2odwjZ0p6++Sxj1ui
bn58nz65j+6ffuA1fG2pO1bhbFvdHKWPLnX3gy1a69aja647bqnTVPecSO+Q
PtkT/JU5Ea9F3T7GRovUzTn4u3DdHCK9aN158HcuXb9fmoP9df1e6fScdfOO
dF9dvyL5qjCjrl+Kzxeruw2431E3J9D1q7ssvu9Td1nq/1N6fSHmFqqbW4xp
gbo5B7/+jR5eV+vmMfP5O/OjPj8GQY/u59LrBPbuWbcP4VnvurnGmOavO2bo
Y8G6+6HveXT9keTHwnx1xz/l5q07j/Sbur5EuBReC2OSfit5lwkb1O1L+LJh
3b6E12vXzVf4Ozh6dBtFTxysVbfPKLdG3XNj3svWPTf4u3zd/Iazy9WdR3rN
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
PwLvwvnbJP/3gd8vDU45fs+0QdJnpx6/ST0ncpP8fmZQys2iZ7K/mvz/YvlN
DL9x3TK/0aHspvktDnKz/A5nSMqdJM5fqTHeIhuO1PWlur5C16fq+lpd363r
03R9na6ndPG7+x/yd9cnwnU4/mQkHH888YDu0XAajt/VxW2+0cXr4lXC1Q3f
P8YkJh5LWerf28X9viX5tuQEYWLDvxliHpvn90IDYwt+p8TvVPkNLb9x4net
W+c3Q/wfY/6PMr9f4ver/PaU3zPtkzS/edo76YnR85vU8fn/j+j4PRW/ieU3
qXfkb7n8Dvm13v5d69R2/0buAOHAqn/XtHlsze+x1k59fmvF70vXyu+T+J0q
v0/lN078rpXfs54aydyOjZ7fofLbplVTZ2TmxG9Sj4pEx++l1ktbJ2W8pI9P
n4xjdDiCjUalbcZ0YsPrImvN+8Ktwm3CB5GThY+FOxq+z3UT595L2Rl0/W7D
6Y+E21Puw9Qjzf2BNfSU1D8pae4NrHes8d2b3B59ct84NTraOjF17k4b6Kak
HveEb8WVdyRn0v26a5OvGdNsTb5ncw+ftcnxSnr2JucRt72bPDfitleT50C6
Z5PnQLpd129Ivim06vo1ydeFHk0eL+VadP1qw7ouTS77ltDW5LKd9W8Sbm74
3sm9ivsY99KzkmZPwb2QdX2ScLRwTGLgqKSnRs994JHIC9L3WGFcxoccn3Hc
nFg6rMPtjeniMY3PmBj7jal/n3TXS77dxf47IT6gjRHCyNQ5Mmn8fHzKsf84
M/O5L/45Mzw6LuXg16ikGePhwhEZyxFp96HY5tyMe2Tmf5DGfwg6je0GyUOZ
U8NrzMEN625LLPL/MOhvk4bv/exVua+zL5inyfsh9rY/qK3fJWcRf65X+3/o
+g/lzdtkPXvexXRdE0phhSbznjhodPU+bynJ3ZHC0sKEDu8F68ofr+t/1QYf
WFq4yXuyv4U7OsyVHspfpsk8Iz1zeLyu5M2ShwmHC/srPVRytORb/F9NXQ/X
9W6SS6bvbko3Sa4seZvKNGhX10tINjeZp8s3uX3msGLm0T3jbss4lkzZ1rTb
Gt3KTeY98bGRMHeTbbmhMFfSqzY5loitVVKW9GrJ4z65UvqkrTWbvN9lj7x2
k/fB7JHXb3LcEsfrNnl/w713jSbviamzTsqiWyttUH+9lKX+6CbbDTutnv6p
P7DJawH38LlkowUkB0lunDnh/8FC/8xtSofLzK0y8wgLYoP4ZInYbANhztQZ
lLZJD8g86G/ZrubTrpKrxTf7IYVFdb0dXBJ21vU5kudI7iDsKBwnbCZsLhwS
e2GDY+MPxj4yfTOWY+IbdEcljzkdHYnu4NiOtvZqMr/hxYjYiLaGhTfoDorP
qHNg/EH6KdlnOWyvMR+ZOVP/0IwRH76VZ9Yx+dsY/6+Iv9e+nbxL8neyy6J7
J3n8/4V3I9Hx/MBzOO9XDkvb+PyI8Ia+D08eaZ49KMt7Gp4vkezz4CvPQqwF
a2rcyzI/yb1jA3g6PrZmHlc1WbePcFPy6H9s7IItx0VS58rYlDpXxI6kTxG2
ErYWbowdqX9q8rYRLhf2TJ0zhG3hhvBkh8e5lsZ5g+QBqX8dPBL2z/gY+8rR
rx4/7Zu8VVJuteiGJ2/VtLFqdE90eG1aXX1dnXZp4/rUp+1rkkcbm6rcFpKj
JK9NHu1NiD/wz6Qm8wN+/SC8ILwo/KW+7pG8TXU/Trlb8I/y78SurIfCXbp+
XfIjyYkp92H6IP1Bk9dN0q/EZ4z9RtW5Q/IZydcybsb4eiT2eyOS+b2aepT7
XJgs3C58KtzKOCOJt6My1hFJ35a8ozO/y+LP9zWXUdhCY3hA8jThdOH++J70
Z6lPf5+kXfp5ucl8Yj73NZlDp8Z2tH1FxkfMsx68lDzqvN1knsFT9hA8vw3O
PXVQ0iPz3uTiLr6PrimsJQxXeg3u45Lbdfj+OayLn5t5Vlw+9/KNc6/dscP1
DlaZ4Q0/1/HcuV8kdfZt+JkT3ZuxN1zmPj8wY2IfsL4wQHivyXFIzL2Vsszn
/eTh73cyP+Lv3UjqsHbzjoM4Z13mHcdP2Wuslz5GpJ+B2U/wzMnzJWs3z3Y/
Zp+yburs0/BzI3OYHD9j96nCWcLZQi89o/1I303+7eI7GddfmQM+6dnsGKBc
D11/n5jo3ex6PwsdzZa/CN11/V2Ty90tDj1IGcmZlf9n2p6x2WV/Ffo0W/4m
zKTrP5pcDryZcdyv+s9Its/gcbwY7vSasVJ5njl1dX/Tw+Wfon8540O+kvG9
krihnzfSxxdNbv9ZoZvafFpySlePiTgk/n6PfCPjfjW6h4UzY9O+za5D2W66
/rbJtni0yffIc4XHIs8THo88X5gmXCBcKDwVeRH1O7w/uETjuUy4WNcPstYJ
l+j6ka5eU1i3WLO+73CZy7vaHpc2ObYfic8ZR79mjxEbNDc7nlk/2pptiy+F
otnrFOvWErLJ13BB9p9B+d80eW61ZutZ56rN5jp1/g2PiIn/fqfaZF292esm
a0ZTs9cp+m40O4/03+EdXCyb3TZ1hnbXGJReoI+/Fcj/Zea7Tp9U/N04vtu2
TLO5BaeWa7Y/mOsizR43Plk2enTLRw/v1tUcu0juoDnO3ey+Ge+czZ4b9pij
2fMh3T952GCuSOos3ex4YBxLNTtOSC/Z7HgjfZqwpzBMmKh+95JcrJvWS8nd
hT2ERbs5f3fJyyVHCCOF7YVVhFWFbYWVhJWFJZodq/SxQuZEzC2aeROXizc7
him3WPJIz5O54of5mu0beLG9bNEueYPklrEpNts6fawobJS2aHur6NFtmL7R
DY4PSK8em/bPHGaPXbdJeytlfrNFt0bKYuPVUpb6S8gue2NHyS3iV8a3eXwA
FxYQWoRWYe0Zze9tNZd5M1fmuWD06LaLLVfJWLDfLMmbNWPaLH6ljyHph743
jg3ww6bxN+U2SR7pU+NbfH+ysFv8fXT8uoNwROyIjQ9vtt1JH5k87LRf7Ivt
h8e+pPcVNkh6F2FNYS1hp9gdW+6feox3x9gU3a4pu7awc8pSH85tG9uMSP+k
D838sf2rLdoDCLcKrwiTkn4tebcJ87cqPoS6MKfS/6oeHzieXfhb1/8IB8V2
2PiQ+JI+Dks/2OLg6NEdGPtS54DMaZNwaJb4bGjmtI6wjzAoNrok9sXeY9IH
6UuTh73PiX2x99mxL+mz0hbp42Nr7DcqtsZ+56Ye9j42tkZ3QsoyruNSdpdw
Yj1hfeGy9I+9R8cW2HtY9AOEn2fwXJbsZk6tm/pwaNX49aj4DW4dEx3juCC2
w94Xxab0cXH6wRYXRo/u/NiXOudlTqRfkO9uFia0mCvEKGvnOI1tIckfJO9M
H8zjjrRL+q7k0efNwhnCmcKESGy8VzfnT5C8LvbC3ldnPtj12tgd3fXRY+On
Fe+nS+6hunenH/x8e+bPOCZnbqS7ag6fS34hdNH1Z81Oz9DivC+FK2NT4vVd
4T7hfuFt4V5hinBLeIP/b4u96OOajJex3ho9uknN5hZ1JmbepO/JeOHpUM3h
ROYqOVbypGavH2/Ejszv9WbbmvSbyaON52NT2n4utib9texzE/lq8yHJq2LX
B4QrMtfpqTcp87w8uodTljk9mLLUb5WtPpb8RHgr/WOXV2N3/D++2fc51sJx
mQfpG5s9R+b2Tmx5X+pjg0uTvizjeCl2xMavxJf08Vr6wRYvR4/uxfiGOi9k
TqTbNeZPm+3vFl1/1Ow5FC32K2P5K3Og7X9ia2z/U2yKjf+OHt2PwrPR8f/S
+P9pH8nOH3bzNf9n7f3YGvv9m/bw24fN9gc2/ihyasaEfET4IPUo92fmz/h+
j12YN+sd9znu56wX3Au517HGE6Pc81lL5o9ujhbP7d/4mHX/qPgVvhNvv8WO
9PFH+qHvn2MD+PJr7Eu5X5JHeu30yZhY998MR4itx4UnhFlbPB/s3UvX30v+
IMzW4jxsPHOL50n/s7RYUod9IfvDuWTbphbbCFvWdf1es+09U4vnQP2yxTGM
rrnFZbF3o8Vlqf9J7P2o0K/Fc6N+nxbPmfnR5zThqWavF49lPm19nPduN68d
zO9J4avIaen7/vCg2mJ7wLneLZ43POrb4n7ou6PFefCu1mJuMocZW5zHmF7P
/Xay8LIwMffjPXp4rR4tuUaL7ThL/g8l/5dyX9ltzeThh9VaPGdstmqLx0F6
9eRRf4kWr5uskfO0eEzYdb4W2x1bzps80ssK3YTuwiottiPtrtziOZBeqcXz
JH2JMFzYT7hI2EvYW7g0efsLFwv7MH5hTCR1xgnHCqOE3TMfxr6J5tuTuprv
XC22O7G+Qos5h+2HZnzMe8XkMaa5U5Z5rhU7wc35M1d4t1Paot4umQ/z2yr2
WlLYOXp0Q4TFhMWFzYVFk95MWCTp9Vq8Z+ov7Jr2GN+AFs+BcQ2MxA+DIrH9
6NgMG+0oLJ/xDe9jf0zs7r5ZB7nvLZB5EBMLRrIuLhTZmvG1pc5usRP2XTv2
YE+3dx/PdZzanyQsh63FvW0klxKWFtZt8brD3LZN3jLChcKw+Pus2JF5n5v+
8OcIYdPY6fTMDduf0OI+aO80YYfoOLxiO+Ykeark9tEdKmwkbBwbrZNxHS9s
nbb2ztzQHSJsmDoHC4OT3iucoBy82zI+H5kx4lu+G8d3s0bld/D8Hv6kfMPm
+OjWTd6J+V3+CdGtkzzSPIf8k+fso9I2PDpG2CJ9H5080qu0i9tCb2EloYfQ
U1g/nIJDe7Z4XWANOCO2hKfXZw70c2PapZ8rhYNigxuiR3eFcGB0lwsHJH1Z
i+OV9DktjjF8OTbtYbPz4ts9hPMjGdcFkcOCNWPr64Qjw4WrMpZD0vcG8Q3r
BPMkVvaNb4mn4ZHrZ3yDUmf/lB2YsQ6M7uq0DV+uFQ4XjhDObjE3h2a8q8eO
Z8Z+u4Q3xMQc6YO4nC+8Ye0g5qbGRtjs0dgRG9+b+RMTj0SP7p7YCN3dsR3p
u1ocJ6R5BiMGiI/H0h52ejySOXF/OKXFMTEpkjrcQ87IPB5u8ZrL+B5s8TrL
2txHz3LfS/4g9NP1j5I/CR26/lbyO6Fvq/XoxgvHtTi2vsw8GdfnmT/ze6DF
azp9PJR+6HtKbMB94P4Wr2uUuy95pOt93f9jivE7W8wzbHFH/ET6raTRf5L5
0M/H6Zv0m8LtKfdGi++lpKdnDjcJ0/pYDlVfW/cwJ86Q/DTtYbNnWxwzcPy5
SO5Lz7Q4ZtDdGv9g67czLnz4UebJmL6IbR7NOM7KfCbHP6S3UN/X4D/Jp1sc
t/TxXrgCj94NV0h/GNvRx2cZLz74ILZG907GQp330wY69ubsx9mLz9hqP8OD
9lbbFBs0Wt039Zpb3S59/tPi9wLsU5parUf3d4vfI6D7q8XvEUj/2eJ9DOlv
hCeEJ4WWVreHneh/mvBUxoHEBj9EYu9vU49yvIN4N7aptdruzPVa3acWlvy1
u9cOYpT45D5DPvdj1n3ilXvjxpHcG1lH2ddWww84zr2oaDXn6IP3H+/ED//G
BvCr2mrOUY4Dnsgj3bvVc2bsra2eKzz9Q3gpdpm71XVoY95W98ecZhF+k/53
YZ7o0T3Xw/l/SbYqXn7FPrru3uqY/EqYodUxCe/mS3uMvWuruYKul66/jk+6
tbos9X+MveH+XK2eJ+Obs9U+xv8X9/C7g2d7eHwvZj4/pR6xwhhfiI4xsU6w
brW12gbwrEurucaY5mg1b+ijf6v7oe9ZW90HNpu91Xyi3GytziPNcxXPstdm
r8+7Bt4lfDajn1dv1B5+/VbbGlsu0mr+4ZOFW81v0ku0ekzYadHoGe9SrbYp
dloyetLLCj2EnsLS0eOH5ZKHjZePhAuLtzrG6GOxtE16hehZd1eP75n3Sq1e
f1mbf5etZ6JeT92foscGa0Zim7UiseV6rfYfc16x1XHOej+81bYYIKwTv2Lv
dSOps3bamDPl5gk3B7WaT7wLXFbjWFVyd8mB0aMbLCwgLChskLKkN4ndsetm
mT/22DL2xX6bRo9uvHCKcKqwYdpbSBgSP+GHLSKpv3naQ7dyq201s7BxfEzf
2wjLxG+7CavF3kv2dJ1dJXdO/VWYW/TYe49I7L1nJPbeJ7bD3tumbfy/UcZL
33vFpth770jqDEsb6PZNG/hmv9gdu44TTo4tDogPsOtBsTW2OST9MdcDox8c
2+2R8R4aPX44PLbGD0dEYr+D0x5tjYitsfHISHx1WNqg/pGpR7mjha2ErYUT
saUwFHu3ie9CV2HZyBmE5SK7Ccer3I7CTsJxwg5JjxK2T3rTvtbv1NP22C3+
OSn97BYb7Z45b6nyu3Ct8sN6ejxXSt4Uu5wm7B8bY9Mz4if8c1b8ik/OTB7p
s5NHDJ0e/1HnvLSFfy6ID/DPxbE7Nrso9sVX58bH1LkwZdGdnzaoPzplD81Y
90x/56R/6l8SX+LDa2Iv7Hd5/IffDu5r35yluV8bPfYe2ddyjPLHxo7Y9bL4
lfqXpm3SYzIP+jtadU+QvEJ1b4y/qX9ZT+c/L3lzxo2dGvLxe5LvC3Vdv9vq
9POt5jexPjE+wN4TUo/0bZkzNrs9tsZOd8em2Gly9Oimpz38PCnt4c874xvs
fVck9e9Ie+heSD3Gfmv8Td/3pB/8+XhsjS0vkR2ulpym+U6VvFK4inaUvl7y
D8nnWm1f5nlffIZdn2217dDdm7ax8S0ZL31PSR51rujrNl9Um89I3pD696c9
/PZixo79PhcebvW4XkoeNn4ldqGf1zJPbPxy9JPip3vT/+vRY+M34wNs9lYk
dn017dHWO7Ev/nk3Evu9kTao/5nwUMb3XvT0t3Kea3nWnaD5Pqi87zTfjzLP
B4QferrubL20f4xN0X2RuT7CWFT3UcmfVPY7ySfxkfBN/PeE8EHmR/2vhcei
+zJtUP/blKX+Z+LtA8KDbR4H9ibOJquvpyR/V1+9pPsq7f3cat/D8Z/ib9K/
x0/45M/YHZ/8G1tjpz+iR/djq/1N/V/SHhz/O3bHh/9EUv+vtIeud5vHwrx/
azW/6ZuDR9+IP5vbbAts2dRm35Mu2+xLfNjSZj1+6Cu7fyy5vGT3Ntsdm9Xa
/Ptt6lTb3DYc+TXjpe+izXmUY93/PH7jPgAnSF8ke16BT2XPGdvsA3y4YJvb
pY2ONs8J3Uy6/h5e4Ke+Lju3xjZbm32AzeZo8ziwwdxttjt2mr3N+l9T/+nY
euY2p7F9/zb7DJ/M1WZJ/Tnb3B66hTIubDBrm/1N3/O0uR98tUibbcr6t3DK
kl6gzf5gbotGz3q5WCQ+mb/N/KDckkKr0CbM2+a28f8sbR4vfc/X5jzqLJ42
8PMSkfhzjbzH4nvunyp9f/j9sTBFuE9Yq83tMqe1I7HrOpHYbyWhZ5u5v1HG
ypxWaDM/egibttlGzHvNNtuXdteSn/pIDpdcOX7F5yumHu1u2Ob50O7GaRsu
rJv+8e2hwgbCYOHw1GEsdwhnC+cIA9rsS3y4fpv9R3q9tEF6YPRwZJP0w7g/
7etxrdHLfcybMQ1K2XnS/zzRrdFmXjLP1YS+Qj9h9Uh0ewirCKsKe0ZSdlgk
ZbcXlm7zHmqHSPZQ2wlLRbdFuIKfdxaWj+0PypyZ046px55ry5SFC5u3mZfw
7lphhDBSODA2ov5eGQtzGpKy9LdZ/En9w2J77L5vm3kDX/aJv0nvnTZID48e
Hh0SO2K/gzNe0gfEN4xjv5TF5/tHortGODLjvi5jP0q4Kjw4Qjgvc6D/CzIm
xniasIuwq3B+9OhOjR3RnSLslPRRmfPm6Q9+wOsL097wjGXj6I5O2SEZ16ap
f1HKMqdz42/GB0/hBFzg70v8PXVs/i7F31nH529Z1+b5dlr06Hi+4p0I72wW
jOTdzEKRPN929NPeWG2P6eV42DN9nykMFXYTRvdymccle/dz3oW63r+XuXqx
5DGZE7w7NhJOXR5fEos3ZP6UvTGSsldED18ui7+pc0k4B2cvjUR3fexOW+OE
UcJxwtXxLfa+OJyAL1embXx/orCNsK1wm3BG5jo+bRyfNjaKz05uc1wRcyel
HunR8RV9jEk/jPVm4YT0c1PaI327cFb8+UQvX/8ieWs4d7owKdyCa7dEnhau
EaPE8J99vSbu28tcJKZZFx/LPOH445HY44lIYuK+8Iyx3x+JnVjXL4zunjbz
nph4KD7A9q8IE4SJbb4fXJx535uy1H8j42ZOj8avjGmpfq73jcb8euZJubva
zHVicSHt7apCIazQ29e7c9C65Mvp/x/hReEl4enwAE491eY4J/1COIE/n8y8
WcOmC2Ojm5Y86jyTNuDjwum/1u793JjM/+HYAG5+INwdO30Z3VThq8hHhA+j
xzbvZ57UebfN9547hfci0X0RW9PW12kD+30Sn+GrFWTDyZI/y4Yfpe0pKXt5
bP278JzwPLZOG/DinTbzj77/jf1ezngvS/3vwxVs9l2bOUT627RB+ofosd8f
sSn2/k14Nn3/HN9g1x9TFv/8FInu8zbblznP326/Mq4F2i3x+Qztnif7jm7t
ltijX7vHxBi7ttvWlNukn/nXR5zZTNdv6nomXZft5hy6Icp/S3JW5fdtt41o
a5Z2z43x4v9XJV9rMw+Q1G9ptx3x4Uzt7h+bzdxu+UP8yRoKp4lV9rLsdbiX
EKMrhQfwnRjjeebz+J/nm89iG/6Ox96LdJ92c4Kxdm+3DdDN2G7OoePvf7QB
HzvaLdEtEi5jgy7t5i72am83L0mvIls0lN5HcvnYHXsv1277kt5TdqtLrqwy
u/dzeyvqeh7JP9XGX8K87ZZ/C/O1W+LXFdIeY5+t3TyAI3O3m0PUn7PdHIK/
zbp+O5wd1s9jW1V9LZs5MKaN+nk96Kn8tnbHEvNpbbd/SM/abn/S3xy6/kXy
V2HJdvuSsku0uz/Sy7TbLvSxYsaLH5Zudx/oFheaUmeptIHu44r/nzLnTA/I
98pP+X/fW+f76+u1e0zYYFC759xfWKfdHIKD6wuzt3u8G0Q/lzBK2FwYIuzc
blvgn0NSZ4BwaORA4bBI+tkxc2B+66YfxrF2u3lM3ztkPpTbNvPENtsIiyW9
XfKw30bt9j0+37DdviQ9OOMlvWa7Y4x4Xb3dfIXLh2dczG+1dvMV3Vopy5jW
SFnqH5GytH1kJH2OiGQse7b7b+GrCvumb9obljz62SftotsreYxr70h0V8qP
7wnvVnze+e0Vn3++R7vfQdDHIUrfEd2cws7CTsJcwq7CLpylGtsQBzvF9vhs
l/iNODta2ETYVDggvoEjxyRvM2Fk5kd7R0VSZ//whjr7xZekh7Y73uDvrumH
9O7t/v8BzGF4bEOd3VIW3fbxLTw4WvG1KLZRfI3o53VkmK6Pl9xC2FI4J3OD
j2e3m2ekazn3dQ1/Lu+/813XEvrkPFnOpZ0xknNqZ8qZs5wte27aw079kse5
sx0py/m7fZNHWzPnrFrqn5k5wOWzIhnTBbELc70wEntcGdthy/NjL8qd1m7e
EwenR8L9U4WtozsjefR3XsZL/SLzXp1zcvvZTmfIbqdIbpX6B4VTtwmzV3xm
L2f3zhbJeb4z5Ezdwf7p7n+Sc3O7VXzuLro5wjvqH9futQHfHBvubB7JPXXB
+Iz9Db7Uv//OIh5YcZ2FooN386fOJuEv6d6xPec3d6/4rOCN/NrhvzYGCL2i
57znWTMPzh2eJRI/9Yx+E/+3nf/kxv7z6n9nIq/nPyn+1x7pMtyBT11ig0H+
efN/5yGv459t/FePdCN5cO6KcB0fH6r0nYnbI4R7hLuFxYT9hOHCQsLewl7C
AsIwYU9hweQNi1+Prfis5kVTb19hkch9Mt7jKz4PGS6MSh18dVXFa8zCKUt/
8wi7CUOFuSNZR+YVdo9uqYp5w7nPq6X/o5lDb8/nJs1xFcmjhJHCSsII4Uhh
5eSRXjJtcIb0/JnfHhXHImdac3b0fMmj7yVSlrOoF4/EXkNStvNMbCTnexOT
o9MWPjy14vOu14w9RsU/J1Z8LjS+PL3i87HhE2dRc770wORRf8PkcdY053Vz
jjHnGa+dNrD1pcnj7GM4ckbaHZx6pJcXDhcOq5grJ2UccOfkpFlHOAO783xs
ZOfZ1xdnbsQo521fXvnfueacc7598jiXG65fmrbg9zmZ2/qxB/3B/XOj2y71
qLNp2kO3XMYLf5eu+J4ED5ap+D5EGl6OE8ZWzMeJwoSKOTs+un2Td3PFnLsp
un2SR5r71jXC1fHny8JLFXOEtm+Mz1+JDk4/JDwY304VHo49qPdixTxF/0DF
nL42fcDH+4QpFfORtZCzzY9O2fsr5u69FcfqiJQlfUDKdp6RjpxUcZxcL1xX
cQxdl/72yNhvqJi7k2Kj3ZNHnYcUR3dJ3t5u7r6aeeLz14XXKubgc8KzFXPz
KWFa/Pmk8ETFfJ2W9Jkp+0zFXHw6dc5IHull41t8OSr2w6Y7VrxOwLP+8c3O
Af5hHRmdcTFW4uBR4ZGKOf1Y0ufFDy9UzM13hLcr5vUbmdtlyXurYr6+Gd2l
ySN9btqYXjF3mevjFccefeL7k5JH3+ek7PMV8/752O6q3G/Z71yU+zB7K4Xt
f2vrahlvT2X0qJpHvapOw7neVafxTUfVaWxWSFartsWMVeuYW1/JPlXPY2bJ
maqeB213r3res1Stw5aUpf6DumZQ/1a8F5xN17NWHSdfCV9WzOMPhQ/CNZ4B
PgqnPq3494vXJo9y8Jr2OL8UPn6WcsTnF8LnFcfkl0njg35Vz4EY/Tp9E8ff
JD029T6Ln5gfdbA98+tWte2RM+RbQXwziPPf5xB2FHaoen7bC9thk94+I356
u79lclvq8E2TyUl3njFD+gjhHuHuqrmJPd6v+JtGfNuIbyDx7aI7UudI4d7U
uT52wnbEQ7vy2qqOjy5Vp+FUk2Sjam4h61XziTl1rZrr5JVVc7FWNSfgJnmk
iSs4gl+JzxbJ5qpjkj5bq45X2qNvOI6evolp9NRh7fg2PmAt+S5p1qHvk4Z/
fItps3CX72JtHO5umjQ8G5Jy8G6LpPH3lknDTb4vtU24y/eltgrvN0tb/ZK3
ZWKGfjYKp7dJne7J2zB24ftOfNMJP8GD2avmaH/JOav24ZzhCPzlubZ/4oHv
PvEdKLg7b9W/0YWD80vOVzUv+f3uQlVzeUHJBWJ3vhdFffhNHnXgLvVoC35T
jzp86+rO8KZbxj44POCbUnxbivsGZ/1ybjB76p+S5tns56Sf7O0zhu9r9xrP
ucKcP8z+7/ek709ccj4w9xjODOZ8YNbLWeOHe5JHnVvTJ/7mvvRX6syQMfKd
tPcqtuts4THf1hoQLq4RH9QzjzXDs3UytzJ5lKvGV6uGr+umHHzkm1t8a6st
bZNmvNuFN/B4UPrumnENCo/XS1uHCXfF1nybjHjt/FYZ8qb0z7fDjq7+7/tf
I9MPe7JLq//77lvnd+CQnd+QQ54dzp6fcnCTb6iNib85+3XPqnnPd+X4bhyx
cUHqDEke6Y3S3lnhFvX2CP92F3ar+n3MrsIuVf+mnPnwXbVFM0/ScHdoys2V
sjtXzf2dql4f+yeP9MJpg2+0LRTJuOdP//S9cmzDd+DmzVjog7Oph6fvrTPv
zu/GIflG2lVZO+EOtmE/+0b1f99o45ttV+SeBDfHtPsdB+8zLm73exDSo3Nf
JX15u9+J8Cy0ftrgm22XtfudCLpL0gbvQi6NRLdlxnVROHRaxgGHTk8aTp2R
NNw/M+kN4x/ScJzvwfEtOvh9QtJrJo9vwhEPfHsOnq2XMXZ+Tw7Z+T28E1N/
jdSjDrEBN+Hl5cI7VT8ncL734VVznDO/ufdwv4KbLwjTU+8B4f747T5hStWc
Rf981VxDPlc1d19MfXj5UtJnRf9s1ffUKzKWMfHh61Vz9+XUgcuvJH1x9K9V
zeWxwo3h1rik4ei1wjVV8xR5ddV8JEb5duDOybuqau5emXHslDzSIzI/7sFw
83rhuqr5S583VM3r8el7aPT0vXv01FkudmWdhh+vZj5nxgbPVL0GsTbA5e1j
D9aL2WMj8l7u7X3Jk+0+r51vG/ItRM5gZ8/BHoTz4Q9OevHoiSW4/KTwRNXf
XBwRH3Nm/CGps2zGSHp0bMxYT069x6vm1GPCo1XzcarwcNWcflp4qmpOP5M0
3H0k5Ual7ENVc/fBqvl0bPJIn5Y2plUdP9My7pPSP33DXTgI/07IWOiDM9o5
z7nzzHZk57nrSM6KxldfCl+EC18lzfr9ddLw4gPh/arX+l+FX6rm0YfRwZV3
q44f/P1RdHDlT+GPqjn0XspdlfZI35H2fq56L/i78Jvwsfz7jeTr7X5Gn1nj
nknoJ2wlbCk05/dR/BaKWEHXt/A+9Xvhu6r3pMhvq96P/hDdPRkX/cHLT+iz
6r0mY/mp6j3rj6kzOXmkx8Vmn1fN8Y8z57HJ+yw+76KxtBfmzYySHYW5juxd
mBPo2wr7GdlamBeFZLUwV2qF0/j4b+GvqvnYp3C7cIWXiP+GO9QjDZ/I+0do
ip34DRlx1rXw+FhHGEuvwveNThvfmHl8WnXsfhobTUn/f4Z3/2RMrHndVa9b
4TUPOUPhNYu2exZeq/AP42btI69H4fWPsoyJ9ZE82mrJ7+LwcT2/i1szNlo/
Ong0h+TshX2ygOT8hXm8YOE0HJ2zcDk4R9nZCvN1VslZCvOSPNL4kDbmE74W
DxeiXrv9PLeu5yo8f86z5VxbuN6/cB/wAD1peLys5DKFebZc4TT8W0xyUWG0
8BocES7GRknDWfSLFOYucuHCXFy8cH24uEThNLGCnrEST0tLLlWY44yRvuHv
koXrwHH0pFkvysI8w+fMe97CPkfOE44OiN3h7MCk4dCgpOEoZ+SulrbWSLqa
vFXDUc4Q5m9cjfBxrfB4SOEzhcv4eY3wmHrUgWecJ8y5wnCRceGPjtTbLBza
IGOCm/RDHThLPXzGPR6fzxyeceYw5wJ3i+Qs4BkiaQs+bpxy8Je1Z4vCPN4i
4+6d/jlXGF5vkjq9kkea9Zo5w2XWcngMx1mz65k3PjlIODBcOVQ4JH7dW9gr
fCLvYLgkfg6T/LjdXN9T2KMw13cUdijM6+2F7cKDw9LurMnbtjB3d0qd2VOP
OnDn8NRZMuM6oDDn9hf2K/wb1EeFRwr/VvVx5lr496tThYcL/1b1sZTbRrhE
GCNsHQn3t4okJhZL28ML8/WA9AfH94ktFo1+38LxsW90/I72iYyDONw5c5s/
ttk9frtIuDD+4Uzoc+Pb0dHBqQsKn3c9JGVJ87dB/nbO3yDhPWdO87dbeHq0
cFS4cH7aJQb4f5GcI038nJIxrpY86sDjXYVdCnOFsXBeNxzk7GrOqYbvQ1Nu
vsxjt8LrzS6Z57zJoxxcPyL+6zyTmzTxMCLpDdJ253nXp2c+xMFZ6Rven530
xhnX2fHbG4XXrOPj/6lp917hnsI8vUO4vTBfkZML8+/O6OD0eGFcYS4jxxbm
4pXCFfHfVUkzn7uFu8KDm1Ifvl4uXFaYv1ckvV3yLo2Nrk5bh6UNxgG/bhVu
Kby/Y2/BPfPx3DuJW/ZexCs67pNwF86yjmyTNOvKtknDzYnChMLcpe1JhWPo
tvS3X/Iot2/K3lyYxzdnbvy/WmLoofj+WuGa+PyazAdeviy8VJh3yBcLc/aV
6PDrU8K0wnxFPlmYj0hiBj4+KDxQmMf3C/cV5sXTqT8yeVMK8/qh1Dk69ajz
u9alGyW/bncsvZpxwOsXhOmFeXq9cF1hvl6XucHrG6LbNn5jvYC798T3I9I/
PIOXzwnPFuYmbT9fOPZeTH9nJ49yZ6bsM4W5/0zmtkrmzPzWrPlscc4QXyvn
a5NmLG8Jbxbm1jvC24V5+Z7wbmGuvZ1yVySPcnDtd+G3+O1D4YPM+2Pho8z/
o+iujv79wnx9P31g18+FzwrHyRdJEzdfJg2fvhO+Lcwhngd4DoBT3yQN775P
Obj5Q9Lw8sek78x4fy0cu78IPxfeo/SVPfrUHM/k/VQ4Dr/KOO5IvV/isz8y
f3z2l/Bn/DCD2uhasz//jg4O/Sv8U5hbVf6DQM28+yfl7kkbtAsHi5rLsQaV
krWa16R6zWm4SRu0y72oSdeNmu8TzTWniTPq0daE2A97ERstNZcjbtokW2vm
U7ea5wCHuki218wp5kQa3nWvuRzc7FFzGl72rDlNbMwo2VFz7PaW7FVzXNIP
fcNl8qhDHNIP4yC2qUcd4gyf0Bbrcr+a/YR+C2FIzT5ZjrPZa+boLJIz18xp
5Ew182wOydlr5mB/yTmFT3Q9r+Q8NfORPMpxH6Ae/cH9WWtuFy7PLTkX9u1w
vb/azW/yaBd+LV/zmIgV+pxN+FTX89XcHxxdXHKxmn2CXLRm3yB51oW7S9Rc
Ds4xv2VqjgeedxeomafkLV1z/Mxfcx/EJ30ybmKJsuiIgSVrbhd+U2+pmvcx
cAduwb8VJVeI7zcQBtXM45UlV6qZp0jKwd1VatYRD9RbPvxeXVgt/GMNWiMc
XVdYJzxeu+Y1CR5TdtVwfa3Uqabe6hnfOqkDFwdnfMQQ9RgHnF5fWK9mHm8k
bFgzfzdMnbbMaWDNPN445eDxJkn3Dr82r5mzlB1QM3cHpI+m9MN84PFmwqY1
83rzpHskj3ZZ9+HlG4mPLWvmMZzeWtgqPttB2D6cQ25XM9d2F3armdfkbVsz
R7dJ/ZmSt024cqhwCH4UV4di7y7m3x5pC27uJOxYM192TN/EwM7RERO7JA23
9kx9eHmAsH/NfNxb2Kvm9zH7JI0NONvygpo5iH5Yze9v9k05uD48abi/X9Lw
8mDhoJr5emD6mz9tMI7F0j91ls5cD45NRwsX1RyTu2YOxNBhsQtcOVo4qmbu
IkfWzK+ThBNr5jh5I2rm9ZHCETXzfkTSxPnhaRf+HiscE06cnLbWTnvcd1eN
nr7h9KjUGZLxYi84dUrqw8VzhXNq5uDpwmk18/eMpJfPuBjHgOhPrTk2zkw5
eH9W0sTB2UnDTc4TPa9mjp6X/tZPG4xjo/RPnc3iT+oQl8dlDqzT8HfLzOdh
4aGauXipcEnNnL1cuKxmnl4WHfXGCBfXzONLksaXdwi31xwHV6Q+vLxauKpm
Xl8vXCf04AwdydYu5jL6K2vm9JWpD4+vSX1i6YbUh0e3CrfUzK1xwtiauTY+
afh7U9Lw++ak4fGEpOHxxKTh8aSk90vbpIm9G9M3nL4tfR+UuU6uOcbGphz2
nRqbbhk7wW84d7dwV81cnCLcWzNn7xfuq5mn90UHP+5JnSNSlvShaePOmuPg
gdTHt4+kb7j7mPBozdx9MOWOiZ9JHx89dQ5Je/gP7j+e+vDoBWF6zdyaJjxZ
M9eeShr+Pp00/H4maXj8bNLw+Lmk4fHzSZ+dtkkTe0+kbzj9YvqG4y8lfXL6
p9zf3f3dML4fBsc5j5dzdjt/F83veWftpXu55KS+PuuXM1I5j5VzcTlXlHNS
Oe+Xs1U5O5WzckdExxmznK3aeQ4tkvM9ObOWc1Q7z7A9JuU4f/SVnMPIWcWc
ccpZpyv18m8cH+nrc4tHpT5nCx+fcpzre0LS5+Xccs4vXyl9MibOCeacVc5b
5XxgzgztPN8Y2Xl+MpKzVjkzmLNVOWOVc4VPS5pzhc9O/bXTHn1zvi1nonae
nYvkfNKZNf5PZMOJfX3m8MkZx8bRd567e07a7ZPf1Y7v6/OJT0mdgRkX4zgn
ZzRyTvrn8tkCnJfOGRY1ny3PGfMf6nouyf6cZ6Hr2Uvr3q5ZPwtnfut6acml
0HW4bB+tJ68rv5+u+3JGhq7nKF3/fV3PWTrdKgwUBnCuufKXk1xWOKiLv8k/
WO39rPxlSvfBmc99JGcUTlOZA1Vme5X5QvkLlp7DazX3Sbm3ah7jzMI3ul5U
chHh65rlwsJXNcuFhC9rlrT1Wc32mC/niXGuGOehvaHrmUrP7dOa9fPmzDTO
TqOPN2vuk3If6Xru0nb8WNfzlE5/UnM90py1tnjp+py3Rj+kW2Kb9cv/nbFN
/Gwerl+QOOGsz3vDU84L7TwL977o4BbnpT4arj2eNO1xDupd4QjnuD6RmKS9
exJzD6RdYoYzWB9KzHC+6tTE3oMpd3z6eSRx+VB0xDxnrd6R+JuatjrPA34h
3H8p6UMzLuocnHqcR8tZ1pz9yxnAnI3NubudZ2Ujr0z8cUbu04kP2p4e7pP3
VOL12ZQjJqdl/tj05YzjnNTrPKMY2XlW8HOpf1rao37nueaMl/PAh9T/d972
RfFZ57nynefMb5k5cZb11tFxVi5nWneenbtNdGvmN87T+vpMeM7L/u+M7PTJ
udWcqbtd6s8WG3Weu4vkbN7Z6z4rHF3n+bvUmSV60uv08m+Nn1JfF/SUL7We
bNTXZ87vnr5PVJmt+A2U8heq+wxxzjLnfHrO9OZs7wXqPuec9ILRk94stsbn
C9d99jj1Oc9+j/SxSN3n/6JbMvPjfO7fevo7CZer38XrPu+Xc38Xi+S84CVS
Ft18GQvtLhr98MyTc6o5V7o5cbae0C5sIAwqvQ/4W/gr9+qG8uql781NpdPc
L6lPmntpD8nupfcR/6Q+91fyupXeR9Den9lPIP/IPoC2y9L7gyr/mb303uLf
tMUe4bea18t+vf37Pn7nd3fa+D37DOpR58UuPlP1uA7fs1lTGOtdKUtbT+Us
3aM6vP+g7V9yL+9Q2d6l94Yf1Lx+s8/ARm2l9wc9S8+ZvUhb1vVnc77tsR3e
N/QqXY49BzaYofReBNm19B4F2aX03qVL/MBeozVr4ZXpn/sJeyzsVCu9z0MW
pX9vzO+O+Y3ykNLnDl8kbFn6zCbOc9q69NlMnNW0VSS6LaKnzs7CdcK1wv7C
ZOE2YbvSZ0Bx3lOX3v697uLqawdsxBiF7SMpt6NwdXTbph5nQm0TyTjYDzJ2
/L2LcH363le4RZgk7C6ME8YKewjjk+7IuJkrNt5c2Kz0ucvsX7jH75Z6Nwq7
Cjekjz2Fm9LWXsIE4WZhn/Q5URgu3JpxDE0b1N8v9kC3d8pSf1jauCn8IIa4
x0/s4nM8h4sPE3R9Befq6HqOLp5z/w77cC1hzXB3NclVS8fPKpIrl+YlewT2
BMQDenRweQXJ5cMD2lgjNkWuXvqZhHs8+wWeSb5Kmr1t79iPPeyMsWvP2HLT
0vFEG4xpbNr4PPFDn+xdiGnGuJJQ6+JnLd4l9Egbm5Tm+IbCYKGli5+/eA7r
kjzWHdYR1qF1S8f0iqXn1j1tbIwd2v2OjB86sX7QJ+WIibVjR9aSdZJupD3S
3dLGRqXjb6OM6SaN53LOC1KbrV1VnzNjdN3W1WfzXabrX7v4zMHzdb2o8hdR
/k0dfv5k38P+iGdU9ojsvy6JRMczGPtC9mgrqu7iqjtZdceqzcvU5t4dfp7D
x+z7eHZl38meFDuxf2I/dUXWAHT35AzWgzv8fPxO+r44Y6E/njm/jr957v0k
bfE8yT6Pfdy/XXzu4UUdfhZlP8ee8R/l/6P8Czv8vPpN2mrp6vMVL1F+c1ef
tzimw8/Gn6YPnmO/S1s3hi/01z/n913b4Wdc9pfs+9bu6jPp7unwc+/3qc+z
7o8pNzm2Yd+9q+5b1wnX5r59Ze5n2+Wedlnd3y/jG2V8z4zvmvFdLr6vxXe2
+OYT337iu2V8P6zzW3FIvgvGt7r4NhHfhOK7Zgek3BHJ41tSfNvr8pTjm158
Y4rvT72Y71ZNl/y3u7+3vF8ffzOM713x3asD832eKT39LbBLUv+YfJ+Kb1/N
p7rfNis++vhbdAdmHHxbju+c8b0zvjF3SNJ8340++H4Z3307Pmm+V3doyg1O
PdriO3l8h41vsvHtPL7B1vktPSTfSls/9qDcuinLd9yG/j9bdn7Lr/Pbfki+
H9f5nT7aHZJvnfFts6N0fZ2un+3pcWEzvgv2aen9E3uWz0rvn0h/Xnr/RHps
zkTibKTO88NIf1F6H0a58TlzCd2XpfdY6L4uvQdib/VN6T0T6e9K75nYT31S
un/2YuO7+xvdg2T/70vvwyj3Vek2aPe5np7LMz3tG76BxvfTflbdTVR3WB/P
n2+wnR778V2yzu/hnRkd/uM7ahfGT6OTxq6nhcf7p22+0TZ3D3FO7Z/Yx7Y+
JfzGrxdkHPiN766dHZ9fGN1+aeOc+PXsjGlYxkh/35a2Bzbie4R8++6oVn+j
cETi44ce/m5nra/HxzffOr83iRyXtm6OjnnybbQJiQG+E/ZY+pyQcthjUsox
B76NdnvmRntjM3a+gdb5TTvkrbHN7dExn1vS1tnRkyb+nkjf2OLO9IGt+cYa
726IQ75pxrfUiMv7kl49vGYt+TTfXe381i+yLVymHt9i2zFnnHHWGGvG/WmL
9eKBpPnOHd9J6/zuHfLh+P+ejOnSvrbTz+LY6L7+bhvfb3u6h79b+0Wf/31f
Et/AR77T9mTswTfE3oiN+R7ai7El30B7LrZ+OTr8Nj26sdE/G/+9EN3veQb5
Ld8nfDG6k1KHtXXzcIT1ku9csj4S63zv8vCkO7+bSfrYvl6PX+rp74li46Gt
//tGHnO4sq+/LfZnT5flG2NPt/7vG3md38xDvh3fvp36k2MDvu22gOx2kux2
ah/b+L3UvzFzfSa+4Tttnd/GQ34QPr0Se8GnV5OGX68lPSVlO7//9376uC39
U+7j0msMz5QflZY813LW6lyS/VlbdN1DsrvwqK6bJZuE59mf1a2bqH34idoP
naN9+NPsaZTXVXiGvU7d6adK53URni3dHrqp7I0k68Ltuv5N+FW4S/iT/Zdw
D3tQ9nfC3ZHoHi5drxQeKT0u2roz9X4XxmtsB/Gbbo3tSaXbpW+r+9ngg9Jz
5fmDs2M5V5bnhg+j6zxHFt2Y6DmTlueG96KbVnpOtHt52kPHvvxn4SfhnN7+
LfkxGsNj7DvrtuPjum6tO/1E6XGRnhwb/CK8IPSu+33GLWnvx9J7/1/Sx3K9
/R2Pwf383H6jcEOexW+lXp65kZPyTH5bdDyTj02d3VLv+jy7T065ocljr7Nt
9jWX5n3A7Sk3PfsN9g68QxkjXFz3+xUk74x4h3JJdNukDdL3ag7/xMfDM8aJ
db+PmCDcLNwvXbVe+e8DBQ+yv5cshCm6/jf1HyrNBXT3lS6Lbone/pbIwH5+
lzEx7T5Qug3ahcu8K+K9yN7p86a631uMi414hzI+6b2iJ41/eIfEe6bz1ear
pd9fn6Zn4a35nolscqHSrwuvCRdEvho+8i57g/ASOSg8QA5MvPEue73wZkDS
8G7D1P+yl7/X1L+fY4t32bzDbu3t7/ws3M+xwvvrdRKTvL/mvXXXyA0Tk5tE
N3Nvf3tnxX6Oq/VSv0wba4e7AzMmeMk7ON6HMX/enfFejedgJO/emDPv19Bh
D95/8c4MeyDR/VC6DfY68Jt3r/zt4o3S78ioQ4yxPs1Z9zM2bfM+j1ido+53
bMQrkvdwxCpl0b1Z+n0cbRHP6GcNb5gTf4vo1dvfFFq6n9cS/g7B30YmJf4Y
I8/Y7FHYx42PZH83LpI92thI9oC8U2BPyR6T5//Pk56Y9tjfTYhkP8h7kzfC
m4uz9jD20ZHorim9X2QtvzZtk745bTA+3hd8kf5uzFhITy+9rsB91hVsjP9Y
e5av++9CrDFIfMB6ig342xHrL38Twi6sx/ytiDRxyN+HVk18Ykv+zkNsk0c5
/ubRkbjpkZiDr5tnzsTKRXmP9FdfxzB/N1otsUp7/H2pEomO787zLXf2QweU
vpewjp5c+t7DOj1Bz5FvC28JJ+sZ7wXJV/V8eXPy3hTGC28Irws3JY/0uOS9
1vDZ5pyzzXnbY5P3qnCN8IrwsnCW8IBwv3CO8JDwoDBV/e6kertwbqzSLwkv
CldFMqY3u7id1zk3ucO6W7v4PPW90vcFyntUeER4Pu/6eOc3RnKa8GTe/ZH/
nPJvyfsf3gNxVvneaWu08p4QHm/4HcBztCOM6rCcrvIXRf8Yz+GR9H1++p8q
nCs8nHmel7z/K+q8476c3jj+w/Pd42k8z/eph4S2kZHQJmlIS6Uho6yMMpNZ
RhlFEkL2LJvIrOyEkJ0VIqMoNLTw+7xdn+flj8/r3Oec+6zrXOfc51znus+F
f6rbDS1udr0oD/vx2DzH9vm5pi+0PM99gB870U/SduEy4WlhjnC58Iz9VwjP
2n+l8Jz9E4SnnP5qYZ4wV5joPIhrwvmVcEQyzmOSchPJODspk7tNMs5SCMM/
vBjr6aPlNna6YUJT4SjndVwx+ndEMWxnPw7NhUnC867fFPMFdTobmQXPhbAl
PUuYmQx71g+bFmMdxntPFYJvnpR7ldv0QjLO4u42H821TAbZzGTHU/Y414Vx
cKFdeP8Cu5SHHIe0LyjtGaXg6TmFOCvaWs9bQU+f/XEGiH1ubHtjr3uA+wka
D3Q/4e/vMPqkn/v1kmTY/55gP7S8xrQ50nxzjel6rf3Ip+DRB1XuyGTwOjyF
vAy52SMKP8Fh8PVDlmsh3zpR7i1OU3P3H3euHe934fHDzE+Xu1+nmHc6qz/P
TIX9+gPsYs9+f7vYrO+QCrv22LzvmApb9vgPFM5y+sHmA/i0m/znCGNTceff
Kt8LN8jx1ONwl08/D0lGX5J+qMPwv+Z0tGeB78YjL85l6aOr0C1JxviEjsOT
MT7xY08dm+s19tVxa2yV454i7CwcI4wQdhGOtf9g8w182sLx5N3DYYzjGjvu
lNHFYx1aYCsem/FjkmE7Hb6Hx7s7HfPBIebXGhvvF7o8yrnebWiWjLbBI9ik
H+80M9Tmi+hXue3dJ8x31J35i7nzOPf5dLfnBueLnfuLnFdzt4ky9kgGD8F3
u9uF13Z1XuTd0mHwVCvT72RhN4fx3p7CSc6rq/ufebCT+Qi+4Xw4lYz5iPNb
xhwXJS1nXSO3of3thLbCz4mYjxoJKxMxHzG3rU5E/9E/3yci3fbCikTEk+YH
1kTJyPdH1lPJ8G9JRP/BI38lYpzj/yMR7aHdvyfChS9+S4RLeT8loi7k9bee
2yQj/apE1AW6/poIt5nrBN8f5jTwPTxeT+gr9HGdCBvi9g92mgZOx3zzSyLy
o/3bOYw5aUAp5p2LxA/fJaI80kHX9qYjc31HoYNQnYw5i/npLaUdCe9qPt/W
+fU3vYa4HmsS0ffQZXMiaMZ46qN0Fwnjhb7Cxfb3dtg44RDhQuECoZfD8A8T
rhauEg5OhT157Mr39Lv471KdZsi9oxg25rE1f2sx6outeWzSH2XZD/bmvy5F
GPbql5Yi7Z3+XmH3/jrhn0TwFH02UP4JwqVCD5d/rrA2EWOANreS/3jhOOFP
he9lHt+YiHmEcbApEfTAvy4RY4n0l6rsy6CL3PWJSEfc3go7wfkelop3JgqH
C5OFSV573c6ZiDDUYVemYq3wrfCN8ITwtbA0GfoO9DHfsMpkjHPmjLrJmGuY
Y75NBN/Qz+g+bEhEm9DFoF9pB7oJtRRfngwdBdxiMvbGjE/GGfoThBWScTZA
GHzX3fRj3mff+wV7mkToWFAONECH4hv2K8I9TrcsEftyxifj9X67lDfDeXyW
CN2r2smoH2EVbh/6H8wX9C16JIxJxjS6KVvctnkOw/+820ofolPyj9NQBvnV
EYapz46kT4qht5FVWCYZbYK+lI1ORi4ZcUsTMZ6rhC/1XHI/fJWIMPzovpBH
2ul7uW+QE3xpeiF7+Mp+aNw1Gd+QRaXgibHFaD/fkm7JoEcP+5mThnl+qeM+
5zsGfRt4zih3uq7mlQ6eI07X3NFZ7uhCnJsdyxo+FXP0AcL+yVgjdvI8knAY
/jHWp0KvinOhpW7DqcXIZ7TcBaXIb1QxZC7MKcy1yFbW2o/cgbmb+f4Bu8y1
s+zCH8hj1jkNMg7mXOZa5BQrnX6282b+fsTxzJ0P2+U9ZCSrnR55zG/2P+F0
+J82z1Iee5I7PCaHlKsf05ofqsRjas8ihb1QjHPgCcKlwp619H3UO9dXxfnx
RcL4sjhHHSdcWBY6Z2OFs8viXHe84zjrPU84tyzOhMnvkrI4G8a9WMimYh5h
fsoJre2/2Xy8JBEyKdxPE6Ef9KnHUCfnQZ0yzmOvVJx7U+Y5ZXHWSx0vKIsz
42uEKWVx3o57dVmcu+NeVRZ6ZLiTy+Ic+ErvTTkHRt8RfQHOsc9327o6/vKy
OJee6jLaukze44x9omnKefNl9h/kdPg5V77W6fu6HPycb09yPfJq2z6mEWef
nIF2VX/dp+dd9NxUz018ZsrZ6UyF76rn5nreSWih5x3krlK/d1Ofnqo+/UP8
vpPCd0zF+TTn1HvonQqvdVgjk45vzAChXzHm+t5y55XiuY+eexXjnZ5yH64V
dtLfUf7NFdZfOFQopWJdznr8GaXdlzVmMc53qXNjPdd1mazTy1Oxl2YfXzsV
a0T2xB19Js7ZeB2/S1x3nwtzPlzL75J++2LUo2ExztFJ2548fC7P+fxa0aEx
dBPWJMOFLuv03CQVcX/quRl0FtYnwyXuEc744T3lM0AYRHuLoSc12f23t8fH
GGFxPu5c4D4wxg1yc+Tlc/NxnxL3Kp3tsGfNxy/4vTOFpy03gf+Qn841n823
H35H9vqixyLy95c9Jl92HGPmVcdd4Hfnezy95rjv8/GvKf9Po/eB7sxAj625
rhNjGln5624rZwbvuM24i8y7uG+b15HvLzTvv2U/Y+49p7/E+b3m8YAcCvn6
wnzcZ8K9JoylN1w24xgZ2WKP48XO6xqne9/jbaHT/JKP/wP5/3If05d+QIcF
mRZyX/RHkBEz5tGRRf8J3agqu+gSoT871HHosKK3hL7SlMq445e7fh/Kxz2i
3Cda7XjSoLt6lvsTHWH0otCH6u/yKRs94OFloRvV2+OOMdfQYaRp4HToW21n
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
/bF1os4P14s+uN71O9J5X5mJteMW1/UBzwOLquLbMsr90c18Mcp9ON3lwQt3
CXeaHg8Is9yvdwi3m4duEWY43dxMrClGO+xm88KdTgNv3u18iXtRmG9ak/fM
TIyJec5rnMPud/1Ic1Mm+PdWl32G63JbJvj9NsdBv2eEp90e6vW8aUrYHNP+
KeFJ032O/dCPdcRjpivpnnM/P+t8+e+N+WCo+eNB02gCfSI85H4l79num+ec
nnw/Fj4S9soEn8GbjwofCh+4/E/83k2m0zzT8XXhNbf/ZeElt/kV+2c47EXT
+g1hgem4SHjbfbLAeZ3iMqD9qHrRpi2ac+6T+5bwZibW5cw9ZZnYV22Tibnv
dtflVdNjomlwguUAj1VFH77jsqHdV8KXptH7wmLT6TNhSSbWcZ+6/bMdhp+9
CnMuc9LTzuML99nnTg8fvevy/rC89/Sq2FNS923cT+/5vTnOg/S3uR3QEbu5
rDexo1tdIXryf1j9oA3tuzQTcuUNwp+WO28RNlvWTNh6y5fXCWstb15vP3Lr
P4TfUyG/xv0tFXLrjc4X+fu/cvjykK2T9yYhoz76Ue1pVDtk5JucBrkF63r2
D8jL17iMj1z+Gtexgd7bTvhd+faU+1t5nIsjT1mt55/kFpRHXmim567pkK9Q
JmE5YZd0pD1YaJEOOREyIfZ7xUyk/9DzH3sO9u0N5W4vtE/HOgw5zc7Og/Qf
e05l3uQMhv0/65Ed0iFTQOb3hPf/xCHP+kFYng6aluRWpoPGVenw027CKtJB
i7py66SD3ri100EX4omj3+qlIz30hk7bpoO+1dA3Hftw2gS96SfCSEP/kR9r
C/qEdKRhH4XMA/nFUssw/jKgB/3BWR1yEOQiXzmOvlpgmtInjzievdm/MkTh
u3TIFJfbzxnVj6YR510/p0JG8rLfZX/+LjLoVMhCavnsjzPAJ/0u6euIH36l
PeVxXvi969coHfIs5F472UXW1TgdcjHikKVWqv8rhJbi1bpyTxWvLq4b/ziP
rx802l1o6Xpn9E46E/Tbw3HIZUuZyIs1aROXQ1uzmUizjcOo1+3K/xjlP7h+
yJIauY7Qfsd08BF90lZo477B3c/joZ3j4Je9hVbmG9y90iHrYi3C2oF5fKnn
MuRhzElfmId4d0/zX2vnBT/tY38dx+/hvm/vsuu7Lvuan/Z1GvoN2qQyIS/b
ye2Bdzo4PbKwpqYRMm7kB9COfBlnQ10eMvE+zhsZKPJgZAx1oH0myiNsoGlB
uiGu12CnaeOwwS6TuaGLy+5iPkD2U56JuYA+Rvbay/3ax/7WLmeA+ZL2scZt
XBH/zz5VP+jUz/VGZse8w5zRpSrmnfvKQ37XzHVBntfcfs75mP8ftM4X6Ujz
j+eUhkZH03F07aDDqNrRh4e6bPq/v/3z6sa/3mPqRx/A+53cxwP8HnbW+W4g
p6ixN4/dc2y6Yy8bG9knFkKXsKf2bqcUQg+xl55PLoSe4SGc7RfiLqkD9Dyk
EHdMdUb/qBD3S+2v56GFuIfqQD2PU/73C/cJZwq3CDOEi4RZwkzhLOFWx413
GGnGCLc57mzhdvsvER4UHhAudN73Cr2EsX53Qi7uunlIOMRh5Hewy6MuvYVz
nAb79VcJk4XjhCnC1cK5wl3CncIFLuce4Xy7dwvn2b3Led3hup7jdPhPEqYJ
1wp9nC/xJwvXOa5Ke8lr5C4Ur1VkLe/Nxtp9p0zIaRpyL6HCdlKf7+c7T2aX
4p/+fbMRV9fp8Lf1efGTpdgHNMpEXtsprqPQIRtrkGZCU+Y10rhs9iKUiezn
EOuzzS3FvX7c79dA9dzB9yVybyJrUuR2yOz2LsaZ4WPwktp0vdvZ0ufaD6En
Lv/UXLR5G5ffRGhdjDPHx9GbK8Z9Jg/qebTemy7cIJwm3CTcKJxql7jThZsd
N8rvUvYZ5jviTnQ/UHYH5Z9SWXOUf0/zCPxxjHlhUi7+5+S/zgbYjZT7mbAk
F/868s9jpcJbZGKvy551e/8Hyv+gj8r9RPhYeEL43OmZB9nbs/++1HwKT59V
DH28N1WfywuhDzusFPLgU8wvE4VHzN/8p8r/qrnKGA/vC4uF5q4Le99n5P9G
+Fp4OReyS9aSv+di3CPTnJcLuSRzw/xcyDTxv5iLuQP/S06H/2nnt9T1/sBl
N3OZ7Nd3zoTMArq0Vz2/UnxD1XOO0+GfWAid4aFqYw+PS/rqsFzMEcwHA3Ix
jzDWu7mP6f97C/GvzIlK29fjkHE1sxD/0ZzEvTT8l6Xn0/Q8qxD/Xp1cChnq
Gc4LWUJjj42DzE/w2p2F+K/nhFLI0Eebp7q6fN67uRD/WxzDPxO5mBeox6G5
mC/wDxMuFy7Lxdpz20zIuy8rhO7z4aX475k5C14YJFzs9rNeQR6EfGVCIXSr
h5Rin9PE9R5hPr2SdIX4H2GQ3rm0EP9qDNbz4S4f3jlCuMJ16m+6UteBpje0
bl035oe95TbIxj0a3PFQS2hNeDb2f5ydf5eJvfGyTMju2edxv8byTOzTVgur
MrH3W+407OF+c9w857HMex4MpP/jPQ//qXJvRz+t2faT+7i+gwud36+Z2Fv+
6PLYJ/3sNOwnf3cZrFN2MT+yZ/tL2JKJ/dga4Q+efb7M/RzswdY6jm8/Y7u5
1zo728+eeKOwIRN75k32szfebH+tTNw3u08m9o1bHMfe8W/XY5HLp67sFf9x
HPvgX4SVfm8n0WTHbOxrV7idvNcoG3GE0TfI2emDlNwk3wP1Xye5jepHXrXd
h6xTdzVd2DvtIezuPkhnIz1ryTK522Sj37grBT0J5njyTmSj39CbIA3zPmGk
YR+8tdytsrE/29NlQJeGfC+ysRZrlQl5A3xQysb3h77F5RtI/1VlI449MfnB
H6xxqRdlQLt62XgPWtbPhp/+q86Gn76hTHiZPtghG/WAhyr8zaR/oDFx3B+E
POXh2iGPWGm60z+Ns0H3kV7bH1835BDwCPNf/3oxXmfXDprtIexumu4q7GJ6
7WY/99Ds6feSjt8Z2hXj/+abSkF38mgprPf/y9eVgvYtndfGQvyDfEMpaNQk
G3Wlndz31Nl07+zxDO2aCU3dT02d5nPueVM+k5TPJ/4P+nL03M1L8FTj+jEf
tKkbvEX4vnr+0v/STi4FLzJPtMrG2Q/uXuan5i474ba2MN+0cFzB70KXj3z/
3mXcr+u7H6eVoq+4A6uLyxmcjTt1Wtk9zGOjq9+jz7rZD12620+be9gPDQ62
fwfnfaDr2tNx1JG7vQ5xX3G3V2+3o7fj6Ne+jmvud3u6n/o5jn471P65/vZ+
n4t+7u84eGKA/cghGoivtsvEOg99m6HZuFeeO+q4b3i+1mFHKY861UE/aMC9
PqwFhzkNsgzy4DuEHHb7TOSL3Jm1Hud+7bJxN9mRQntheDbuJ9vT+VEnvg/w
/4hsyHRJR14vuB2ceb6SizNX1hzPCcuEb4V9fGbGeRqyIc4YOHNo7TDOzdrk
QxcHXZv97HL23jYfejnEcfbJepq1/L6OH+69TRunq3LerLdGVodO+MlahzTx
uRFnRI3ycRbIWSLnroP9HW6XDx0jypvk+2O5R3bPfJxZcv6/l8/88LfIxxkV
Zz7N7XIWtHM+ztKIa5UPXQHSdMiH/hD6R9zdwB0ON1WE3S7OCzljRNbAOpF1
wN6mDek7Op707Z0HdS263dCDfuZchHOSWqYddOH8uZ39nFXvn48yObs+wH7O
wDmT7uw1ImeKnCVW2z3Q+8aujqvnd0nfJBf7LtbUyP86uY+bua/YqzXKxX6M
dV9Th5HmWfMIa1bOt/u6jytdR9q9Yz7OdznXTeWjP/agX6vDHa3+3cn9yVlx
wfSA73L54DNomXb/kT7rMPonY5c49sfd3M7the72V7gu9GFdu/RDHbvQN+8y
Ka9pPs4m4bkZvq+DezuamUeI484d7t5ppfo3Nv0O9vp6s7BJeE/YyFoyF2t/
3D+FrZV+N2HXfOh/HJ2LuWCRsE5YK7yZiz0/a/99HH+k8EYu9BtWm/Z502mh
3/3NY7fgNjG+y81r1IXxA73/yQWvMw6YUw40//2Vi/FAW9fkgo7Q9e9cvEsc
9WtoGv9P2MXjhruampl+0Ia+30E4tjrc4fS1+ai7acTYbpwPmpEO/9umAeW/
ZRdatDYNWBejHzPctIOWg/Nx3oueCjIC9oVt7bLubmOXNNxXxRn8tMrYY3PG
yVkWujXsOdnv7u1y2BNQP+aeXm4r59kD3H+UyZkz82kX0xG+Zr4Z6vGJDgFz
BDof/TxOtpG/pflgif3wBXuttMcK+7aseZx9WMbj4MNc9Ad99VEu+hI/e9f/
uW8ZkzmPlUHVkd/+vvuHcraCl6vDbVsZe92yfNSjP3cqMTYUPrA6/j3pqOeR
ldH+4ytDX4c9Cfunb7X+eR6Zcyl0Ww51O7lr72fhp2zoMbEnRr7yi/wVudAt
+lXPlbnwt8zE+SvnriuyoY+FPhT6Uuzn2FezNuV8l/Ne5DXcMcFdEcibuP+C
79jtDsN/q8PYT99il/3xKuVfykXZK7OhU0V51Jcy0c9CB4dvC3vc1QqvykUa
7knnvvQumhMO8t3p3KHOvrSH+Yn93sH2037yQxeMvWBPx3F3HfpD6PucUYx/
FReWYn0/0LTIlcf/F7Wq4p68TC50nZBXLXD7N2RjXKFzdJfnCOJmuK3IBpCj
IF9AHoCshW//87mQxcy1f6rj2fcj53rWaZDxMTcxLpENPec47t/knH597ciL
dQRzz/XOm/fqlMc/JhVVIS98x3mxn+mXCbnDTL2T17qka1Xsj5G/IL9Z5bu/
uAMMmdMhpt3NbhPyD2R7zJXMf8j83rL/bodBC/Y0g8w3NzkdcpQb7dL+WapD
QXXoVhXypNmuxwbfNcqdo+sq4l70tRUhd+T5yVzINd922X9mox/QK3ygGPcM
LC/Ffffo8HWriDsT0YFDF4y7Hek/0nEPI2HokXHv40bHcc8ienKk2dZrBHRG
3ne69dm4UxJ3nTC7foyxRhWRB99v+IN7OeF7xlyiPP4bylfF/ZeEkWbr8viH
KFcV92Wu8Bjm3kd01KgH9yyi04YuHrplyCOQ/aCfyPhmDt3NYcwRu3sM8d5r
xbirYY1o8lc21hmsKTZnYy3Ct5Q7H7dkI2yJy+HdT+0Sx32am0yjFcX4F22r
qrg7crPjuJMSWlLXTcX4nyild5Ll8d9SoSruB13pdp5TjH9v31Xd/siG3ic6
ntw3yZhjrHLXJOMV3bqNxfg/Kcm/PNl4F53NavcPa6k12dD7JC/qRPvoD/oK
HkFvlD7DRQ90bTZc0kz3f/RflqLN0AkacYcm+VJH9F845+bcm/s11zouXR7/
ZJVXxf2b1Jf+W+R01Pcl363xeynubV1t/thQjH+2Eko7p36821S8tE7hL6Hj
VRX3n/7mNO+Z7yj7/1ybjS4=
        "]], PolygonBox[CompressedData["
1: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
2/SpipyyuWVzxOaKzSmbW26dckvmsM1lH5Fyz915bDfoAacWR87a3LU5ZHPJ
vVjW0/mB5xr083qD3dmmMexK3Ah29j1B4+LQ6nrPyWd9fa9d2JHlO0EbONL7
jPccl8MOvm6WHeN+iHdyzkDcFo6H46AdHAuDoLBBaIrVFu8Je8DpLD8DdvM1
QW/iPsWRIzdXbk7f3L45OXNz5ujN1ZsjN1feIuXOepVELsycmNpeNb0jU763
d0nkfGcn/aRaX3O45nKtcVjrMCdnbq5Lyu2a4zPXZ87O3F0/4r7wJq9tcXHU
IKxFXM2yMc7TndN7TFi2IwyAh5OeVG2yNQFrA+aQzSWrQVaLbE7c3Lia41Ep
H90v5ZTNLe8CjaAx7A7jeewE56fElSVRQ7CW0NTXmPSf5uLOZJtBsI7X+kVx
1DCsZVjzsPZhjcRaiTUcaznmwH1uNdJqpa3xWOuxpmFtwxqFtQprMMelHKS5
SGsk1ko+I/4UfiPe7j3eOQM8y7W1EJ6Bp+ECll1YFJrllUnP/C7xS/BiSdQA
rAVYA7IWZM3I2pE1AWsDL8MrJfGb19++/ub1t+/bJZFrNOeoNlqNqbn3sXBX
aWiiJyX/wFnEi+FX4uXwbVXUqKxVmeM2192vjM8bPuM33+fVkeM2121Ny9qW
NQlrE9ZorNV8BxtLIsdtrnsr67bAh8RrSiJHb66+ljXy6siRmys3R26u3Jy1
uet/eUwO61eaP3VfjH+sihqQtSBrQNaClsGqBlFDX078vmP343dnVdSIrBVZ
I7NWtt5jWxI5enP1fXhvveETnutT+ALWqdm2rgMXQOt8zjH4luUvwgvm4Fm+
PzSDpvoS4EBoCesbhp/iiLLwhKiH109xFPEq3xN00ksCR5fFvreyzdss76jn
ApYTr4Ajy8KvoZ5er8nL5uytSbD8YOgFPeFjlq1VG65GXN0r8evQlfgkeJ94
tdp74oOS/0Pvy4CyeK0uG0j8Fcu+VKNO3L8sNLRqaT0G5xOfAifDGrb5qDo8
MwXJXzGEuAucCN2gO5wKPeADtv0QziZulR+aXbW7r8Ir0ELvQ1nUVKytWFOx
tvIH8e9VcU15bXlNeW19TryuJDTahyc9/WnWfthXa98X8UDoUxraajXzaufz
rA1UR03I2tBtJXHue496y2s43R+tkVm7u7MkrhXPsbtKIufv9fqoGvKqqMFZ
i7vWewAMKg2tiJrvM4nvZdn0kqg5Wnu0ZmXtyhpM21TjstbVAToK6zrAtcTX
wdTS0H5b31Ebfiy0gwtZfhGcB+fC0Sw7Bi4gPt8aD3FbGELcJvktzkk1JGtJ
1pCsJZ2Sak0HpVqXNSVrSwek2lRX4pNSzcza2UO8lwdLosZordGaoLVBa4zW
Gq2pWlu1Jmtt1pqQtSFrTNaarPFY67FmZO3ImpO1J2vK1pZ/LQktlveketVR
E7c2bg3cWrg1dWvrj7FsHvxM/BOsJv4APoG18Iv78p7pvdN7IvG2qqhJWZuy
xm6t3Zq9tXtr9tburclbm7cmZW3Kmru1d2ti1sbUAKgFsGZr7daarbVba7TW
aq1BW4ue5XlUEjV5a/NqBtQOLOM9vWcOjXO9fVnUtKxtWWO11mqN1lqtNS5r
XdZwreWqEVAroOfE2r01amvV1qznpe87vSnWzKydWTOzdtac59gXnuc5F3ne
EFclP9FQ4pEwAi6BS2E3+L5heHyeZPsHYA7UZXk92KMs7lX6gfTG7VIW3p+N
6uuI60BtyIFaMJttZqlzshZXGpoWtS1qTNSaTGXdDX4PsO4buJ94JvyjtkpN
lvcfKIJiuIl1N3qPYt1X8DDxXLVfrCuFBlDfexJkYBDrBsKjbPsYzPI5vC+w
rC88SfwEnEk82Ps+9Pd9s+xBeMTngDO8p8CzsMAaI/veBwohCw+y7CG/Q9j2
E3OjxJO85xF/AGOJx0G+91vIhTz4gnXrvNZZd733cOKPzasST/E+ANfAZyz7
HF7zt7lzd+YOd8C8osiFPAZPED8FT/o7nG2Wwy3EN8ONcJO/51n2sr9dfBxc
DMNgPssWmIsgPs99ED8FlxJfAhfBUBgOl8EIGAn3wN1wq78p/B1vbhPmEy/w
91ZR/HbXc6f3bnZReJUeggeIb+G93Qzf8d42wUb4FtbDBpjAuvGwhvij0tCc
qz1Xk9TCfDbr+nnsWTcXfi2Nc/d+uKc6PHD6mdRkqM24y9945jN4LW/AYnM7
5hVYdp/zMeIlMI14OpxZEvd6PWR6yRY6l4On4ZmiqCFYS1gGPXg9p/CcJ8M9
vI5pcFdZXGtnwT3E/7Dub7iX+D6vkxrOc8bTiKeXRU7e3Lw5eXPzRzNeQbwS
ejMewzZXwxVwJQyHy7xm2cdm2Apb4CqWjYafiX/yGBJP8D4Az3lt8LxZGEV8
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
uZtzn4rQL1fB6YxbMf6qXsxZTspEDsZcjDmHFQVxTD22fgZ+Fh96DPPiGHms
PKYe2/+WZeMz9bP1HPZcds47NunPncs4h3Qu6T3be7dzLudezpFHZ2LO5NzJ
OdmQTMyRnCs5R3KudGJFeD+cgzm38ze6v9XNIb1VEJ4JvRP2pLA3hZ4FvQt6
PPR62NPG3jZ6NPRq2OPCXhf2ILEXiR4MvRgrfS9QXBjeCj0W9vaxh4W9LOwx
Yq+R1fp5stFDw14aXxN/lY0eGfbKeDUbXlT3UVIZPTfsvfG5vxmy0dPE3ib2
3LD3hj147MVjTyJ7E9njxF4nekL0huhh1ctqzxN7n3Tkt1KHovhN7297PRV6
K+pAXagFOYXhsdBrocdCr8XfPPafbHhE9Iro0dCroadEb4keDr0c9jDS26LH
pagwenrY28OeR/Y+sqeIvUW+Z1+bYStsyYZnRe9KQ++3heGZ0TujB0YvzC9s
82s2NPxq+TvxWXbOhOfqtuS3OId4UTZ6BdnDx14+ahrVNqoBVQv6TMrdW6Ow
VqEGQy2GGki1kGoeX02aDbUbaj7fTBoptVJqVNWqqoFUC6lGVa2qGlG1omoi
1UaqIVVLqsZVrauaSrWVI1PtRE2l2ko1qmpVrbFYa1EjqVZSDaVaSjWRK1MN
x1rOI/BwUWhw1eJaQ7GWYk8ue3NZw7CWoYZSLeVjRaH1VfO7uTI0rmpd1dSq
rVUDuznVNBammo21GzXFaoutMVlrUrOpdlONsVpjNcNqh605WXtaZj+yytB0
qu28O9WGZpl7Yd1i2FAZPTTspWGPIHsFqcFTi6dGT62ePUzsZaKGXi29PQ/s
faCnPT8Tmnq19Wry1earyVebb88Te5/YE8TeIPYgsReJPVLslWIPEXuJ2HPF
3itq9tXuq+FXy6+GXi29PYvsXaTGV62vHgC9APZosVeLGm613Gr01eqr4VbL
rcZbrbc9euzVowZYLfCcwpg72LPN3m1qvNV62/PH3j/24LEXjxpgtcBbCyO3
Zc8be9+oMVdrrkZSraQ99Dql+YK9ftQgq0VWg6wWWc2v2l97ENmLSA2yWmR7
CtlbyJ459s5Rc6723J5E9iayR5+9+s7Pxne314+9wuzxZq83P8M5RaHRVKup
5lDt4YQ0/7Cfkb3m7JFlfxh75tg7zZ5ki9L3t72wrs7Gd7c9cjZURE86e+f4
HT4uGz3k7O1gPkHvk5rv8eme5b3LHjb2srEni71Z7Llk7yV70NiLZlo2eu3o
2dO7d2k25hr27FnH8w3PxlzDnoj2RrQn4rQ0H7GX1wy4Oy/uwT9XRE+wO9P3
ub0Lb033G/uV2evwtWz0nvIxM7OhoVRLqYZdLfscls3ORg8qe1HZs8reVfao
sleVPdbstWY/J3u52QPR3lL2H/qvN1uaX9gPy16J9lS0V5hztpuzUeO11mvN
1tqtmlu1t2rs1dqruVd7r8Zerf3gouh1qkZVrepMmFEUNU9rn2pg1cKqaVXb
qgZWLayaNbVrTYui9549J+09aY3YWrGaUrWl9hyx94g9RjYUhKZVbas9Ke1N
aU9K69Vq+A8uCo2qWlU1vGp51diqtVWzrnZdjata1wEwsCg07GrZ1eCqxbVG
a63WGq61XGvc1rqtcVvrtsZtrVvNsNphNXhq8dQIqxVWE6w2WI+CXgVrwtaG
1QSrDVZTrLbYmrG1Y2vg1sLVJKtNVqOsVtkaurV0a+jW0q2RWyu3Jm5t3Jq9
tfsDMpGrsYetvWx/KIheo/awtZftzeXRy8SeQbekGpC1IGtE1or01Oit0YOj
F8ccgbkCeyjZS8ka0YSU8zD3YU8leys1hbPSb/72KQdsLtiecfaOM0dhrsI5
n3M/PXZ67axhWMuwx5y95vT86P3RQ6GXolvKFZhDNpesJlZtrJ4RvSPWIKxF
2LPI3kUX+Hu5IHq22LtFjaxaWTW0ammtUYxOORJzJdYorFV0T7kKcyTmSqyp
WFsxx2OuxxrHpSkHYy6mccrVmLMxd/NXqp1cB73zo6eqvVWtwd+bakrvpJr3
M6nGPibV0K9KNegnU83Z2rM1a2vX9mz+KX2/6q2xxm+t35pMZU14gPQC6VnS
u6SGrnXq12DvX2tW1q6skc9JNXpr9dbgrcU/mGrry1NtzB6/9vr1PdxQFh4q
vVR6rvRe2SPWWrg18WvKwpOlN0sPl16ub4viu9qe0/aetgeutTBrxNaKrQlb
G7ansL2FbyuL3sTWqOydu74o3qv+sMKq6GHcJ+kH1RbemnLn1gDGpZy/uX9r
mtY27bFjrx1zIOZCjoK8gjgnzk05JXNLHVMuqlXKz1nzPKsmcirmVuzZY++e
g8qjN481r0E10QNrRE70wJrnNuVx7puDaplyYo1SDsxcmDlBc4PmcA5IObAu
Kadnbk+PlV4rPVh6sfTA6IXRg6UXS0+W3iw9Vnqt9FjptdJDVSdpytWWqyFX
S26Ox1yPOUtzlz1SLtAc4H+5wPLIZZrDNJd5dMq99Uy5xc+KYi5lD3N7me/C
us/y4xieWhM1maEpZ2fuzprO8JSzM3dnzcfajzWPSammYW3Dmo61HWs81nqs
mVg7McdprtOcnrk9a5jWMienWo41FGsp1hStLZaXR+9qc5hda6Kmam3VHkz2
Yqouj3ykn2n3lCM0V2jN09qnOTJzZdZsG6Scmrm19ilXpsdLr5eeQr2F1mhz
U47NXFt+efQWN99q7yZzsOZirWFZy7Knk72drEFbi96pPHLB5oRPqQmNvlp9
Nfxq+e1xZa8rewitKoia8sqkcVHr8mhx9ILvDeezfUc17jCY5UNgAOQ3iJ70
9qafWxxeIT0AegHsGaxXSM+Q3kQ9EHoh9EDqhdQDpBdIT6HeQj1Heo/0FOkt
smeWvbPsybW2IDw8ennU6KvV1xOrN1YP0ebk4dDLoSZebbwe3euT50Pvhx5H
vY56kPQi2cPeXvZ6NPVq6hnSO6QHSC+QHlu9tnqK9BbpOdJ7pOdS76WeIL1B
ejL1ZuoxLUp+J3vj68HVi9tSj1ZVeFSHJ0+I3hA9W3q39ATY+1lPgd6C9cmb
okdGr4weJ71OehD0IugJ0BtgD2u9B3q09GrpadHbokdBr4KeKr1Vegr0Fugp
0Fugp0lv0zb9JQ3CQ2Hva3tO651w2fbi8FTprdKTpTdLD6peVD3KlyWPi14X
PTB6YS4sDu+pn3fXqvAk6E3Qw6WXSw+pXlI9qXpT9aDpRdOTpTfrqeI4Vvac
tve0niy9WXrW9K7pkdUr6/8g8H8RqMlWm23PeXvP6xHTK6YnW2+2nmq91Xq8
9Hp97Xmd8tP29leToTbDHv728tfzofdDD5teNj1zeuf09OjtUeOh1sMe9vay
L0rXvzWL9UnzoPahdapV6IHTC6cHTS+aHju9dnpq9db+VRzXlho+e5OrGXs0
1WA/Spo0tWlq6NTSqSFTS6bGTK2Zmjq1dWru1N6pSVObpuZ1ZNKEqQ1T41Y7
1Wyt3T6VtGZqLtRetEm1IDVsatnUvKl9U3Oh9sJ7cKua0HBYa/Eed1hNaE7U
nqhJUZvya1n0Xrdn0+Kk4VDLoSZEbYg9Fu21qIZdLbueZL3Jeg71HrZi2RHV
0cPSXpZLkxZGjYhaET2BegP1kOklO700tGb2NLLXpZoctTmvwetl4cnSm6XH
Ua+jmhO1J+8lbc136fNXo6M274U0v/AcaVQTGh21Ompm1M7oGdQ7qKdfb78e
Qb2Cei71XqrhW5Bq5tbOv4B1ZaFJVJtoTd3aujV0a+nW1K2tWwOzFqYnQ2/G
ZLUuZeFx1uusZ1rvtJ5Wva16evX2qilVW1rGtuXQrDjmLl6DzdWNq/Pl2Cy1
h391/M8LvRp6NhqVxf/M8H9nqIlWG717cfzvEO/pe1XF/2RQ36mm+lji48vi
f1X4Pxv83w1Hpf35Pyj8XxTnF8f/Ntjib/zi0AyrHf42aV/9Hw32m9TDo5dH
T5DeIPtZ+b8c7Gmv1luPU+2S0EyrnVbzrPbZHvj2wtdTqrf03HS/1eO/F3GT
4nhu/e3//a+RstBWq6FWS71TWXhN9HT4v0LUqKtVV0OpllKNuFpxPSp6VdRA
q4VW0662fXfPr4bxP0f++98jxeF11KOnV29wafTCt0dXi9LwEOol1JOsN3lP
Hv9Tw/ifH/7vDz0relf0lOgt0ROjN0ZNu9r2/jzmtOLw0Oml06OkV0kPjF4Y
PYl6E/XE643Xc6P3Rs2s2lk1s2pn9cjolRnn+V0Wmlm1s4PT/dPjoRdHza3a
2y1Ja6tHRq+MnqEvkoZWLa2eF70vemD0wqixVWurhlkts5p4tfH2DLV36Krk
XbInqb1J7SFqL1E993rv//PYV4bnSO+RGnu19mr61fbrQdKLpGZe7byaTrWd
9jy096E9GN8pCI++Xn098nrlZyevgh4KvRRq/NX663HS66THSK+RmnW163r6
9fbrudd7bw8Ue6FYM7B2YA9Ve6l+k7xWerb0bumB0QujJ0tvlp6ulcmzoXdD
j5hesXaZ+F821hisNVhzsPZgjxd7vejp0Nuhp0Nvhz1e1Ptao7BWoadMb5ke
Or10euT0ym31PZaEJ0BvgB4qvVT2hLU3rD1d/+vtWh29ZO3Bai9WPWt61+wZ
a+9YNftq99Xsq93X46DXQc2/2v/XS6LXn//zxP99Yk/QX3Oix+5LBeGB0Auh
x0Gvg5p+tf16LPRa/I94ccO4hp5i/Gdp3Ju8JuZXh0ZXra4eBL0I9uC1F689
eO3Fq4dKL5WeBL0Jetr0tunh08vn//jR76VHbYey8EzondCDpRfLnrP2nl2b
vDR6rPRa2dPX3r56yvSW6cnQm6HnTe+bnja9bXpA9IL4P4T8X0J6vvR+6RnT
O7Yhafv1cOjlsOeLvV/01Oqt1UOrl9aeL/Z+sQeGvTD0HOs9tieFvSn0GOs1
VhOtNloPgV4CPf96/+05YO8Be4TYK2Qm294Pm9n2+6RhVsusx0qvlZpktcn2
tLG3jZprtdf2GLbXsD2K7VWsx06vnZ5BvYN6nPU629PG3jZ63PW624PAXgTX
8JgppeHp0ttlDxR7odijxl419tSxt44eK71W/o8dvTVzYHlp9NSxt449d+y9
06s0/jeMeuxOjN8ojf894//g8X/x6InRG6OnZmrSaKvVtkePvXr0MOtltueC
vRf0qOhV0XOi98SeF/a+0LOvd19Phd4KPRh6MV4hfrk0NN9qv/W06G1RM652
XM272ne/U8ew/PrSeK1qyC+uDs+/3n898Hrhl5SGtl7Nutr1t9JYD4f/a8j/
MeT/GlLjrtZdTbzaeK+RadXxP4H830Bq4tXG66HRS6OnR2+PPSjsRWGPCHtF
6AHSC6SnRm/N7aWhnXf//i8fPTd6b/T86P3Rk6c3z55i9hazh5G9jPR06+22
h5G9jPTA64XXc6j3UA+IXhB7kNmLTM+A3gE9RnqN9AzoHdAzoHfAntb2ttbD
2C8dD/+XkB4DvQZ6FPQq2NP7cA7dEXB/QfS8sPeFnnG94/ZEsjeSPYDsBWTP
bHtn64HSC6VnUO+gHie9Tno49XLqIdVLuqw0zj3/55L/e0mPlF4pPYV6C/XQ
66W3h4O9HPQI6BXQU6W3So+UXil7eNvLWw+VXio9Onp19ETqddDz0KM6ehTZ
q8ieQPYG0pOvN19Pvt58ew7Ze8geRvYy8n9G6a/Q03hYaXge9T7ak93e7Ho4
9HLYs8reVfYQspeQPYrsVWRPcXuL21Pc3uL2CLJXkD0C7BVgzyl7T9nDyl5W
evD14tsDyF5Aeir1Vuq51HvZsjR6S/o/rfzfVvYYsteQPazsZWVPAnsT2KPK
XlX2PLf3uR5OvZx62vW227PD3h3/B0vwf7Y=
        "]], PolygonBox[CompressedData["
1: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
Q89x7L3V/Z3mviP/Azyxkgc=
        "]]}]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJzUvXlUzt3XP24IjeY5QyVKSMoQ0SmSkAYlVGYqUyqZSaIQKklEypAoqcxD
CUUhQpo0zwNlFpr8rrP3bn1vPZ8u9+25v8/3+f11rfVae+3rvPfZZ589nXNk
F6+ZuaxVixYtDvVu0aK14Fd66tWYp0+rmJ+5Wm/x2aUsaMgDEc/YDDZfzfA2
xycFje7A8cKgXRUeAnwB4TqElxDeSK9NeA7hn+4/BPyq6IKOHF9/eUmlMD4L
mvxvEeHfVYn+DOLLTyO+XAXxbH/E93gjHjoK8RahiPe5Inz8ywg3JVzyrHD6
oZHjsjiua7lzEcc7dwq85imE3mWk0i2OSyuYS3LcrPOqQo6nhCN9RcYYoJ91
ejfQZ9xA3OE94uMyEb+ZWX6V46fjr7fkeEZP8UccN6L/7Uf/60b/60T4IcLP
/+a7ll/bGsRxy+XnM8QEeNRS9cUct01yi4JxntPuzOkd/Tp+/Dvz2BRfaBQD
+KNV+qAP7/aN+lv68HdxJ9KTLqcRXxconP7zSMRHnUc8LFw4veSS7sc5vu64
4n0un2LVjwoctyD6sUT/hOhLjXTucby7rXQ/jldbOLbnerKI6PWI/gPRx5M+
J5xA/JmP8PEUL5gB+MEuqoC7ztwE+JxvBoCrtkf6myo7AW+pgHzMXRHXmIN8
TpLcrEhuOid/M49Nxv/uN/My4CSOc/hVHOfr/M1C6fvQ+j1B83IxQrh9uJL8
8BjHD6suuMfnpfJK/UCQ/xakPzIX19EhKzegn2JUFs3xvZWXu3H8rfyxH6D/
Wkif+wD5x3wV/l27CT/faPd+s77+LbzlEJpHT8RF7RGfRfRDiP4c0RfmoT7s
fzUK5zfQ5Rf+k4m+nOgNCe9L+E7Cowe3vMPxYfs/g9wUlo+rETZOS8LHE55M
eA/CD5I9VzqDeCDNe1EI4mmXaX4daR6n4Dy+H4vzuIn4uBH/vSR/Y8LlCPf6
jTxXLCl7yPFFfdSGcnyBjfUIYfa8Ofxwn1WAT3/rBLh18Zg3HDdvtx/tw/Uk
wIcn1AP+aALymRaDfGxLdgmdl8WETye8mnC5u7KAX2z5sD3sFykryv9Er0pr
v10AOftZvuXrKL7XcS+Oh4lP0QQ5a8q9FhXgQye6lu8T4FMvIJ/2L3BeFu7H
fcp6sfdPjqf7zY/meHjtR1+vv9hJDfrf5/S//TYOwvl68QLGXym9B8Zv0NsY
cL9lGkCfv8ZL6Ph1R6CdaRs4AvBtIzb+4p809WeOjUN8znXEb79E3IzohxF9
WNB/npdSwlUnI57yAnGbLq6A6xh3Rj9kTQB8l/gQCfiuDpN6wr6wdfrFvhy3
GLtESpi+BVvNAny9vC7gIt0vAN7OdA36D1/dAH+YOv3Nv2lnGu38FMIrG/2x
jhpIbyACuP/zdr/IeSLR5//Gr2tKn/ub8QyifWr0KcSNTiDeaajia4636jzL
kuOtcx+e5/IsWpo3HvRTJjCV662T/fO8fUL4p6i9BT9n+dnxXTgu13775/8J
e/5/G1+j6QX4W/Ya8M0VPd5yXD3yCeyDiy1Xgj3/HFr+/e/wb6r/mYRvOkvr
6xziB7Yirm6B9uHECrTbxzxNAU8X10H/JP8s4JfMkN67DvkUb3f9ZR+ZQP+b
Qv+b/iDuCcffdzBX57jqQXdDPu+OrTrCPP4I6dmJ46M6qLz7O/FLU/twzf0J
4P4NK8BfrbPYAf6qSh8p4G+wohPwH9StH/CXfoZyPh6UCXzaz5cGOQ9zXoL+
0tLlgPfY0QrW6Xj3roCvqj8D9iH4U0+wD2nrv27m+Dv9NDtuh30uxiw8wP06
GqcqjfMmjVNDEfEVe2ifXSBcH9wK177iuIJ5ZwOOS3W3ceVyy7UeDHHKDoU5
EKd49bWGOCVPGvm4Lkc+al1o3g9Ow3nvOATwiHfWgCv0Qzs8dg3a4U+3NwD+
5f4m8B9ui8r24PibnoPqOe5boPWA48/SOytyvE3OEAVh9jCXcBfSt5pzwu2M
5JWJERx3XHLkM5dn+PvWZzk+mfz/XcFIvzlUuNxeGiBeWI54J0PUTw/Pq6AP
t8WvQnyUqjv0E/iTxMeS+Mj+D/mH/zS+fv6mMoDjOe/uPeHyaVMUzTg+iuiz
yU8rPvNn/I/kTwXceNZgwEPPLBG6X+w/ZXaT49fGTBXneL2hfg7HsxLVcji+
WdbBiuOXozPvcz3pKZpzjeNd1XuJwDpt+PyM0x8k/veJv3Sw8PHPWTRELJGv
rx7zUtoIcJmvkqt2/S+Yr/9b+BTCxQg3IbzDcMS3+CE+yB3xDzfRD1H+hH6I
WteL6P+EtQX9N53ZEuzhsSHVVRzfuWI20PdTng70831u/OLH6tP/fqf/jTXe
gPHCh2OAT1u0DeykobwR2WF1wK9tdhfuBxLelvBphGtKPgK9Whu7VAL0YbtE
PvhXxg+vc7z6/by2HF85zOcVx6ce3wF6JXl+ZGuOKw6+k8jxisQZYRwPkFWr
5OvFfkCE95+sizrV+SA3/QHZILdLqV0/cLxIvRjssJTqENgXIhZWlQrj7z9h
F/DJnqAB9mfopRaQn2nqbyc1xq0aiIfcRHxjOuInXKYDvnDFMPRj41YDLkt2
cjDZyaMhSL9uCuJb0xC3k0V7qE7/W0x2o5rsRoAK+vOLTqA/P6YG/XnHL3Ph
e3+4vYR953k/nyJhcgscjfiyMMTb3xKu53768R84brZk4RGOV2SqafB4xDv8
4R7wZzLmH+LzOHvckusH/uL36hKft8QnRBrH32CD45++EccvRXmbb8eR3tAL
6SNGIC51kuRzjPhQnNtAcW5Pyk+upf/dQP+7lPaLBi19tJ+6wwG/s8AB8JFE
/5rknE1yTmg4pfhMgCecbDNAgs/jd9fDB//APqwn3IlwRxpPc35Ic3xarA8E
PG3aT8DrtdeDXySlqXwf1p3mUhmOl13p15Xb8xEdrtzl+MupkX047vPgvTjH
paVtksG/KnOcznHtrLdOwvwE+36If1qDuPyA/xm7Wmg761ySAJcYG5/XXoCH
FOpkHvsf+N+2FB+VkL7t8Ufc2xLzP5P2jQRcxn472nmL52A3trb7BnYj1joZ
/JbOO+6VgF9U+nIL+Nu3squ5nNO+JQIfW09b8IcfqbkLzd9W0j5yltbFLk/E
TxF9BdE70b4csngh+GlOxwrAT5teHwV+2kX6rj2UnzxC+cmAJaVXOF7kr/KT
06f6J9z/N+XZXFwQTeMJo/F8ovF0J3oPWo8ytB5PD1OCcVZ1M6/n49x9Vf0O
x8OvzvXjuHvZi2iOtx42tC/ER3qUl3iNfHYrugodT3N5NgmyM2spj6pLedR4
kZmAx0dMANy3ry/uy2M/j+b+j/6VF7pt+X5dX7Tblfvz7zCvNeabM9BHfRv/
R3mGWE3Uwygt1MOpN50AN6P9JYL2l6Lf+OFqapYYPw6YDfiaCamAmxO9OtHH
E/0hUb1Ajk+5FZTI5Ryb9FFbGP8gzQTAHe4tBj1PeLMK9NyA6KUb9ZboRw5b
9JLjGT5FehzPvHRgI18vh0lP9ElPREhPOjCUwzZtlIPSbZQDC7sCuGPyCPjf
md6fwU6u0WkHeFWSC/gD08/Hl3FcJVckjuOGz+vkOR7ns6v/38lbNo3f17xH
P231Zn38rqe3AZ9O9J2I3proGzT74350PwbGM9vEQmi+sZry1XcPkj+wHvGJ
F05BPav+uQjUs6zvGsUL4zOG8AJaX+/+Zjzy38VnNRS8TuHrPXDg/H4CfKJn
nu59IfRnA00A/3JZG/AWnU4K5b+yL+KLViOe0AfxGW0qwS/qeUkT5Lzhdt+y
f/O75pF90CI/ROsS4rdseoG9ChqsAvZqY/SLaI67vzADepWLU4E++vUVoDch
/grEP+A39vPel6+hHL+5O72c888ysXD/O+NvqrdN8/97yD+5nCsJeYbDLzp2
57hxg0vNf/KHG/PPT5ITQc7PVd9Jcbygtxn426albtM5fr5Iu4bnD8cmhI7b
L8CXWKnBvvl8gD347UmbJd7/ifzPXqyDcX6ZZdOT46pJxi34+tXzQvvmLjkH
6N2d0oE+7oh+OfcrWH8Vlw7cPnRpv9qf+3vJ9rsecX9P9cCen2YCf+/q/SRH
Af5I/5oT9wOfFI2q4X6geLbKhUNcPn57IW/WNejRGM6/d6Wsgedf9hFNGmfq
b8avR7gE4XOa7EdN83U9SN8O0n7kQfvRerKTDZTX1aK67anBiL/Zh7izzW/8
H1O1Mxwv/WqXyvVKfrymuTB6G/LbM6l/YCf1DwST3/41EPFRjX77D7GlYK8O
7R3D+XdnQclcH3Qu9QD6lnkXYJ0yp6FgDxvrULL0vx6/kadzIMYXvpfHAx4Z
cgjwk8PDAS/tLQ/7QuiBl7AvKLtMBv2ZtjwA9LyvQmGtUDtM3xVD/uEg8g99
if450U8IFr7u3s5UevhYgA9Yax7aSoBfOj720FZh9jN1POBDb4kCPvFBZ8CL
l2+DfI7XUCVrjvdROhMHecjuyKf1POSj/GXn/9M8yT/FJ9SPAvyD/zfQB71Z
5UL3x5WELyF8BNmxQCk7yEuUPNzThuPBu3e+5HgYraM21N+iRPGjjJEf5CUU
K99DXkJ59k4fji8l/kbEX4T4uxF+tnG9/838ZFN9aHbeCR9KeGhj/jnWDeK7
Qe7aEN/Z9ckRE+a39CW9DQwg3Bfx4VmvwW4nTukEcr4tfRHs9o61ymAH/B4s
BTtg/LO/UDswsJ8FxrNrTAGP2J0E+G2yS+fIfysm/2011ftsXiKe3hX98+by
WpGKvW5w3HPv8HYcn1R3PJXjA8jvVSa/N4jyKvbEx64xL0fzcvt0qQPsR+Mu
WfLv6iX/WJnnKwYS/VXyi5zJL3pL+BnKk+ufR9yQvutEYx0t4O/Ne9M8zLwm
+0V6Y7xP35VG/5tI/7trGeInZbEe9CQL5TZRLAHqUHXjFkMdSrVtMtSh6ual
POb4M4/Wozl+VTdmKtcTTeK/luRmQPHCA235EI5P1JtezOWj0NBlO/gzx8fD
Oho4WBTWka63zguOX3S7spnjexxHQJ3laPbABVyeJr08YH8fVGQCcfHIFxP+
qN/pn+IV+zDPGdByHOCS9fuF0h/Yhnb1ek479DODOgLepm1IJMeLVHt84991
Y9+li8C/zCQe5t164jBYd2NERwpbdyGd18C8OM106wr6HxxZLWw8s6nvaDj1
HV1W+f+X3f6neNM+GVfCm+vT8LHKhXhHL8gf4p14vccJHFckex5NftEP8otO
Ep9S4rOR9uXM60sB/7ZqFeA67cQhHpcJXQX2UGFGC/Bj4/uJFoN/TvHXQC/k
89MB+cwl/iOJfwyN8/ZQsnuHEL+0BfF94jcfcVwtZrwax70dsyZy/QnphPT1
hmQfXuG871+N9vnaqI5gn+vXhoJ9/mJkDetx3DsHWI9GljNgXxvfa/MBjr8r
lA3kervO3+PVASHy31f3EeSpdvwZyHPBjYnQD9k0f/vmN3asLBr9rl516He1
WOgDeBTNixLts260zy6+JWL9ktv5tXUx3fj+O61vyQUBfq8Trl/1F1inON8O
6xSjt1xvzf3wvPSb8eBnHg6I5Pnna3bI/9gEtIdDZbE+zuJxHa07hP1aJi2w
XytQDOuqJRpYVw3WwLrqvrALkDcb8erEFy438wSPcxDX0L5pSP5e1+M4/jry
ew1oP+1D++maTYZQH1llMgbqboUf+kPdzZTsbSjZ23Syt9Xzyf53wvErXnH9
o3XUzWwb2Bnx2hCwM5e7iX3juOa2bBjPp+wjUK+5rOGe/2+u39otd+F/H881
hH0nV+2M0P6H2YSrEH6F8EWX5dSBz6KExzxOnHPTLpb3mTQXF0vTvBwn+WeT
/N2GDYT1cvbwDKiDiJbpQ/39Lq3fUZQ/Ob0O6cWJ/xra91NO/0YOq1+J8/hx
8qgdc6Rm83ro2w5HBPiID6hvM+tQ35aKCLfb+9ojrqaH+MF7SO+5GPV//LGx
qP91+wDXID5vaZztGvPD9F3B9F031/+79rnRvo0i/N4f8hHfS/7YZtRzsZtu
Qumbi3+bo3f0qgP8h2Q5xHf+229A/VSxxwPAb+eYA25hORfykGMqrU04vtDh
ixRf7zIzd63c/wf+myjhK2heHpH+bHiO+rAjFPVh21i0PyJJL8DeFgRvBnur
X+8I+1eUhL8H2Mn71af4eG7p+WRyuz3x+iHwV7e8LbDguG/rhKHC7PnqbxPB
77JufxTyKqINKyGvcpfs1TXqiz75m77oUZGYr7a0xHx1xAYN2B/dLE3BPxy4
Lw78w9MTNJ05rnuhnxa3z22N7szjeZLp++UVvIXMY99eFI8sRrxnq1/luZLk
mUjy1B+ldYnj3Qcf/M7/V7LY/BLIueASfO+O2RfBz+wWIv1J2He1G4vry0YV
15dSrfA6+K2B2Hch76IAeKe+C4TSN/alTyX842/yeMbad6BvVi7h8RCwA8qL
Vf7qTzbtX+0oqQN4w/3egNdsY/8xriz/zXpprLMcIDn3p3hHhvBgwucT3nBM
yYjjJgpZbSD/f8B2Nl8vd4h+OMUpQ8/9audH0P9eb6zrEb6f6DtTXKM+xCIR
/G3PlLGwD7JRJlwOzz5in5tZi8lAf0D7PNB/t05O5XjsuQYTjh/d1dOH0zdX
r28u7n51WFT/CV8vvd1qW3M/f7VN+nYBHreJ9mVTtFfGc9FeBSt0c8jgfqPb
WXMFvo5i+3ilx/6fPpB2xN/gf6m//U/tW3P08rR+L9P6nULr13iVLuCnL8sA
PmSsgVA+qiswz2MyrBr8W7+HxZDn6aeJ9HJ3KS4oQ/phvuSXHsd52SyG/dKq
9g9h30/RzAW//Zi7MvjJqwtEgN4qfSvwb5d9Q2j+/2nbwYCnjEwH+nfVR2A8
5QcLIP/g7yUvBvZzz/pM2EcmdwM/PP/FWeibkrlo9JzjRyzjIK9oLPEa+vQm
2b9r4PjgbW8Bj7acAPlqZY2ynxy/Q33UkdRHfTiZ/Or384G/X+088PMbbHqB
n29N459L4+9J+Q3pa5JgD4/bdAT738FXGvoqzxN9DdGfpzjIJgnxTAX0t6Wt
9uB6/3D0BIy/wTYB+jrEdoyBfaQd2s+RN5A+4PFe9KuJfxHxtyP+YrTvVFL9
eqSXcL3aSXmV/pQv8vnN+aNkC/FzHF+2VzyPj7NHWykHYfRrxyC+Phxx5Ria
d2l/6Cc3raiGc0amYT4duT2Zq4z0148g/X1XpP9dfPR3192HohWAh+dsAbzV
TBXYZ5v2h9z+zTrdNBbxXVfID3yCeOltL9CfbhsyQX8sZQyShY2nNEgb8G73
ugL+9YjKL/tX0z7DxvyVFuGZv/neFzYqYOdzQ5aDnbcdMHQml7Mp0SsS/Umi
PzcH8U0tcb1L7cf4aLh57QaO67dZtpzP+57DUw2E+UXN4Se0XOzKBfj8ydfN
DAV4ffWBW+Pimqf/bEj68JbiQTPh8dqHxYflebygIl16lMcL6qoBETxeyByG
9Bt9kT7cRfg4RxOeS/ty+b9ct1XMRH913EP0V2O3uPwy703Ppb7O3Q1xZbXR
A4hzs49uywV7S/TWRD++MR/e5SHEiTqm8yBOdMp9CHHiQYV9cO7gvpv+PPgu
jyEXuD7klSgBH9fCLLDDagfPgB2+nx+YAP78LGcVjm+x7zye0zfQOaBkOgd0
r/TflU8r16nvwB+2UzzIcZacMITnH+5GVGB8lHUT4otXjhOr/mofmp7vsyJ8
FuEdSD7LKY+ROx71fE5/9Deyph4GfEt2CfoVKmOgbtV4vkaZ+IQT//J2lA8Z
g/iKIxhXjj+ngnZ48huQp6RWAsizDZ1nXEznGQ3pPONLssOFZIfXn0J8qP29
JdzPfxjz8jr38ze4dxA5JERukxsWol3qvwTwyV8/CfXHOrTH8851uvNAnoqz
F0C8Jv51VwrH14jeMQK7Iddmv6cQ/ZxBeE/CN/xmfpur24q2HoPx3ZAakNuS
sHcgN0d52k+dSM56SD/AdGyfVO4PV/9s3Z/bw/EqhbFC/nfIPewHmLQL+wE0
HbEfIIHi+qkU1yev+01etCXijxUQH26H8+7h1x/76s8wjAdveoE/8G6DL8Sh
Ic/LW3D8ywwJ6Bu5Qvy7kX9eGfxrXNP0vO012ZwfHO+zsVc4xxeP8VjrFftf
6zg/iP66w2nw0wJi3cBPa+Uzq4TjjefHTYhenNbFwHjER3ZBf6NEFf2T4GpX
wNftvwu4zdCMP+qnsv+Kds9OjL5X/n9nvr2A+gDdyY/S8vyfHU/Tddrc/J7r
PxX2hR8OCrAvSB38ns1x07VIr6SD9s1uxK/5n6b+jIg24oviEd/+Q3h8fYb8
tDVHEd+/G/FIom9P+pwV/J/9t8b+5JY2a2+gP9xJlOMpuxLThcnHuz/icQ6I
yygJl6fntzHgj93xqIN44UKiAtTRrhJ9LxrnVxrnB7M4tPP1c8AeHrtqCvbQ
TQnpB3nQerFF+s6KqM8iotgXd2oI9sWlrMR8zopL2wG/83wsrJfDyyq3cDzx
FFvL/agWIbesuB/lluoI9MG3fIA+6PtqoA+Twfhu19f+gCsu1f+j/ENzejXX
Tg/9q+iBgHvdNBfKpzk/vLm6eXP3PIx1mO/vLMCt7ls+mG5WyhZ9i6i7fi+D
rXiA9YK89mro/9/fgnGNTtTb1QL83bMH4n0F9Ccd3ktPuvdf+88Xkx3bt2gZ
5Hku93inBP6VpbaypxA/oXbW16MwLzWpUXxeCgvu9BYm506Eu5B/2Jr8wy1z
dk3juMSOqG88rz48xnokz9tM9ac8TCiuR4vhGEdr+X1dDX7daTMj/r9mFQM7
cn2Q7TUF6EMWywH9UZuZwvMDhEfSeDbQeFTyJCHOSnrpBed2Px/rI/XXfbxp
fLE9EuPNbvOwnluYdwDwrepIL3kJ6Y8+EK5v+ygOVaX8p+Uh4fSmPRE/vxDx
cfX/7r5wlOoXydQfle/3Z3zm0Hddpv6rft5/xmcI4fdpvk7RfDXnX83yeAZ2
8sLuT2AnHR1qXgtb1xsI30H4NloXY/OHAL7UNBf8q/mnQv7o3P3ULth/ImmK
/ScWOth/4kRy9iY5a5KcO9VjX+iOPtrwv8dvD4C8UMGQIujbdD+oCP3w50Ou
QD/8ZcdNwOfQlJPAR/+kO9jDWYPx3M2Qfc+h3uSo5gnnbjp3sQK/a+er9+B3
rQqZ/EHY+LvSeaI9N8ifT0H8+HN/4J8VuhH8pfsnVcFf2rTgA9yj4uY9NY6P
0/S6+jCOPyO/PYP89nnkt4/2fAl88vbWAZ++FzYJPQ+VSXLbSHXPTVT3bMxz
ihK9EdE7k796hOrjvRwRv0N5vPB7NJ63wu3/ahp/KfXVtKP8zy6qn8qcQ7zu
AunVp3To0/i5Yz/0aeRuTAkX9l3TS8NinnN9KJI51kmAj64ZHnBKgPe8e+3e
sWcCvOWY/lJzS9n3V1Y6+xMyWLvxyKfiFvLxzhQ+/n+qtz62WqAnejcPgp4o
T7GEek0Z5XOOXKV95Nmv+13T/WLdl5PlHK9r23on+Fc3L4tyPzyG5HaZ5Lbs
ItETny3EZzWtx5/THOF8kOmCQ3A+yHvFmO2ef/HPZxK9KNG/EsF6RFkE1iP6
GGM9QjXOHPBX+0wAf2ryFPXBlPThG/J5sPbX8+lN4y+dS9knOd5qwdHnfH4d
L8VMFybP+wOGAa6+rQDW9aQNl4TaE9FqNYyL3T9hniE2C+hFNs2EfWpRsibk
A7fLPoV7hzxpnUbTub/zdO7vn95jc5LO39nQ+buudP7O0AjxE5WIz5yD8tlC
63Ef2THl3+wXK2gd5dM6+vY3+9Oa4imBy8Ae2lx5B33sMyeHxAij37ZlIeiz
V0YB6PPJejmweyGWVyBP6yRxKZ/z6Zkhvx70wcozieMR8unanH5oZGdrYf1U
q6ojgH/pvvNQ7wt80AHqff31sf9kYCGeK7wXdPCPvtf/AZ7Ht/TE8/gLBi8H
/J/mOZvFf67FeOe0N8Y7j2xgHwncuHcyz6ssM9ZbyfMqwTdv6/H66ZQVGoc5
vmeYq6okt9vxaaN9BHj73PWLOF6b1OsSp59Tk/+V0zd3vuO1jFgDt3vV63ar
dxbg2svaKJwR4MnLTGF+l56Og/mdukET5tfnLp6XfOSiAnx87Nb90fc2nmMt
pPF8pvG8n4j4sETEl7RBPd/x8Xoex/1+3lrF8ZvM9iXXh4PDZ0Jf7v3emtCX
K23+BM4Lj5+B/nlVMfbzZObifTULd10t5nj8O7VNHL8+csEHzudENNaD5m/B
etCTb9dh32/a39uK1q8d5WltDyPe2xnxHpE3QA87ZEeBHg4MZaCHlrORfnwD
0rfdhd9VRvFpLzoPrrYX+VTROh3UeN6N6t1TG+NWGs/CP4ynLIh/FNkBf7ID
zqKIdx+LeM/j6N9WEa44DvG7JxDPeuUP+dvN175jf5HpU+gv6qaC9XEJf6yP
z5iH9fE5+ngO+nLhUIyvHVb9En/1p3HupXHGMcRZHOK3Pv67eYzm6u+Ko1F/
NC6g/jwwRP1p2g+8/Tf+cHP3/LhNxXj8nAXG41K1GI/bEv1Kop9M+naD5usU
+W9p1C/dehieh5rnowX4xGkncL2QXvWmvEeU2698AolP8m/uo2u8Z2Me4QNo
PIOXK4LfGBM6C/xbq08LoZ/qalgS6P9Rk6+g//eUk4T2XTQn/y+E36S8h/N5
4eNUi3p2meOp3xzquB0I3FN7m+Oaeu6gn/ZznoB+bps7F/RzB8mhN8lhD/mT
Q05gXBk7FONKMRuKK6k+uJ/qg1ZUH3Sg8ayl8cwl+QQPQPzbVvKjJlEepj/m
SVw/Yp5E0xzzJF2JjzvpVQ/SK2+XN7NecPm8Gde1iwB3G1ww5awA32/WBuQ8
uq4e8j/LSqqgvvAqf3ANpy+d9Tq8qwA3yBg9MUSAVyrHduf9DPK9zNbzfoY+
Zr0POP1l/2I0/ozGel9bSzhH1v2aWRmXp/e3k27C5H/6wn3A374whfEYWUwT
en55rebk5yCfuycmcfxxn80r/7q//91+g70zG0APhzmsArtdoeoJdvvW6TeQ
bzw7Lgr6G/M/FEB/o9+ZDUseCvC0aOnr38xKWbnnZZtFXJ7n17zm8hn1uN08
fj/JkfDeOjv/wJ7UTksFfFqeK8ihs8gDkMOcMtw3R5bivjnAej3626p+MP66
U2sg/kpV7wNxnNNmjH87m+XAd51VOlcubL00N4//dPwH91jBeLR+fIB17Sxd
WCSMflFuEtA/ef4Vxm9RZwPx44+huI50umI/1cpI7KdSpv7nad7Ix2Aj8vns
h/ee3Qhqg98lIyF0nGtUzOF+g6o+yXC/wbShw7tx/bGWnQP0c77hedtpraLR
7lE+JJDyPCt/0+fWrN9yON2d122Lj+47yu8f8GodOJjfP9BcX1PD/tKnHJ8p
cmkCx+eceGQpzI9tLg/Z9Px1wm/GGUf27Q7Ztz6n/ux7lwx06MX9ScOW7es5
PtJg3hh+30XrD3jfS26tFawvndadYH2JBBwGf74g3Ar8ef3Vq9aBfe6IfriZ
Pvrh40bg/R4f6X8vkZ23/Y2dv9lNHs5ly2VOG8hxLRldGS7PQVR3G011N1dd
pO/lLynCx99dySsB/Byfq5e9/kAOTe/zmUl4RLYt+J8HEl3B/5QYuPUQ2PN6
pYYsAb63T7a6igCPuD3Bo0qAe8h1bcPt89gauWnc314tFjmT+9uN/cZ2ZP/T
yd/zp/gul+K7OorvxuV4eCYI8Iqns+TrBXasVey6fFvun9D5PlULpI94v/MX
+9D0PFH3vhine1RinO5WxoTK4b7bUthPb39ZCfvppklrhJ5baTYODbkI9/8s
SjwN9/94z0h6CnruQfv+bsw//8jAetCy0lL435SiS9An4OBzBO6VlbCRgTjl
8zltiFPC+tXBeWrlR/ee83mfdjT5AY+PdrILpw5zPzwU7XD0DLTDbasc0W7P
uGSTL8ATS4dM0hDg3bc5vReNE8i/M/pp85Ixz+8TvE3odx3uiHGi/jO8j2vU
s6WA912H9Cf18Lucx+N3ddv3E+4Jd9/+Hu4Jv/zAty3kVVyQ/tVypE/3QHrP
MuQfXYpxaPtWKwB/6Y7rq9AJz1msH4znW5vLrzaXV183buEwLre6UQXKPH4c
P+bdZb7e/eJWgJ1P218L+4KRWR3sCy1NJoAdmPNZDOp6rZdHQF0v8x36pT82
TgT+3etOYX6D9NPGkvKZn/7d/Hljf0I+2b21ZPekMt+Dv1Stowf3TzoXHBd6
/+TyBkegz+3fDfzYOYNPQ75if6P/T/Q1JE9nwo8SfvU3eZ6pO3C+pKxxvizf
eQPe3D7Sn+zAWTrX8JXONTSN6z/8pv+ngu4/D6D7z4Pp/vPm6CPbTwDcS08M
8FyFroA3ns/qQ/QuRH/HAnFlMeSvFIhx7sAhFPd5YtzX7exKwL9roRwmxuO+
cHSB8PxMY/1OifCzv9GHxbE6MI+Je/0h7+QlvUHofQKTSH+2U1zcluLiY+Q/
zCX/IZrqRHveo324UIP9UdNboD4PcL0GdZBwu+tQBwlatQzqINdsJm1/IMD9
B/tt+Sqw20/kUgssBHjKqc94P+pNY9DPaOMroJ/OLSgeH4j/67Qc+bv6rgF6
Of92oJ+jzjqDfg6xyod1qn1GFvzGU2Gp4I9d90Q730+iD/AZGT4R+ISn077G
sI/iWCD2UYwiOViSHCJOCJfzmBzsD8zX74b5iq8jhMZ3F5ZqAu4SKAm4nF0f
wOu9MmBfMGzfHurgNw0z4L5B74dYZ3zYSR7oYw6bAf1P6u9Kpf6ueOrvSiui
/Mw8/K7aN/hdqw72PMDt29IOyv34vjCy/zIRnjfLkkN/tbYG6a/ao7969D7y
SW6HeFh35PPllQXM761RaXDu2HDWWOgH2BUmC/uUzKsHMI/DE158+Tft2z/F
93YSg7g43HB3Dd8f3caqXxc2L13JzriTnYkkO2Pk+xD22YDjuQ3QVzmh7p6w
/7XojOs6yhjXtb8m+nsZVk6AfwoKQz98WgjkOdVI32aTvgX9Rt+aixPXrMb1
uPoa5lUuv8b7uOwTcDx23fFeJpNTeA5Rh/i0JD6M+HQjfD/Z1b5kV010JgN+
Lqkv4CLtpwD+aF+dK+z7LW32wzmUx33PCus7bS5ea3r/1cff5Gd+dy/0f1d/
VmrdV+fxTsEDk0Tep1qjGD70qABvQfRzSD7HT//n8TTeOz2D7uHpQffwdKB7
eFa74rxY2+M+KCqKfkv3u6We4JfuGHEW3ss46VsoTJ6N95jtJrkdPvlr/q1p
H4g8nT+NpHPBuXQu+CHpvw7VN2vofpJxOzZ85Xi5lfQZjluZTp/D44gu83H8
7Trg+Dt0xX08wgT5SH1FPpqrcR98sIJlcjxWucMCjh8YvjeC+3tyzutGcXzY
0u5xvB8jxTnjEj/nWHjvYzjfLyTaPvvE94uQjY5i87g9pPqdDtXvzMIoLz0X
7x+z3amJfqbSUcD3Z18SzxTgI6cPmzOExxEfdqwr+AN92GXW+zzHZbdeLoBz
/dPPbOT46PFj0U++/RP2Hf11dX9Ur8+i76ql7+rT5N2Qpv0tUWvJH5iM/kal
GvrJD0vSYB+cVCgG43kQdwz2QXvi/5HO2+6hevHbD5jvlXNCPz8idSv6Jza7
0c4oxQFuI18A9mpG0Wew/90tZ8K5j8ze5XDuQ1llLOzL0/y3g7/xZt5w8Dcs
njDYF6L6doS4abTzvq8c/6aUfBH26w4N77k8l4j38Of48STkM1dxB/CRH6km
1G+pW+WL951etQF/YLudPdyrIDE5fQ/f7xxeuHfh+132xtZvhPXlbva2AT5i
navhf2MHzhLan9BcfUGe5KxKcr4YItxebf/UH845dnG5d5LLYX2edzpf731r
BqLfcvg5zGNke9c/0qumdbpswi9RvfUg1Vu3UL21J/Ut+NA7IL70DkjtHjx3
Nr1mEurJDbxfvXVjnpzsYcjpX+1P0/z/P80zNPZVzmiMOwg/Rn2GGdRnOPM3
fYb/FH9MuD7lZxzpHN90WcS7bED85UiaR7qH5BDdQxJK95CMmz5elN+jVb6g
3cwGgR3zaxPy1D72/9wn3Ib+V4/+NyZ2wnp+X+JlcYkSfl+i1Y3pHXcL8Jdv
Mf5d/BHj3419MP5VFEu+xemjb9cfaCfAf6ycemWPAM8t9xnN6Vu9KX7I7aq3
XdJNblerXpra8H0tOFJnIs/jVW05Z+InwH0euZ7m9Hq97r7ievhDW9yM8293
bi+832Tz8BG836R0dg+831Q1or9ZGfcHTsb46HO/3eZ+oVpcBvs00XIHX3dq
09Nb8HX3euXpKL7ukueg/hTvQP3pfiAI49PeHmUcry42cQa7fUq8Fd9fXn6Y
tI1/V8G2Y9VcDudtMzS4HE7W1IP9sfZdCfZn04VBWZxPHuUHdpahfOpbo3xe
yfnP4fdKldZUH2spwHfYK3/axO2kA8o/biLO17dhws9fF2t1BTvWWfcM+Lem
3tuE+reNfbnTCP9CeGxFNPSZj6/Uw/POIT+gz3yS4eV8jjcsV17D8TE3d6UL
y5fepXcNrtK7BurOqG/zPqEcYlpivCk+GeWw7Gwd2FtTbZsPfB4zrPud4HgX
XeTT9hXyyeyJfBKH4D0JJp3wnoRbE/dAnjOO4sG7FA/epnxyccYxmJfOsWsh
7tstdS9DmJ1s7rvETk6D+2Sq1IbAfTKtLyapCb1P5h36vVu/YxxaUCP8nM4R
8nNeUl4xh/KKHQYegn1zm/NCyOd7Xa6Ge06qx41K4/iEG19NOT5n3DZfYePx
Jvwh4fLUt1xK+GGyJ4qU75UifCPZz0qynzXk1+kR7tj4Pt2UvUneAnx+WoL2
JoE9GSRr8kzhviC+UBBTWM/3u93tAkcI8Fdx6gPX32t+nE39/D7k5y9UxXgw
QRbrF5UvMR4cb4B6ZWutBPi66VaAH2ryvYPoexvPZ+UQ/5L/5vmspvoTQvNY
T/M4lfzVpvdLr/t//D5CmdpRR15f8xtYtVBEgC/LKkx2FuDWV5z0uB2eu/Ti
Jx5fXI7R8eDxxW3pJS25/VRYXn6P83GarHaa28P5e9C/jf2O/u3mGX6Ytzk7
sT2nr9fqUQD+1bHWnzj9zcUtJPh9MqePfczg9dDg+uOhvB5qkY3r5fYTXC9W
e3G9XKd7VwI6oj08dgntwJW352O5He72sXsQ318qDXq84fvLCytPzHvIp2Pc
GtkZzmG9tbvnyb93QMzLIP69PaInbtnB90e1WOjzPyRvBvfh52Q4w334oz1N
P3M8V+zBCY5f05Gczsffkt7FeF2K8hSZhuPJy8iw5HXMNrEeZ3kdUy0zmPE6
5ptb2Cd/ynEQ5iucLdEfS6V4Rx3zGNmemMe4eRXx02X4vRnxmA+cV4/+MDuB
/nCGHOa9j0/+iX2nL23BH6vudhjqrX4072k070a/eQ+i8VxnYx4vqDGPtKcn
vFey6PtFBY6/uzxiELczS4jekOhbkj7Lq1hC/UWlz2yov4TOE4X6C1PGeuK6
I/iOkoyrKNCHpeC8u97AeX8wF+d9I/XzuFA/jz7186ga4XtSpqvwPakkd3xP
qszWB+xzj1tFYJ+Vpx4dxfFRn0bDPU4WLWtGgH/bMYpx/C3dEz5gP+Yl9Ndu
F7que1ZNQj/KEesytXc0MV8xNgLwFlcGQX35dF066FvGZ1wXa9tgH0hK2XGg
X0H8FxB/RZJb0MDlgH/YsQHwapeBENcMoHf6hj9A+vZfkL73oflwTuFolxw4
p3BycA84p/Bm5ig4FyDzeZ0Bl3920jYJ7rdbyAyBusYtx2w4z37kkX3Lf3J/
cmN8Z0X7bCr1sa+jPvZ62heMyK7upn1h/ew7HcDuNTxeyv09R+O6BHe+nxJ/
W6J/RfQfnMxhf1cpmAn1C3XdpTnC9HbrB18Jbgek6pdn8j4B67Httwh7x+Rx
xkjAk+5/gfXSSasA4pfm+spsjOcBbvl+Lu47Q7IBHxWN+5HlZuxL2aboAXhz
7xQ0986aHMVlQykuC6C47AP1CylTH5oN9aF9onOgV3YjLjn/z+z/P333ti3N
eymdaxtI9wP0qbAE/9P/zRyIo0MltKD++KR+OOCGAeXglxbsGwzx9fpZuO6c
NuG6az+Z1h19bxyd3y+i8/vi77FOYb9JGfDgJXaAS1YPB/yLeznM49avsTCP
P+gdzHh6B1PUmt7BPCT5jNdnRbt2jOH12Tfzrs6zE+C9DHCddrPG/Uut+AjQ
77aaAHZ1sLw71Nd0uxVBP1XYNOS/KxfHaTkK7X/oIqzL/OwhDriBUnecR2ea
RysczzNXHI+Ii/Jcvj8Wli/153W9q3fdYnlf6BG658FYEfeFida4LxSoT9jL
cdHLe334uj6zUO8WX9cjq/F+vLkSq4G+g5cE2I2OD3vAenfuGAbrPfHhD7hv
2Zbyfisp75fbR/i8i4ShfPKNGeBblY4BHr0kCPbNoSckYN/81PqR0PsKJKf0
Btxx1mW8J9Z1PMxXO+oTKNuG9LGTyd8mPqtpHb0g+xB/QhntknIJ8KkLuA18
VhH9Uvrf0Wf/np43zVfvisd7HmR98J6Ho8eHgzz176HeHt6F+5Rd1g6gt63R
0+b4m27n8rl9W5ejVMvj2Y8GeF54xHI9oNe4HvlH69RlFeLSaqg/A9qh/syJ
mQv74NWfRtD3Hj3qB/S9S7JH0N+yXnsZ9Lf0vC0J/S2bVq+B/nzXUbuTuP6Y
aPWaCnpC/7ud5FxHcr5/7iG81zAuIfcOp9+0/nF/YeNM9ka7WtQZ7aquRx7M
S406niuforoI6CWU3wF9XGfkc2cm8rme+Wvduen+29w8NnfOIlq/G+BhRWdh
PPvP9/2jPNV3eg/uAb0H94LegwtYj+9DLdKndyo34TuVNsTHnPhIkx6a0ftB
yvR+ULjMn90fWOSPeig1FPWw8Kcz4PvzKO6eiXZj0Ys9Qvk4Uj5tE50Der6W
8paN7ziQPjj95p490/yFN40E+PmUxeIps0qZrejdjh53BXHrqUdp3N/eMtrK
jO/L5lfOq/H+veQ1DQ3c7i2JqhzH44tN5Z7xvgJcdvYO4H++/grw93WJgnXn
e+VRKezXS62cwI+6O7Ee+szvdoC8aGwrfPdwp50ynJdfo4PjrErCcV5uj3Jm
GqKXPwnwr2Nca2wE+J7TTw03x2WwtAlYL7CNwbqYsj7Wu/20fYfy8adNKQ/j
/Zk7l9h15fdNOVSegX3hi4M7xONfbs2H/sA+ftfA3vqfHg19I3kGT+F9ecXh
mnDuKbqXZDVfRwvlpS9A/JKPccHhVIwL+tvPw/39Is1jGq73bH/0/4Op33sD
9YG39cf10vh+tH/ju95UN/FYjv3et4YoAn7y/kLAfadjv03SQnxfafUpfF+p
E/XH7tiCfJKY8Hnv3LkF3O8h8vKDMsfHnVFTF+ZPbpTAfXyXFuZ/rudj/ieC
9iMpW6S36/ef88ON5zjef0P8gifq+SFrvNfIkPyo4+RHXaF7O33pfPqzBMTb
1CNe2aSfvz/p+flLZ2dwvDbP4ye35zq9X0wRdt/gUcJfNeZLKc6q9CozLl7+
jsl7qIk/zCtjLi42h3d7ZbNXZ/dB3tI69hnkLfuIHIa8pc2Sl5CnMu9TB3kq
6VGdoX4hF3cO7PwFia79Od66KhvuO5r34RL4yXe3DoM8WMZKlzyIO860hfvG
HSa0lIZ5fxAL/UtV1/SzPl6rYudWRBaU9i1lcsezXLJGZrAD1P85hu6/9d9M
+SKZz7Bf6Kx7Aee53j+eqs/xoaQnD0lPNmgJ15MHLbHvSEsR4yB5TX/AU/sy
wFfZtsc4qFIG8FZywYBnf+8A8VRQYCDEU3Kk52Gk5y9Jz8eJI24zAfGnZ3Fd
NHdfsfNe9Od9t5gDHrk7R+j4kymfs5Tqj1OPC//eQDrvvIzOO699iHgnere0
Jb1bmjRf+P51TQPj/d638LzDUAc877CC8g/5ZUjvpY/2TZf0vB3pee/aP4sL
ltG6SKG6fyb12zTX59O7A9qTo4/RP7dVsge85ULcpzIPoZ+/yg39/IcHE0L4
+aaJXkXL+LlOS9nTffi5zmt6q9GOvd4B9MMHM7D/KnTvxwtR/N/5A3B+Qx/i
ecAWnfE8oJFvJuzvQf029coV4HZ2/beNEuBKH9+dqBHg/WlfGEj7Qqwkyu3Z
WbMjPN81e+LjG7zuoDim1wbeP3wjrCfQnzIJB/4TDqsC//1VyOf6OrQ/qgpo
f/Y32u1UtNuLj6Hdfudsh3Ir3Qv4vP4m8F2KI5H/+EEXgX98yHDg34vuDzlM
cZ8VvUfZWx7tZ08ntJ+2m7Bfq4LqZf0uIn3GbaTvS3ILJLmVyKHc5hP/SccQ
77Yf6TdTfCdG+fNqiut30byfpHl/TP6MzA/kH9wZ8Qcav/a1Nq3rNd63sJ7w
RWd/xZvewzCfviv2AuIbb/yZPje+69SZ8OW/8Rtnq9mBXzFcXgzqtk72u6De
GlGPcZBkP7RjqfJox4yPWA0ZFCGIF/p9DKmQLGUeHbeuvSWewdQ8nH04/ex2
lyO5/dSU6Pvzr/0STf3bxvumzAjv/Jv8sD3Z7Q/Ut1+5SXheunom4pqfSf9t
UP/vzUwat1KrhDltLw6rGl7AnhiMa62/JqvZ/333Fv3eC/ZTcD0ahQOuQvqQ
RPqgOB71ofFe4tHE535jH6Pi/g88b+Ml9rw732c3Dj/alueF9hJ9WGPeieRg
ux3xFYtxfa3finHQ9Z5zDfn6PbHoeWu+fo/+vH+T56u1iU8N7e/K9L+v6nGc
1v0QfzMHx6kVgva2+okq4Ga98P6QF3f1oH9+/s5guLdwdYbnWo6fITtpS/0t
s0/+Z7+lUf+16H2fanfE5a0QNyY/XI788Gq6r945A8fZ8z76+TvsMS/aTwbp
Bzgi/Z5hv+pz03ty/mm/lv88xHOlUM6PQlFPJtP37qR9oSPtC6skxCAPsFRr
N/QHWueLwL2aOTl5BznubCATyuXmuSD5Hdf/6gtP4J6TO8Yrv/N5vxsnPZr7
V6Pabwf+llPCgX+PORfBTm7/iHI49BPlsF4S5+utiRja56+7wX6G276CvPfi
BLwHTL97HdrV1Z/Brvalezv7XcPxRybh+NuQX7GU/Ir+5FeM7o/5vZyPaOd7
WmC9yXM/6r/GToz7pFqGAe5DfsIjqvvEU/3uJ/kDJpcRj0tA/GYPmvcF5Cf8
wO86QHIeQ3r1nM7BiQxEfJEzzeP0X+e9aT+DJdnPGLKfa24Itw/N9p+0vq30
IaiK7QnTPr/4cwm7p7fj9IrEdJZnOKLBWVKgD2/f3tRfX8yOzEr8MrN3Cnsa
OSF67XRB3JQj7nOhSwm7W1BscexkKmvxJTrFruQx6+b8Ur23VDpzPZ0TvqC8
kG0MGLTGvsUjdv6OgvMitzTmMH1EQPL6QuY33HnSKYG/mtZ7hFVfgb9qZH41
tUw1g8W6tYA+tKgvH09zvdo6qXUO16uYCNQTNQvUkyTHHULzBv90H1E1Hqkr
rhHPuha02LlGNI3pOo4Yd0Gy8L/YmaFEP3NdLNx7Kf84zYaPc3F6uT4f59Tk
BUDvMWIh0C+89BboXyZvgfNT+aqDZDkefPVntz9533Cj94GwLumVrJV38qqo
D0Ws9/5xPl2eJzfLJ/UK9gmvKMF7RPd/wXtE48kfiCd/INFHeFyWOmPawNuc
j1XosSwzAZ/Cn1ekY5vvP1xpfhDi6KI2lhBHN/i+hbr2ebpfcTO9E5Etg3Y+
SMMe9uWPNyXw3ecMd9iXHx0rAvxJ8GDIM6d+Mvz8n/bTjrSPXKL15U3r6xLZ
7WMfOvhzfO62o3BPi9nqOrinZaYh2gH5FVh3XuSK9/ynXZkH71DYlmTC+601
5hfg/daF6X0gLtONuQl9IP1ESqEPRP8enq/xETkD52tss/B8TacvqLct2pK/
1wftwB2Ks5QpL/qNzquaS+F5urEP8TxdnWuUUL1trt+gOfrtJJ9uJJ8tZH/W
V54A/KdDLcrz9iqIy5Y9/QF9IylyBdA34jBoLbxLYh6KdfkbM7Dv5aCbDfCR
mtAA9BvGVwL9tYseQJ/d+L52Ou3LA3DfOUj3umhHkT+Qg+O5Q+f3h/9EfIEb
0t8ku3eG+sfOU/+YexfEL5kivj8P5SyRivO79ibWcTbFYh3Hnc7FDKdzMbJ0
Lqac5NOH1ntbyhs02oEfhA8heU4mXITkPKXRPhPe9B3bWf7iUHcOU5KAurPO
Y+2pvO4c+kFuzEjJ98y5fkrC/nUVbJ1RZagty2ffDya2Ftn3gkUVbg9dKPma
1dYVaBscKWZqX8dsOjz1hcC/m/a8bXkG62Zaczd0YzHrlLnS6WR5EfPo6bJY
+kY++1DzrHh76xwmtfd6p40TspiJ6uUWIa1yWPc9t0oGjCxk1lnlsE7nPhoN
+2nvvuKwz44YjPF7sjvG776qskL1aq3nFFin693PQL5u0aY90D+5Na0D+tXj
jwL/pYm1wF+f+HQlPraNfTKXL8B4jApPgN3IrPSA/NvssSGtOa5y5Ygu9ytm
qPTaxv3J3fLvoQ41eHs8nFObHPEEzqk19rm1Jf7TG/kHYT+8IbsIuObjUKH3
VYr9HA11mdWym6Eu8yJe9taf3G9c1gfxnqsQ9+2FuBTh3yn/bNSV/FjqjypN
QXxHX9R/vW1LYR8Rz3kL53CjRNfAPnJw/iSQg3bHXlCnuxp5Cupx4458g/xS
xYksyC89z07sDO/57pJK5P75tDWdb/H+imX+Mv32CvAvH7Eudtt5H9TFbqwr
hbrYaSVc76vaYx/OLdtluL5EAyAf9fnGFnj/rtOy1fC+uQTJYS2tl1xaR1vo
3h53urdnKN3b01jfWUZyG0P2vLl7Jr2oTqdJdbrwkSif5t55F6F4eRHFy/oU
L3uRnDVJzoXSyCfokQ3g9n7r0f5MHPBH95oGkj1ZQvZ2Au1Hw+TQz5yyCd9T
2Lo6BPeplWivMiJxP7o9Et9NayNBfixDPrdDcfzbNDH/1uEexq2B1/E+ijmU
j7pM+Si3hWT/aZw+NM4LJJ/Gd20qaL5EaPxOhB8i+vO/iVt3ZytZxvH1mJh1
5pPAT7hwRyzVlOu55OBnMhaC+Eh7tmb2uBI2o3jp/MSWaWzX8B/VtUfL2f25
k0d8tSxkRSJ5u8Y4p7MbhZ4Hl9wqYifvH9m0IzifxfbtHy+mkcOUfDyNb0gI
9Nx39l5Tx2LWtl73kF23FHZY5FZm0bwqNn04y4/TLmHPXAp6vu2cxtamP7W4
q1zGZtxdue5cTgFTVvpe31vpNZNqt6CDomo5C+qVW/NSvZAtfxbWru+PdDZh
Yei4nRrJ7GyOod/EjNcsP9umvOp1MdOk+MKB4gun55SH31kGdi9qlRr4J2eH
24B/0msV6lv3y5gfs3mJ+bHjo3IGfZ72gP0Yr19zyimVdY7RM3A9WsDC6R5R
d7pHtPUa5N/0HXa5P+xnGzRrFr5f9v0hrGvD9RuE3jPQ2C80mPDTv+E/TPu9
I8RH8fGLuJ3cVrNUg9tJ5az2Fzj+OKFbBcdnXPsq9H3k5vK6GnTurCKa9LMQ
8Uc3UM7T1mBccCYY44Jo4jOU+h4HUR91C3urL1sF+JwYu5MTBfo50izc+OS9
DBaQhnXVxdFWUFdNXtYR6qoTgrrsyhPga2JOtRsrwMMWdrFqHZfB5KRy4P2d
MJ1epfy7Xt44sJPzn2biUsXxjo6jPTkflZdfBvH9/U0ExgWnshbAeHSz38B4
nvpNWMztsGmQ+BXeb7zn1jQfNwE+XhLHv2oijp9dxvVe9wj9Q4NjBoAbdrqH
evL1BurJnvGQV4+Saw/3YCR9w7yHuSf2lS1pgX1lyx4/gLyHyfFsuDcgKN8L
7gEzM58C7/tcbHMG3vfprLIb3veJI3lqkjyNSZ4fC1D+lzNQ/hJhmMcY/HwM
9C9FD94K/UvKLwcN4/K0a+wLovmdQfYk4u5dwKVaG8H4J9hrwvgb+0X3kf73
Jv1fT/WgBqoHnadzJebUVzaW+sp8tyM+hOi1iT6F+nDuPAmCvveIAMlSLn9v
lyedeb930et1WyQ/v2MeOj0cQkZXsGJdx/rSwjz2yS7pgEeHfDbwrl2v1Fu5
TFdGUSb1QT4bKfEtp/WSEtZLfrpG9/EFTFQnt2egbhbrOaR+TMOpCpaYFLSr
x+1ClmgwpHeQXhpLTD9mwcdjfHetHJezwcm5ATxPIpndq8OYLoVs6vVgowGd
81nPUKl5y4bksRnaj6dcMKxiPRLK7Eb3K2EdHuXtvXs7lV2am2KWfiaPpex0
cnHxyGUxe9WLO1bkN7u+NuhOXr3wXiEzLt1i0mCQz86f27AtaUEui1dT+eFu
mcAipi1ZkDknjT1rd6jVWqNCNjZ1CfTJF6u/2c75zPcSacn1ue7Zo3COPwu2
+gTrWqXjac4/dsFNsDPjD90B/610V07Jf4ors38T5zZ3LuPmgH5f+XzJ12vI
cT8wpOM7Oe4H2n0qWDwwSBDPKLre/xhWwI6Zp73o8Ow1q9OaqdzJoZR5NZzS
mnO8gLU+lf7wQ7tMlhKfWsP5l3fdHQn76YtDm/7kngpHwjcRbkP6bLzTF/wu
mcpy6N/4XGMPdT39LQz2i65zPMFPTltsBn7yQzu8lyZ2gh3ITTGqL8gtSisj
bqYAD5kspfB6Vinb9WB8zLG7Gez686WteJ29/4VVcZz+RTv783z8D5XuQ/wV
52EC8ZeSWFd41+xAqVkAl5t68dSp3N9bdbhMlPfTWgSUQ9x6a/hoyO89SdVI
Aj+h4h2M8/DbybCvdWnvC/vafIZ1ikmxWKfYIof3iaVRvmsN5btUatBeFb1v
BXw8a7/But7RKg/uTYpqj3Yj5BHapV0eaJe67VgE92Dvtyq2h/de3SyXQH8j
5Yc1KD/ckvLDaTOxzvLOAesstdYqkA+0p7zch0gcj8kD4fPoSXg04e2buZ+8
8TzjXKqzjKI6y+d95Ler7zw7T/sZOxvx3OF7bTr7rHvM9+qlImbk+kPB43wZ
k5H4pLNeVBB3mYk+KT6WwaojHCsG7qxidyy6tqkIKGED17+SevsjjTXsf73I
3KKErfA1KV46toB127tB65RhFlNfFqJy9XkeM/E3uVd5Ipc9PSNqNTQ7n60a
1b3kcWUlWzpYsaaVQjFb7mS2P3LWK3bH+mn36TNeMMkJtxZ0fyOwL3nay603
F7PomPBVfPzhzgNncDlbrtQQ5XIufKf5Yvm+Ymb+Muur0Yd8dkvM4LG0TjZb
pnzfWe9sOWsr3u/alEWFLP+i0q379ulM/YLKqIJNKcxNLnJq39OZzFU7qov0
iGJ2ezB7PmZoPPNysHYyFkljj3prpKuKFbKdqxfs5v97YlSeJ/yv1PWL/H/P
zIqC+OX9Dx2I48w37YV3SSyp7jme6p4BtY11HMSb3tuQ1RXPuf9IlwB82o7e
gCe0xHvX9c47AT5acwz48wEaSwAvvGkDeJuMFm/+Ou9N864VupO3Z09PYXcT
+/T+eDCTObgqJpzSLGZLnW11u8UUsIbiBCO78jwWZJ15a6tnHht68g2cb9IZ
GZXCv/fc5i1z/o7/1rQvlxH+tdEPJLzPDFHAA5a6Yt9dp2cQX+fcwfXl7IT7
svlT9IvijiA+oT/iffKxvyi6Sgbumx1WHTuN4/c8VLdBv/H2lhWXBPjJJV9a
Jwj8pdyS00Hl9zNYyRaMU7xfY5wS7YdxSou5U15wfHarAbocb2Fx257zCZPC
93NFdDvAOD1lz8P50PYhVWc5vvnJxGwunw/FCis53o/Wr1zj+o2lPEyQbSzH
N2q6DuC417ACac5fm/pmv9P7KXFzkb7D5smnOF5vGvCC8x9ioWfA8bN0v6tD
FdIvNse47xPFWde0Ed8QiXZscBDiE2LQ/qgsxPpvtwLE95thHaH8NfZlaUzR
g/fF3s46253j40w+1wKfT1GQP9TcoQt9HS023IO+jnbkn1SQf/X9N/cyrY6I
HHf4SBWzMVcy+vmyhLHXF9VPbExn4onPOx5hhcxd0Sg4Sjaf/Wi5U2Xst1wW
6be9ot73BTMfP/Zjuy6vWb/F4/Mr/IvZadnzrd22VzJjh7jkgqgitq2tvcKY
N8lsXmVC1flLVeyeQ7GnSpdStu6WuOe03hms9ETGoaEHS5maflmRbnABm3oi
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
yDTZc7CPHJ+K9FlZSB+rTH0+W+iegQzsrwhWwTxeOOWN99H5rGQ6n/V4+3G4
T9VgyTq4T3XT9G93OV4bMRXyhIlZih/hfc8OdQGQP/dDP9Y5CP3Ye26HfvHb
m/Yba1De+A3157QNE37Pthid13j3gfoZlvzZeeHaePFZy0SfsMhx4W+ed///
2vvysJ675n9LZEl2Egope0LIkkO6kz1JsmdJKZJ9T1Iha4REUkLWCiWF7Gui
Xat2lZJkTfT7nJnpup7H9av75qlvn7rf/dfrmut8zvucmTkzc+bMRLNNao/u
73mfwlScziiOrJ3Mog9d29LB6DW77NPX2KF/ErPL1qsZERLHPM5KX7rVP4GF
GCqpmtZPYXLPnSZYmWSy1Kkumm/HpjA1kwMKatej2TnD+KKDt3LZloOH+2/p
l8F0p+pfNzd9xcLdtULWPRP5j4M73gmYnMHG3bJ2mhbwil078Np9sMhPk/ny
0fLs2XgWnnO6zwFLkX1hu23braRkpt3tye6FNZKYxyNprRsLXzOVLoNfxy1K
Yofn7vQZ/y2Rxbw3XxC0N4lpm9YN7NMtl+26WMOh7q00Nu3bdD3V4Ajm2CHZ
Jbjnaybdqe3OCwsSmfr9uZOkpZLZ0PYL1/H1ycnJWwzvcXybTeX+mv+HweYc
96glMQnqpSSFN+W45I+Pmzlu0m7KJo7PCgjczPH7G+eqcP1zZ8aCAVz/KLru
fQD12POdO3E8qrigOcfbNupiwfEvajUGgr7qm6/F8YeFzu84Pknj8TCOu482
ms7xHkdj5Lh+U21xFO5tDfQ/wr3t8E13znL9eU8lQpvP52b7rQX8Xtt67vtu
XE+GXP9ooD9MZHe8b+jZ+FMcU7n/09K1ZSprknKvVi3ZXFZsMF2zsVMam6+1
c42UeQR7OrpDI5mFoWyc0bPVrexi2BzjdRGpP9LY2CWDvvt+zGAfOihKaDxJ
Zjapyq2nmsewVxa3H105msoKopa7NjuWxD5L1PzxflYC+2T76GaiyF++sTy1
9TWRv2w/rF7xgseRbM+Zp3prInNYgJaZw9WcVFZPw7dR6wdhbOC9ZHgnktzw
FNSLUNimGVEW35bUY5lEeB26Nx/tg3ItPQfj84aWeG9V+yXir88j/noo5pl4
mKM+t1BDfb5v1BLArytkwz2R0o/rnTm+ISFRjuvb0vo770sshvjJMB0LuAff
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
YrXPifyXTtqY59/rVSegl9w1GeVUY40H79v18ImzwVcRvVx/7+/zRPgYE2mg
3+fpCPv+M+cD+B1Nn+F5Ye2K59cAOYzfSjvjPAs98Lu2d8TvKqlbtZDWQY3W
YSzVg22+E3HThf/tV6oR/SNaT9m9eM4e3oH3+2bnXP+//k5JfDXz87BzsJ6N
pN/w9TzxKMeW4xGDagZxfjC5WuDM80+2LYwYxPNPbmqiv+k1Ef3N/U08YJwn
oduAzyeoaAKfr01uVWbcTIPqN24aiutgLIfnY1PJQyB31r7GIHcD9tcDey/N
cxrEJ5s8fakK9vamB1oQr1iL74bqTLoK40yedAP0Uh/KEw5dhr/7uEv5+k2/
Wy/0euMT8J5d6VmNURzfODdpBZ//465YV+fpDqzfHlW0BujtVZJNOK7icnIk
35dOhmfel9VfoI6ERke+X2kXDzbhfo3u5mBjnj9m4cYgz3bptcaHOH1W5vuB
f5I/c+sz1eeRonhaT4xXtPqAeOOaiCs0ofpC52aDHTth4qwaHJ841ec+2EsU
T+hCdXVMqa7O5X73Mvn8m58yqM37fVgNDxjK+30MTFwC7xznTqwN7xy3K5+F
OnUj6bywpPPClPo4tKe69/JU9/4y9d07meU+n+N5b7cN4OuppKH4kq+nGn1v
CumNAjo3h2z/AOeg2dcJcA4OzWgG+fwGkjeAvq+fFtyTBhh2gfvx0urFvW7w
FPStRNAiiJP/jG8N7+8G53gAvckHKRinprwT6KXGG3sq8/vZ7zGvVfj9rFLN
UXLHuT057SLagRKdgN7cMBjoQ7aOg7jQjFwvSY4bLYiNAv9xizGs2zWTAqjv
NyZoS5l1YkvrN5d7EvfXUx31mH0PtMOvHlZ6znEZ+UnDOL7nwpTZfHzn0ZeA
/tWMzrg+ymEwT32yfy4F4Pjr48uO55eXnJaGS9F9+mq6T9+8p+y8WWWa/xia
v3UcxcGOPIU6nHoKb4/DvrfPHF+WfKX4SYCcNlxS1JjLafwSnYVcTqPHucsn
5UUwxcn1FA4+i2UNwgtmLZZOYx6x7baGT85lFg/V6hztms6++Gx+aBsRyWrv
8ChSrx3Dkmp1eK4xOJ7Vm2DRJyguhent00utr5TGZn+/ss47OIlpTR73cWxg
PDNojPa86tMU9IP29y7Tnv+1/29ByXlB+S2y1EcghPJbIqjutIk1xXN0EE+U
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
4sMP4hbfE/ihfOWroscvDf9/YWJvGQ==
    "]],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultColorFunction" -> 
    "M10DefaultDensityGradient"},
  PlotRange->{{-3., 3.}, {-3., 3.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7008499735888433`*^9, {3.700850101519949*^9, 3.7008501369199753`*^9}, 
   3.7008502008226852`*^9, 3.700850436976439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some Examples of ComplexExpand", "Subchapter",
 CellChangeTimes->{{3.701537196402646*^9, 3.701537201370669*^9}}],

Cell["\<\
Examples of finding the imaginary and real part of the equation\
\>", "Text",
 CellChangeTimes->{{3.7008484226304626`*^9, 3.70084843182917*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"I", " ", "y"}]}], ")"}], "^", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.700848394305111*^9, 3.700848394617581*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "6"], "-", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "4"]}], "-", 
  SuperscriptBox["y", "6"], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"6", " ", 
      SuperscriptBox["x", "5"], " ", "y"}], "-", 
     RowBox[{"20", " ", 
      SuperscriptBox["x", "3"], " ", 
      SuperscriptBox["y", "3"]}], "+", 
     RowBox[{"6", " ", "x", " ", 
      SuperscriptBox["y", "5"]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.700848394988316*^9, 3.700848435008684*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", 
  RowBox[{"Re", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", 
      RowBox[{"I", " ", "y"}]}], ")"}], "^", "6"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.700848309574666*^9, 3.700848344213517*^9}, {
  3.700848382968699*^9, 3.700848410809473*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "6"], "-", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "4"], " ", 
   SuperscriptBox["y", "2"]}], "+", 
  RowBox[{"15", " ", 
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "4"]}], "-", 
  SuperscriptBox["y", "6"]}]], "Output",
 CellChangeTimes->{{3.700848319502613*^9, 3.700848347018759*^9}, {
  3.700848386518732*^9, 3.700848435661255*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
  RowBox[{"Re", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Log", "@", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c2", " ", 
        RowBox[{"(", 
         RowBox[{"nr", "+", 
          RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"c1", 
       RowBox[{"(", 
        RowBox[{"nr", "+", 
         RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
  RowBox[{"Im", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Log", "@", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c2", " ", 
        RowBox[{"(", 
         RowBox[{"nr", "+", 
          RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"c1", 
       RowBox[{"(", 
        RowBox[{"nr", "+", 
         RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.700848455878867*^9, 3.7008484791175127`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"c1", " ", "ni", " ", 
     RowBox[{"Arg", "[", 
      RowBox[{"1", "-", 
       RowBox[{"c2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[ImaginaryI]", " ", "ni"}], "+", "nr"}], ")"}]}]}], 
      "]"}]}], 
    RowBox[{
     RowBox[{
      SuperscriptBox["c1", "2"], " ", 
      SuperscriptBox["ni", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"Log", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["c2", "2"], " ", 
      SuperscriptBox["ni", "2"]}], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"c2", " ", "nr"}]}], ")"}], "2"]}], "]"}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}], ")"}]}]], "-", 
  FractionBox[
   RowBox[{"c1", " ", "nr", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c2", " ", "nr"}]}], ")"}], "2"]}], "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.700848465607154*^9, 3.700848479506681*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Arg", "[", 
    RowBox[{"1", "-", 
     RowBox[{"c2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "ni"}], "+", "nr"}], ")"}]}]}], "]"}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["c1", "2"], " ", 
     SuperscriptBox["ni", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"c1", " ", "nr", " ", 
    RowBox[{"Arg", "[", 
     RowBox[{"1", "-", 
      RowBox[{"c2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "ni"}], "+", "nr"}], ")"}]}]}], 
     "]"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["c1", "2"], " ", 
     SuperscriptBox["ni", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"c1", " ", "ni", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c2", " ", "nr"}]}], ")"}], "2"]}], "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.700848465607154*^9, 3.700848479513563*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ComplexExpand", "[", "\[IndentingNewLine]", 
  RowBox[{"Im", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Log", "@", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c2", " ", 
        RowBox[{"(", 
         RowBox[{"nr", "+", 
          RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"c1", 
       RowBox[{"(", 
        RowBox[{"nr", "+", 
         RowBox[{"I", " ", "ni"}]}], ")"}]}]}], ")"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7008487153190393`*^9, 3.7008487198327103`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"Arg", "[", 
    RowBox[{"1", "-", 
     RowBox[{"c2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[ImaginaryI]", " ", "ni"}], "+", "nr"}], ")"}]}]}], "]"}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["c1", "2"], " ", 
     SuperscriptBox["ni", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}]], "-", 
  FractionBox[
   RowBox[{"c1", " ", "nr", " ", 
    RowBox[{"Arg", "[", 
     RowBox[{"1", "-", 
      RowBox[{"c2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "ni"}], "+", "nr"}], ")"}]}]}], 
     "]"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox["c1", "2"], " ", 
     SuperscriptBox["ni", "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{"c1", " ", "ni", " ", 
    RowBox[{"Log", "[", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c2", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c2", " ", "nr"}]}], ")"}], "2"]}], "]"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c1", "2"], " ", 
       SuperscriptBox["ni", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"c1", " ", "nr"}]}], ")"}], "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.700848716042966*^9, 3.700848720563136*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]]
},
WindowSize->{1278, 1395},
WindowMargins->{{-2556, Automatic}, {Automatic, 0}},
Magnification:>1.5 Inherited,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 111, 1, 96, "Chapter"],
Cell[CellGroupData[{
Cell[716, 27, 99, 2, 43, "Input"],
Cell[818, 31, 329, 5, 43, "Output"]
}, Open  ]],
Cell[1162, 39, 334, 6, 69, "Input"],
Cell[CellGroupData[{
Cell[1521, 49, 416, 14, 43, "Input"],
Cell[1940, 65, 540, 16, 43, "Output"]
}, Open  ]],
Cell[2495, 84, 2441, 69, 219, "Input"],
Cell[4939, 155, 144, 2, 43, "Input"],
Cell[CellGroupData[{
Cell[5108, 161, 104, 1, 91, "Subchapter"],
Cell[5215, 164, 3227, 77, 494, "Input"],
Cell[CellGroupData[{
Cell[8467, 245, 246, 5, 43, "Input"],
Cell[8716, 252, 17248, 393, 291, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26001, 650, 1085, 29, 69, "Input"],
Cell[27089, 681, 959, 17, 84, "Message"],
Cell[28051, 700, 489, 10, 43, "Output"],
Cell[28543, 712, 506, 10, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29086, 727, 853, 21, 69, "Input"],
Cell[29942, 750, 733, 14, 59, "Message"],
Cell[30678, 766, 427, 10, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31142, 781, 1043, 28, 69, "Input"],
Cell[32188, 811, 506, 11, 50, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32755, 829, 111, 1, 96, "Chapter"],
Cell[32869, 832, 99, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[32993, 837, 652, 21, 69, "Input"],
Cell[33648, 860, 394, 10, 43, "Output"],
Cell[34045, 872, 545, 15, 43, "Output"]
}, Open  ]],
Cell[34605, 890, 110, 1, 46, "Text"],
Cell[34718, 893, 1547, 43, 219, "Input"],
Cell[CellGroupData[{
Cell[36290, 940, 1558, 43, 219, "Input"],
Cell[37851, 985, 767, 15, 84, "Message"],
Cell[38621, 1002, 764, 15, 84, "Message"],
Cell[39388, 1019, 767, 15, 84, "Message"],
Cell[40158, 1036, 609, 13, 34, "Message"],
Cell[40770, 1051, 2689, 85, 123, "Output"]
}, Open  ]],
Cell[43474, 1139, 70, 1, 43, "Input"],
Cell[43547, 1142, 223, 3, 46, "Text"],
Cell[43773, 1147, 1036, 29, 94, "Input"],
Cell[44812, 1178, 144, 1, 46, "Text"],
Cell[44959, 1181, 706, 21, 69, "Input"],
Cell[CellGroupData[{
Cell[45690, 1206, 95, 1, 95, "Section"],
Cell[45788, 1209, 102, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[45915, 1214, 612, 14, 119, "Input"],
Cell[46530, 1230, 99, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46666, 1236, 1428, 37, 194, "Input"],
Cell[48097, 1275, 763, 15, 84, "Message"],
Cell[48863, 1292, 765, 15, 84, "Message"],
Cell[49631, 1309, 764, 15, 84, "Message"],
Cell[50398, 1326, 611, 13, 34, "Message"],
Cell[51012, 1341, 666, 13, 34, "Message"],
Cell[51681, 1356, 574, 12, 34, "Message"]
}, Open  ]],
Cell[52270, 1371, 196, 4, 46, "Text"],
Cell[CellGroupData[{
Cell[52491, 1379, 2913, 93, 244, "Input"],
Cell[55407, 1474, 2420, 51, 387, "Output"],
Cell[57830, 1527, 2425, 51, 397, "Output"]
}, Open  ]],
Cell[60270, 1581, 106, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[60401, 1586, 1260, 33, 119, "Input"],
Cell[61664, 1621, 731, 14, 58, "Message"],
Cell[62398, 1637, 971, 18, 112, "Message"],
Cell[63372, 1657, 544, 14, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63953, 1676, 1662, 41, 194, "Input"],
Cell[65618, 1719, 737, 14, 84, "Message"],
Cell[66358, 1735, 735, 14, 84, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67130, 1754, 1271, 32, 119, "Input"],
Cell[68404, 1788, 778, 15, 34, "Message"],
Cell[69185, 1805, 1051, 19, 84, "Message"],
Cell[70239, 1826, 524, 13, 50, "Output"]
}, Open  ]],
Cell[70778, 1842, 109, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[70912, 1847, 937, 28, 94, "Input"],
Cell[71852, 1877, 2185, 48, 385, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74074, 1930, 1552, 47, 119, "Input"],
Cell[75629, 1979, 2290, 50, 376, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77956, 2034, 1480, 46, 119, "Input"],
Cell[79439, 2082, 2132, 46, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81608, 2133, 5116, 159, 394, "Input"],
Cell[86727, 2294, 759, 15, 34, "Message"],
Cell[87489, 2311, 757, 15, 34, "Message"],
Cell[88249, 2328, 757, 15, 34, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89043, 2348, 231, 5, 43, "Input"],
Cell[89277, 2355, 149, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89463, 2362, 229, 5, 43, "Input"],
Cell[89695, 2369, 148, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89880, 2376, 237, 5, 43, "Input"],
Cell[90120, 2383, 201, 3, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90358, 2391, 237, 5, 43, "Input"],
Cell[90598, 2398, 204, 3, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90851, 2407, 94, 1, 95, "Section"],
Cell[90948, 2410, 103, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[91076, 2415, 1797, 42, 194, "Input"],
Cell[92876, 2459, 687, 13, 84, "Message"],
Cell[93566, 2474, 688, 13, 84, "Message"],
Cell[94257, 2489, 688, 13, 84, "Message"],
Cell[94948, 2504, 534, 11, 34, "Message"],
Cell[95485, 2517, 79, 1, 43, "Output"]
}, Open  ]],
Cell[95579, 2521, 1375, 36, 194, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96991, 2562, 101, 1, 95, "Section"],
Cell[97095, 2565, 162, 2, 46, "Text"],
Cell[CellGroupData[{
Cell[97282, 2571, 1601, 48, 119, "Input"],
Cell[98886, 2621, 465, 10, 34, "Message"],
Cell[99354, 2633, 462, 10, 34, "Message"],
Cell[99819, 2645, 463, 10, 34, "Message"],
Cell[100285, 2657, 530, 11, 34, "Message"],
Cell[100818, 2670, 662, 14, 69, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101517, 2689, 918, 26, 119, "Input"],
Cell[102438, 2717, 1729, 28, 175, "Message"],
Cell[104170, 2747, 817, 15, 84, "Message"],
Cell[104990, 2764, 547, 11, 34, "Message"],
Cell[105540, 2777, 345, 10, 43, "Output"]
}, Open  ]],
Cell[105900, 2790, 103, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[106028, 2795, 986, 29, 94, "Input"],
Cell[107017, 2826, 13645, 236, 388, "Output"]
}, Open  ]],
Cell[120677, 3065, 97, 1, 46, "Text"],
Cell[CellGroupData[{
Cell[120799, 3070, 1471, 43, 94, "Input"],
Cell[122273, 3115, 20303, 401, 405, "Output"]
}, Open  ]],
Cell[142591, 3519, 1416, 42, 69, "Input"],
Cell[144010, 3563, 1288, 40, 69, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145335, 3608, 107, 1, 95, "Section"],
Cell[CellGroupData[{
Cell[145467, 3613, 102, 1, 65, "Subsection"],
Cell[CellGroupData[{
Cell[145594, 3618, 1535, 39, 194, "Input"],
Cell[147132, 3659, 659, 12, 59, "Message"]
}, Open  ]],
Cell[147806, 3674, 1501, 38, 194, "Input"],
Cell[149310, 3714, 1177, 35, 119, "Input"],
Cell[CellGroupData[{
Cell[150512, 3753, 2688, 72, 219, "Input"],
Cell[153203, 3827, 9627, 252, 283, "Output"]
}, Open  ]],
Cell[162845, 4082, 97, 1, 46, "Text"],
Cell[162945, 4085, 1226, 36, 119, "Input"],
Cell[CellGroupData[{
Cell[164196, 4125, 1412, 39, 94, "Input"],
Cell[165611, 4166, 18091, 351, 405, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183739, 4522, 2639, 71, 219, "Input"],
Cell[186381, 4595, 10390, 267, 469, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[196820, 4868, 98, 1, 65, "Subsection"],
Cell[196921, 4871, 1508, 36, 194, "Input"],
Cell[198432, 4909, 1190, 31, 194, "Input"],
Cell[199625, 4942, 1159, 35, 119, "Input"],
Cell[CellGroupData[{
Cell[200809, 4981, 255, 5, 69, "Input"],
Cell[201067, 4988, 140, 2, 43, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201268, 4997, 96, 1, 95, "Section"],
Cell[CellGroupData[{
Cell[201389, 5002, 516, 13, 69, "Input"],
Cell[201908, 5017, 170, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202115, 5024, 541, 13, 69, "Input"],
Cell[202659, 5039, 168, 2, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202864, 5046, 5386, 145, 494, "Input"],
Cell[208253, 5193, 52354, 944, 575, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260644, 6142, 1413, 45, 119, "Input"],
Cell[262060, 6189, 96, 1, 43, "Output"],
Cell[262159, 6192, 94, 1, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262290, 6198, 6133, 161, 544, "Input"],
Cell[268426, 6361, 38228, 711, 454, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[306715, 7079, 89, 1, 96, "Chapter"],
Cell[306807, 7082, 95, 1, 154, "Text"],
Cell[306905, 7085, 1484, 51, 474, "Input"],
Cell[308392, 7138, 1022, 24, 946, "Input"],
Cell[309417, 7164, 443, 11, 150, "Input"],
Cell[CellGroupData[{
Cell[309885, 7179, 625, 16, 150, "Input"],
Cell[310513, 7197, 381, 9, 175, "Output"]
}, Open  ]],
Cell[310909, 7209, 98, 1, 154, "Text"],
Cell[311010, 7212, 1378, 35, 946, "Input"],
Cell[312391, 7249, 767, 22, 238, "Input"],
Cell[CellGroupData[{
Cell[313183, 7275, 248, 7, 150, "Input"],
Cell[313434, 7284, 155, 4, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313626, 7293, 1181, 29, 414, "Input"],
Cell[314810, 7324, 677, 12, 121, "Message"],
Cell[315490, 7338, 852, 13, 208, "Message"],
Cell[316345, 7353, 13346, 424, 4050, "Output"]
}, Open  ]],
Cell[329706, 7780, 313, 7, 357, "Text"],
Cell[CellGroupData[{
Cell[330044, 7791, 1107, 30, 769, "Input"],
Cell[331154, 7823, 754, 14, 297, "Message"],
Cell[331911, 7839, 754, 14, 297, "Message"],
Cell[332668, 7855, 752, 14, 297, "Message"],
Cell[333423, 7871, 596, 12, 121, "Message"],
Cell[334022, 7885, 561, 11, 121, "Message"],
Cell[334586, 7898, 561, 11, 121, "Message"],
Cell[335150, 7911, 561, 11, 121, "Message"],
Cell[335714, 7924, 598, 12, 121, "Message"],
Cell[336315, 7938, 175662, 2894, 1972, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512014, 10837, 118, 1, 325, "Subchapter"],
Cell[512135, 10840, 154, 3, 154, "Text"],
Cell[CellGroupData[{
Cell[512314, 10847, 230, 6, 150, "Input"],
Cell[512547, 10855, 675, 20, 175, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[513259, 10880, 312, 8, 150, "Input"],
Cell[513574, 10890, 401, 11, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[514012, 10906, 1232, 36, 946, "Input"],
Cell[515247, 10944, 1776, 61, 289, "Output"],
Cell[517026, 11007, 1604, 55, 289, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518667, 11067, 649, 18, 505, "Input"],
Cell[519319, 11087, 1604, 55, 289, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}
]
*)

