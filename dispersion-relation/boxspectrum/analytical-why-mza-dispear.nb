(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    640320,      12569]
NotebookOptionsPosition[    637119,      12459]
NotebookOutlinePosition[    637500,      12476]
CellTagsIndexPosition[    637457,      12473]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"SetDirectory", "@", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input"],

Cell[BoxData["\<\"/Users/leima/github/neuphysics/codebase/mma/dispersion-\
relation/boxspectrum\"\>"], "Output",
 CellChangeTimes->{
  3.696615260348274*^9, 3.6966979326181507`*^9, 3.696875605266644*^9, 
   3.697245563722645*^9, 3.697246283559779*^9, 3.69739266381382*^9, 
   3.6974738489309273`*^9, 3.697814133264941*^9, 3.6979190995005417`*^9, 
   3.6979195781711073`*^9, 3.697921348000804*^9, 3.697921747747342*^9, 
   3.6979232444461308`*^9, 3.6985834272581453`*^9, 3.698602334417652*^9, 
   3.6992042585180597`*^9, 3.699227216071806*^9, 3.6997033528567133`*^9, 
   3.7008505678568974`*^9, 3.700917121452846*^9, 3.701001933000463*^9, 
   3.701085857125153*^9, 3.701448680119714*^9, 3.7020392573781567`*^9, 
   3.7034218669305773`*^9, 3.703421934567877*^9, 3.703519865374112*^9, 
   3.7036064851745043`*^9, {3.703875981761916*^9, 3.7038760095716867`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../../neupackage/mma/dispersion-relation.wl\>\"",
   "]"}]], "Input",
 CellChangeTimes->{{3.696615294555633*^9, 3.696615315490549*^9}, {
  3.703875986386854*^9, 3.7038759866999702`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spectWC1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectWC2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectWC3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", "0.1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectWC4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7034232459978952`*^9, 3.703423248762385*^9}, {
  3.703450801033053*^9, 3.703450830209505*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"spectC1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", 
       RowBox[{"-", "0.1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectC2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectC3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectC4", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", 
       RowBox[{"-", "1.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.703421687901387*^9, 3.703421697285653*^9}, {
   3.7034218806506863`*^9, 3.703421939586574*^9}, {3.703422182382547*^9, 
   3.7034221830845137`*^9}, 3.703423239388588*^9, {3.7034509203539143`*^9, 
   3.70345094667286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"spectAbs", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c1", ",", "c0"}], "}"}], ",", "g1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c0", ",", "c2"}], "}"}], ",", "g2"}], "}"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectAbs2", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "0.3"}]}], "}"}], ",", "g1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.3"}], ",", "1"}], "}"}], ",", "1"}], "}"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7038753947581253`*^9, 3.7038754177165937`*^9}, {
  3.703875457572713*^9, 3.703875464656848*^9}, {3.703878466440075*^9, 
  3.703878496478696*^9}, {3.703891955080809*^9, 3.703891955691021*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c1", ",", "c0"}], "}"}], ",", "g1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"c0", ",", "c2"}], "}"}], ",", "g2"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.703875418851775*^9, 3.7038754657711067`*^9, {3.703875993617347*^9, 
   3.7038760115311527`*^9}, 3.7038760889768047`*^9, {3.703878491592464*^9, 
   3.703878502377632*^9}, 3.7038930060668716`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqn", "=", 
   RowBox[{
    RowBox[{"ConAxialSymOmegaNMZASQRT", "[", 
     RowBox[{"n", ",", "spectAbs"}], "]"}], "==", "0"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.703875385232992*^9, 3.703875390337069*^9}, {
   3.70387546980831*^9, 3.703875476927063*^9}, {3.7038757106743793`*^9, 
   3.703875723008153*^9}, {3.703875959212266*^9, 3.7038759631294823`*^9}, 
   3.703875999618231*^9, {3.7038760921657753`*^9, 3.703876121702652*^9}, {
   3.703876286616683*^9, 3.703876324420804*^9}, {3.703893077988064*^9, 
   3.7038930809561777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"eqn", ",", "g1"}], "]"}]], "Input",
 CellChangeTimes->{{3.703876298888501*^9, 3.703876309677285*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g1", "\[Rule]", 
     FractionBox[
      RowBox[{"g2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "c0", " ", "n"}], "-", 
         RowBox[{"2", " ", "c2", " ", "n"}], "+", 
         RowBox[{"4", " ", "c0", " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["c0", "2"], " ", 
          SuperscriptBox["n", "2"]}], "-", 
         RowBox[{"4", " ", "c2", " ", 
          SuperscriptBox["n", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["c2", "2"], " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"c0", " ", "n"}]}], 
            RowBox[{"1", "-", 
             RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c2", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}], "-", 
         RowBox[{"4", " ", "n", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c2", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "c0"}], "+", 
         SuperscriptBox["c0", "2"], "-", 
         RowBox[{"4", " ", "c1"}], "-", 
         SuperscriptBox["c1", "2"], "+", 
         FractionBox[
          RowBox[{"2", " ", "c0"}], "n"], "-", 
         FractionBox[
          RowBox[{"2", " ", "c1"}], "n"], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"c1", " ", "n"}]}], 
            RowBox[{"1", "-", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c0", " ", "n"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c1", " ", "n"}]}]], "]"}]}], 
          SuperscriptBox["n", "2"]], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c0", " ", "n"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c1", " ", "n"}]}]], "]"}]}], "n"]}], ")"}]}]]}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"g1", "\[Rule]", 
     FractionBox[
      RowBox[{"g2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "c0", " ", "n"}], "-", 
         RowBox[{"2", " ", "c2", " ", "n"}], "-", 
         RowBox[{"4", " ", "c0", " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["c0", "2"], " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{"4", " ", "c2", " ", 
          SuperscriptBox["n", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["c2", "2"], " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"c0", " ", "n"}]}], 
            RowBox[{"1", "-", 
             RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c2", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}], "+", 
         RowBox[{"4", " ", "n", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c2", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}], 
      RowBox[{
       SuperscriptBox["n", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", "c0"}], "+", 
         SuperscriptBox["c0", "2"], "+", 
         RowBox[{"4", " ", "c1"}], "-", 
         SuperscriptBox["c1", "2"], "+", 
         FractionBox[
          RowBox[{"2", " ", "c0"}], "n"], "-", 
         FractionBox[
          RowBox[{"2", " ", "c1"}], "n"], "-", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{"1", "-", 
             RowBox[{"c1", " ", "n"}]}], 
            RowBox[{"1", "-", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}], "+", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c0", " ", "n"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c1", " ", "n"}]}]], "]"}]}], 
          SuperscriptBox["n", "2"]], "-", 
         FractionBox[
          RowBox[{"4", " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c0", " ", "n"}]}], 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"c1", " ", "n"}]}]], "]"}]}], "n"]}], ")"}]}]]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.703876311752461*^9, 3.7038763265797567`*^9}, 
   3.70389308226661*^9, 3.703893127793571*^9}]
}, Open  ]],

Cell["Define the function under the square root", "Text",
 CellChangeTimes->{{3.7038774618073063`*^9, 3.7038774729595213`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reduce", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ConAxialSymOmegaNMZASQRT", "[", 
     RowBox[{"n", ",", "spectAbs2"}], "]"}], "==", "0"}], ",", "g1"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.703878708790658*^9, 3.703878710932992*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.703878755761682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"spectG1", "[", "n_", "]"}], "=", 
  RowBox[{"g1", "/.", 
   RowBox[{"Solve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"ConAxialSymOmegaNMZASQRT", "[", 
       RowBox[{"n", ",", "spectAbs2"}], "]"}], "==", "0"}], ",", "g1"}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.703878428760572*^9, 3.703878429903512*^9}, {
  3.703878511516471*^9, 3.70387855363877*^9}, {3.7038786117130737`*^9, 
  3.7038786124458237`*^9}, {3.703878696886868*^9, 3.703878698751622*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.703878519494677*^9, 3.703878554715971*^9}, 
   3.7038787033831673`*^9, 3.703893088016447*^9, 3.703893130616879*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"260.`", " ", "n"}], "+", 
     RowBox[{"611.`", " ", 
      SuperscriptBox["n", "2"]}], "-", 
     RowBox[{"200.`", " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.3`", " ", "n"}]}], 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
     RowBox[{"200.`", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "n"}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
     RowBox[{"400.`", " ", "n", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "n"}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "140.`"}], " ", "n"}], "-", 
     RowBox[{"189.`", " ", 
      SuperscriptBox["n", "2"]}], "-", 
     RowBox[{"200.`", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "-", 
     RowBox[{"400.`", " ", "n", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
     RowBox[{"200.`", " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}], 
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"260.`", " ", "n"}], "-", 
     RowBox[{"429.`", " ", 
      SuperscriptBox["n", "2"]}], "-", 
     RowBox[{"200.`", " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.3`", " ", "n"}]}], 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
     RowBox[{"200.`", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "n"}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "-", 
     RowBox[{"400.`", " ", "n", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "+", "n"}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], 
    RowBox[{
     RowBox[{
      RowBox[{"-", "140.`"}], " ", "n"}], "+", 
     RowBox[{"371.`", " ", 
      SuperscriptBox["n", "2"]}], "-", 
     RowBox[{"200.`", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
     RowBox[{"400.`", " ", "n", " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"0.3`", " ", "n"}]}], 
        RowBox[{
         RowBox[{"-", "1.`"}], "-", 
         RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
     RowBox[{"200.`", " ", 
      SuperscriptBox["n", "2"], " ", 
      RowBox[{"Log", "[", 
       FractionBox[
        RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}], 
        RowBox[{"1.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.703878515603928*^9, 3.703878554728901*^9}, 
   3.703878703394999*^9, 3.70389308802768*^9, 3.703893130627213*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"spectG1", "[", "n", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<Upper limit where MZA solution disappears \>\"", "<>", 
     RowBox[{"ToString", "[", "spectAbs2", "]"}]}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", "\"\<\!\(\*SubscriptBox[\(g\), \(1\)]\)\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703879176988717*^9, 3.703879187911903*^9}, {
  3.7038921755068693`*^9, 3.7038922068112717`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwV0/k/1HkAx3E6lFvaZMtDFCJF5Wo3+Ty00hZmUOhW7qSD0iFZbZQebNc0
SSaVWwxrMbNyvCfZHKtoVihDrpmRMd9vpNQste0Pr8fzL3gZBxz1Dp6hpKTk
863/5XF6OOyvNPaMCWIKK9hIsZqwPDxNg9eyaly8NR2Zc4InM8dp9Fn7Qrfm
Af7se1nXJaUxxVVN13ydheeVrle0emgY3QixHjicg6Eb/J0uQhrx0/PLJ6ty
oThkbhrTQENvYtOr67150NmU9q6kmkZV7VzR1EA+zAzVqsWlNJ7ftHn2pa0A
jpMxlxbn0XjzkFfG4j6Ed5vM24tDYx/b44ZJbCHCCvYYXrpOQxyntsKEFIG9
26li/CwNxsoqI2YBF0W2JfHmkTTinovGFN7FqNM0ct8XQmMua7e928diUFAe
bPKkcdl4nipD73e4mvyl88CURtBOW5c3a0uxZ9pO1LGIhpcB51VpdCmiOnLz
NHRo1E6kZmjxS5GRlOR0WkHhQoeqTpvdH/g46hbBbKWQwnd3F5iWQeNptUNi
PYXs9S+63fzLsPTeqplVlRSOE6eYz6llYHhp3zHLpqD9ZpHBW5Vy5FUIG6ZP
Uwgb16EtReXYEbdzWdFSChnJPf5V4TyoC9bV39Gn4NUXzVqdykOtsn7wZS0K
We8vOrg+4cE0sSM3RCHH0igHTf9FfIwnb1thLJQjtt507c16PlLSPNbcOi/H
vVTL2fPUKyEodybxfaP4PNzioRdRBXOZxe7tGTJEsu0X2vKAigQhK5wlg0pu
gfW2V8BGw7Mt8Uky6KtZe/tMAXu8WjZwo2SIuHTGcYaxANf4R4xUNsswyFTM
0QwR4POFMjGfHsHRVP7markAzQYbji12HoEt87IwZ+IxDjE8EwcGh7FGXcQ5
KX2CXceZG+ztJYgdlpvHRDWAhWFP8AZh9uujMKekZpAZXb5Wyv1Y+67MJqfy
GcK76o7lvBfhkI/iyoBHGxzTzus/Ot2Jcz9n+9W1v0BYz1j3zoVCHNVuul/C
+AfMvpXcRpNmDCefmQgoaoc90jtHEmrx6a1x41WzDvzwbm9gb2A2jlTorkhK
6oTlBVpNEJ1FalW6Mv8Vd6GkgSr4ZQdIBDvVixP8GjVbmtf9WNdE1i+2sM58
0Q3Zw8yDjB1CknmPkSYP6sFdrlX6REUn+bCs5qdNU72oPnBxwWq+iHz9oCxM
2diHmO/SXjJ1+4nd/BHLQ0b9aGlrdxHeGSRJJChdQ9GPyL8dzK7qSYg402ed
umgA2a0uC0Iah4mTTU2z8tAgUor4+XPcZcQ1PNSrenwIZkaOqZSvjDSnLj/F
nhyCgCVIfHlARt7PSrSJnBrC+5imgKxTMvKaczlxtYoYu7Z0G5AsGVkftcWi
9XsxLCRfrp1UyEjgEir5urMYT5e4nhHnj5Iap97uHSwx9rOaQ1vKRolhq+fU
tdtiKFSYvmW1o6Tymda1lrtiWFF+NufbR0npuxE7Rr4Y7OqDcgMlOQlHb0Js
jfjbV78d2O4nJ94JdeZXhsVQZrVveTKbIhN60uLXzhJ8uTsSMKZNkTWO5wbs
NkugyFeKXbKIIgWitgS2uwQTtSuLz1pRZCq61ifATwLJSIKurR9FKrhhs2wP
S9Cy0a47O58iVGGkb2OaBLfH2REX3WgyquoeETopAXu6MLHchyYJWvPun5uW
4MbcuowBf5p0ji3R4syUItmQanM6QRPVwYb749pSxG11tZvk0OTU473LtS2k
CMz8OB1K0aTRX4N5bK8U+7kaC299ogk3KqXHOUiKHEbrbt5XmlSfUBMuOCjF
f/NnBq4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(1\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox["\"n\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
   "\"Upper limit where MZA solution disappears {{{-1, -0.3}, g1}, {{-0.3, \
1}, 1}}\"", TraditionalForm],
  PlotRange->{{-0.9999492706091562, 0.99996488505936}, {-0.731577787624381, 
   0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.70387918533679*^9, 3.703879188164668*^9}, 
   3.70389220768216*^9, 3.703893089995076*^9, 3.703893131697528*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"spectG1", "[", "n", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"spectG1", "[", "n", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"\"\<Region where MZA solution disappears \>\"", "<>", 
     RowBox[{"ToString", "[", "spectAbs2", "]"}]}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<n\>\"", ",", "\"\<\!\(\*SubscriptBox[\(g\), \(1\)]\)\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.703878556536018*^9, 3.703878567118595*^9}, {
  3.703878743328588*^9, 3.703878761152218*^9}, {3.703879071570312*^9, 
  3.703879083578661*^9}, {3.703879120918778*^9, 3.703879155722087*^9}, {
  3.703879205991301*^9, 3.7038792440667267`*^9}, {3.703879295102149*^9, 
  3.703879309807488*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
   
   "], {{{}, {}, {}, {}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{111, 74, 110, 95, 58, 109, 94, 78, 24, 103, 87, 69, 53, 
        40, 1, 96, 80, 62, 46, 33, 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,
         14, 15, 16, 17, 97, 81, 63, 47, 34, 26, 18, 98, 82, 64, 48, 35, 27, 
        19, 99, 83, 65, 49, 36, 28, 104, 88, 70, 54, 41, 20, 100, 84, 66, 50, 
        37, 29, 105, 89, 71, 55, 42, 21, 101, 85, 67, 51, 38, 30, 106, 90, 72,
         56, 43, 22, 102, 86, 68, 52, 39, 108, 92, 75, 59, 31, 107, 91, 73, 
        57, 44, 205, 93, 184, 197, 149, 157, 168, 182, 195, 141, 146, 154, 
        165, 179, 192, 135, 148, 156, 167, 181, 194, 140, 145, 153, 164, 178, 
        191, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 
        121, 120, 119, 118, 117, 116, 115, 114, 139, 144, 152, 163, 177, 190, 
        113, 138, 143, 151, 162, 176, 189, 112, 159, 170, 183, 196, 147, 173, 
        185, 198, 155, 166, 180, 193, 137, 188, 201, 174, 203, 186, 199, 158, 
        204, 187, 200, 169, 202}}]]}, {}, {}, {}}, {{}, {}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{111, 74, 110, 95, 58, 109, 94, 78, 24, 103, 87, 69, 53, 
       40, 1, 96, 80, 62, 46, 33, 25, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
       14, 15, 16, 17, 97, 81, 63, 47, 34, 26, 18, 98, 82, 64, 48, 35, 27, 19,
        99, 83, 65, 49, 36, 28, 104, 88, 70, 54, 41, 20, 100, 84, 66, 50, 37, 
       29, 105, 89, 71, 55, 42, 21, 101, 85, 67, 51, 38, 30, 106, 90, 72, 56, 
       43, 22, 102, 86, 68, 52, 39, 108, 92, 75, 59, 31, 107, 91, 73, 57, 44, 
       205}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{202, 169, 200, 187, 204, 158, 199, 186, 203, 174, 201, 
       188, 137, 193, 180, 166, 155, 198, 185, 173, 147, 196, 183, 170, 159, 
       112, 189, 176, 162, 151, 143, 138, 113, 190, 177, 163, 152, 144, 139, 
       114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
       128, 129, 130, 131, 132, 133, 134, 191, 178, 164, 153, 145, 140, 194, 
       181, 167, 156, 148, 135, 192, 179, 165, 154, 146, 141, 195, 182, 168, 
       157, 149, 197, 184}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(1\\)]\\)\"", TraditionalForm], 
     None}, {
     FormBox["\"n\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotLabel->FormBox[
   "\"Region where MZA solution disappears {{{-1, -0.3}, g1}, {{-0.3, 1}, 1}}\
\"", TraditionalForm],
  PlotRange->{{-0.9999492706091562, 0.99996488505936}, {-78.16435044026713, 
   0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7038785638730917`*^9, 3.703878567580351*^9}, {
   3.7038787571598463`*^9, 3.703878761514326*^9}, 3.703879084032103*^9, {
   3.7038791241191053`*^9, 3.7038791561246643`*^9}, 3.7038792445659037`*^9, {
   3.703879301898913*^9, 3.7038793104152393`*^9}, 3.7038931337847147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"spectG1", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.703892333333807*^9, 3.703892343244363*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.703892343626608*^9, 3.7038923511371927`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.703892343626608*^9, 3.703892351170603*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0.`\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.703892343626608*^9, 3.703892351207522*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.703892343626608*^9, 3.7038923512318068`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Indeterminate", ",", "Indeterminate"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Indeterminate", ",", "Indeterminate"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{{3.703892343731079*^9, 3.7038923512348623`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"spectG1", "[", "n", "]"}], ",", 
     RowBox[{"n", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "1"}], ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.703892428961789*^9, 3.703892463673011*^9}, {
   3.703892647465231*^9, 3.703892648158082*^9}, {3.703892778648528*^9, 
   3.703892802430086*^9}, 3.703892837788801*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "7.163265306122449`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", 
     RowBox[{
      RowBox[{"-", "0.7316017316017316`"}], "-", 
      RowBox[{"5.439987278943365`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.703892438625032*^9, 3.703892464495523*^9}, {
   3.703892788176353*^9, 3.7038928035119143`*^9}, 3.703892838132332*^9, 
   3.703893000612825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spectG1", "[", "0.999999999999999", "]"}]], "Input",
 CellChangeTimes->{{3.703892842683353*^9, 3.703892865178171*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1725.9681092795097`"}], ",", 
   RowBox[{"-", "0.7316017316017255`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.703892844574616*^9, 3.703892865571959*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check Taylor Expansion", "Subchapter",
 CellChangeTimes->{{3.703892946354653*^9, 3.703892951009041*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Series", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ConAxialSymOmegaNMZA", "[", 
     RowBox[{"n", ",", "spectAbs"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"g1", ",", "0", ",", "2"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.703892960848044*^9, 3.703892966649096*^9}, {
  3.703893162767206*^9, 3.703893260182733*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["n", "3"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "c0", " ", "g2", " ", "n"}], "+", 
        RowBox[{"2", " ", "c2", " ", "g2", " ", "n"}], "-", 
        RowBox[{
         SuperscriptBox["c0", "2"], " ", "g2", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["c2", "2"], " ", "g2", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        RowBox[{"2", " ", "g2", " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c0", " ", "n"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
        RowBox[{"2", " ", "g2", " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c2", " ", "n"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c0", " ", "n"}]}]], "]"}]}], "-", 
        RowBox[{
         SuperscriptBox["n", "3"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["n", "6"]], 
            RowBox[{
             SuperscriptBox["g2", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"4", "+", "c0", "+", "c2"}], ")"}], " ", "n"}]}], 
                 ")"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "c0", "+", "c2"}], ")"}], " ", 
                   "n"}]}], ")"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"4", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["n", "3"]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "c0", " ", "n"}], "-", 
         RowBox[{"2", " ", "c1", " ", "n"}], "+", 
         RowBox[{
          SuperscriptBox["c0", "2"], " ", 
          SuperscriptBox["n", "2"]}], "-", 
         RowBox[{
          SuperscriptBox["c1", "2"], " ", 
          SuperscriptBox["n", "2"]}], "+", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c1", " ", "n"}]}]], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["n", "2"], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c1", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"g2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c1", " ", "n"}]}]], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["c0", "2"], " ", "n"}], "+", 
                    RowBox[{"c0", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
                    RowBox[{"c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c2", " ", "n"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["n", "2"], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "n", " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c1", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"c0", "-", "c2"}], ")"}]}], " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c0", " ", "n"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["n", "2"], " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"c0", "-", "c1"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["c0", "2"], " ", 
                    SuperscriptBox["n", "2"]}], "+", 
                    RowBox[{"c1", " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c2", " ", "n"}]}], ")"}]}], "+", 
                    RowBox[{"c0", " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    RowBox[{"c1", " ", "n"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c2", " ", "n"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["n", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c0", " ", "n"}], "+", 
                    RowBox[{"c1", " ", "n"}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c0", " ", "n"}], "+", 
                    RowBox[{"c1", " ", "n"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["n", "3"], " ", 
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", 
                SuperscriptBox["n", "6"]], 
               RowBox[{
                SuperscriptBox["g2", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"4", "+", "c0", "+", "c2"}], ")"}], " ", "n"}]}], 
                    ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["n", "2"], " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "c0", "+", "c2"}], ")"}], " ", 
                    "n"}]}], ")"}]}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["n", "2"], " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}], " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], " ", "g1"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["g2", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c0", " ", "n"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c1", " ", "n"}]}]], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["c0", "2"]}], "+", 
              SuperscriptBox["c2", "2"], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c1", " ", "n"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c0", " ", "n"}]}]], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "c0"}], "+", "c2"}], ")"}], " ", "n"}], "+", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"c2", " ", "n"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"c0", " ", "n"}]}]], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"c0", "-", "c1"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "-", "c2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"c1", "-", "c2"}], ")"}], " ", "n"}], "-", 
              RowBox[{"2", " ", "n", " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "+", "c1"}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], ")"}], 
         "2"], " ", 
        SuperscriptBox["g1", "2"]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["n", "6"]], 
           RowBox[{
            SuperscriptBox["g2", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", "c0", "+", "c2"}], ")"}], " ", "n"}]}], 
                ")"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", "c0", "+", "c2"}], ")"}], " ", 
                  "n"}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "g1", "]"}], "3"],
      SeriesData[dispersion`g1, 0, {}, 0, 3, 1],
      Editable->False]}],
    SeriesData[
    dispersion`g1, 0, {
     Rational[1, 8] 
      dispersion`n^(-3) ((-2) $CellContext`c0 dispersion`g2 dispersion`n + 
       2 $CellContext`c2 dispersion`g2 dispersion`n - $CellContext`c0^2 
       dispersion`g2 
       dispersion`n^2 + $CellContext`c2^2 dispersion`g2 dispersion`n^2 + 
       2 dispersion`g2 dispersion`n^2 
        Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
           dispersion`n)] + 
       2 dispersion`g2 
        Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
            dispersion`n)] - 
       dispersion`n^3 (dispersion`g2^2 
         dispersion`n^(-6) (($CellContext`c0 - $CellContext`c2) 
           dispersion`n (
            2 + (4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
          2 dispersion`n^2 
           Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
              dispersion`n)] - 2 (1 + 2 dispersion`n) 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]) (($CellContext`c0 - $CellContext`c2) 
           dispersion`n (
            2 + (-4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
          2 dispersion`n^2 
           Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
              dispersion`n)] + (-2 + 4 dispersion`n) 
           Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
               dispersion`n)]))^Rational[1, 2]), Rational[1, 8] 
      dispersion`n^(-3) (2 $CellContext`c0 dispersion`n - 2 $CellContext`c1 
       dispersion`n + $CellContext`c0^2 dispersion`n^2 - $CellContext`c1^2 
       dispersion`n^2 + 
       2 Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c1 
           dispersion`n)] + 
       2 dispersion`n^2 
        Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c1 
            dispersion`n)] + 
       dispersion`g2 
        dispersion`n^(-3) (dispersion`g2^2 
          dispersion`n^(-6) (($CellContext`c0 - $CellContext`c2) 
            dispersion`n (
             2 + (4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
           2 dispersion`n^2 
            Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
               dispersion`n)] - 2 (1 + 2 dispersion`n) 
           Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
               dispersion`n)]) (($CellContext`c0 - $CellContext`c2) 
            dispersion`n (
             2 + (-4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
           2 dispersion`n^2 
            Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
               dispersion`n)] + (-2 + 4 dispersion`n) 
            Log[(-1 + $CellContext`c0 
                 dispersion`n)^(-1) (-1 + $CellContext`c2 dispersion`n)]))^
         Rational[-1, 2] (
         2 Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c1 
             dispersion`n)] (
           dispersion`n ($CellContext`c0^2 
              dispersion`n + $CellContext`c0 (2 - 8 
               dispersion`n^2) - $CellContext`c2 (
              2 + $CellContext`c2 dispersion`n - 8 dispersion`n^2)) + 
           2 dispersion`n^2 
            Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
               dispersion`n)] + (-2 + 8 dispersion`n^2) 
            Log[(-1 + $CellContext`c0 
                 dispersion`n)^(-1) (-1 + $CellContext`c2 dispersion`n)]) + 
         dispersion`n (
           2 dispersion`n 
            Log[(-1 + $CellContext`c0 
                 dispersion`n)^(-1) (-1 + $CellContext`c1 
                dispersion`n)] (-($CellContext`c0 - $CellContext`c2) 
              dispersion`n (
               2 + $CellContext`c0 dispersion`n + $CellContext`c2 
                dispersion`n) - 2 dispersion`n^2 
             Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
                dispersion`n)] + 
             2 Log[(-1 + $CellContext`c0 
                   dispersion`n)^(-1) (-1 + $CellContext`c2 
                  dispersion`n)]) + ($CellContext`c0 - $CellContext`c1) \
(($CellContext`c0 - $CellContext`c2) 
              dispersion`n ($CellContext`c0^2 
                dispersion`n^2 + $CellContext`c1 
                dispersion`n (
                 2 + $CellContext`c2 dispersion`n) + $CellContext`c0 
                dispersion`n (
                 4 + $CellContext`c1 dispersion`n + $CellContext`c2 
                  dispersion`n) + 
               2 (2 + $CellContext`c2 dispersion`n - 8 dispersion`n^2)) + 
             2 dispersion`n^2 (
               2 + $CellContext`c0 dispersion`n + $CellContext`c1 
                dispersion`n) 
              Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
                 dispersion`n)] - 
             2 (2 + $CellContext`c0 dispersion`n + $CellContext`c1 
               dispersion`n - 8 dispersion`n^2) 
             Log[(-1 + $CellContext`c0 
                  dispersion`n)^(-1) (-1 + $CellContext`c2 dispersion`n)])))),
       dispersion`g2^2 
      dispersion`n^(-6) (dispersion`g2^2 
        dispersion`n^(-6) (($CellContext`c0 - $CellContext`c2) 
          dispersion`n (
           2 + (4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
         2 dispersion`n^2 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)] - 2 (1 + 2 dispersion`n) 
         Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
             dispersion`n)]) (($CellContext`c0 - $CellContext`c2) 
          dispersion`n (
           2 + (-4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
         2 dispersion`n^2 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)] + (-2 + 4 dispersion`n) 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]))^
       Rational[-3, 2] (
        Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c1 
            dispersion`n)] (-$CellContext`c0^2 + $CellContext`c2^2 - 2 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)]) + 
        2 Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c1 
             dispersion`n)] ((-$CellContext`c0 + $CellContext`c2) 
           dispersion`n + 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]) + ($CellContext`c0 - $CellContext`c1) \
(($CellContext`c0 - $CellContext`c2) ($CellContext`c1 - $CellContext`c2) 
           dispersion`n - 2 dispersion`n 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)] - ($CellContext`c0 + $CellContext`c1) 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]))^2}, 0, 3, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["n", "3"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "c0", " ", "g2", " ", "n"}], "+", 
        RowBox[{"2", " ", "c2", " ", "g2", " ", "n"}], "-", 
        RowBox[{
         SuperscriptBox["c0", "2"], " ", "g2", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["c2", "2"], " ", "g2", " ", 
         SuperscriptBox["n", "2"]}], "+", 
        RowBox[{"2", " ", "g2", " ", 
         SuperscriptBox["n", "2"], " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c0", " ", "n"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
        RowBox[{"2", " ", "g2", " ", 
         RowBox[{"Log", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c2", " ", "n"}]}], 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{"c0", " ", "n"}]}]], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["n", "3"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             SuperscriptBox["n", "6"]], 
            RowBox[{
             SuperscriptBox["g2", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"4", "+", "c0", "+", "c2"}], ")"}], " ", "n"}]}], 
                 ")"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                RowBox[{"(", 
                 RowBox[{"2", "+", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "c0", "+", "c2"}], ")"}], " ", 
                   "n"}]}], ")"}]}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], "+", 
                  RowBox[{"4", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c2", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}]}], ")"}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["n", "6"]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["n", "3"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"c0", "-", "c1"}], ")"}], " ", "n", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"c0", " ", "n"}], "+", 
               RowBox[{"c1", " ", "n"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"c0", " ", "n"}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"c1", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["n", "5"], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c1", " ", "n"}]}], 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"c0", " ", "n"}]}]], "]"}]}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"g2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c1", " ", "n"}]}]], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"n", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["c0", "2"], " ", "n"}], "+", 
                    RowBox[{"c0", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
                    RowBox[{"c2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c2", " ", "n"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["n", "2"], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "n", " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c1", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"c0", "-", "c2"}], ")"}]}], " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c0", " ", "n"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], ")"}]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["n", "2"], " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"c0", "-", "c1"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["c0", "2"], " ", 
                    SuperscriptBox["n", "2"]}], "+", 
                    RowBox[{"c1", " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c2", " ", "n"}]}], ")"}]}], "+", 
                    RowBox[{"c0", " ", "n", " ", 
                    RowBox[{"(", 
                    RowBox[{"4", "+", 
                    RowBox[{"c1", " ", "n"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c2", " ", "n"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}]}]}], ")"}]}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["n", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c0", " ", "n"}], "+", 
                    RowBox[{"c1", " ", "n"}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{"c0", " ", "n"}], "+", 
                    RowBox[{"c1", " ", "n"}], "-", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                    RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", 
               SuperscriptBox["n", "6"]], 
              RowBox[{
               SuperscriptBox["g2", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"4", "+", "c0", "+", "c2"}], ")"}], " ", "n"}]}], 
                   ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["n", "2"], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "n"}]}], ")"}], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
                  RowBox[{"(", 
                   RowBox[{"2", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "c0", "+", "c2"}], ")"}], " ", 
                    "n"}]}], ")"}]}], "+", 
                 RowBox[{"2", " ", 
                  SuperscriptBox["n", "2"], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"4", " ", "n"}]}], ")"}], " ", 
                  RowBox[{"Log", "[", 
                   FractionBox[
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c2", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], 
             ")"}]}], ")"}]}]}], ")"}], " ", "g1"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["g2", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c0", " ", "n"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c1", " ", "n"}]}]], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               SuperscriptBox["c0", "2"]}], "+", 
              SuperscriptBox["c2", "2"], "-", 
              RowBox[{"2", " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c1", " ", "n"}]}], 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"c0", " ", "n"}]}]], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "c0"}], "+", "c2"}], ")"}], " ", "n"}], "+", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"c2", " ", "n"}]}], 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{"c0", " ", "n"}]}]], "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"c0", "-", "c1"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "-", "c2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"c1", "-", "c2"}], ")"}], " ", "n"}], "-", 
              RowBox[{"2", " ", "n", " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "+", "c1"}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], ")"}], 
         "2"], " ", 
        SuperscriptBox["g1", "2"]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["n", "6"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           FractionBox["1", 
            SuperscriptBox["n", "6"]], 
           RowBox[{
            SuperscriptBox["g2", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"4", "+", "c0", "+", "c2"}], ")"}], " ", "n"}]}], 
                ")"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}], "-", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"2", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"c0", "-", "c2"}], ")"}], " ", "n", " ", 
               RowBox[{"(", 
                RowBox[{"2", "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", "c0", "+", "c2"}], ")"}], " ", 
                  "n"}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}]], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", 
                 RowBox[{"4", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c2", " ", "n"}]}], 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{"c0", " ", "n"}]}]], "]"}]}]}], ")"}]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]}], ")"}]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "g1", "]"}], "3"],
      SeriesData[dispersion`g1, 0, {}, 0, 3, 1],
      Editable->False]}],
    SeriesData[
    dispersion`g1, 0, {
     Rational[1, 8] 
      dispersion`n^(-3) ((-2) $CellContext`c0 dispersion`g2 dispersion`n + 
       2 $CellContext`c2 dispersion`g2 dispersion`n - $CellContext`c0^2 
       dispersion`g2 
       dispersion`n^2 + $CellContext`c2^2 dispersion`g2 dispersion`n^2 + 
       2 dispersion`g2 dispersion`n^2 
        Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
           dispersion`n)] + 
       2 dispersion`g2 
        Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
            dispersion`n)] + 
       dispersion`n^3 (dispersion`g2^2 
          dispersion`n^(-6) (($CellContext`c0 - $CellContext`c2) 
            dispersion`n (
             2 + (4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
           2 dispersion`n^2 
            Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
               dispersion`n)] - 2 (1 + 2 dispersion`n) 
           Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
               dispersion`n)]) (($CellContext`c0 - $CellContext`c2) 
            dispersion`n (
             2 + (-4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
           2 dispersion`n^2 
            Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
               dispersion`n)] + (-2 + 4 dispersion`n) 
            Log[(-1 + $CellContext`c0 
                 dispersion`n)^(-1) (-1 + $CellContext`c2 dispersion`n)]))^
         Rational[1, 2]), Rational[1, 8] 
      dispersion`n^(-6) (
       dispersion`n^3 (($CellContext`c0 - $CellContext`c1) 
          dispersion`n (
           2 + $CellContext`c0 dispersion`n + $CellContext`c1 dispersion`n) + 
         2 Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c1 
             dispersion`n)]) + 
       2 dispersion`n^5 
        Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c1 
            dispersion`n)] - 
       dispersion`g2 (dispersion`g2^2 
         dispersion`n^(-6) (($CellContext`c0 - $CellContext`c2) 
           dispersion`n (
            2 + (4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
          2 dispersion`n^2 
           Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
              dispersion`n)] - 2 (1 + 2 dispersion`n) 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]) (($CellContext`c0 - $CellContext`c2) 
           dispersion`n (
            2 + (-4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
          2 dispersion`n^2 
           Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
              dispersion`n)] + (-2 + 4 dispersion`n) 
           Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
               dispersion`n)]))^Rational[-1, 2] (
        2 Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c1 
            dispersion`n)] (
          dispersion`n ($CellContext`c0^2 
             dispersion`n + $CellContext`c0 (2 - 8 
              dispersion`n^2) - $CellContext`c2 (
             2 + $CellContext`c2 dispersion`n - 8 dispersion`n^2)) + 
          2 dispersion`n^2 
           Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
              dispersion`n)] + (-2 + 8 dispersion`n^2) 
           Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
               dispersion`n)]) + 
        dispersion`n (
          2 dispersion`n 
           Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c1 
               dispersion`n)] (-($CellContext`c0 - $CellContext`c2) 
             dispersion`n (
              2 + $CellContext`c0 dispersion`n + $CellContext`c2 
               dispersion`n) - 2 dispersion`n^2 
            Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
               dispersion`n)] + 
            2 Log[(-1 + $CellContext`c0 
                  dispersion`n)^(-1) (-1 + $CellContext`c2 
                 dispersion`n)]) + ($CellContext`c0 - $CellContext`c1) \
(($CellContext`c0 - $CellContext`c2) 
             dispersion`n ($CellContext`c0^2 dispersion`n^2 + $CellContext`c1 
               dispersion`n (
                2 + $CellContext`c2 dispersion`n) + $CellContext`c0 
               dispersion`n (
                4 + $CellContext`c1 dispersion`n + $CellContext`c2 
                 dispersion`n) + 
              2 (2 + $CellContext`c2 dispersion`n - 8 dispersion`n^2)) + 
            2 dispersion`n^2 (
              2 + $CellContext`c0 dispersion`n + $CellContext`c1 dispersion`n)
               Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
                dispersion`n)] - 
            2 (2 + $CellContext`c0 dispersion`n + $CellContext`c1 
              dispersion`n - 8 dispersion`n^2) 
            Log[(-1 + $CellContext`c0 
                 dispersion`n)^(-1) (-1 + $CellContext`c2 
                dispersion`n)])))), -dispersion`g2^2 
      dispersion`n^(-6) (dispersion`g2^2 
        dispersion`n^(-6) (($CellContext`c0 - $CellContext`c2) 
          dispersion`n (
           2 + (4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
         2 dispersion`n^2 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)] - 2 (1 + 2 dispersion`n) 
         Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
             dispersion`n)]) (($CellContext`c0 - $CellContext`c2) 
          dispersion`n (
           2 + (-4 + $CellContext`c0 + $CellContext`c2) dispersion`n) + 
         2 dispersion`n^2 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)] + (-2 + 4 dispersion`n) 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]))^
       Rational[-3, 2] (
        Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c1 
            dispersion`n)] (-$CellContext`c0^2 + $CellContext`c2^2 - 2 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)]) + 
        2 Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c1 
             dispersion`n)] ((-$CellContext`c0 + $CellContext`c2) 
           dispersion`n + 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]) + ($CellContext`c0 - $CellContext`c1) \
(($CellContext`c0 - $CellContext`c2) ($CellContext`c1 - $CellContext`c2) 
           dispersion`n - 2 dispersion`n 
          Log[(-1 + $CellContext`c0 dispersion`n)/(-1 + $CellContext`c2 
             dispersion`n)] - ($CellContext`c0 + $CellContext`c1) 
          Log[(-1 + $CellContext`c0 dispersion`n)^(-1) (-1 + $CellContext`c2 
              dispersion`n)]))^2}, 0, 3, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.703892956143711*^9, 3.703892966967476*^9}, {
   3.703893158069511*^9, 3.703893239430594*^9}, 3.703893276204299*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mzaSeries", "[", "n_", "]"}], "=", 
  RowBox[{"Normal", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Series", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConAxialSymOmegaNMZA", "[", 
       RowBox[{"n", ",", "spectAbs2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"g1", ",", "0", ",", "2"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}], "//", "Simplify"}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.703893355010721*^9, {3.70389640272855*^9, 3.703896439261451*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["n", "3"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"0.32499999999999996`", " ", "n"}], "+", 
       RowBox[{"0.11374999999999999`", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       RowBox[{"0.25`", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
       RowBox[{"0.25`", " ", 
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1.`"}], "-", 
           RowBox[{"0.3`", " ", "n"}]}], 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}], "-", 
       RowBox[{"0.25`", " ", 
        SuperscriptBox["n", "3"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.3`"}], "-", 
                 RowBox[{"3.055`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                  RowBox[{"0.3`", " ", "n"}]}], 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1.`"}], "+", "n"}], 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "-", 
                  RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.3`"}], "+", 
                 RowBox[{"2.145`", " ", "n"}]}], ")"}]}], "+", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                  RowBox[{"0.3`", " ", "n"}]}], 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1.`"}], "+", "n"}], 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "-", 
                  RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}]}], 
           SuperscriptBox["n", "6"]], ")"}]}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.03125`", " ", 
       SuperscriptBox["g1", "2"], " ", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "-", 
               RowBox[{"3.055`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1.`"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1.`"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "+", 
               RowBox[{"2.145`", " ", "n"}]}], ")"}]}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1.`"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1.`"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}]}], 
         SuperscriptBox["n", "6"]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"1.3`", "\[VeryThinSpace]", "-", 
               RowBox[{"2.145`", " ", "n"}], "-", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"1.3`", "\[VeryThinSpace]", "+", 
               RowBox[{"3.055`", " ", "n"}], "-", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.7`", "\[VeryThinSpace]", "-", 
               RowBox[{"1.855`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1", "+", "n"}], 
               RowBox[{"1", "+", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.7`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.945`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1", "+", "n"}], 
               RowBox[{"1", "+", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
           ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"1.3`", "\[VeryThinSpace]", "+", 
                  RowBox[{"3.055`", " ", "n"}], "-", 
                  RowBox[{"1.`", " ", "n", " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1.`"}], "-", 
                    RowBox[{"0.3`", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.7`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.855`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"1.3`", "\[VeryThinSpace]", "-", 
                  RowBox[{"2.145`", " ", "n"}], "-", 
                  RowBox[{"1.`", " ", "n", " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1.`"}], "-", 
                    RowBox[{"0.3`", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.7`", "\[VeryThinSpace]", "+", 
                  RowBox[{"0.945`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}]}], ")"}], "2"]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"1.3`", "\[VeryThinSpace]", "-", 
             RowBox[{"2.145`", " ", "n"}], "-", 
             RowBox[{"1.`", " ", "n", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"0.3`", " ", "n"}]}], 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
         ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"1.3`", "\[VeryThinSpace]", "+", 
             RowBox[{"3.055`", " ", "n"}], "-", 
             RowBox[{"1.`", " ", "n", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"0.3`", " ", "n"}]}], 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
         ")"}], "2"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SuperscriptBox["n", "3"]}]], "g1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.4`", " ", "n"}], "-", 
       RowBox[{"0.9099999999999999`", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"1", "+", "n"}], 
          RowBox[{"1", "+", 
           RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"1.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3`", " ", "n"}]}], 
          RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2.`", " ", 
          SuperscriptBox["n", "3"], " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox["n", "6"]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.3`"}], "-", 
                  RowBox[{"3.055`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                   RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "-", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.3`"}], "+", 
                  RowBox[{"2.145`", " ", "n"}]}], ")"}]}], "+", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                   RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "+", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.9099999999999999`", " ", "n"}], "-", 
               RowBox[{"0.273`", " ", 
                SuperscriptBox["n", "2"]}], "-", 
               RowBox[{"3.8470250000000004`", " ", 
                SuperscriptBox["n", "3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.3`"}], "-", 
                  RowBox[{"0.45500000000000007`", " ", "n"}]}], ")"}], " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{"n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.7`"}], "+", 
                    RowBox[{"0.455`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
                  RowBox[{"1.`", " ", 
                   SuperscriptBox["n", "2"], " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{"1", "+", "n"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "-", 
                  RowBox[{"1.`", " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.3`", " ", "n"}]}], 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}],
                  ")"}]}], "+", 
               RowBox[{"1.3`", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}], 
               "+", 
               RowBox[{"0.45500000000000007`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}], 
               "-", 
               RowBox[{"5.2`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"0.7`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.455`", " ", "n"}], "-", 
                  RowBox[{"2.8`", " ", 
                   SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  RowBox[{"4.`", " ", 
                   SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "-", 
               RowBox[{"3.055`", " ", "n"}], "+", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "+", 
               RowBox[{"2.145`", " ", "n"}], "+", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["n", "3"]], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"0.32499999999999996`", " ", "n"}], "+", 
       RowBox[{"0.11374999999999999`", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       RowBox[{"0.25`", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", "n"}], 
          RowBox[{
           RowBox[{"-", "1"}], "-", 
           RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
       RowBox[{"0.25`", " ", 
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"-", "1.`"}], "-", 
           RowBox[{"0.3`", " ", "n"}]}], 
          RowBox[{
           RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}], "+", 
       RowBox[{"0.25`", " ", 
        SuperscriptBox["n", "3"], " ", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.3`"}], "-", 
                 RowBox[{"3.055`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                  RowBox[{"0.3`", " ", "n"}]}], 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1.`"}], "+", "n"}], 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "-", 
                  RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"n", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.3`"}], "+", 
                 RowBox[{"2.145`", " ", "n"}]}], ")"}]}], "+", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["n", "2"], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                  RowBox[{"0.3`", " ", "n"}]}], 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", 
                 RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
               RowBox[{"Log", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "1.`"}], "+", "n"}], 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "-", 
                  RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}]}], 
           SuperscriptBox["n", "6"]], ")"}]}]}]}], ")"}]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"0.03125`", " ", 
       SuperscriptBox["g1", "2"], " ", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "-", 
               RowBox[{"3.055`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1.`"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1.`"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "+", 
               RowBox[{"2.145`", " ", "n"}]}], ")"}]}], "+", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1.`"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1.`"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}]}], 
         SuperscriptBox["n", "6"]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"1.3`", "\[VeryThinSpace]", "-", 
               RowBox[{"2.145`", " ", "n"}], "-", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{"1.3`", "\[VeryThinSpace]", "+", 
               RowBox[{"3.055`", " ", "n"}], "-", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.7`", "\[VeryThinSpace]", "-", 
               RowBox[{"1.855`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1", "+", "n"}], 
               RowBox[{"1", "+", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"0.7`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.945`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
            RowBox[{"1.`", " ", 
             SuperscriptBox["n", "2"], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1", "+", "n"}], 
               RowBox[{"1", "+", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                RowBox[{"0.3`", " ", "n"}]}], 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
           ")"}]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"1.3`", "\[VeryThinSpace]", "+", 
                  RowBox[{"3.055`", " ", "n"}], "-", 
                  RowBox[{"1.`", " ", "n", " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1.`"}], "-", 
                    RowBox[{"0.3`", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.7`", "\[VeryThinSpace]", "-", 
                  RowBox[{"1.855`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"1.3`", "\[VeryThinSpace]", "-", 
                  RowBox[{"2.145`", " ", "n"}], "-", 
                  RowBox[{"1.`", " ", "n", " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "1.`"}], "-", 
                    RowBox[{"0.3`", " ", "n"}]}], 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
              ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"0.7`", "\[VeryThinSpace]", "+", 
                  RowBox[{"0.945`", " ", "n"}]}], ")"}], " ", "n"}], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}]}], ")"}], "2"]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"1.3`", "\[VeryThinSpace]", "-", 
             RowBox[{"2.145`", " ", "n"}], "-", 
             RowBox[{"1.`", " ", "n", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"0.3`", " ", "n"}]}], 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
         ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
           RowBox[{"Log", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "n"}], 
             RowBox[{
              RowBox[{"-", "1"}], "-", 
              RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
          RowBox[{"n", " ", 
           RowBox[{"(", 
            RowBox[{"1.3`", "\[VeryThinSpace]", "+", 
             RowBox[{"3.055`", " ", "n"}], "-", 
             RowBox[{"1.`", " ", "n", " ", 
              RowBox[{"Log", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"-", "1.`"}], "-", 
                 RowBox[{"0.3`", " ", "n"}]}], 
                RowBox[{
                 RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
         ")"}], "2"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"8", " ", 
       SuperscriptBox["n", "3"]}]], "g1", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1.4`", " ", "n"}], "-", 
       RowBox[{"0.9099999999999999`", " ", 
        SuperscriptBox["n", "2"]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["n", "2"], " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"1", "+", "n"}], 
          RowBox[{"1", "+", 
           RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"1.`", "\[VeryThinSpace]", "+", 
           RowBox[{"0.3`", " ", "n"}]}], 
          RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2.`", " ", 
          SuperscriptBox["n", "3"], " ", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              SuperscriptBox["n", "6"]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.3`"}], "-", 
                  RowBox[{"3.055`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                   RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "-", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.3`"}], "+", 
                  RowBox[{"2.145`", " ", "n"}]}], ")"}]}], "+", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                   RowBox[{"1.`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.`"}], "+", 
                  RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}]}], ")"}]}], ")"}]}],
           " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.9099999999999999`", " ", "n"}], "-", 
               RowBox[{"0.273`", " ", 
                SuperscriptBox["n", "2"]}], "-", 
               RowBox[{"3.8470250000000004`", " ", 
                SuperscriptBox["n", "3"]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1.3`"}], "-", 
                  RowBox[{"0.45500000000000007`", " ", "n"}]}], ")"}], " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{"n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.7`"}], "+", 
                    RowBox[{"0.455`", " ", "n"}]}], ")"}], " ", "n"}], "+", 
                  RowBox[{"1.`", " ", 
                   SuperscriptBox["n", "2"], " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{"1", "+", "n"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "-", 
                  RowBox[{"1.`", " ", 
                   RowBox[{"Log", "[", 
                    FractionBox[
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.3`", " ", "n"}]}], 
                    RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}],
                  ")"}]}], "+", 
               RowBox[{"1.3`", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}], 
               "+", 
               RowBox[{"0.45500000000000007`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}], 
               "-", 
               RowBox[{"5.2`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}], "+", 
            RowBox[{
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"n", " ", 
                RowBox[{"(", 
                 RowBox[{"0.7`", "\[VeryThinSpace]", "-", 
                  RowBox[{"0.455`", " ", "n"}], "-", 
                  RowBox[{"2.8`", " ", 
                   SuperscriptBox["n", "2"]}]}], ")"}]}], "-", 
               RowBox[{"1.`", " ", 
                SuperscriptBox["n", "2"], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1", "+", "n"}], 
                  RowBox[{"1", "+", 
                   RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1.`", "\[VeryThinSpace]", "-", 
                  RowBox[{"4.`", " ", 
                   SuperscriptBox["n", "2"]}]}], ")"}], " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{"1.`", "\[VeryThinSpace]", "+", "n"}]], "]"}]}]}], 
              ")"}]}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "-", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "-", 
               RowBox[{"3.055`", " ", "n"}], "+", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.`"}], "+", 
               RowBox[{"2.`", " ", "n"}]}], ")"}], " ", 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "n"}], 
               RowBox[{
                RowBox[{"-", "1"}], "-", 
                RowBox[{"0.3`", " ", "n"}]}]], "]"}]}], "+", 
            RowBox[{"n", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1.3`"}], "+", 
               RowBox[{"2.145`", " ", "n"}], "+", 
               RowBox[{"1.`", " ", "n", " ", 
                RowBox[{"Log", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "1.`"}], "-", 
                   RowBox[{"0.3`", " ", "n"}]}], 
                  RowBox[{
                   RowBox[{"-", "1.`"}], "+", "n"}]], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}]}]}], ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7038933574536123`*^9, {3.70389640942978*^9, 3.703896440997463*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"{", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"CoefficientList", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"mzaSeries", "[", "n", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", "g1"}],
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<First Order\>\"", ",", " ", "\"\<Second Order\>\"", ",", 
            "\"\<Third Order\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<First Three Taylor Series Coefficients for MZA+ Solution\>\""}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", " ", "\"\<MZA+ Series Coefficients\>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "@", 
        RowBox[{"CoefficientList", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"mzaSeries", "[", "n", "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", "g1"}],
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"n", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<First Order\>\"", ",", " ", "\"\<Second Order\>\"", ",", 
            "\"\<Third Order\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<First Three Taylor Series Coefficients for MZA- Solution\>\""}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", " ", "\"\<MZA- Series Coefficients\>\""}], 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
    "}"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.703896455979623*^9, 3.703896495202145*^9}, {
  3.703896559797949*^9, 3.703896579630835*^9}, {3.703896627512825*^9, 
  3.703896686177237*^9}, {3.703897536429986*^9, 3.703897555581161*^9}, {
  3.703897604846943*^9, 3.7038976071911077`*^9}, {3.703897639146851*^9, 
  3.7038977060283937`*^9}, {3.703897781603269*^9, 3.703897789906802*^9}, {
  3.704027757776435*^9, 3.7040277654622507`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
953M6g==
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
9iFHRuTMKRT0z8YM/mf1A2TzMjkKY3YGrv89L3JmrNabRYE5I8fov/H+dSVD
ditRULfMTfrvfcFujBpnZQq//8gG/TefrYfIpQGqFEbOJ1b/N18pT8bJiOUU
lIoNs4pol3mRrDurKJQdZyt8pn3Nm7Egcx2Fk9P/mdpN2+Yo6ft+A4W7Gmti
RmnP82UQtfoUpM+2Z8ym1/PbMXJWryEFtakFB9bSfujH8Pi5g8I+++/PzWkf
DiDzZE0prI+/lHqMtuYJxl+LLSm0ZnM2xdEeCCKdtG3p77lr+Xc+7fxTjGyG
PQULzxm+HbTPBZMSDs4ULgRemSFH75ftZxm2vu4UFO5rHTWgXRXC+HnDl8I3
I+G+FNpx58nd6QEUyLOqAw20911gJL85RaE4/9W+GfR+7YxgbO8Io3C+szzm
H9rpkeTNwUsUpL7U+lTR9o1icCZfodBvYLp8Vi8TI1cYV9fcopC0bd22NNpv
r5HtRokUnK7dft5HO+w6Y71dCgV3Bddp2+jzNC2e0Xj2Kd0nmT99StFenMhQ
LSuisKctebY7fV4PUk85H4spyOxNiSFpPzSQz3nLopB3M3+yJn2+V7Q2bs2p
paD38ZSEFJ0Ha1W8nW73UtBQ/fiyjs4Lf9+qpbEUhQy9+08s6Tx5+U6LihZT
cPOoY1bT1nUeDQ4ZpRD38vH1Bjp/ttz/57bHdD7WBL6Xl6PzK1QkcnaZzUcp
M1X4gPYHQ9vl9nP5aPoRtXwznXfG35VfmS3h48c37cLTA/R5VH1eq63LR4Iq
f92CYSYcH36Wk3TmQ/qE/4FpdP7eG9D5MubGx/Oxt7+babdvT0ga8uLj5RTN
I5m/mHDvPriK68+H03W5905/mDiiNrDrcwQfbcyC7XxJEs+C9s0oj+ZjpaLr
3BYpEgJmYWNxDB9uyQt+VtD57+8Z7plH96GSikKJt3R9CE5XDE/O4mOV2WXN
6r/o+jYSvPvOCz7qltxwbptG4tfOb7Pi8ujxghb3iGVJOpcfp0Z84OOws2ie
mjyJy+p6732+8KG+1ntz8WwSt585jOr/4sPPJSG3XYUE37JlKEVSgOsPHV/s
peud0aB9n8wUAU5Y70mso+shtdmeUztLgAzmz0PtS0kYVu9rOLJSgJvDK1Kg
QaJXbPviro0AM1k9XD263hrcrM+a2C+A99curzn6JGI22WZ4Ogvwvvw3NWpA
YtMFm5T13gJkK9rZN9P1/Ops62vlIQLcPq6kKtxJYoOu5ZHRDAGcvieG/GNP
Irql2sM1W4D1Oqk9XY4k2kMsDpL/CvDSp61qhzOJqFLz/XHvBdgfuzl2sTuJ
tv1mDI0vAhgqX5bb7ksi4qzJEocJATzbsdLyIomWRWUqhLQQj0SW7C2XSKwt
2TVv+TQhFvgbrt4YRfc7srtm9CsKoSfX2WESQ0IzmfE7apUQP6ZquA8mkqgn
trcU7BVi0j8TsuF5JL6ukz1a7CiEm/FzvugNXf9T6scqXYU4I/jL16uI/r/n
PVS+HxHi9a9zUmfo/myyUaSrTKgQh0uLn62vJ6H/obzXOl0IucGSloV0v2ek
deOUU6YQlvvyVzvR/eDOVMcpnrlCyF4qPfVknIRNGF89uFCIgJCEiWPSpfA1
mu57/5MQVdzkgEKlUqR8sBqgRoTQ2urQH29YinSt+eFD40KYEFIZ3TtKkZXa
qfBHQoSd8zVcd5mWoiAsUHeWrAhrJkV7mduVos7oZrDeYhHMTjVl29P9a3Pu
gb+2qYlw743XaruAUnxXXZ64W0OEu+bOaw6fLoVAIu+ts44I2/79Vt4QXgqZ
j01/wneJMKt35c2e5FLIrU+9fs1chJn9EVaZj0ox+4G36h1rEWIbYhbEZJZi
0YXRbc+cRBiXNwl99qYUm7YpX6rxE4E66uBv01QKn48usgsTRJijUHBQaT4L
7iktt98li1C3g10xZRkLjiF2Sw+kifDJ+nT7mjUsmOjv1k/KFmGUJd2xaDsL
ai90D88nRQgwjLQvP86C8vXcgYIKEbyY8+/dPMvC7GOrQ+1rRLj4uIJ8FMmC
hMaSW3daRehUkl54P4WFtlS5kjkDIsQEPCliNLBQH3rZ8vUPEZIzFxhHdbNQ
cUDqq91vev6xmu/VB1gomPezL36qGJlr0hVvzixDzkjgOR15MYg0W85h1TKk
fxFOqVcQY8jkwJNMrTLcjO1eNHuxGC+7JS4l2JThynGXZy/UxDhj9uGYhUcZ
Lpq36FqvEoPrN0UcfaoM/lM/m8fqiiFM6HuWd68M5mGFZ+XNxfjL+m/P6r4y
7HDRnZxtLUb75LX3nk0ph8GW3DiL/WIsu1rje2BxOdR/Ps646i4GKyg58bR1
ORY3qm7Q9BYjT7klU9K3HEqvkojKY2LUjEnpPLxcDmn/uMZpZ8TwPdK/O7S4
HOMWcu7PQsXY3Rt/VtBZjoHVl4WmEWJsrEje0yRVgQ7OOeno62IETi08/8K0
Ak3kj+vqt8TYv/Sl37BfBT6lBSqXJYphXnXimFtCBYpcvbWnpIvROqljxYu+
Crza2l2UnilGSllJnPaSSmQpu5jufCHG+WmKzQv3ViJttPlLb54Yh/bpbem7
WonEJtuDl96JUbuqe69xeSXiXn/iqxXTPp6v1DatClHxpqeZLDF8HhwLz7Gp
wvkAppRHNb0eMh9nT3pYhVN7EDOpXgx2uZHslbEqHFtTOD+tWYyiovVa6S7V
8JDVfby9nV7PJx2LyNpqOPFytLq6xfCeUOtb6/AJNqxV7y7wxCifMXYn5fcn
mD5+vGuJWIxFBy2aN33+DKNw1foPQ2Ks6o6f+BBcAz23JJeDY2Iot9yNcDhS
i7VQoiYmxHifdOeO8Z1W/A+lW47Z
           "]]}}, InsetBox[
         TemplateBox[{"\"First Order\"","\"Second Order\"","\"Third Order\""},
          
          "LineLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"MZA+ Series Coefficients\"", TraditionalForm], None}, {
          FormBox["\"n\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotLabel->FormBox[
        "\"First Three Taylor Series Coefficients for MZA+ Solution\"", 
         TraditionalForm],
       PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {-2, 2}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic},
       ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQl4U9eVv4oNBLK3me6d6XRfpnTaNO20042203a6Md03ZtI0jafLREOb
VB0mddJSpy1100TNYicxIVFCnIQoCUqwAWMwRoAFiCADMghHGIEFMsggI7DA
gvM/v3PvfZLsp8XYbWf+3zifFfT83tnXe++79/PX3Pj9666/5sYfXHvNaz/1
k2vmff8H197w2k/+50/4UtWLHI4pH3U4XvS71zrwb3I4zEfu52P4yL8ywQuz
5N/TiNIhqnU1U0qupqnZVUvBtLr/kmL3Oz36/lRl9zP8dKXwM2Fy1TjJn8gS
ZaNUX+Mqc3+E6p1OxuGkmpoaqm3o0LgK7/+TCPF/wIUr5X9VlEmnKZOVvzhc
+hplM5ROZ+TbVHONspROpfmTHDfqa9lMmtLq4dx9ec+68p9Nq2enmWfTuWdv
saFF3ed4u/zvAop4a8npCWse0uRhlXnCUFiKfPXOKdAhQ/CGk4ZPxw3yeTGl
wj7RsPzW+UjuYOtysrWEGEIq0saWw39z4p5a8sfSjp/IszMo7Ku3nq3zKvTp
sIe/K8tk2A6D24Jt4Z6JG9gSNe6aegop86ewh78LOylqa3AZELUevzFCLeQZ
wq3XBW5Txbh32LFfnS/Aiyjc7MoTIANJJinNsk743VTj8hE0lom1MKA6imZJ
MXApf8TJzdh8UbmBWmrZVVqi8u9kMgXFkpcF1xBICNhksIlBiJs75gkMdqZE
h4CNAAS7Zh3Da4nxFzafZCpTDEeOhCz56/mSLyoooi11VFPboihOJynFbKQj
zYyiiTQRIqCmUMrxU8sCOYI4RYgsLGVSZSSgDNrxujwIbW6WocvFEFz8OY2c
znoKm6ABrSoZV2sDDnlcLBejkSQ1qZB0vdYIIpCbIxDD0r9Octa3sKeE2B6b
jC1RKthArqZQlYaazWRyGNNBNmMhd57+czrkIWdDwLoj2OCCJKboP5M9cCXr
6WJQHqeLAsbWUgFyqajtsECwPrSXagxOqMtO1GUkoUX8en1XMh6jaDRKsViM
f6P87zgUNEUDjnotC3YYYYQ9tXmAQXttgYhZqXGGGBWI/Cv/TnLwQTLKk0Ko
CVKYYkmBLc6NiOCmlrYW1hL/2+2X+GXJmaOAqyFoSSHUVDtazjYY8uXc7MqT
MyvS5WwukHM23iFxw93cQi3Nbvl3RyKbk3NGPC9fzkXEoeX8VvlfNTuLl2rr
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
5KGWn2Lrqhwv+n+3aaJY\
\>"]],
      InterpretTemplate[Legended[
        Graphics[{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
953M6g==
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
9iFHRuTMKRT0z8YM/mf1A2TzMjkKY3YGrv89L3JmrNabRYE5I8fov/H+dSVD
ditRULfMTfrvfcFujBpnZQq//8gG/TefrYfIpQGqFEbOJ1b/N18pT8bJiOUU
lIoNs4pol3mRrDurKJQdZyt8pn3Nm7Egcx2Fk9P/mdpN2+Yo6ft+A4W7Gmti
RmnP82UQtfoUpM+2Z8ym1/PbMXJWryEFtakFB9bSfujH8Pi5g8I+++/PzWkf
DiDzZE0prI+/lHqMtuYJxl+LLSm0ZnM2xdEeCCKdtG3p77lr+Xc+7fxTjGyG
PQULzxm+HbTPBZMSDs4ULgRemSFH75ftZxm2vu4UFO5rHTWgXRXC+HnDl8I3
I+G+FNpx58nd6QEUyLOqAw20911gJL85RaE4/9W+GfR+7YxgbO8Io3C+szzm
H9rpkeTNwUsUpL7U+lTR9o1icCZfodBvYLp8Vi8TI1cYV9fcopC0bd22NNpv
r5HtRokUnK7dft5HO+w6Y71dCgV3Bddp2+jzNC2e0Xj2Kd0nmT99StFenMhQ
LSuisKctebY7fV4PUk85H4spyOxNiSFpPzSQz3nLopB3M3+yJn2+V7Q2bs2p
paD38ZSEFJ0Ha1W8nW73UtBQ/fiyjs4Lf9+qpbEUhQy9+08s6Tx5+U6LihZT
cPOoY1bT1nUeDQ4ZpRD38vH1Bjp/ttz/57bHdD7WBL6Xl6PzK1QkcnaZzUcp
M1X4gPYHQ9vl9nP5aPoRtXwznXfG35VfmS3h48c37cLTA/R5VH1eq63LR4Iq
f92CYSYcH36Wk3TmQ/qE/4FpdP7eG9D5MubGx/Oxt7+babdvT0ga8uLj5RTN
I5m/mHDvPriK68+H03W5905/mDiiNrDrcwQfbcyC7XxJEs+C9s0oj+ZjpaLr
3BYpEgJmYWNxDB9uyQt+VtD57+8Z7plH96GSikKJt3R9CE5XDE/O4mOV2WXN
6r/o+jYSvPvOCz7qltxwbptG4tfOb7Pi8ujxghb3iGVJOpcfp0Z84OOws2ie
mjyJy+p6732+8KG+1ntz8WwSt585jOr/4sPPJSG3XYUE37JlKEVSgOsPHV/s
peud0aB9n8wUAU5Y70mso+shtdmeUztLgAzmz0PtS0kYVu9rOLJSgJvDK1Kg
QaJXbPviro0AM1k9XD263hrcrM+a2C+A99curzn6JGI22WZ4Ogvwvvw3NWpA
YtMFm5T13gJkK9rZN9P1/Ops62vlIQLcPq6kKtxJYoOu5ZHRDAGcvieG/GNP
Irql2sM1W4D1Oqk9XY4k2kMsDpL/CvDSp61qhzOJqFLz/XHvBdgfuzl2sTuJ
tv1mDI0vAhgqX5bb7ksi4qzJEocJATzbsdLyIomWRWUqhLQQj0SW7C2XSKwt
2TVv+TQhFvgbrt4YRfc7srtm9CsKoSfX2WESQ0IzmfE7apUQP6ZquA8mkqgn
trcU7BVi0j8TsuF5JL6ukz1a7CiEm/FzvugNXf9T6scqXYU4I/jL16uI/r/n
PVS+HxHi9a9zUmfo/myyUaSrTKgQh0uLn62vJ6H/obzXOl0IucGSloV0v2ek
deOUU6YQlvvyVzvR/eDOVMcpnrlCyF4qPfVknIRNGF89uFCIgJCEiWPSpfA1
mu57/5MQVdzkgEKlUqR8sBqgRoTQ2urQH29YinSt+eFD40KYEFIZ3TtKkZXa
qfBHQoSd8zVcd5mWoiAsUHeWrAhrJkV7mduVos7oZrDeYhHMTjVl29P9a3Pu
gb+2qYlw743XaruAUnxXXZ64W0OEu+bOaw6fLoVAIu+ts44I2/79Vt4QXgqZ
j01/wneJMKt35c2e5FLIrU+9fs1chJn9EVaZj0ox+4G36h1rEWIbYhbEZJZi
0YXRbc+cRBiXNwl99qYUm7YpX6rxE4E66uBv01QKn48usgsTRJijUHBQaT4L
7iktt98li1C3g10xZRkLjiF2Sw+kifDJ+nT7mjUsmOjv1k/KFmGUJd2xaDsL
ai90D88nRQgwjLQvP86C8vXcgYIKEbyY8+/dPMvC7GOrQ+1rRLj4uIJ8FMmC
hMaSW3daRehUkl54P4WFtlS5kjkDIsQEPCliNLBQH3rZ8vUPEZIzFxhHdbNQ
cUDqq91vev6xmu/VB1gomPezL36qGJlr0hVvzixDzkjgOR15MYg0W85h1TKk
fxFOqVcQY8jkwJNMrTLcjO1eNHuxGC+7JS4l2JThynGXZy/UxDhj9uGYhUcZ
Lpq36FqvEoPrN0UcfaoM/lM/m8fqiiFM6HuWd68M5mGFZ+XNxfjL+m/P6r4y
7HDRnZxtLUb75LX3nk0ph8GW3DiL/WIsu1rje2BxOdR/Ps646i4GKyg58bR1
ORY3qm7Q9BYjT7klU9K3HEqvkojKY2LUjEnpPLxcDmn/uMZpZ8TwPdK/O7S4
HOMWcu7PQsXY3Rt/VtBZjoHVl4WmEWJsrEje0yRVgQ7OOeno62IETi08/8K0
Ak3kj+vqt8TYv/Sl37BfBT6lBSqXJYphXnXimFtCBYpcvbWnpIvROqljxYu+
Crza2l2UnilGSllJnPaSSmQpu5jufCHG+WmKzQv3ViJttPlLb54Yh/bpbem7
WonEJtuDl96JUbuqe69xeSXiXn/iqxXTPp6v1DatClHxpqeZLDF8HhwLz7Gp
wvkAppRHNb0eMh9nT3pYhVN7EDOpXgx2uZHslbEqHFtTOD+tWYyiovVa6S7V
8JDVfby9nV7PJx2LyNpqOPFytLq6xfCeUOtb6/AJNqxV7y7wxCifMXYn5fcn
mD5+vGuJWIxFBy2aN33+DKNw1foPQ2Ks6o6f+BBcAz23JJeDY2Iot9yNcDhS
i7VQoiYmxHifdOeO8Z1W/A+lW47Z
             "]]}}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{"MZA+ Series Coefficients", None}, {"n", None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
          PlotLabel -> 
          "First Three Taylor Series Coefficients for MZA+ Solution", 
          PlotRange -> {{-0.9999999591836735, 0.9999999591836735}, {-2, 2}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          LineLegend[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]]}, {
           "First Order", "Second Order", "Third Order"}, LegendMarkers -> 
           None, LabelStyle -> {}, LegendLayout -> "Column"]], {Right, Top}, 
         Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True], 
     TagBox[
      GraphicsBox[{{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
7CKV
           "]]}, 
         {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1: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
           "]]}, 
         {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
          Opacity[1.], LineBox[CompressedData["
1:eJwl1nlUTd8XAPBK4atkKBkKIRQhJSm0Q4/SoAkNKqUSRYMQXw2UlCElQ0qK
SJSKL5XIpt7tNdKgSUnTG+59UzMV+l3rd/+567PWXeees885e+8l7n42nlIS
EhJGkhISf9/bbgR77W2jUOL/z4dfu0Y2ZDRTeClUOXAxfwI/5aUf3FpPYb3P
acfc6gkMvPCnwIdFocXk8NKAuAl8s/yVV/kLCrXe+EHAggk08V3MPB9F4dxw
ZnyP3h88PDocOrSOQrutRzL1bv3CTe7pz66sovDz4HuToHO/cFqVVdPS5RRu
ytavbDn0C3PuZa2xXkBhjp1K/1ydXzgCbu3PpSl02GV6y6NhHKOiqvUPt5L4
3PnRanLBOD5SSB9qvUBimNWWTM/SUWTmTblSE0JixwqR/t68UWRb+C75GEzi
qyKy2SVlFFdE61pmHiexZ5+kJ54excxfrCenHEnslOLMy1szitlsgaOCNolb
2jts1e7/xFcFGz+ad/Gwru35iTlxP/CLXfJ+o3YeXnu57B0Z9gOH+yeEOs08
rLRS9Kr3+4EbNSsWKNfQfqi8s3PPDyxMcwoiC3nov8J/CTXzB76LCV8ZFcfD
h+YmxO3bI1jqVHkNgYfmdy2VjuQOY+0jhb6dBjzcU2rs7pw2jB3CAzafNvAw
xSe2xCN+GH+GiZW+afCQ6ay5PvvEMK59pJg2psDD7Y6n+ufrD2OSwOWlLo+L
umbfjtmyhtA/ZLApK46LL4u657n3DWJo2RZ9nStczBfasc70DOKVGVHJRRe5
WB/IfJbWNIgZD+YdrDjLxWxFpSfKxYPYRmwlOR5cHJdfkVZ6eRB3ykePL9Hn
YmaQ5lNCfRBVUlVUE7s4KBwbHBYeH8Dnd89P12/noJ33ilP9hwbQ8CZnrLWJ
g4odu5okHAbQNSavUbmag1pnhqjtOwbw4QnjK6n5HAwq4LnYzBtAdRPfkYwr
HJxoKMqPZfbjhv631a91OXgmo+TV5OX9aLbD6UxDDBv3XTr1J1OqD1cFnq6r
jWSjyY7TTX7DYpz2IEHjUxgbWUINTjJbjOV/qlrLT7LxW8kL50VlYtxZtMXg
vRsbl+4eyqq8JEaj9YvGM/XZ2PjTcMmL6WLUXdx1LpTsxRXdXC/DZSJcPO4V
rmHai34tl43HAgQoaDz8qGhHL+YGLnw800OAhXne5WaGvfjixmQjnX0CtPI6
OvO4Ti+mKFpw7hkIMLzuWNrLhb3I/BNlLCEtwO4nQR82D/Sgz4yhBWOJfMyw
uyBhmdyDvT7FNXurKFyTkxIeKOxGluWWwXpLEk2K9844yOtG9n2PpWbGJLpX
T79v0dONfk/na1bpk5hIhbxVb+3Gndraz7vVSJRe6TLSwezGbbN/nz0+zsOv
qYt8ze51o9atxtkDT3kYFZ+6X82sG3kpGiMBcjzsDHqwtimzC1mRap3v2Bw8
ci8+/d7RTjT8bRPyh9uL9qEOy7KXdmBhaGWa7+weVOdrONndb0OH7RNplUld
6GNpdbG7pwXfvZ2z9YxBJzqe2LN148YmFN67lfVduQMTkGeF+Q1Yf+LENljb
jiDVsm+tZB2+i46aN2T7FY+2lPg/HqxGvfLvdt8qWnDL3fPzioJZOHPjuXW9
Zs3o/a2/zWFuCf67Uy5wdLwR93RqPi9XK8JlbulNrM4vuBGTm6nIHGTKK/32
rGxA/T7nQx2HbuKvmLtKizvqcXWEeNqHkwng5rOHOWNaPeayRE/D7HNBpG9d
EaJXh8WmlZsMSt5A7aulBXsjapH/7OERS/sS+PklMkYh7TOmPF+bPPSaBTEG
cy1UnT/hO7eoOVoF1ZAX9DA+cFcNnlW827hndh24SngpFK+vxuraL8b1SQ0Q
ozUjsmB7FQZU6a24rtQEnpnaKv1HKvHRZ+M5XuUt8O8GtWvT4yvwanZB5hTz
Njiw0X0Xp6kcJRO+mJbKdMCatGgBZ2E5zn2axXpk0glPf3SecwtnYdOT8GUy
0V1guHrkeP9gGTplrYoK7O4G1RWTB3b7lOGW5CmbieW9oHy++WDHGIHyh0be
GK7uhbJzz83njRLYtYq9qVCrFz7FMhxtfxAYVVSyMWtzL4xqabdXDxJY1xqi
HW/dC0+KfC/WCAj0mjek4RzSC9leo6Uy3wmMu9U5b/hLL9QPZrXaMQnsuf5m
RC2SDWuDhtZF3yBQO+MqFRnDBsZk0YBiPIEX3rl29MayIfvEB/7D6wSqkjJl
j+6yoUvu6PmSqwS6bLe5pZbLhu7uE5YzLxHYMkTpqH1lw9f9cyW5/xJY7aAS
sEyLA7ZWkekXvQhU9hd7ROhy4C72+Rl4Eng0qsS+x4ADb+c3RvcdIvCf/7yN
0hkcKPpunH7QjcCdcq9nLHPiQLvM93irAwR+eG+RszSKA5s0eYr+NgS+WhbG
X9LOgakZPvKvgMDXMslBy7s48N8CV58nhgTmc/N/q3M4sDTaadK9rQQWZIlm
aPVxoJbs5kZvJrBIx2WDoTQXXF0LkwP0CMQdW0McNbkwsKsjOGwdgZWHxuUT
znHhP866jwmqBFYx5ibePs+FR+VvLfMW0+tbqbMkKYoLmVTixk+LCKzhH9V5
EMeFuZXF8+UXElh74uv+3EdcKJp0yuL+fAIbI96kVVVzAQVv/CUVCOxMP60t
vZAHFZPyXdomEzjUmiM+sZQHHoSHhRLtqTM52T0reWD9eOUkWxkC152zW1mq
zQOrGIequkkEhtqtV7lgwoPa2ycnsSUIVJHhy0gE8cCsWVBxaJyJWpuXlvqd
4cGluOOz340x0TjAIfx7KA9CXDq2KdH2+cYaex/DA6cdq11qfzKx6PUjcUgq
DxwPza90GmGig5dL63glD66edT5e189E33u3bvvU8sAtTWuDKe3w+mrbtkYe
FJ6eNLm0j4mZhps/FXXygMV/2/xOzMSfSvNKz4zwIJzr/W+FkIlyFnvCyXEe
cPdO8Kxpq0ZEbXWQJOHcgOfpdgETd4mHCjbJkaCQekXyJ5+Jt1l12T+WkODa
rjzflGLis99Tjx5eScLgBu7XbpKJ73WMVjZrkjAqlvsSSpudmvMgX4+EtLP6
wcU8Jm4IvnL7pAUJ94/FtO/lMtEkp8SWbUOCQ5vnc0naB3pHZ+61J2F6kPyn
XA4TI6y8r2w4RIIMM1FWgXa9OiN8MJgEM5WdDcO9TLyziqifHEqC3o1zHwtp
H9BkLF8QQcJVhaDKENrcdYxKo2skvH71S0+edvZ6QsXuBgnmKmYPW3uYGKjD
8Dt8h4Qy80btJ7R/bWQoxj4g4SLpXW9C++MmwutBBgl8Ax+uCu0oA8abV1kk
LLNKXjvYzUSzLYRseR4JvD9Ts6pozzRkuLS9JuG2bLVrBu1GIPJERSTUb5e2
iqCdtI0xSeoDCetvtoa6017OYGSqV5JAxak9Xkmb2kmMbf5MQkORQvp02nkm
DIs9X0hw1EkQDHcx8eRuItW9ld4PreHITtoG5oyBkx0kvM296VdDe8KCMI7p
IeHxncbcd7SZexh37vFIeFWnZppDO8aaIHOFJDgf/Wn4kLalLWNL6QAJCbmf
bybSVthLxDb9IMHLSscynnbLPkYX+YuO97nXx6/Svm9P6PyWpEBWemA0hvYh
R0bUzCkU6J+NHfxr9QNEyzI5CsbsDFz/fi9yZqzWm0UBc0au0d/x/nMlQnYr
UaBumZf893/BboxaZ2UKfv+RDfo7n62HiKUBqhSMhCXV/J2vlCfjZORyCpRK
DLOLaZd7Eaw7qygoP85R+Ez7mjdjQdY6Ck5Ovzy1h7bNUcL3/QYK7mqsiR2l
Pc+XgXX6FEif7cicTcfz2zFiFtuQArWphQfW0n7ox/D4uYOCffbfn5vTPhxA
5MuaUrA+4WLaMdqaJxj/LLakoC2Huyme9kAQ4aRtS6/nruW/BbQLTjFyGPYU
WHjO8O2kfS6YkHBwpuB84JUZcvR52X6WYevrToHCfa2jBrSrQxg/b/hS8M1I
uC+VdnwYsTsjgALirOpAI+195xkpb05RUFLwat8M+rx2RTK2d4ZTENZVEXuZ
dkYUcXPwIgVSX+p8qmn7RjO4k69Q0G9gunwWm4kjVxhX19yiIHnbum3ptN9e
IzqMkihwunb7eR/t8OuM9XapFLgruE7bRt+naQmMprNPKVhj/vQpRXtxEkO1
vJiCPe0ps93p+3qQesr9WEKBzN7UWIL2QwP53LcsCvJvFkzWpO/3iramrbl1
FOh9PCUhReeDtSreTrfZFGiofnxZT+cLf9/qpXEUBZl6959Y0vnk5TstKkZM
gZtHPbOGtq7zaHDIKAXxLx9fb6Tzz5b7l297TOfDmsD38nJ0/goViZxdZvOh
jJkmfED7g6Htcvu5fGj+Eb18M53vjL8rvzJbwocf37SLTg/Q91H1eZ22Lh8S
VfnrFgwz0fHhZzlJZz5In/A/MI3Ov/cGdL6MufHh+djb3y20O7YnJg958eHl
FM0jWb+Y6N5zcBXPnw9O1+XeO/1h4hG1gV2fI/nQzizczpck8FnQvhkVMXxY
qeg6t1WKQAGzqKkklg9uKQt+VtL5398zwjM/kQ+SikKJt3R9CM5QjEjJ5sMq
s0uaNf/Q9W0kePedF3yoX3LDuX0agb92fpsVn0+PF7S4VyxLYDj3cVrkBz4c
dhbNU5Mn8JK63nufL3xQX+u9uWQ2gbefOYzq/+KDn0tiXocKgXzL1qFUSQFc
f+j4Yi9d74wG7ftkpgjghPWepHq6HlKb7bl1swSQyfx5qGMpgYY1+xqPrBTA
zeEVqaBBIFts++KujQBmsnp5enS9NbjZkD2xXwDeX7u95ugTGLvJNtPTWQDv
K35TowYEbjpvk7reWwA5inb2LXQ9vzrb+lpFiABuH1dSFe4kcIOu5ZHRTAE4
fU8KuWxPYExrjYdrjgDW66T1djsS2BFicZD4TwAvfdqrdzgTGF1mvj/+vQD2
x22OW+xOYPt+M4bGFwEYKl+S2+5LYORZkyUOEwLw7ICVlhcIbF1UroLSQngk
suRsuUjg2tJd85ZPE8ICf8PVG6Ppfkd214x+RSHoyXV1msQSqJnC+B29Sgg/
pmq4DyYR2IDbWwv3CmHS5QnZiHwCv66TPVriKAQ34+d80Ru6/qc2jFW5CuGM
4B9fr2J6f8M8VL4fEcLrX+ekztD92WSjKFeZUCEcLit5tr6BQP0PFWzrDCHI
DZa2LqT7PSOtG6ecsoRgua9gtRPdD+5Mc5zimScE2Ytlp56ME2gTzlcPLhJC
QEjixDHpMvQ1mu57/5MQqnkpAUVKZZj6wWqAGhGC1laH/gTDMszQmh8xNC4E
E5TK7NlRhtlpXQp/JESwc76G6y7TMiwMD9SdJSuCNZNivMztyrDe6Gaw3mIR
mJ1qzrGn+9eWvAP/bFMTwb03XqvtAsrwu+rypN0aIrhr7rzm8OkyFEjkv3XW
EcG2/75VNEaUoczH5j8Ru0Qwi73yZm9KGcqtT7t+zVwEM/sjrbIeleHsB96q
d6xFENcYuyA2qwwXnR/d9sxJBOPyJqHP3pThpm3KF2v9REAddfC3aS5Dn48u
sgsTRTBHofCg0nwWuqe23n6XIoL6HZzKKctY6Bhit/RAugg+WZ/uWLOGhSb6
u/WTc0QwypLuXLSdhWovdA/PJ0QQYBhlX3GchcrX8wYKK0XgxZx/7+ZZFs4+
tjrUvlYEFx5XEo+iWCihseTWnTYRdClJL7yfysL2NLnSOQMiiA14UsxoZGFD
6CXL1z9EkJK1wDi6h4WVB6S+2v2m5x+n+V59gIWF8372JUwVQ9aaDMWbM8sx
dyTwnI68GDDdlntYtRwzvginNCiIYcjkwJMsrXK8GdezaPZiMbzskbiYaFOO
V467PHuhJoYzZh+OWXiU4wXzVl3rVWLg+U0Rx5wqR/+pn83jdMUgTOx7ln+v
HM3Di87Km4vhH+t/PWv6ynGHi+7kHGsxdExee+/ZlAo02JIXb7FfDMuu1voe
WFyB6j8fZ151FwMrKCXptHUFLm5S3aDpLYZ85dYsSd8KVHqVjFXHxFA7JqXz
8FIFSvvHN007IwbfI/27Q0sqcNxCzv1ZqBh2sxPOCroqcGD1JaFppBg2Vqbs
aZaqxE7uOemY62IInFoU9sK0EpuJH9fVb4lh/9KXfsN+lfgpPVC5PEkM5tUn
jrklVmKxq7f2lAwxtE3qXPGirxJfbe0pzsgSQ2p5abz2kirMVnYx3flCDGHT
FFsW7q3C9NGWL+x8MRzap7el72oVJjXbHrz4Tgx1q3r2GldUYfzrT3y1EtrH
C5Tap1VjdILpaSZLDD4PjkXk2lRjWABTyqOGjofMx9mTHlbjqT0QO6lBDJwK
I9krY9V4bE3R/PQWMRQXr9fKcKlBD1ndx9s76Hg+6VxE1NWgE5mr1d0jBu8J
tb61Dp/QhrXq3XlSDBUzxu6k/v6Epo8f71oiFsOigxYtmz5/RqMI1YYPQ2JY
1ZMw8SG4FvXckl0OjolBufVupMOROlwLStTEhBjeJ9+5Y3ynDf8Hot8u6A==

           "]]}}, InsetBox[
         TemplateBox[{"\"First Order\"","\"Second Order\"","\"Third Order\""},
          
          "LineLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.99, 0.01}], ImageScaled[{1, 0}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"MZA- Series Coefficients\"", TraditionalForm], None}, {
          FormBox["\"n\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
       PlotLabel->FormBox[
        "\"First Three Taylor Series Coefficients for MZA- Solution\"", 
         TraditionalForm],
       PlotRange->{{-0.9999999591836735, 0.9999999591836735}, {-2, 2}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {0, 0}},
       Ticks->{Automatic, Automatic}],
      InterpretTemplate[Legended[
        Graphics[{{{}, {}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
7CKV
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1: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
             "]]}, {
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]], 
            Line[CompressedData["
1:eJwl1nlUTd8XAPBK4atkKBkKIRQhJSm0Q4/SoAkNKqUSRYMQXw2UlCElQ0qK
SJSKL5XIpt7tNdKgSUnTG+59UzMV+l3rd/+567PWXeees885e+8l7n42nlIS
EhJGkhISf9/bbgR77W2jUOL/z4dfu0Y2ZDRTeClUOXAxfwI/5aUf3FpPYb3P
acfc6gkMvPCnwIdFocXk8NKAuAl8s/yVV/kLCrXe+EHAggk08V3MPB9F4dxw
ZnyP3h88PDocOrSOQrutRzL1bv3CTe7pz66sovDz4HuToHO/cFqVVdPS5RRu
ytavbDn0C3PuZa2xXkBhjp1K/1ydXzgCbu3PpSl02GV6y6NhHKOiqvUPt5L4
3PnRanLBOD5SSB9qvUBimNWWTM/SUWTmTblSE0JixwqR/t68UWRb+C75GEzi
qyKy2SVlFFdE61pmHiexZ5+kJ54excxfrCenHEnslOLMy1szitlsgaOCNolb
2jts1e7/xFcFGz+ad/Gwru35iTlxP/CLXfJ+o3YeXnu57B0Z9gOH+yeEOs08
rLRS9Kr3+4EbNSsWKNfQfqi8s3PPDyxMcwoiC3nov8J/CTXzB76LCV8ZFcfD
h+YmxO3bI1jqVHkNgYfmdy2VjuQOY+0jhb6dBjzcU2rs7pw2jB3CAzafNvAw
xSe2xCN+GH+GiZW+afCQ6ay5PvvEMK59pJg2psDD7Y6n+ufrD2OSwOWlLo+L
umbfjtmyhtA/ZLApK46LL4u657n3DWJo2RZ9nStczBfasc70DOKVGVHJRRe5
WB/IfJbWNIgZD+YdrDjLxWxFpSfKxYPYRmwlOR5cHJdfkVZ6eRB3ykePL9Hn
YmaQ5lNCfRBVUlVUE7s4KBwbHBYeH8Dnd89P12/noJ33ilP9hwbQ8CZnrLWJ
g4odu5okHAbQNSavUbmag1pnhqjtOwbw4QnjK6n5HAwq4LnYzBtAdRPfkYwr
HJxoKMqPZfbjhv631a91OXgmo+TV5OX9aLbD6UxDDBv3XTr1J1OqD1cFnq6r
jWSjyY7TTX7DYpz2IEHjUxgbWUINTjJbjOV/qlrLT7LxW8kL50VlYtxZtMXg
vRsbl+4eyqq8JEaj9YvGM/XZ2PjTcMmL6WLUXdx1LpTsxRXdXC/DZSJcPO4V
rmHai34tl43HAgQoaDz8qGhHL+YGLnw800OAhXne5WaGvfjixmQjnX0CtPI6
OvO4Ti+mKFpw7hkIMLzuWNrLhb3I/BNlLCEtwO4nQR82D/Sgz4yhBWOJfMyw
uyBhmdyDvT7FNXurKFyTkxIeKOxGluWWwXpLEk2K9844yOtG9n2PpWbGJLpX
T79v0dONfk/na1bpk5hIhbxVb+3Gndraz7vVSJRe6TLSwezGbbN/nz0+zsOv
qYt8ze51o9atxtkDT3kYFZ+6X82sG3kpGiMBcjzsDHqwtimzC1mRap3v2Bw8
ci8+/d7RTjT8bRPyh9uL9qEOy7KXdmBhaGWa7+weVOdrONndb0OH7RNplUld
6GNpdbG7pwXfvZ2z9YxBJzqe2LN148YmFN67lfVduQMTkGeF+Q1Yf+LENljb
jiDVsm+tZB2+i46aN2T7FY+2lPg/HqxGvfLvdt8qWnDL3fPzioJZOHPjuXW9
Zs3o/a2/zWFuCf67Uy5wdLwR93RqPi9XK8JlbulNrM4vuBGTm6nIHGTKK/32
rGxA/T7nQx2HbuKvmLtKizvqcXWEeNqHkwng5rOHOWNaPeayRE/D7HNBpG9d
EaJXh8WmlZsMSt5A7aulBXsjapH/7OERS/sS+PklMkYh7TOmPF+bPPSaBTEG
cy1UnT/hO7eoOVoF1ZAX9DA+cFcNnlW827hndh24SngpFK+vxuraL8b1SQ0Q
ozUjsmB7FQZU6a24rtQEnpnaKv1HKvHRZ+M5XuUt8O8GtWvT4yvwanZB5hTz
Njiw0X0Xp6kcJRO+mJbKdMCatGgBZ2E5zn2axXpk0glPf3SecwtnYdOT8GUy
0V1guHrkeP9gGTplrYoK7O4G1RWTB3b7lOGW5CmbieW9oHy++WDHGIHyh0be
GK7uhbJzz83njRLYtYq9qVCrFz7FMhxtfxAYVVSyMWtzL4xqabdXDxJY1xqi
HW/dC0+KfC/WCAj0mjek4RzSC9leo6Uy3wmMu9U5b/hLL9QPZrXaMQnsuf5m
RC2SDWuDhtZF3yBQO+MqFRnDBsZk0YBiPIEX3rl29MayIfvEB/7D6wSqkjJl
j+6yoUvu6PmSqwS6bLe5pZbLhu7uE5YzLxHYMkTpqH1lw9f9cyW5/xJY7aAS
sEyLA7ZWkekXvQhU9hd7ROhy4C72+Rl4Eng0qsS+x4ADb+c3RvcdIvCf/7yN
0hkcKPpunH7QjcCdcq9nLHPiQLvM93irAwR+eG+RszSKA5s0eYr+NgS+WhbG
X9LOgakZPvKvgMDXMslBy7s48N8CV58nhgTmc/N/q3M4sDTaadK9rQQWZIlm
aPVxoJbs5kZvJrBIx2WDoTQXXF0LkwP0CMQdW0McNbkwsKsjOGwdgZWHxuUT
znHhP866jwmqBFYx5ibePs+FR+VvLfMW0+tbqbMkKYoLmVTixk+LCKzhH9V5
EMeFuZXF8+UXElh74uv+3EdcKJp0yuL+fAIbI96kVVVzAQVv/CUVCOxMP60t
vZAHFZPyXdomEzjUmiM+sZQHHoSHhRLtqTM52T0reWD9eOUkWxkC152zW1mq
zQOrGIequkkEhtqtV7lgwoPa2ycnsSUIVJHhy0gE8cCsWVBxaJyJWpuXlvqd
4cGluOOz340x0TjAIfx7KA9CXDq2KdH2+cYaex/DA6cdq11qfzKx6PUjcUgq
DxwPza90GmGig5dL63glD66edT5e189E33u3bvvU8sAtTWuDKe3w+mrbtkYe
FJ6eNLm0j4mZhps/FXXygMV/2/xOzMSfSvNKz4zwIJzr/W+FkIlyFnvCyXEe
cPdO8Kxpq0ZEbXWQJOHcgOfpdgETd4mHCjbJkaCQekXyJ5+Jt1l12T+WkODa
rjzflGLis99Tjx5eScLgBu7XbpKJ73WMVjZrkjAqlvsSSpudmvMgX4+EtLP6
wcU8Jm4IvnL7pAUJ94/FtO/lMtEkp8SWbUOCQ5vnc0naB3pHZ+61J2F6kPyn
XA4TI6y8r2w4RIIMM1FWgXa9OiN8MJgEM5WdDcO9TLyziqifHEqC3o1zHwtp
H9BkLF8QQcJVhaDKENrcdYxKo2skvH71S0+edvZ6QsXuBgnmKmYPW3uYGKjD
8Dt8h4Qy80btJ7R/bWQoxj4g4SLpXW9C++MmwutBBgl8Ax+uCu0oA8abV1kk
LLNKXjvYzUSzLYRseR4JvD9Ts6pozzRkuLS9JuG2bLVrBu1GIPJERSTUb5e2
iqCdtI0xSeoDCetvtoa6017OYGSqV5JAxak9Xkmb2kmMbf5MQkORQvp02nkm
DIs9X0hw1EkQDHcx8eRuItW9ld4PreHITtoG5oyBkx0kvM296VdDe8KCMI7p
IeHxncbcd7SZexh37vFIeFWnZppDO8aaIHOFJDgf/Wn4kLalLWNL6QAJCbmf
bybSVthLxDb9IMHLSscynnbLPkYX+YuO97nXx6/Svm9P6PyWpEBWemA0hvYh
R0bUzCkU6J+NHfxr9QNEyzI5CsbsDFz/fi9yZqzWm0UBc0au0d/x/nMlQnYr
UaBumZf893/BboxaZ2UKfv+RDfo7n62HiKUBqhSMhCXV/J2vlCfjZORyCpRK
DLOLaZd7Eaw7qygoP85R+Ez7mjdjQdY6Ck5Ovzy1h7bNUcL3/QYK7mqsiR2l
Pc+XgXX6FEif7cicTcfz2zFiFtuQArWphQfW0n7ox/D4uYOCffbfn5vTPhxA
5MuaUrA+4WLaMdqaJxj/LLakoC2Huyme9kAQ4aRtS6/nruW/BbQLTjFyGPYU
WHjO8O2kfS6YkHBwpuB84JUZcvR52X6WYevrToHCfa2jBrSrQxg/b/hS8M1I
uC+VdnwYsTsjgALirOpAI+195xkpb05RUFLwat8M+rx2RTK2d4ZTENZVEXuZ
dkYUcXPwIgVSX+p8qmn7RjO4k69Q0G9gunwWm4kjVxhX19yiIHnbum3ptN9e
IzqMkihwunb7eR/t8OuM9XapFLgruE7bRt+naQmMprNPKVhj/vQpRXtxEkO1
vJiCPe0ps93p+3qQesr9WEKBzN7UWIL2QwP53LcsCvJvFkzWpO/3iramrbl1
FOh9PCUhReeDtSreTrfZFGiofnxZT+cLf9/qpXEUBZl6959Y0vnk5TstKkZM
gZtHPbOGtq7zaHDIKAXxLx9fb6Tzz5b7l297TOfDmsD38nJ0/goViZxdZvOh
jJkmfED7g6Htcvu5fGj+Eb18M53vjL8rvzJbwocf37SLTg/Q91H1eZ22Lh8S
VfnrFgwz0fHhZzlJZz5In/A/MI3Ov/cGdL6MufHh+djb3y20O7YnJg958eHl
FM0jWb+Y6N5zcBXPnw9O1+XeO/1h4hG1gV2fI/nQzizczpck8FnQvhkVMXxY
qeg6t1WKQAGzqKkklg9uKQt+VtL5398zwjM/kQ+SikKJt3R9CM5QjEjJ5sMq
s0uaNf/Q9W0kePedF3yoX3LDuX0agb92fpsVn0+PF7S4VyxLYDj3cVrkBz4c
dhbNU5Mn8JK63nufL3xQX+u9uWQ2gbefOYzq/+KDn0tiXocKgXzL1qFUSQFc
f+j4Yi9d74wG7ftkpgjghPWepHq6HlKb7bl1swSQyfx5qGMpgYY1+xqPrBTA
zeEVqaBBIFts++KujQBmsnp5enS9NbjZkD2xXwDeX7u95ugTGLvJNtPTWQDv
K35TowYEbjpvk7reWwA5inb2LXQ9vzrb+lpFiABuH1dSFe4kcIOu5ZHRTAE4
fU8KuWxPYExrjYdrjgDW66T1djsS2BFicZD4TwAvfdqrdzgTGF1mvj/+vQD2
x22OW+xOYPt+M4bGFwEYKl+S2+5LYORZkyUOEwLw7ICVlhcIbF1UroLSQngk
suRsuUjg2tJd85ZPE8ICf8PVG6Ppfkd214x+RSHoyXV1msQSqJnC+B29Sgg/
pmq4DyYR2IDbWwv3CmHS5QnZiHwCv66TPVriKAQ34+d80Ru6/qc2jFW5CuGM
4B9fr2J6f8M8VL4fEcLrX+ekztD92WSjKFeZUCEcLit5tr6BQP0PFWzrDCHI
DZa2LqT7PSOtG6ecsoRgua9gtRPdD+5Mc5zimScE2Ytlp56ME2gTzlcPLhJC
QEjixDHpMvQ1mu57/5MQqnkpAUVKZZj6wWqAGhGC1laH/gTDMszQmh8xNC4E
E5TK7NlRhtlpXQp/JESwc76G6y7TMiwMD9SdJSuCNZNivMztyrDe6Gaw3mIR
mJ1qzrGn+9eWvAP/bFMTwb03XqvtAsrwu+rypN0aIrhr7rzm8OkyFEjkv3XW
EcG2/75VNEaUoczH5j8Ru0Qwi73yZm9KGcqtT7t+zVwEM/sjrbIeleHsB96q
d6xFENcYuyA2qwwXnR/d9sxJBOPyJqHP3pThpm3KF2v9REAddfC3aS5Dn48u
sgsTRTBHofCg0nwWuqe23n6XIoL6HZzKKctY6Bhit/RAugg+WZ/uWLOGhSb6
u/WTc0QwypLuXLSdhWovdA/PJ0QQYBhlX3GchcrX8wYKK0XgxZx/7+ZZFs4+
tjrUvlYEFx5XEo+iWCihseTWnTYRdClJL7yfysL2NLnSOQMiiA14UsxoZGFD
6CXL1z9EkJK1wDi6h4WVB6S+2v2m5x+n+V59gIWF8372JUwVQ9aaDMWbM8sx
dyTwnI68GDDdlntYtRwzvginNCiIYcjkwJMsrXK8GdezaPZiMbzskbiYaFOO
V467PHuhJoYzZh+OWXiU4wXzVl3rVWLg+U0Rx5wqR/+pn83jdMUgTOx7ln+v
HM3Di87Km4vhH+t/PWv6ynGHi+7kHGsxdExee+/ZlAo02JIXb7FfDMuu1voe
WFyB6j8fZ151FwMrKCXptHUFLm5S3aDpLYZ85dYsSd8KVHqVjFXHxFA7JqXz
8FIFSvvHN007IwbfI/27Q0sqcNxCzv1ZqBh2sxPOCroqcGD1JaFppBg2Vqbs
aZaqxE7uOemY62IInFoU9sK0EpuJH9fVb4lh/9KXfsN+lfgpPVC5PEkM5tUn
jrklVmKxq7f2lAwxtE3qXPGirxJfbe0pzsgSQ2p5abz2kirMVnYx3flCDGHT
FFsW7q3C9NGWL+x8MRzap7el72oVJjXbHrz4Tgx1q3r2GldUYfzrT3y1EtrH
C5Tap1VjdILpaSZLDD4PjkXk2lRjWABTyqOGjofMx9mTHlbjqT0QO6lBDJwK
I9krY9V4bE3R/PQWMRQXr9fKcKlBD1ndx9s76Hg+6VxE1NWgE5mr1d0jBu8J
tb61Dp/QhrXq3XlSDBUzxu6k/v6Epo8f71oiFsOigxYtmz5/RqMI1YYPQ2JY
1ZMw8SG4FvXckl0OjolBufVupMOROlwLStTEhBjeJ9+5Y3ynDf8Hot8u6A==

             "]]}}}, {
         DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{"MZA- Series Coefficients", None}, {"n", None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
          PlotLabel -> 
          "First Three Taylor Series Coefficients for MZA- Solution", 
          PlotRange -> {{-0.9999999591836735, 0.9999999591836735}, {-2, 2}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          LineLegend[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[1.6]]}, {
           "First Order", "Second Order", "Third Order"}, LegendMarkers -> 
           None, LabelStyle -> {}, LegendLayout -> "Column"]], {
         Right, Bottom}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.703896462421904*^9, 3.703896496516314*^9}, {
   3.703896562871643*^9, 3.703896580905945*^9}, {3.7038966363949842`*^9, 
   3.703896686871641*^9}, {3.703897545472933*^9, 3.703897556566341*^9}, 
   3.7038976078112*^9, 3.7038976466839647`*^9, {3.7038976894753923`*^9, 
   3.7038977065924053`*^9}, 3.7038977907148123`*^9, 3.704027767062112*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mzaSeries", "[", "n", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", 
   RowBox[{"n", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7038980255249662`*^9, 3.703898030796425*^9}}],

Cell[BoxData[
 RowBox[{"0.5812096209695766`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.5529659145691279`", " ", "g1"}], "-", 
  RowBox[{"0.2880454174227952`", " ", 
   SuperscriptBox["g1", "2"]}]}]], "Output",
 CellChangeTimes->{3.703898035035426*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Derivative of omega as a function of n", "Subchapter",
 CellChangeTimes->{{3.704050029179204*^9, 3.704050037481596*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dOmegadN", "[", 
    RowBox[{"n_", ",", "g1_"}], "]"}], "=", 
   RowBox[{"D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ConAxialSymOmegaNMZA", "[", 
      RowBox[{"n", ",", "spectAbs2"}], "]"}], ",", "\[IndentingNewLine]", 
     "n"}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.704043985486877*^9, 3.704044010976071*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dOmegadNDataRaw", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "g1", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"dOmegadN", "[", 
        RowBox[{"n", ",", "g1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "0.99"}], ",", "0.99", ",", "0.01"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g1", ",", 
        RowBox[{"-", "10"}], ",", "10", ",", "1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.7040474444720488`*^9, 3.704047456253891*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dOmegadNDataRawShortRange", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n", ",", "g1", ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"dOmegadN", "[", 
        RowBox[{"n", ",", "g1"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"-", "0.99"}], ",", "0.99", ",", "0.01"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g1", ",", 
        RowBox[{"-", "1"}], ",", "1", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.7040502542317533`*^9, 3.7040502637365026`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dOmegadNData", "=", 
     RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
       RowBox[{"dOmegadNDataRaw", ",", "\[IndentingNewLine]", "1"}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], "//",
    "Quiet"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dOmegadNDataShortRange", "=", 
    RowBox[{"Transpose", "[", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
      RowBox[{"dOmegadNDataRawShortRange", ",", "\[IndentingNewLine]", "1"}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], "//",
   "Quiet"}]}], "Input",
 CellChangeTimes->{{3.7040436278513517`*^9, 3.704043700052702*^9}, {
  3.704043822797653*^9, 3.704043910198991*^9}, {3.70404394041348*^9, 
  3.7040439482678747`*^9}, {3.704043978429618*^9, 3.704043984388115*^9}, {
  3.704044022653941*^9, 3.704044026867618*^9}, {3.704044064444312*^9, 
  3.704044071106724*^9}, {3.7040441113511457`*^9, 3.704044116121861*^9}, {
  3.7040474361383343`*^9, 3.704047462239887*^9}, {3.704050269521151*^9, 
  3.704050276248719*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{"dOmegadNData", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<MZA Solutions\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MZA+\>\"", ",", "\"\<MZA-\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n\>\"", ",", "\"\<\!\(\*SubscriptBox[\(g\), \(1\)]\)\>\"", ",", 
      "\"\<d\[Omega]/dn\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.70404412578157*^9, 3.704044161875823*^9}, {
  3.7040443220120573`*^9, 3.7040443253737783`*^9}, {3.704044364818221*^9, 
  3.704044399745541*^9}, {3.704044466917323*^9, 3.7040444676842327`*^9}, {
  3.704045057864303*^9, 3.7040450878923693`*^9}, {3.704045254633432*^9, 
  3.704045279502812*^9}, {3.704045321390635*^9, 3.704045338149199*^9}, {
  3.704045909136023*^9, 3.704045965059698*^9}, {3.70404605187984*^9, 
  3.704046053444558*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[0.3315753, 0.4561011, 0.6388182], 
      Point3DBox[CompressedData["
1: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
       "]]}, {
      RGBColor[0.7926498, 0.5499369, 0.1278459], 
      Point3DBox[CompressedData["
1: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
       "]]}}, Axes -> True, 
    AxesLabel -> {
      FormBox["\"n\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(1\\)]\\)\"", TraditionalForm], 
      FormBox["\"d\[Omega]/dn\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4},
     FaceGridsStyle -> Automatic, ImageSize -> Large, PlotLabel -> 
    FormBox["\"MZA Solutions\"", TraditionalForm], 
    PlotRange -> {{-0.99, 0.99}, {-10., 10.}, All}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {Automatic, Automatic}}, 
    Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {0.5305905570424216, -2.8358211963885966`, 
     1.7682171254940844`}, 
    ViewVertical -> {-0.1409863354377179, -0.11880171765164241`, 
     2.457143927793586}],FormBox[
    FormBox[
     TemplateBox[{"\"MZA+\"", "\"MZA-\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3315753, 0.4561011, 0.6388182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.22105020000000003`, 0.3040674, 0.4258788], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.3315753, 0.4561011, 0.6388182]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.3315753, 0.4561011, 0.6388182], Editable -> 
                  False, Selectable -> False], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7926498, 0.5499369, 0.1278459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5284332, 0.36662459999999997`, 0.08523060000000002], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.7926498, 0.5499369, 0.1278459]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.7926498, 0.5499369, 0.1278459], Editable -> 
                  False, Selectable -> False], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7040441631121397`*^9, 3.704044326249496*^9, 3.7040443702228937`*^9, 
   3.704044401050729*^9, 3.704044468740266*^9, 3.704045089127819*^9, {
   3.7040452583624*^9, 3.7040452809332323`*^9}, {3.704045333209544*^9, 
   3.7040453400427723`*^9}, {3.704045914259673*^9, 3.7040459660934753`*^9}, 
   3.704046054729816*^9, 3.704050223283424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", "\[IndentingNewLine]", 
  RowBox[{"dOmegadNDataShortRange", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<MZA Solutions\>\""}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<MZA+\>\"", ",", "\"\<MZA-\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<n\>\"", ",", "\"\<\!\(\*SubscriptBox[\(g\), \(1\)]\)\>\"", ",", 
      "\"\<d\[Omega]/dn\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.70405028811215*^9, 3.7040503119847593`*^9}, {
  3.704050463253442*^9, 3.70405046696504*^9}}],

Cell[BoxData[
 TemplateBox[{Graphics3DBox[{{
      RGBColor[0.3315753, 0.4561011, 0.6388182], 
      Point3DBox[CompressedData["
1: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
znOqv99Oa6kNzphzZM+5O8vXjwkHTvU3PBmpmNTMc6p/TMW9oCc1EXi8pFZF
fbWW5Hj+PY+ITCAHQ8uuCoFT/StDRk16OYEfL9X/iErRjZYInsO+lis3BxuY
YZ3FZNR/+5LT/etB/z2DE9ZVD68ATvWfp626w7hvAnCq/wWdl7JLgiNRvGTe
P1nvjrcyi7iAba0+aFtvF47qMsz2T8PF2sN5TvVXbLKY2rUVc44cKfGI6u4d
AZzqv7+voV1uLc9hPi/lkJbVwuLxEudF8cuSJOeN3/OIyHY57aAIVX5c8Fz4
789Xy4U8h+fCZ68HL9jJ60n1T15e2mXWOxrVFZP8yqT4tS+i2V+XBfNS0N+1
OPZCyo0y4PB+h7rM1aiGeODwHYk3aVF3yyNRvGQ98MRv2bpHLOKS+c/gIHe/
CRGoLsP4PLFOjS4OBw7zfOtWexutCMQl69bhSzX7tvOc6p/d5ZGaVM/XhXXr
7vybi84J8XhJl/fPmKOjIlEeyfGf2tG2JZzn0GeSel9v6K4o4FR/p/jy00Gy
vJ5U/4a5LzwrP2CdJevWpoBN3tv57yNT/d3SAxpD4kqAU/0v67qaaefz3/uG
55svtuV8HBiF4jn2rLqXX66SEHHJOuuMWoxXbgSqyzCeRyyz5F/xnOrvvOWw
w8oxLOIcCW50Cuwv5jnV//Lkja4+9nxd2G89KsJPZUgkHi+R6dos1RkQifKI
yMWXP9WGbOXHRfWfYHBP66Us/x1kuH9es6vuYyjPqf7OrtkO6w5gncXE+Uv5
7BFjYnv2w+X1Vx3ud31xThFwqn/Ukyfrwrl44PCer37H/Mk6USieY/PvXq+6
vUuIuOT43xW4Wd+dRXUl55+t7919HXkO8/+vbl/l+woR58icc+lqpnY8p/rb
mjVOlJesBymHfja/XgaffSLxeInxm9TW4I1RKI+I2F8dM2Sj5LxBOdXfqe/2
9/KhPIfjX2GHzyCbGOCwL57JhueD1bDOYsKUZVtPq4rt6Qvi9TcZL/X9m2Yh
cKq/hyNJMoiMB0713+qUERh0NArFc2w/0YAmP38h4gJ23o6UazemCVFdhgnc
dWjomNk8p/pf1DCXSTqHOUe6Zow2MZGOBE71n/L0zbKjd3kO92kmjHMcrReF
x0u0PQcPVe2MQnlEhGmp1LriHw0c9A8LUg88HAOc6j/vXa8fubN5Pan+F2e8
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
jMdLPK7+fU/5QQnKIyJ9++ZNWS1dBpz6cq+36JH7O55TXxSuBYZ/Med1pr7c
NNNTdZOpQHXFxFrVNOiyTwXsc0l98T1f0vaPhuh/9r/8zxcdx/CZ395kA6e+
XKiWKbhtmQWc+uL5j1EFmYjjOXbn7rLeD+1yEBewESnVde9656G6DBPz9+A6
0yf5wKkvL7faaT/VLUCcI/NORigHVBQCh+9jbSvq1rQrBk59yX0dHP+ifyke
L0lUWyeYbVCG8oiIcf/xtSp9y4HDe4VGSn+/iOQ5jO+LR3TzcV5n6ktFRoXN
8GlYZzFpd9tcvj5f1NPvxPtipfV+wQCLCuDUlykpw7uPGOYAp748Wl+1aqlx
NnC43/vW/eFxfRzPsXZ6d3o9ictFXMA2ZfhwlcfzUV2GMWlNPemlWQCc+pLa
1e+N/7dCxDmiPFllgU9QMXDqS7D9tcZzkusp5dSXjtUile9XyvB4yf7Rc6Vi
JMf573lExHaHIOf2FF4f6ouPV8GtW808p3rrX1piVfOO15n6MiKm1T7kYCWq
KyZ2wc/P6E6t6umDqgNf/L5P/TMgvhw49cVpUy9rH5lc4NQX3wH5im+25wCH
+zDqmqbTr+B4jjXo2qtwVSsfcQFrqOU+S2lYAarLMLatC5dFdhcCh+9DTq2Z
NLuyGHHJev8PY4Wj0aXAoQ/8rL2jTXIZcHgP8ZZbYMi7/2+8pGD5NP/97hUo
j4io3RyQcHufCDj1xbfL+9B+nUrg8BzW9dCTkYN4nakvy7oiN4sKqlBdMZkk
uvwP87i6pz+K9yWB9Wh12VwOnPpiceFHQndhLnDoT7gYn7rHnefUlynueou4
zjwUz7Ga2xfYeBZ/RFwyH3NwWaRTW4jqMsyUq9PZLd+LgVNfOtL+3TS3dxni
HAlM7+r3sy//+6kv5t9cZzZIzueUU180fnwK8fhegcdLTOZ5NjfXi1AeEQnZ
NNpkfG4lcPi+k/jxK6uQKuDUl4rdt+fK3uZ1pr488HjQZGhdg+qKSWbfad+P
6df29E3xvqg2NX1Y9Uc5cOrLKIWYun75ecCpL7PMmrftauQ5PLfdOtJ6x52P
KJ5j/YyLLHKCCxEXsH4+7vf/7ChGdRmmOnHw9LEqZcCpL7rXj5nYaZcjzpGO
FIXZmcYVwOHvRWGZoqalCDj1Zdasw+77D1Xi8RL7UPVoJ5sqlEdENGRDv4Qf
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
deCwfrV+9WD95Bmorpi01kR9NRo5U/j/AJbkNBY=
       "]]}, {
      RGBColor[0.7926498, 0.5499369, 0.1278459], 
      Point3DBox[CompressedData["
1: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
mTHvvyb9mlp06BMZ0MvA/PsHhjtX8j5+8azGPecmah0R2RYXGDrJrBkdtz8O
CkvmPv6CDn1OKy/P3/7oGzr0ia4gMWLzH9RcMQnVHXV+zuE2pmPc/K4+3n+q
y9g/9QQc+hx56rnlyUEvdOizrHpfv5W/Mhius+Rr9ondte/K0KHPzyPpNke2
itChzwNLUjFkcD3DnSskQRdH/1x6uoFaR0S0XKbnv1wlRoc+Q3d6DFJe0IIO
fV4/8jNbP/wrOvSxT9L780v0jZorJi6H/r5b4fmD+f/R8vrqj9jHdu/4s4dX
1hFw6LN7SLzZZr4XOvSR6TvwzvcjaQzXWVKY7nogJqUEHfqorTnf+3hDNTr0
UXhovm/PkTqGO1dI1KfFWB25+pFaR0SM+AfS03c1oUOfG+2jZHdINaNDH02V
nPl9E1rQoc9KldA7+y9+peaKyfGvqt36yX9nOg6jH3T1mT9tX9vVgbUEHPqY
eycY+E70Roc+W+d6ysSOYhmus6T8u17W/foidOjjqdtcrRIkRIc+A+y9tl6q
q2W4c4XE6PFjNkhQT60jIjJXo5hNRxvQoU/qmpB+a8s+o0MfA6fBD3o+a0bH
48d10xzq5n2h5oqJYHOtW2nCV6Zjt3FFV5+RE/ja99RqCDj0Uf2w9NTbm97o
0CdobcBApb7JDNdZMtTlk8ahZYXo0Of5vE0tvkpV6NDHRn3C0vCHIoY7V0h4
P9Y9XbP0PbWOiES8vng0yfsjOh5Xztiqu/pzIzr00Zm82mSttRgd+iRtHWag
PLiFmismqX1eqOfc/cI0dGyWPmAf0xnTT/RhJO+rnQ59Hv5+XHCmzhsd+gx9
EjP73NxEhussudpalrKNl48Ofe7U3Bi1a34FOvQp/qNr16RTw3DnCgl/qfPW
/kXvqHVERD02esX2MR/QoU9SL1/dhvkN6NDn97i92mOUP6NDn43BO6Pk+jZT
c8XkV9/TISbnWuC/xz6Gty4kBjdXEnDoYzshXK58gw869Ikd0c3M0yKB4TpL
wl72buy5Pw8d+kRa1TspHi9Dhz7Zjm5HZm+oZrhzhSTii91v7ae11DoiojBa
e+Ij//fo+Pp6rlC25DU+b7DPJsUheUMu4fEG9pn1+smUx7Jiaq6Y/JU3az5+
vplR79gwdfWRO5QwXDOhnIBDnzvXfDO6+fugQ5/T2jI6x6TiGa6zxClUXWmH
XC469Pm92ezPqaQSdOjzRFPj9anNQoY7V0hcD23eZWkootYRkcNNHvGaenXo
0CfZ46//WZUP6NBntOrB8MUfPqFDn8NP1SYfsWyi5orJq2Ff3PvcFTPf/3/4
/q0e+yhuv5voKywl4NCnLVTVtHaoLzr00b/yrOisI5/hOkty61NS239lo0Mf
uwEl3ZzUi9HxfG9E1N/w1EqGO1dI1r+cX8Dq1VDriIjp5/6v1i98hw59XL88
nVj+7j069DEbLrf0vysf0aGPjPmj5Sd/N1BzxaRpcvv8lFOfGbeOA/uuPoPb
TtT+WFZCwKGPr1xQsaWJLzr0Ef/KNij3iWW4zhKj3CJPaVEWOvTZ8vCzz9SP
hejQZ+CruMoLChUMd66QpB2dP7LlTDW1jog06LrOrJevRcftz7Tf/e4H16FD
n2Uhye+OzPyADn0UtL7Nc7H9RM0VE20Xr4HSdY2MVseJ0a4+kQc2ej9ILSLg
0Gf/vGMeXyp90aHP26lDXY23RjNcZ8lbdf72gh8Z6NAnfI9hn7meBejQp3/g
QDfjF2UMd66Q+JfNVdlzT0itIyJ70y3lFk0UoUMft1k8k6XP3qFDH5nBvzzu
f3uPDn0qvP19pq38SM0Vk68NyjdeXoXjsa4+BZZyT8bdKiTg0Of+OJfY6ev8
0KGPUt9HK+zkIxmus+T2PAex2dx0dOiz+cWdaHPTfHTo09Oh9+jCuaUMd66Q
7PZ/NeHGhSpqHcn254V3dIBKDTr0aVUo+iP7sBYd+swJ23KyurAOHfqc4Sls
iO77gZorJhsOLCsfq/yJ+Xe96T32UX37oqntUAEBhz69s+YOUfb3Q4c+w0Y/
OjlgTATDdZZMzZR6mX43FR36pAgefN15LA8d+mjru+usrSlmuHOFJHdd98Ib
4gpqHRE5tfnTvdl7qtGhz76ne0nRSxE69MnxPW2Wlv4OHfocWLZzkN3H99Rc
MZmQpnHe7OcH5t91qK4+C7X2/8jTySfg0Ce8YKN7v1Fv0KGPZvy+LEOVMIbr
LNluKbNaoTuLDn2+DjicsUs/Fx367Pp+puqzdxHDnSskc3TGhRveLqfWERH9
bXuaSyWvO3DoIz2wJelwVA06bn8EAUkjC2rRoU9Czdomrco6aq6YmF1JClhR
Wt95fa2rj465b7umcR4Bhz6zBi11iDN/g47n4Xc0jPl2JpThOkve/TwmfeJJ
Mjr0sXkXYXDVKAcd+hitUa3Rv13IcOcKicuEhb1MVcqodUTERc8nY51jFTr0
ybyysVqqvhod+hivq1xe3ihCx/1n4cOB70TvqLlisrRk4liFjPed19fqut7f
U6cOqnTLJeDQJ8NvueLuT2/QoU/qkxaX7YnBDNdZwrNwXv51eRI69Enbtr2w
z+NsdOjzvnC7xd0LBQx3rpBoDtC4u6C1hFpHRP5cyB2/bVElOvSZT97eU1Ko
Roc+b5pHll8YIULH67ka0/xvtdVSc8Xki/Ec1TU5dZ3X17r6HBT0+3nzfQ4B
hz7Snlqvcnb5o0Of68/GnQtVCWK4zpLstSbfDX8K0KHP4U+e/IZrWejQ59GB
mP53L+Qz3LlCohXtVHQtq5haR0SenPZnztWXo+P+8+7uiQ7HhejQR27v3IFG
G2vQoc+h25FxbuNrqbli4tR+9cbP2ned19e6+hzdkeWRvCyHgEMfm19jzi1M
8EeHPj7XJyotuRDAcJ0l/c/PfVaUmoAOfU7JTFCoEGegQ595w7ams7fyGO5c
IVk3a8GdqxFF1Doikt/tcDe7N2Xo0Ef46P7mFUZV6NCn560Suad3q9Hx/JiW
bMwHDRE1V0x8G25vzu71rvP62jvss8jLKO+hczYBhz4FPwMV7ioHoEOf0te5
WxhvP4brLOnu/nejrl88OvTJ1vre58GldHToo7bJQrbqVS7DnSskKupsqW1Q
IbWOiDDnMj6+u1WKDn12bL8ufWZmJTr0mZ9ylsQWCdGhz7HhM/sr3Kuh5orJ
qvwVX64uqO28vtbVZ4C6tobskGwCDn2ivjrvLnAKQIc+azeeq53W3YfhOkui
65ZdufQyDh36LD9/zfzLyDR0fH3N6NV4Ly2H4c4VEvWFD2Zt4BVQ64hIaF8D
b8GpEnTo43C+UrH9azk69HlypT/7bbYQHfpEDd9WQ/KrqblicnlK9oQaAxHT
sVmS6+qjWDzIOml8FgGHPv4b9U8M6B2IDn2a/zbeGHLNk+E6S6RCnT4zkuMy
cOjz6PjZiYuTWXTo09hU4cKTymG4c4Wk0UdQpZuZT60jIkZ79NwSjhSjQ5+D
R0Ye0M4qQ4c+0gaHWqPHVqFDn8qt+8ftmFpNzRUTkZm71u/QGqbjYem12GfS
+4at8+dkEnDow3dXiVQmgejQJ7AxzcR0lDvDdZYEjm22FG9j0HH7/ELeIdYy
BR36yK+89uWkWjbDnSsk/y00NA/7nEetIyKloVPeOR4vQoc+Px7MHjOcV4oO
fbZ+mDHm2McKdOgjq96/1eq6kJorJkMDtm6v717DdJx2vQx9WCbh9NChVUEq
alznMV6zI7LJjgwCDt2y7/R0KroYiA7dKt6Va8akv2a4zpJP7wPqh96IQYdu
+lY/743Ym4wO3TSuPTp2c1gWw50rJGMvyZWsl82j1hERte8lj2dfLkSHbuPO
73T+HFiCDt1sRrOu1mw5OnYbXTJ6fWoVNVdMyuuddUr3VXdeL+vqVv9kX9FG
gz+E6zxGIOg+oM06HR26qX3NmtwzKBAdurW8/3D57AsXhusssf4046Y4OQod
uo21D33WsiQJHc/H3rmztyE8g+HOFRJ2am727O251Doi8vq31I6zzwrQodv9
Gsfy1LfF6NCtWYn/pyGsDB26bT/cdrXRpZKaKybVHo6fx0XD9T4RdrtRIlU7
wvMr4TqPkZ+4aZhfTho6dAvctM4g+mMgOnRTfldp8kn6JcN1lkTl/HiTNDES
HbqxY9etnz0tER26rfvrRXxOpTPcuUIifbqiwf5xDrWOiOw6UKB9jclHh247
q7qNdE0qQoduN5Ysv38+qBQdujnf+mFaYFFBzRWT4iW6vftMFnZeX+vqNqbQ
9vxbfzHhOo9pf5s0rXxqGjp0q6w5EiA1JQgduj0xNFOKbrNnuM6S+Hmj2v/e
j0CHbupZdlmR8gJ06OaXG7bnsnIaw50rJGsWBO/JLM+m1hGR5aa/Bt9ozkOH
bvqui5Y/qClEh251/RoiJkSUoEM3tZr64E8Xy6m5YmLQb3TUuKlVndfduroN
VDFausq2gXCdx/h8H+W/1CoVHbopPZeaXnAwCB263bnRL7Vi1FOG6yxZz94P
UOoXjg7den0foe8zJQEd78/Uzti4RDqV4c4VksTBp45MUcqm1hGRsNUXt8bO
ykOHbiZjLrPRMoXo0G2z9+hr/VKL0fG8bqvFlkXGZdRcMambyc/cMKSy83pc
DXaLzVvtfVHtA+E6j5HZ8emSyw8WHbo5OJ2Yt+JFEDp0c5tmVjd770OG6yzZ
21OqvLf9W3TopjL/i6zCgnh06Haq90GtKmEKw50rJHLznOz6Dsyi1hGR/kY1
5bcNc9Gh2/4K9aGnFxegQzd2XMbNo3VF6NAt27+fqNCslJorJk+rmrb4yFR0
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
GPqkU/7/z5ULBx0KTkKHnv17DWX90+PR8XyIet6gCa4M5ZLXu/fP9Wf8ItHx
etwWo+bXWmHouP08N1C+TTeYmit5P9q3W+6F4RtqHcnz8w0TnmHlgY49h8+f
v7fOGR17ftVpDlF5jI49TVYtDLG9Qs2V9JTPqTh5xQh64v1rwqn+DSLPfHg8
Xp8Ru8vtsktKp5zH2P56O6L78GR06Dli/qNLjjsT0PF63Cj/rbsv8ilniW5u
/5XJ06LR8XjzYftj+dZwdDw+0p+j93dWKDVX8vzcXVG6zyuQWuf/7+81NZv9
fdCx50b/hcv3uKFjT/X/2o3NHNGxZ2H39kZvW2qupCc/+/894XmLPWUup901
uZiPjtfNjpSUBxenU85jikP8LI+uT0aHnuuiN60f4piAjt/39eNsc1Uan3KW
uGROzllSH42O1+O+ulssyYhAx+/P7GU7u334W2qu5P1IKjJA5nUQtY7k9b7+
2p5FCX7oXfufWqq7bDzQsWeY77KGxy7o2PO0QD/Y5ik1V9JTe+L/X++wvcWe
ayzLMx9uykeHnl6+rfUmjemU8xjLUY8PWJkmo0PPXiEze9eLEtChp2y37uce
TYyjnCXZNRuT3vjEoOP+0lW1o4Pd8H0Ke+pWt/00a39LzZU8P+Oft0u/DKbW
ERG1HQ712qX+6NjT+IadeqIXOh5vXhk1z+EDvn919TQ/9ox/wYGaK+lZ7PP/
96POzm7YU2+9wYiPk/LR8fqw1ssztT0yKOcxTwbM9jwXkowOPZ9n2sfNnC1A
h57Bz8q2mJrEUc4SecO2DysNYtHx/iWFT+uSTSPR8f2oe2y+94cwaq6Q6C4v
fHjueQi1jqTnnNNK3S8HomNPldl9T7f7oOP5+adL2ietdEfH/fkNgxSqDjpT
cyU9rTr2lzp/H2/seepS3MXVUvnoeN17Qp55i1wG5Tzmd6qWzIyGZHToGa3K
Nr2/KEDH8583Rx/2zY6jnCUmGSHBIxYy6NhTK6vAfHcUOva8a6j1qjCcmisk
g9/Yhpk9C6XWkbzejewiNloGoWPPccbL5Za+Qcfn55309noHT3R8fo4vbP04
9TU1V9Izo2N/vvN523WftfZpXvlRYR463p98TGbHq2UZlEv2l8TG0eFTU9Ch
Z0SerpmiQICO+/N+E77NnhFPOUvUX2Ts3PCXQcfrR0ODDXVVotHxenGzgf+9
xAhqrqSncPO27c/eUuuIiLBk4lUl+2B0vH6kZVIYbhKAjj2fP7DY8MMbHc/X
rU3Ys8jFjZor6dnYcbxJxP+O67Gn0yxmxiRBHjp+vmDmw8XivRmU8xiVNx9f
TD6Sgg49TZpKa9qGJKJDz0r1+bFDLeIpZ0mhlWLDNX0+On4uw2zPIuthMej4
OSBT95JHYTxqruT9aP+3lpHPw6h1RCR723WrUu8QdLy/rqnbvk0VgejYU4bI
eO7yQ8fnp+Vqp6WyntRcMTHP7jgf0rkdgPO4Jcy8UZNmGLyRUQOHzunBDc82
++ZRj5c8bwPV7KpMMyjnMbParshffpWCDp11ZJcMPHEoER06V71f23i8Op5y
lvgMVLH1Seej437+GxO5Sd9i0PF9f0L2gzLvSGqu5H1q2emmr47h1DqSznN7
u1+JCUXH+0a+xtj0lwpGx+sgQb5aejx/dNyufilp3ffCm5orJmqijvN4ZPC/
86XY2Sh6kOu44d/RoXP74rHDo5/mUY9nmfKxwz4YvsqgnMcYzbI5GV+dgg6d
hf7jb94MTkTH/SuZhfPVSALlku3tkOTuSxbEoePxqaFO920lseh4fcTu3qkH
zlHUXCE53r30zGjXCGodEVEO1T1O8t6i4+cXjlmdy5ocgo7X652GV7Q8CETH
57Oq55gecn7UXDER/u04/4y/J3QuiJr03/ZYMTp0vrE2PEXjZh71eJa5rN2b
8UjJoJzHONjHrZOZzKJDZ3mzA7t390xCh7+/PTZJ9XJKoJwlpaVpC5c7x6FD
ZxWTC/ylfAYdt8PdZnUrfhZNzZVsN6Qjbd748qh1JNvhvWU7d3wKQ4fOhrfT
CwWbul5v0Fl55Dpv9cSu7R0+n69Y6L9086fmSp7Pmh3XTYjyv+tT2Fl5pPL4
qi0N6ND53L1an3fn86jHs0yoz5jwWy0ZlEv2H9TnqOw+zqJD58euQ1d82ZOE
Dj/X9K8rzEP+JlDOkhv+OzyS+saj4/nVHtoTe+zko+P2+f35T1WPYqi5QqJo
XWNQHRZJrSMi8jMetnzoGYGO108V71nLXXiLDp0NjS89ev87GB2/H/i78ajU
Z4HUXMn2+WXH9b7O98FY7JwanrDPXfYDOnS2/dosq38sj3o8y8xS2nF90IRM
ynmMY/3y/6L8WXTofGPUortHA5PQoTPrMzb27GEB5SzRGTXm2KeL8ejQOXT5
r61nJcdx4NA5QqjbmGsbS80VkuzZ13fUCKKodURE18BeqDyJh47P5/NRxoNe
haHjfX3rNof2WBSKjvellBqZ+FYFUXMl24WZHdepide/+wGws5uRwRzD93Xo
0HnjmY+OoQfyqMezTMqc5qrNGpmU8xh1jSHvVv5g0aHz0tm56+JkktGh84sL
5Mm3JAHlkv+fZG8ox9bFo0PnaOm9oy6vjkOHzvfKZXpVPmSouUJiSFR5VQXR
1Doi4mW36+fe1ZHo+Lm8K8GRaVnh6Pj9ABd+6hSef4uO9/vFTV83c0YINVey
//bv/orO/ZA47KyZdDHIdc07dOhsem31tdhdedTjWebUkgfeq80zKecxhsNC
j7SuTEWHzr7ZglnDjySjQ2efb1sE22YnUs4S4eDtx7fvTkDH82C7t25ViYlD
h84pdyoSR23iU3Mlx3HlzoZ9P8ZQ64iIlO1IgxdHo9Chs/rlT6xlNx46fu5s
0OKFT0LC0KGz5oqS1TcvhlJzxUQ+ueO+ILK4Y14CdmY2LP9W9VeEDp1bUmTf
GGjlUY9nme/HLqX/Cs2knMdox4kuN9qkokPndJeV0YZMMjp0Ts8sSn/+NJFy
lvRK/KPEZxPQ8fkcfMoqbHE8Ou5vTGJcf2XyqblCUhybxTzpxlDr/P/8ba/q
qfej0XF/w23m3asLI9Ghc2vh5W0Xv4ej4/bZtt2rKfktNVfS+d/9bJ37ewLs
fEJuW0nerxp06Lx8dsylcM086vEsI/u85/ZrDZmU85h1/fyfK1emokPnU+bt
Kz+MT0GHzhHTnn2r/ptIOUvCBgWfGqsqQIfOej1ZudFh8ej47zLoyWwI2RFH
zRWS9oVGqnsG8ql1REQ8Lf7W/PAYdPx3matVL9WciULH+9j3lR+IXM5Dx/26
MZvX+IwLp+aKCT+/4z5MuM8WO39V1y93nVqDDp1P7l7w351tedTjWUZq44AT
BVOzKOcx6RuKhufOSUOHzis8lGptr6WgQ2c9geF+ciqJcpb8LF1SZRKK9yFj
5xqBs+rZBQno0Dm1YP0S7fI4aq6QeHibPEt/yafWEZEU7yer2mrxfmbsXF9r
mNjsE42Oz2c9ftzz25Ho0LlecMHl67kIaq6YDP53/zDcH46drf+zdY8yqkbH
62g+K0bn7cijHs8yjrKWh/vrZVHOY4ZOlp8nupmGDp3vft8ZcEVy/AIOna8G
beueUppEOUsyg0MVv8xKRIfOxhV5f0rDEtDxvmLTi1U9jsZTc4XEUqN0lNqc
OGodEXELzWjQ7sdHx89h3Wm+8v4j3p+PnWWkDOK350eh4/6G7o8ZAzN51FzJ
fp1Ox33v8LkG7JzTZ4b00kr8XAZ2lna739N2bx71eJZ5fUArYY5bFuU8ZuDm
yyrGpWno0HlrHxm32HUsOl4P+vur8tGmZMpZsmbj+qpXnono0Dn2y3/HDJbi
50Gwc6HfIuf85nhqrpCU+mYey46Po9YREb7etRubPfjo+O+SDN3l020Og47f
U3euwFdxKn7eBDvr7ux3YMnsKGqumKSM7/i8BvTCzn6Kpq/uHRCi43nOTb2t
3h7Oox7PMqnnpqtveZ9FOY+ZE7fihNP8dHTobGrtkWjgj/89di4KKKoLj02m
nCV79xS8dJqchA6du52YYLOBj+8T2LnXX/n3IrMEaq6Q7FWpX/FCO55aR0Qa
UoO3Ga/G/SfsvD9t4Rr+Mtx/xc7Ho9x/7jXF4wfs7LWm3/tI22hqruR98N/n
jOBzZNhZz2XH5HUVVejQuXrfnKDlp/Oox7NMjKdxK29kNuU85vrx8wsNH6Sj
Q2fpzQtmeIxORYfOg/WqpmiqpFDOktuGlSN6uCWhQ+ddaQOcLdQT0fF7ySap
r9EcLKDmCklm+b7zjDieWkdEdI7eNPxeE4eOz2fnnG3ba/joeL7u2BCrOUUM
Or4PxplUlrTGUHMl241/n4+Dz0Vi59a1OkPeyVahQ2fv89eU5S/nUY9nGaUR
43rtXZZNOY9RDNw4o1tTOjp03vRxX7/LFqno0Fljbnz6Bb8Uylly9ba9QtOU
ZHTo/Ncn+ptaXiI6dDZ1HHxxsauAmisktxpejjlwN4FaR0RUpKfPa7oVjw6d
S889u73/bhw6XgepU64yfsFHx+3GopamKn2Gmismwn+f64TP82LnCN9qV40L
lejQWVEwa/N+qzzq8SxTP2r66weHsinnMS/W5/U7vjUDHTr7FwQU9/iWig6d
PWp2rV0zjaWcJR7p+hWXfJLR8byo8+W5DrpJ6NB50KEzVtGLE6m5QhI55eLD
p4oCah3J8eDxclXz6Qno0HnG4jeJfxfGo+P1ULky4ectcej4fSPL5iT3P8Wn
5oqJ4b/PI8Pn0LGzUC7Zv6amAh06Hz6tmNnkkEc9nmXGrRfu0rPKppzHtPYY
2RgdkoEOnef11dt06FgaOnSOcjBbX+zGUs6SWSQpJHFuCjp0Prpxw+YgcRI6
dCbXeHV/shOpuUIS+yLM9W6KgFpHRD6OOfAmOzsBHTrbPBt+7PC7eHT8nF3e
OO3p3bscvwdyqebYT9PiqLlisvjf5+g7/3c2dpY1GOQTf7gCHToPdPjWVuif
Rz2eZSLNXv1XE5xNOY8ZruarOmZcJjp0vlJ67YpveRo6nl/85vx565RUylli
8br+WnNUCjp0zrc9H+J5MxkdOrfsWHphwqkkaq6QRE/zenHkv0RqHRHRXKUu
1/MKfk8FdhbLl233tUtAh86zbt37b1NUPDp0Hm1mtym0Lo6aK3k+//v+B/je
D+zcV+Hl6Vct5eh435TC6lsjEvOox7PM9n45jcMrsynnMVemiGufWWSiQ+dn
rrzvUjvT0fH8s15aYapXKuUsidGRfim3gUWHzh692w65jElBh86v2+2D1vZN
puYKiYr5lSOrhyRR64jIk72nS9YoJqLjvxMdt31y9034vSvYOVevptXMOAEd
OqffPGf02Cuemismx/99bwl8Xw12PmZ9odHFthwdOsdc7nPfryKPejzLLF/y
OrJ3vxzKeYzBLKmtO79kokPnGz3mlZhnp6ND5x//Fcw6KTl+5DpLZiQ+729Y
wqJD5/5ffv1mglPQofNMoU66nW8yNVdyPPA4/bVWZBK1jogsf6nVGFGciI7/
vsk0G7Un0l2O+3XOmmEtKvg9Qtg5NEnzwdvTCdRcyfP53/ftwPcsYeeTBveP
L1lWjo73rfUb5ujcmkc9nmWUb1daJS/JoZzHSHdzfGAgOU4Eh8637o+u37Q1
Ax06zxKfzdfkpVHOkim/W6z6nk5Fx/uCfh1pmbWVRYfOWUdj2aWaKdRcIeGL
blRFHk2m1hGRvfHy2+7dS0LHf+9JYW33uzGJ6NDZJN1wV853/P4r7GwUbOS4
YaGAmismiq87vieK2P77Pi7srN0zVnZacxk6dL5WVuD8ZUQ+9XiWUQyNbjt0
ModyHsPjzTTpVZKFDp1Tnt73v5WTgQ6dt0TbX3ddl045S9635fsP75GGDp2z
pjU+H/SZRYfOpZalrvtaU6i5QlJ8fvUrz5Ep1DqS48H/5vdpWJ2MDp3Tl9ys
GmGahA6d9z5t8d8UnYgOnU0n+bLm0onUXDGR+vf9Zl33PXR2Fi0/+Wh/UBk6
dI5YZdPkvyCfejzLrE2vfPHOMYdyHuMQ07vspWLX9hQ6M//VOG7d3bXfAJ21
x+mXWhalU86SuMbq4eFOaV3XBTv/7p4n1H70qOu4BTqb/MkwmOLGUnOFZMju
8GfrUlOodUSk+Pgjjd5/u86bQOfXbqut9FW7HL9f9NnemscWSej4PnhZ7qVN
biI1V0x0/n3/Hin+932G2Dl5yb35rZfL0PF+QtHDDSW786nHs8zIdNvuh3Ny
KOcxtf7LLj0/mo0OnU2GXpmRJ8xEh866EYEO009lUM6Swr6Jl2VXpKPD76Gh
EpNSvSQNHTovUOVZJG1PpeYKibquOCH5OkutIyJn7Jx5g2JT0KGzhs2BiW96
dDl0/u4if79SKxkdOt8+6jTJ2yOJmismu/59PyQx7Thfmo+drxyu27B8Sxk6
dH4+rqTmimk+9XiWifqjV/C+dy7lPCZjwPWflh7Z6ND5AP/xz0VnstChc/cV
gZGBPTIpZ8m1FWYNZ6vS0aHzgepR1bPepaFDZy+zqX4GvdOouUKSEbPC/cCK
VGodEWkN3mK4RNIfHDrn3xisr5CVgg6d1c/d/n54cpdD59L3YQp9zJKpuWLi
8O/7S4m8Rcf3wWJnKzd/geW0MnTo/H6qQO+Vaz71eJbJstQotlTLpZzH1IeG
6pnXZ6ND57EDFvTw/puFDp2bVgvtN73KpJwlf5Mnf66zyECHzr1uD57i/iQd
HTqf+zxu/Q4mjZorJDJJaSdW/Eml1hER5VWq2lHqXY7nRXMfVf95yaLj+WcL
67X7fqagQ2cHq98aH/elUHMl241/369LBP++r7jrPhnFuTt29SlDh84XEqf9
3pmRTz2eZRbl6MhoX8mlXLK/4bH265NZOejQeZ1GQaX3xmx06Dz2ssO0Gauy
KJccd589FvhGORMdOnuNCMm/pp6BDp0PflS963MlnZorJNOajSY5x6VR64hI
L885W7KGdzleH5QfOOvK2VR0vA77Vz+yRwGLDp2H1v69fXcFS80Vk9x1Hd//
3LluIXYeYHPLal5LKTp0vrszVM+zLZ96PMv8r6w7j6tp6/8Avhs0qZSSJFNX
ykwkpVoh3cxDmadCpswZu4QiQ4QkyjxGIUPkKLYbYhOV5nk4zeNp0Kj69bv6
rvXc7/3reT3v13rWt/35eDqnffbZe4MwK3jDqx/IRfzMK75GmTviqEPOmxQr
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
       "]]}, {
      RGBColor[0.3315753, 0.4561011, 0.6388182], 
      Opacity[0.3], 
      Line3DBox[CompressedData["
1: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
GXL0eSfjaw05XnVsKiGX+yoqM7Zs7OSwTEKOPu9k2+pyb1tdyCLk6IvP2y1P
5LzrmUPI5fOqadLC0jM+K/IIuXw/uvc/lbdUflr4kpCjzzsZnWmwI3lJASFH
n3dyOmjJuCfTtIQcfd7JhBl1x/6Y/4aQy+fV0ryq875umPeWkHP/18ds916W
vH65DzZ88y6fIUefr9Wpl9Q1Em0ZcvR5J0lB2mFvB94i5HJfRS0thnbOr/OA
kKPPO5n69GulE1/UhBx93snWvfUTH/TKJuTyedXkl7Jvodn3HEIu34+Gbuad
rOK7Po+Qo887GTWuYX5RwEtCjj7vpOXkEWfaROYTcvR5J36nbGdePP+akMvn
1VJ2/vDRF65rCTn3f70t+rekk5SNzdYeXZrHkKPP177vzaI/vLdlyNHnnQTn
pqTFzk0i5HJfdz7u0OP5ypR7hBx93skTo5D5VWs9IeTo804cP4Zey92ZRcjl
86opquMy97Aazwi5fD8auuhzPIymPCfk6PNOQmNjEluY5xFy9Hkn1c36lzcZ
+pKQoy8+n2mz91HXcvmEXD6vlpLcLMdvPF9AyLn/a5zuJZ3catJ4wdUfzxhy
9Pn6gMvH7bNb2DHk6Iv3PyNmX279QkXI5b6KisK8mnx7cIeQoy8+711Z5e6/
dpmEHH3eSalgp27DKj4l5PJ51fRw90FTxQINIZfvR0O722le197yjJCjzzsJ
++eTWRWz54QcffF9UHyLvtUa5xFy9Hkn/av6dxoV8oKQy+fVUulmpYtO0itC
zv2f3yKPfPpCdDJ+/rFOE6drGHL0+Xr76PLOAyfYMeTo807KnFo4pWxMPCGX
+yoau3/+2iut0gk5+ryTd936TVXOe0DI0eedBIfmdji87Qkhl8+rph0vP/85
6vVTQi7fj+78fevCXh2eaAg5+ryTnv6l+u04+YyQoy/Ov2oPKrWg/3NCjj7v
5GLlm4qdIbmEXD6vlvbsunBjeosXhJz7v752PlLSSb7NhZnTezxlyNHn6/Tt
A129ttox5OjzTgYO3300SR1LyOW+ivavzGzQ1SeNkKPPOwn0nl+z3cYMQo4+
76SX1cPXyX0fEXL5vGpSr/5rbafTakIu34+GEmtWXn5nXRYhR593kntkb3Bm
3WxCjj7vZOqgTUn+js8IOfq8k8bDO2RbFeUQcvm8Wgqr0P7LhhG5hJz7vz5W
HFjSiWl8+bZfXzxmyNHn64h2j9scOmvHkKPPO6k3JOt0x54xhFzuqyi/ed1v
dhNTCTn6vJNGwWVL20TfJeTo805GNNz/rFSfh4RcPq+ahmxd/C254hNCLt+P
ht4uO28V2f0pIUefd+JXOKZDfWUWIUefd3KszpgVvZtmE3L0eSfDVl6unLP0
GSGXz6ulZpoDqww8cwg591/9eluUJzrJ6rEysah0JkOOPl+Xb9Ze+zXDjiFH
n3eyLDFwbK/gKEIu91XUe1LzzHvGKYQcfd5JUpF9ZwO6Q8jR553svuU+8tzK
+4RcPq+aMstnX69c+hEhl+9HQ2HPCsf/XVdNyNHnnZQ6nLC20q6nhBx93sl3
g79WmqZkEXL0eSfT/RwOby+fTcjl82ppV/DpHcPaPSPk3P/97xOdNHz9fWqi
zX2GHH2+btvv/qWPFewZcvR5J6M7boqMmxdJyOW+irLjx45LM75JyNHnnbyt
/MLCLOs2IUefd3Jj/YWuC9PuEXL5vGpyelz45YjJQ0Iu34+GFmXdf3Sn7WNC
jr74/isld93XZWpCjj7vZExYxb7h3k8JOfq8k/Sek7eFxWcRcvm8WvpsO/Pp
pAwNIee+6a83RiWd7Hk0b4PRhnsMOfp8vWuTfY8dve0ZcvR5Jw3WFPVr0CWC
kMt9FTWu6mq9pWcSIUefd1JBU33A89NphBx93sntL707LDC7S8jl86ppfxb1
P3/oPiGX70dDHhEGYeNmZRJy9HknVT5cH+Dx+DEhR198f7ouZvNJZzUhR593
0uviuf6T/Z4Scvm8WlrSYsa1A35ZhJz7H35+zf4+V3Tiu21m61zfOww5+ny9
d+LSOc6L7Rly9HknKy6stCowCSfkcl9F9cqNrz3EMpGQo887WeQw/MaTA6mE
HH3eSemzV6c0qHGHkMvnVdNuF+3+OoYZhFy+Hw2VPtP1XJcrDwg5+ryTv5uk
9bKs94iQo8876XjD4u2VoU8IOfq8k5YVCiPyTqkJuXxeLRll+W6b4fSUkHPf
+9cX8yWdrDgUaelTO50hR5+vczqY1VO42DPk6PNOKqf523zpGUbI5b6Klo2Y
4VBBk0DI0eedXK1x7eb8fSmEHH3eyXONrX9+5m1CLp9XTY/SB553vnKXkMv3
oyGbw63+vd7rPiFHn3cS8eTxu8EbHxJy9HknVUO3TWu/9xEhR593MvO6+vij
lU8IuXxeLdU5crpUgZuakHN/8q8LQ0s62fPRcv+jgDSGHH2+nuqRN2+Hyp4h
R593UksbXidrUQghl/sq2r7JJOGyRTwhR5938rf/iyFLe9wi5OjzTo44ql2r
x6YRcvm8airYWTrsseUdQi7fj4Zmj9pW0Pn+PUKOPu/k++uzBolf7hNy9Hkn
D9y/hJR9/ZCQo8872X+1i3Fy2CNCLp9XS0ktSnUat+IJIf/vUS7ppNGW0M/z
N6Uy5Ojzf3JutG3qjC/2DDn6opO5i1/1DA8mPS71VfSq1YyGBk3iCDn64v3z
6qbvu+5MJuTo806C/uyzY0RMKiGXz6umco5fLo2enk7I5fvR0ArF3W5WLncJ
Ofq8E9u1sx8Hnswg5OjzTkqHW6gdNj0g5OjzTjbnDo337JJJyOXzaqnH1BP1
riU8IuTcLL6P6bnoJMbW60TY/BSGHH2+/n60seGNTg4MOfq8k26VUi/P632N
kMt9FVk9/jB0QnYMIUefdxLUdYX9Xu0NQo4+72RSuY1Bj++lEHL5vGq63M2g
U8Lo24Rcvh/deUvK99VjV98h5OjzTmZerJgxxuweIUefd9K+zexZ6ub3CTn6
vJOO9lM3N496QMjl82rJ7duaoR4jMgk594vveyrpJPeU4dd5924y5OjztcfY
guRH5g4MOfq8Ey8LM7/dN68QcrmvolujN746HB1NyNHnnYSomu3csj2RkKPP
O0n4t3VWjS+3CLl8XjUtNe71XDkljZDL96OhSw+GdvU3Tyfk6PNOjqhefrbo
fZeQo887OXvukdGB7HuEHH3eyYq/rfZetrhPyOXzasmqXFGbflkPCDn3i++T
Kumkh/3opdUaJjPk6PN1euSd+/aODgw5+uL6Q58WzYZZBRFyua+iQ1ajvzYI
jiLk6PNOEi4cm3iljYqQo887cUnIP39k0U1CLp9X9/q1qtbVrFWphFy+Hw3t
ndu+b7cFtwk5+ryTCqeC81a3ukPI0eedZOTsnnMh/C4hR593UjbRJnRonwxC
Lp9XSyuWTrYZ4nKfkHO/+L6qHNHJifyiuf/uv8GQo8/X2j9rO+YnODDk6PNO
+o7Yujdu1GVCLvdVtGaje+VLLJKQo887mXzx4Z0JefGEHH3eiW1qnSPpBUmE
XD6vmgLPGX+Z6pZCyOX70dAT48H9AzalEXL0eScJPddnf2udTsjR550oTqeb
JF+4Q8jR552MXWW3q0O9e4RcPq+WUhIHTny5MIOQc39R8f5EJyOo3tZKTRIZ
cvT5OsI/b/Wbbw4MOfq8k/a3NyyzbRtIyOW+ih5UCwuanhFByNHnnbg/KjU4
MSKOkKMv7u++9+LPl7Y3CLl8XjX1YNGXE/1uEXL5fjT0wedri2knUwk5+uJ+
nG9mN2v3u03I0eed3KkXPzjqUjohR593smRPtnWzincJuXxeLVU8sOFVnOk9
Qs794vu2Sjpxa+++/kZaAkOOPl8femb63bO7I0OOvnj+GVdq9uaGAYRc7quo
3/EF3/40iCDk6Ivrn+tVq/bxXCwhR1/cD240suLQ0YmEXD6vmhI63yyt6H2T
kMv3o6E3f78ZuPt2CiFHn3fyee7mMe/npBFy9Hknf4z69v181G1Cjj7vxHGm
+ptx1TuEXD6vltZ8r/UkeNBdQs794vu8nolOtpvaz4vwiWfI0edrk8FWD0ov
c2TI0eed3Gx0/rZXE39CLvdV5LE6qc6uFeGEHH3eyZC6894W+MUQcvRFP/u2
jD5upCLk8nnVVM+/onbHoyRCLt+PhnIaHHRPr5NCyNEX9+/YRZo2tkkl5Ojz
Tjot8p31IjuNkKPPO1E7Hdu32jidkMvn1VLB+aEvcoffIeTcL74vrKST8iGN
ArfYxzHk6PN10ZIP4fU9HRly9HknFmuWtI83v0jI5b6K1jn9abXyTRghR593
Miggu0/5q9GEHH3eSeP8nHKlP8cTcvm8atr798qiCa43CLl8PxqaOtdzYeOY
m4QcffH5z4jPy7slpRBy9HknTT8W2FSum0bI0eedLJrebYv10NuEXD6vlnK9
X1wKnpNOyLn/621R05JOzJc9HlHLOZYhR5+vTabmbsnOcGTI0RfnX83unLTz
Ok/I5b6K0icpAzocDiXk6PNODhy4/Co6NYqQo887SetY+nXQqzhCLp9XTS9S
b49XLkkk5PL9aKj8nPohPdYlE3L0eScWN1n5yvVSCDn6vBM3bVUH1aRUQo4+
7+Ru70VRNdalEXL5vFqyuPi5eejO24Sc+7/+60nZohPng5t8y1yMYcjR52v1
6i6fV9R0YsjR5524eXtG1v5+lpDLfRXNrth0euDAEEKOvjj/amTk9OBzJCFH
n3eiqDLtQ8fXsYRcPq+atN9dW/4YpSLk8v1oKLvsotIV+iQRcvR5J91i7m43
uXOTkKPPO/lBrqqKuvNB5OiLz5+XX2t/2z+VkMvn1ZL2+qrlFy6nEXLu/7qs
dTPvRMXqjpqeWftojwjkcl/JXBwLkttkRDPk6PO1YnSNAVdGOzHk6POu/Kdf
31l+9RlCLvdVZHnKJrFrKSUhR593FdbWs0ULk0hCjr643tVM27yaQSwhl8+r
pot1Jts5908g5PL9aOjQRKsOT6rdIOTo865SDnZerLZLJuTo867GGiU7Oty/
RcjRF711TEuNKUoh5PJ5da93ex0rrn6TSsi5X3wfWUlXex+ur9At7gtDLveV
LMWmgZtHrWiGHH2+tkys/HfkHieGHH3x+Xa9DdnzPp0m5HJf9/48Y2mzanev
EXL0eVd7Ntnet7eIIOTo867u3m5m27RpDCGXz6umwLKfEpsNiCfk8v1oaFij
2rF9ClWEHH3eVdnJFRK3mScRcvR5Vx7TKhtMtb9JyNHnXXk5NN78bnQKIZfP
q6VdQf3ulO+XSsi5X3zfmUZ05XXpdfKYUu8YcrmvZC/KBhQl/xnFkKPP1+qs
yKNOzIkhR1/0Nu7vjbOcfAm53FdR2H1bs9shVwk5+ryrHhkj6uzawAg5+ryr
jCZHV4wxjSbk8nnVlB6rtDAfHUfI5fvRUNLakMDgvARCjr7oanjLo0foBulx
8HlX/nFnXl+fk0zI0eddtW3ftW+NcbcIuXxeLcW8WKo5cCiFkHO/+D61kq5e
PVj357P6BQy53FeyA3ZzTYcFRjLk6PO18cp7A3p9cWLI0eddZQyb33DMUB9C
LvdVFHSt6tO+F68QcvRFb1l7NYFNwwk5+uL5bYrTebdtUYRcPq+aKt8ovDpo
YSwhl+9HQ2P79L3bJj+ekKPPuyq9aP6j6E6JhBx93tXsetv3LeqdRMjR510t
8GrX0aruTUIun1dLhul98+em3CLk3O9ePI/oqvqYXnuGTcxjyOW+kp016Lc2
pk4kQ44+X9u2VF8/3duZIUefd2Xezv9JVClvQi73VWTuecmi/qUgQo4+70qx
pOGEARlhhBx93lXn3Pb/dLweScjl86rJr0zjcdcPxhBy+X405BhqtG/VtzhC
jj7vykhZ9tGLdipCjj7vKqp9W78KzW8QcvR5V4UN8/we5ycRcvm8Wvp6e2i1
3S43CTn3i++DyxJdrdrbZvKucjkMudxXMsPvF5b23BXBkKPP14axs88UrHNm
yNHnXZm+cUqzuOVFyOW+irauH9rdPOwyIUefd5VbP6oo3jOUkKMvfl/LwPVZ
r/KRhFw+r5qGjPV+9DEsmpDL96Oh3BZHg2wbxBFy9HlXA+qZ3H7bLYGQo8+7
SrhcdtkWo0RCjj7vyv3zuMw36TcIuXxeLSVtVS/sbJFMyLlffN9cSVev5uz6
NN1Bw5DLfSXzpSmrB75jDDn6fG35I+B8jcvODDn6vKuzs25ub3XOk5DLfRW1
z/nYpMWdQEKOvrgeuNuqDcabQwg5+uJ6mPf1LpSZGUHI5fOqqZZiZnXjoihC
Lt+PhjKfb3I6q4gl5OiL66kyb5plj4wn5OjzrtyfVB4U3FhFyNEX15NntGx5
UpVIyOXzasn83eQ2facnEXLuD/p1oUNJV1f9xjvZnn3KkMt9Jct8kFbRtDCc
IUefrzNWmDrVeOvMkKMvrh/O8zG66eBByOW+ity/LczfWRRAyNHnXWU2qr6u
k7mSkKPPu1ryo3yNh/MZIZfPq6YHQ4xfbR4QRcjl+9FQ6WGnbuavjiHk6IvP
bw8fWfFkcRwhR1+cn64+6JrcMYGQo8+72pNfaXdOooqQy+fVkvs/nwIcR90g
5Nwvvi/vqehq8vjd75ybqRlyua9k6q0hm0uXD2fI0efrBTOOTHrX9ShDjj7v
qnEFv5lZhicJudxX0YLXn/cGtwog5OjzrgrzHszRTg4m5Ojzrhacio0Pax1O
yOXzqqmgafOAv60jCbl8PxraH77t24nz0YQcfd7VWbbVysg+lpCjz7tKunCu
3lPd8yFy9HlXpu2Vtk/uJRBy+bxaCvO6M3PMqERCzv3if19JV5vve7Yf7P+I
IZf7Spb+dv2D6m2uM+To87XhobZv2ZqjDDn6orc5YdtnGB4n5HJfRcZtugcZ
zvEn5Ojzrlyo1Madk64RcvR5V2FVN0w99jGMkMvnVVOGusk9k8cRhFy+Hw25
BV90rq2NIuTo8672z+/3z93YGEKOPu/qQ9slHzusjCPk6POuXLotuH31dTwh
l8+rpeBepg7bpqoIOfeL7/sr6ap+Vq1RG/c+ZMjlvpK1XGlVusf0MIYcfRGU
sva5zUFHmR4Hn3f1tVtrn79aHiPkcl/X2/esKYk9LxFy9HlXCxb0M6/251VC
jj7vquO62ju33Qkl5PJ51TR9+NZlC/pFEHL5fnS9Xe5Z1b9/FCFHn3e1ZGTB
NIvSMYQcfd5V4aF6X4uOxRJy9HlXuVbl15yrGU/I5fNqaer3sofNliUQcu4X
3yeoFl09jumbk3b2PkMu95UsrFz+x5n2oQw5+nwd0Sw3ve3Howw5+ryr4EOj
Vmwe40rI5b6Khk1s6zkw+gIhR593pb2amZm26gohR19c/3zGzWoHCyHk8nnV
NPPjwbZv+jFCLt+PhtJ3jDfJsYkk5Ojzrpxt+j0YMzKakKPPuxo2Id/K63YM
IUefd5W0bnm3agPjCLl8Xi1FHG5fvveBeELO/eL7Cku6ck71qlC/WgZDLveV
rLD+h09WD0IYcvT52qR9o4Jb/VwYcvRFb2XPjJyy5yghl/sqMvJ337vI7Dwh
R5931bLutHzjQ0GEHH3eldESw3MpQUpCLp9XTW139/UtqBZOyOX70dChkO5J
3fMiCDn64u+nqOXh+dAhipCjz7t6Vb1Thm3tGEKOPu+qTpu0a/1WxxJy+bxa
srgcuXHW5ThCzv3i+xBLutriVe/WUs+7DLncV7Lzee2bJ3QKYcjR5+utFaa6
r9/hwpCjz7tKONav/dlkJ0Iu91WUERP0bUSlc4Qcfd5Vx3Hvmk0LvEzI0Re/
z/nFdVdAUDAhl8+rpomHbgXnvgoj5PL9aGhm9uT5zUdHEHL0xff1Q7t/Ov48
kpCjz7tqu7lfRp8/owk5+ryrGO2LopMXYgi5fF4tGanT17R/FkvI/3uUS7qa
OtVjbO7fdxhyua9k6ypW22h+UMmQoy/+KS75QrNYF4Ycfd7VTMtk19mtHQm5
3FfRnG/Bq9+zM4QcfXE9tr9tvQfqQEKOPu/Kf9KF96vDrxFy+bxqUs9tqzC6
F0rI5fvRkDZocd9d8xghR593dXfafd9GQyIJOfq8K9unfzo3PBtFyNHnXSWs
W/Qs6E00IZfPq6U67552bdgslpBzs/g+tSeiqwo15i2KHJTOkMt9JWtxtcHa
I2+DGXL0+XpiSHzD9CquDDn6vCt3L0WjGYftCbncV9GKbleC3Hb5EXL0eVdR
L1/1aV0/kJCjz7syHPj6zj+pVwm5fF41Na4zNj32Rgghl+9HQ2pXT7c/B4QT
cvTF529fpz7O8Yog5OiL7xd8342M+BFJyNHnXU3cua/H1wHRhFw+r5bKvg6a
5m0eQ8i5X3xf0mPR1Vf1H4M9+t9myOW+kgV5OiafmxfMkKPP12Pdy1VwneLK
kKPPu9pzdOtL31J2hFzuq+htVJ2uFhNPE3L0eVdGM64eDpkaQMjRF+cLyZ5b
6+ZfIeTyedVkuKrlANNEJSGX70dDhvXuDqzT/DohR593VXXGmGlulSIIOfq8
q5wWZYZf/zOSkKPPu/I/1mFG6SNRhFw+r5aSsm/Ejz8TTci5X3wfSklX88NL
rRw5KY0hl/tKVlXZ6Fijh9cYcvT52ui+WfQ6d1eGHH3e1dgK+e/jyx4h5HJf
RZNtHk0Ib+tLyNEX5wu1m1xp7upPyNHnXa2b5+KcYXiFkMvnVVNLv1eGZdKC
Cbl8Pxpy/NL+5I8aYYQcfd6VNnh0tv/LcEKOvrg/d+nBNheuRxBy9MX39e2d
9s/RvT9ELp9XS/59Ta/7FUURcu4X33fwSHQ10jK7+pitqQy53FeyYZr+vpP/
vMaQoy96O7zg1socV4YcfXF9iFGtEWuaHCLkcl9FC8pcrPqwsg8hR593Fezb
qtTj+EuEHH3xe+ymh2r1HRBEyOXzqqkow3r/wqxrhFy+Hw0pGmyutr1iKCFH
n3c1tpp7S6eb1wk5+ryr9B8Vy3ZvFUHI0Rf3Y34t/HR6eCQhl8+rJUVk57uj
xkcRcu4XX2eeWfJ91mXN9CfKFIZc7itZ+ufy31OyrjLk6PO1X2blhwe6ujHk
6POulrxY1ChyjDUhl/sqemHiFdD2wylCjj7vqm2fopFbll4k5OjzrgZ4rugU
seoyIZfPq6Y5W9Lm5n2+Ssjl+9GQn83jTV8qhRBy9HlXlpM9VIrQMEKOPu8q
eKDfP2/+YIQcfd6VbcCIutZnIgi5fF4tvUqbPi31TCQh5/6vj+XalnQ1dUHH
k0EVUhhyua9krwqbBTZffZUhR5+vjWZZJqRtc2PI0Rf36xnG2g+z2UvI5b6K
GrZsdLXOCy9Cjr64Hqnj4M9m9S4QcvR5V9lrn7n8OB1IyOXzqqltyM6Cmo2u
EnL5fjRUdKvikoLaSkKOPu+qMHH/haYBoYQcfd7VxOhRTnMqhBNy9HlX3sZ2
6WdrRRBy+by6929/5q98VjmSkHN/z6/rMB+KrpbE7c9Rxt9kyOW+kvXxfnbl
frmrDDn6fK3OfHBh7A03hhx98X1WG8fyvprdhFzuq2j28fph9XI8CTn6vKuK
1j0fPUo+R8jRF9/Xf1AH2z4PIOTyedVkPrZj7+VDrhBy+X40FJY69svdVsGE
HH3xfdb+a029L4UQcvTF9/VrQyNrFYYRcvTF9eQeladvLcUIuXxeLWUkqU91
Wx1ByMXx//U11wPRlWH5nsssXJMZcrmvZJsfmD9z9rjCkKPP197bp9/70eAY
Q44+70rbtme8z+idhFzuq2hsm8V+l/I8CDn6vKtX89OOTj5ylpCjz7ua2b/v
+9qdAgi5fF7d+7f86r2sLYIIuXw/Gpp4Mb/xILpGyNEX11suHvpuwlUlIUef
d2U4vNUm67xQQo4+78rS2uPL25zrhFw+r5Yi2t/edDeYEXLuF1+nVNKVf53t
P1Q7kxhyua9ks5NXtPmhuMKQo8/X6Z0rqd4tPcaQo8+7MqlVpmm3PdsIudxX
kW1CKZ/U3JOEHH3eVVHd9mdazz5DyNEXf//pI5MmJpb+hFw+r5omBnxpVcHn
MiGX70dDRje8goPMrhJy9MXv/zidCjoTE0zI0eddVWxf5yg9DyHk6POuPPpu
n2ZyJ4yQy+fVPb/VWmh12CWckHO/+N93X3SVsO7x16XbbzDkcl/JclvTGZYT
xJCjz9eOGa0Gm4QeY8jRF+en1b2mpdhZEnK5r6KJj5bZ+1Y5QcjR512t6Dtx
U1InP0KOvvi9qbDeV/6wu0TI5fOqaau2ombvk0BCLt+Phlq+UFa9vfcKIUef
d2X85Jxa8eAaIUefd+Wyad7OsFdKQo4+78qYte8VdCOUkMvn1ZKJZ2q5Mjuv
E3LuF3+PnyG6WrHD79TIw4kMudzXvZ42KG9yyC6IIUefr/tktu53vZo7Q44+
72p/qXTPBmFrCbncV9GSfqemVO/vTsjR510N2J6yk1U6TcjRF99n1UhdeLf/
RUIun1dNCesKZ/s3CyTk8v1oyDTQrkqfoCBCjj7vShE8b+D5D1cJOfq8q6Ig
83+OfAom5OiL65F2zowqnxhCyOXzaim31DKr4NVhhJz7xd+rlnSlbv2YnTyv
YsjlvpINmZS8rengIIYcfdHbuwb5XnPdGXL0eVfqZU32DCm9ipDLfRVZNulc
Y8QGN0KOPu/Ke0apg7vzfQg5+ryrlBHP2+a8Pk/I5fOqyeOtRZWuCwMIuXw/
utfT3DVJ+59fJuToi9+TmXBwoHWDq4Qcfd6VVf7rqPHVggk5+ryrlCkKdu2W
kpDL59WSX6jHht7LQgk59399DHzxnugqqcOirnkPEhhyua9kJ8oPju/5/jJD
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
EXLuF98nkig6bPm189gzqZkMOfq8w82d6/YeExnBkMt9JUuaFO82uHIAQ44+
X4+PHN5wyFpPhhx93qHp243Z1nsOMuRyX9chG26b13Eq6XHweYfq1W/tBk2x
JuToiw5P9a3vc8WJ9Lh0XjWZWBhv/dL0OCGX70dD6i5/XYrTvR9Ajr64nr/w
c1Tbad6EHH3x+8k7gupY+fgScvTF9RK+u8wmX/Ij5PJ5tWQR2zx8rNVZQs59
3hPvcMDbvdMDo0vuU8I+ORev7z5mtxVrIxhyua9kuV1fh41/68+Qo8/X5Zte
+BF+3vN/nHeV+OLzz4KAjYaLDzPkcl/XoaL32YDypZkeB188f7b+Mtep415C
jr74+/Xs/W5Y5jgQcvm8utf3u+cHJjc6Rsjl+9GQeY9+z77aexBy9MX5kY17
yMg2pwg5+rxD85FTgjss8CHk6IvrKx6Vevzgz9OEXD6vrsNB7tNjG50hPf77
MfHXG9ME0WHVKw99YyrcZ8jR539e2tGND3u0i2DI5b6S1elsYLAz058hR5+v
h5W1nj/tuSdDjj7vcOvcwV9PjDzCkMt9XYf2Z6OuN57G9Dj44vfWPM1sytbY
TcjRF9fTpi9aWLWJPSGXz6umianNRpg3cyXk8v1oKGL22PHlv54g5OiL86Pb
HT1dv3kScvTF559n/gmb38abkKMvOuzT/97gar6kx6Xzasm8juW5JWGnCTn3
K/66zjZedDjb2iD71oF7DDn64v9fq5o4qGMZQy73lWxmN9+eqgR/hhx9vi66
re5c7Q8vhhx93mFC8z1m4x1sGXK5r+uwqvWOS+ELmB4Hn3doNbjKCJ93Owg5
+uL6jd4DjxTOtCXk8nnVFDFZ4TGg3VFCLt+PrsNjEy93ue9Oehx88fquCA65
d8+DkKPPO4z48cg3s8CLkKMvnj/ttpn3jvYm5PJ5defvybs8sub6EnLuR/y6
TjK2pMMhuSs2012mx8EXfYbWyrVSMIZc7itZxSvdzRpc82fI0efrHp0/OxSY
eTHk6IvX91n5C3rvsmPI5b7u/P1m705THq5iyNEXHV4f0MIlYxPpcfBFh7n2
VRy6HyY9Lp1XTYrC0RYFfZwIuXw/uufPVz5TPoa5EXL0RYctrztsWX6S9Dj4
4vV90KUL40I8CTn64v2ns8PKVdtOEXL5vLrnT8P9f2RV8SHk3Lf8dZ1byfVE
jsHnnho1vsOQo8871JqeGpcfGc6Qy30lG7D5nvuC0/4MOfp8XdXbq2bpE14M
Ofq8w4krN9QJs7BnyOW+iowNbkxTrF3HkKMv3n8yh1n/3lhLyNEX14c0bHZ0
XLg1IZfPqzt/Twg8UW68AyGX70fX5z/vwrJ8XQg5+rzDCPN1IbU7Hyfk6Ivr
kXJq7LSw9iDk6IvnT69JR937exFy+bxasloe+too5BQh537xPNGiQ6PTawI2
NuDXlUbr9cm5uH6prsru1qhwhlzuK5mRoVnTk67+DDn6fJ353H/DxEdeDDn6
vEPjZ471qpk5MORyX0UefkaDTFZvYsjRF6/vk5PjezgvJ+To8w7VV1jUtEl7
Cbl8Xl2fvnf21V1iR8jl+9GQ4sSEmVucnQk5+qLPsXZU9MGNkKMvXt9j4k1K
B58g5OiL+/HDXZ5t+uZByOXz6voclzS1/wovQs794utGIks+X4qsO75Bt9sM
OfrievWNp+pl3LvOkMt9JStqPaNu+GF/hhx9vlbnnH6W1eQUQ46++P59Q+S0
2eMcGXK5ryJFtLLDviXbGXL0RYcrau7oNdOM9Dj4osO8NeUKXu4iPS6dV/f+
08DCfGm1I4Rcvh/d86elSf3xBx0JOfq8Q7Vrg5kXYl0IOfqiz7STZbfMdyfk
6IvX9w8FfXb+e5KQy+fV9ekzvJRBC09Czv3i7+UjRIcfLrWwCp6bxpCjzzvM
iF025Pry6wy53Nc9f+au87u2258hR5+vpxofyIgyO8WQoy/uh72S0fh2fyeG
XO7rOjxP3q0v7GR6HHzRYdkts+4FDCI9Dr7ocLPR0dCGO0iPS+fVvf/8Efqp
aPJBQi7fj67PYQUtX+6xJ+Toi+fPrWbRIa7OhBx90eHknFU36riRHgdf9Nl/
itHsescJuXxeXYfm2pN09STp8d+P4u89w0WH3coe7V/oncqQo887tDWN+96v
3HWGXO4r2YrPQ3N3bfFnyNEX662VWn32OsWQo887NMq+1MO3vTNDLvd150dZ
rg+j/tjDkKMvOuzIHu2+NoHpcfDF90eFBp+eLrUk5PJ5dX2uqPK4psc+Qi7f
j4bU3w3dn+2yJeToiz7rr9p8bo0jIUdffL70KubxhhtHCTn6os+O5eI/n3cj
5PJ5tRQxOr/LOd37YeTcL/5eKUx02Cv525m6n/jvc4b9j+83w0SHJmO3Dq/l
HcaQy30ls1qfEFN/vT9Djj5fJy0/a+Dw/BRDjj7vMGJGD4PSDY8y5HJf9/o+
/p3bUZe9DDn6okOjxeM8vOYzPQ6+6HNGTPXX0asJuXxeXYeBI+O173aTHpfu
R/f+M2zbDt9Khwk5+qLD/Ffzq020Jz0OvuhwUzVtmX1OpMfBFx3mR1TSmLqQ
HpfO+/P6zy3fQ3U96/HfD94H79ByWP2Rz/8sue5N/v2RsuT958RxyoqmJZ3J
vz9Siv9864m/yv5j4c+Qo8/X/qcPlXPp5P0/rsMr8XmHGW+sXepUdmHI5b6K
Ip4d/rtFVWuGHH3RoSLqlNnof5geB190aKG5UXvCItLj0nl1Hbr/cfbuOCvS
49L96Dr8a8k/LnWsSY+DLzqcn1l5dVdb0uPgi/vBBzZo8nWEAyFHXzx/Wngr
nfKcCLl8Xt37z+Z/nSjo4kLIuV/8uei1ks+Xunmmdz56iyFHX3S4zmBUrjaU
6XGpr2SNc3r237XSnyFHn68Pnbnfq856b4YcffH557qpz6t8cWHI5b7u/N16
S+Un2w8y5OiL8/dHE28Gr13PkKMvOhzUw2fHuMmkx6Xz6s7fk1/vNJy9iZDL
9/Pz83lnjzut/iU9Dr7ocPr0y2kdD5EeB1/0eWHY+peV7Qg5+qLP3jM3uNg4
EHL5vLo+c7scjbrmRMi5X/y5U1DJ/YuZnUYPP3yTIUefd2h5c1rm9hOhDLnc
V7KEzgNjxqzwZ8jRFwFarShfO9yb6XHweYfae7Oi6ua7MuRyX0XqLe69TN8c
ZsjRFx06tO5iOGgL0+Pgiw6LqtRgx4npcem8ug61zzsfa76G9Lh0P7oOR87d
4DxgJ+lx8EWH4xacr/dtH+lx8EWHHlXPRHgfJj0OvujTePestb3tCLl8Xl2f
T17XCRnqQMi5n/vrvD5AdKiosqLPvqPJDDn6vMO2WquKJyaGMuRyX8mGja8b
EqfrEzn6fG16bsYsj4o+DDn6osOEvDLmajemx6W+7vW93Rbly662DDn64v5N
kx/Xzu2yYsjRFx12HJekKT2X6XHpvLoO+yzZGfd0Ielx6X5+9qmc1sl/M+lx
8HmHVmfPxD1M203I0Rcd+uYMvtvXmvQ4+KLDNdnmc+MPkx6Xzqvr8NPH47Nu
25Ie//3w/3XedLHk+dNgiFPy5SSGHH3eYcS2gckNK4Qy5HJfyXIfvH9TsMqf
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
v+aJFt0mXqQ/Jjk8YsjR591Wj+pygeVFMeTyP1/FMv+4VKpHl2CGXO4rWcT/
1XXmcTVtbRw/yDxeY+aZkHlKhp051xQi0zVzjdc8JYS4ZpkzhxBCKtVpek6D
ajdpljJUR0kqB6EI77lq7f32ax3/eM/3873rXc9ev+c4015LnNL6ZAsXQo4+
e2xb4BfZedM9Qo4+y63mjMfp4JG3CTnf177esHh/3eLITUKOvvR6I//PkwYq
B0KOvrQ/2+U+u/vYXifk/HpThTUbNxcsibpGyPnzUQv2Hjaq3bOvEXL0pdzW
Wn2+YwfZxzwzznJrO+OeU93mso95ZlzKs6t5WkE/2cc8l65LI5isCPtvfzZC
zvziz/GCpNy62JjkDl2XQsjRZ7m1qXfSbMLDAELOH1+kDl/zu//RzZOQ830l
mXf7eTh8lAshR5891iTen9n+6z1Cjr6U58a7Q13f3ibkfP+/189zRgwdf4uQ
oy99XpfS2Ul99gYhR196vfHTLv+7lQMh59ebKpjlei4Toq4Tcv58tLmt/EI/
d9V1KsPBZ7mNbjn66pfRss///DlIym0rr49VJ0+Qff7nz0Hy6+dnwza92CT7
/M+fg6Tcpn7x+m8/TELO/JJ9XKXcPjNfu6fT/WeEHH2WW6esbSmbrQIIOX98
kRJXB3mHaJ+fkfN9bZ6fvvpYfa0LIUefPXbTdEl33HafkKPPcms0YPjuAts7
hJzvi0LBwk3jNtRxJOTos9yapjQ78G7dTUKOvnS+wPvwXs1X3SDk/HpTBU2t
y8ttYhwIOX8+2tfPhz6ZJe92IOToS+erxng1mL9K9nXsPyzltse1pZGj9si+
jv2Hpdza9kofc8JL9nXsPyw/P8/6vf8wIWd+yb7ZUm7dRm2ckNw9iZCjz3I7
YmCjvxqPDSDk/PFFMqnTbfmMPp6EnO8ryazLiKnzL7kQcvTZ4wjPLv2fVXhA
yNFnuS3wyWxBA+8Scr4vCq2Sh4xr9dSRkKPPcut46V+jDZNuEXL0pefn3unT
oufdJOT8elMF1YkB0WuTbhBy/nzUgu3wOO8DF24QcvSl189nx9rdPiP7OvZ7
l3KruVrXt5+P7OvY713OreX79vPKy/Xq2O9dyq39sT3/7fdOyJlfck6BlNvb
067S4TeJhBx9ltvDkUcG1mseQMj544tk+njALHGgJyHn+0qqf3XAw2fhLoQc
ffa4Wd9qVZ4fe0DI0Ze+H6hmnNI7+y4h5/va94N9QgI3Xb1NyNFnudUkKcNd
ezsScvSl189epicmTr9FyPn1avPspndxpPomIefPRy2YnWmbN8jzJiFHXzrf
rUO/Vg2CZF/H+RpSbqPVp6otL5R9HedrSLlt5TjP/MQEuV4d52tIuY3u9/t8
DULO/JI8SbndHlb9ccOwBEKOPsut+8/Tn0w/Svsal8lz6XFEumjfplazUZ6E
nO8r6YRBjeo2RS6EHH32ePrNyztyakvnH5XJM+Mst7aee77aXHQi5HxfFEL7
FJneXX2HkKPPcps65ubO9MbSvhJl8sw4y63Blm4znk5xJOT8elMFk3aRnUw+
3iLk/PmoBWfzrXn9n90i5Oiz3PboWr3bu8+yr+M8I/n94Lgf/3YZKM9fx3lG
Um6d+/6ZuOmK7Os4z0h+/az/+zwjQs78knO45DzrBasmPYkn5Oiz3DqUb5tq
H+ZPyPnji1TDuMPfFlM8CTnfV9K6tZ+3renuSsjRZ48jBg/KLZrhTMjRl/Kc
efN5+uR7hJzvi0KPtp2cPw29S8jRZ7kNtVuZZax3h5Cjz3LrWeG57c0ptwk5
v15tbvOd5zlUvE1lOHc+2ty2T1jq/9ORynDwpfNl6p8qt8lQHl/H+XFybtd8
eRW6S/Z1nB8n5da+69jLcz7Lvo7z46Tczrvy+/w4Qs78knMPpdxmVyz6o82H
OEKOPsvt2JtGVfVuSudvlslz6XFE8jR77b57oSch5/tKmp1cc6jzIldCjj57
fD+ix6S+N50JOfrS70Eefh9uXfM+Ief7orC//LT++/WdCDn6LLf7bd+0/Pbx
DiFHXzqPe7KR/08L2ddxXqeU2+ij/7zxaH6HkPPn89/vRS9ktOmE8ylzXqf8
fYr9tLjyS2Vfx3md8ucby31jTkTKvo7zOuXXG4NeRV0yu0vI+fVqn59tfp/X
SciZv6b4nFkpt/HtCj4/6xxHyNFnuX0c3rrwLxvpvOMyeS49jkitDqwIvLnJ
k5DzfSXVmuUQPvWiKyFHnz2OaHzqpVO+MyFHX/p+0KnnghMR9wk53xcF63PJ
btc/ORFy9KXfPxtc+Do38y4hR1/K7canY9rNl30d5yNLubWO+Ht2oPFdQs6f
j1owab5c7/Z0nE+Z85Gl3M6zb1I33VH2dZyPLOd2u7D2RQv5+ug4H1nK7Zr+
P4oOPZR9Hecjy59veP8+H5mQM794X/EoKbdfNmsOxW6JJeTos9yWN55x9uJi
6Xz5MnkuPY5I5fv+iI087EnI+b6SVFb14jYkuhJy9NnjcWlN/rAaKZ1fXybP
jEu5VVo2mGT7gMpwri8KdX6tEPfE3SPk6LPcmqVO6PbgpRMhR196vbEw8/yc
1bKv4zx6KbepRx4er/uXEyHnz0f7/Gzcxvv6EZxPmfPopdzaZyQ6/P1e9nWc
Ry/n9kDYCsUm+froOI/+/+7XW7fZRv8+leHcerV59v19Hj0hL73K0VJup1bt
O6hDUgwhR5/l9q/ddlWcx/gTcv74Ihk+cfCscNOTkPN9JVWxGbC0TT03Qo4+
+1/uOQ4BPnYPCTn6LLd6FncPbTN0JuR8XxTWhJZruEzalzC6TJ4ZZ7md/vbR
7a7P7xFy9FluW82fsa5gt+xjnkvXlSo41zsXmW9zj5Dz56MWojOunlsSivNR
l/Gl5+eQjT3fDZTrxTwzLn3+7BM4ySJO9jHPjEu/r6u14WTm3geEnF+vRmgV
dnujbQdnQs7M4nNJ5NxW6hi+ynpUDCFHn+W2Z9MTJw/28Cfk/PFFOrXaO31q
gCch5/tK+rOdR7WNk90IOfrs8X2P28MP5j0k5OhLrzdiDBvPP+lMyPm+KKg8
8zeevfaAkKMv/X7j4FG3dq/uE3L0WW5DT0U2N7ko+/zzdOTcmokN6/i63Cfk
/PloX2/Mv1R3TNUHhBx9KbeGX5aGHpV9/nk6/5fnT18/2jeVryf/PB05t9ND
N/+qtl32+efpyLl1drk4c0OWMyFnvmnaf28UY6TcOr5vPPi7fzQhR5/ltu2m
TwdaNfEn5PzxRVo6eeuKuDRPQs73lbSjVyuVzSk3Qo4+exwxwXVjudEuhBx9
ltusA538CoucCTnf175+dkxr0WUM+mIZX/r9c+qdoWlvHhBy9Flu7Vad9v/X
W/Yxz6XrShWW1r37V0DmA0LOn482z1X/WDzFwJmQoy99n3LQw6n7BtnHPDMu
5TZzxYC6MbKPeWZc+rzO/sJhX+OHhJxfr0awLv/y1B/3HxJy5hefaybn9uYA
F4dKY6IJOfosty9Wz+y7tJI/IeePL5LRJM8uR/SUhJzvK2lewNiuK565EXL0
pfoXNskyueZCyNFnuV3kfC3s72UPCTnfFwUTM0uhINCZkKPPclvnac8mM7fJ
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
e5aqK1XYX40Or3uC9abqmI9a2JKcGNz4Hw9Cjr50f4rp3bM/mnsScvRZbs2q
5Tp0TJb9Mud7lnDp+bnHnlnVrygJOb9ejWC2uWNCneVehJz55r9/qJQk5TbU
fPZwo61hhBx9lttxVm4njGJVhJw/vkieU+e6vGzvTcj5vpJ8HNyW6w/zJOTo
s8eeDq+HR75zJ+ToS7/f+HfF+a6LZR/zXJqLQn2D9J8xFuiLZXzpflj/9xN3
nZF9zDPjLLeHx2csHFDZg5Dz600VHB492vv1nAch589H+/w8f8qDWSM8CTn6
0v3dtYv2Lfkl+5hnxllunVdPDjAKVhJy9KXvU4wielqc9iLk/Ho1wjwP+039
l3sTcuYX/P5htJxbm5gt610ahxFy9FluLw/wj3JJURFy/vgi1an9pat6nTch
5/tKCt141dtA++8RcvTZY+eut9K/r/Yg5Oiz3JpciFlmXOROyPm+KLR7m3hh
1C/0xTK+9H13JfNlfuPk+WCeGZf2r1vUpm/9cNnHPJeuK1Wosn7i8kPLPQk5
fz5qYf+lu84fWikJOfrS/d2+g6b8/Ub2Mc+Ms9w6qjVV2ym9CDn60vcpizRV
/E7IecA8l65LI2SVW27tudaHkDNf+h1MSW6TdpvpzwsQCTn6LLemazt7f3uj
IuT88UWyvrK6t32QNyHn+0pKyqkX8Fl7/ZGjzx5b977WvUWhR5lz5tBnuY2+
8GrsLjvZxzyX5qIwruE8NxMn9MUyPsutQ873s5FVPAk5+tL9KSaRY2ueln2s
o/TjVMHs1YPr+4cqCTl/PmqhR98h1431vAg5+iy3zq/z9Bcmyj7mmXGWW9Mh
49zNXOX1xTwzznKr8R7X6O5ZH0LOr1cjGN2IqVhhly8hZ77Jfz/zH5ws5fZi
qsOBhHUiIUdf3k/mwJKWX1WEnD++SFY11h4c09SHkPN9JWX1PvrD56ySkKPP
HquGNC3Y8q8nIUef5dZMdFs23lj2Mc+luSgYTXMd/sdc9MUyPsutbZvhYyqG
yz7mmXG2PlsC6g62XizXi3kuXVeq4Bbu8XBiSy9Czp+PWrA+dtj3Qp4XIUef
5XZLffFsYIQ3IUef5bbKmBpZho/k9cU8M85yuyV5upetgy8h59erfb1Rb7H1
ETs/Qs784vsK5dxaz93+9FFnkZCjL51XvvNCl15V/Qk5f3xtbqu+H9xosw+V
4VxfSXqj7Xeq6nkRcvTZY9sXNQqnNlUScvSl/Qq8Vwx4n+ZJyPm+KORvnpBT
S19JyNFnuV3k45Xlf1L2+ffDyrm13f7zfdQguV7+/bBybn0ahbiP1vMm5Pz5
qAWTp6s67Er1JuToS9+nmLcKLwyT14t/P6yc26WP/x7RjXwJOfostwU26iZv
lX6EnF+vRojuGrc10ZMIOfNt/vuaZW8Kuw5k3WSA8I/Bd0KOPst5i9XvBj98
G0rI0Wc5zxJaxI1q4U/I+eOLdKrX+oKRST6EnO8rqcqohCmjte8vkPPrVSjG
lftgpvdIScjRl/YHq/i1wOeY7GP+S3NRWPN5xrYzT9EXy/gs50lzrq5YslCe
P+afcZbzrJjbPRY09SbkOtZX+/xsVveVxhvXV8d81IJdRzozJ9mHkKPPcm70
ev2JHTG+hBx9lnP9rZMcYmP8CDn60vN5Daf0fklEyPn1aoQakanXe61VEXLm
F99X+1zK+eyNaUbzx34g5OiznM/Os3u550EoIUef5dxtc6TX+n7+hJw/vkgO
6VHLGwm+hJzvK2l6YM1Pl5p5E3J+vdp//zw+/0gy9yLk6LOc6zef0a/eCNnn
3z/+XMp5/J6xltUvo4/3jz+X98fbv/HdbGN5/vz7x5/Ln594TZ1yp5wPIdex
vsL0B61qHM7wwfXVMR+1sHTUvzWcn/sScvSl3ztZdVgZl+pHyNGX7n/ZuS/R
PpcIOfos5z3OPi5fwVpFyPn1aoTZs3JXZVTzJ+TM//2fR8g5zzOMGfWlwTtC
jj7L+Uqbuo/yt4UScvRZzs/k6JePneRPyPnjixR6/Khf7F1fQs73ta9rC/0C
G97xJuT8erWv5637Lu/+3YuQoy+9/sl5v2TqL9nH/JfmomB78XJ00gpvQo4+
y/ma1JOTGjX2IeTos5zbfNz2tqVG9jH/sI6C/cHtJyLTfXF9dcxHm//4iOPf
3vgRcvSl/N/2HrGnkAg5+izndqqN3qcOqAg5+iznQXctzL7oy/nB/JeuSyNY
xU2bGnPbn5Azv/g+9BdSzk3nqsRyrzIJOfos5/kPmvrGTwgl5OiznO/u3tV3
+xp/Qs4fXyS3No8aPG7hR8j5vpJeDw11rDbEh5Dz69U+TgirvNzRm5Cjz3Ju
uOjJsTx/2efvt/BCyvkihWrz2qE+hBx9lvPD11s0rKPwJeToS78/6dj70Ig3
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
54Qcfel+z2dt/208+AUhR5/1xaBc1fSjFi8JOb9ejaBpU67r+JWvCDnzi/dB
kvti05oLW665vSHk6JdcN3oZbuT5eVocIUdfuj8uxmTMpa4xhBx91hcNV7+s
3/Nv2efvDyb3RZN/JtxVmsUScr6vJDPLK1eWW8URcn69CsW4f5tu8wqIJ+To
s76IqPR81rW6iYSc74tChKq6Q/lFTwk5+qwvDla2+KJySSLk6Evn102KXUpF
zwi5jvUV3L+M3PfOJAXXV8d8tO/3rV5GPd7xnJCjz/qi6GKd2NbuLwg5+qwv
nl97oSz/5iUhR5/1RXT9kI2BVVIJOb9ejdDi2K1yeedTCTnzi/dNkvvi3BD/
zwsog5CjX3LdSHX6TbDoHkfI0Zc+T+4+YcjZxBhCjj7ri5tO1xpvGRBLyPnj
i7Th6Khe5UfEEXK+ryT71y32+h2OJ+T8ehWKuhduTj2bm0DI0Zf2E370qkvv
aU8JOd8XBaPCf84n+CURcvRZX0w+kJTg0DaZkKPP+iJn4Y/7zrtTCLmO9RV6
PGpSWCXlOa6vjvmoBePujvmmhi8JOfqsL57PLHwwY9MrQo4+6wuLpIW/bs1O
JeTos74QRuTtdfom+/z9xOS+6Jx+c7vF6TRCzvzifZbeSn2hFv890378a0KO
fsl1o+i3S5xdDOIJOfqsL8ofvPZi6MlYQo4+64safs4hU9rEEXL++CIdXbVo
/x2zeELO95VUhYJjaysTCDm/XoVin/+RdRn9nhJy9FlfnFoz23CvVxIh5/ui
kHy1ccr5QcmEHH3WF1v2v116XJlCyNFnfZG9bpHn7e4vCLmO9RVOHfn7ov7l
l7i+OuajFipXfmowtnwqIUef9cXFimr74w9ln7//2FupL2qfcPf9NDuNkKPP
+uLMrJFtbPXSCTm/Xo2wro2Fx0HHdELOfPb/x/rCae/Lz//0UxNy9EuuG5ns
8u3+7X48IUef9cW+TL3kc0viCDn6rC/s/jFLF9rL4/P3K5P7YsHi1IpXLBMI
Od9Xkl9kZvbDik8JOb9ehSLo77rZFteTiP8+U/ZZX9yZYznoxohkQs73RaHP
Nj99t/QUQo4+6wu7uc9/GFm+IOTos75IvOcZcrvqK0KuY32FMMOJyp6mqbi+
OuajFsyrts1qUTmNkKMvnVdo1ujv2/6yz9+vTO4Lu0+nAt9vTifk6LO+SI9J
X9+4s5xn/n5lcl98sZ2eNilJTciZX7yPk9wXy41d+ldblE7I0S+5bmQQ2fjH
hnEJhBx91hf2kzL+HGoeT8jRl37f++D4lc2j5PH5+5vJfWE58nyF68GJhJzv
KykvxlF8vTmJkPPrVSim5Udtu2aUTMjRZ30RVVTlvuu3FELO90VBv2OL/o4e
Lwg5+qwvPK1O5O7Rvj9Fjj7ri4Kx6hbfD6USch3rK6xs3rtckPb5HDl/Pmph
y3xlwjmDdEKOPusLx2vJZ8++l33+/mZyX4w6MGT5m4dqQo4+64smQflWXqtf
E3J+vRrB0vPWzhGdMgg584v3fcqW+sL5e6eZbiFphBz9kutGNlMrrHPUSyTk
6LO+cKqWVP/+vARCjr70e5iuRhZdDsnj8/dDy5b6wrRoWe0jxkmEnO8raZzx
8R6NGiYTcn69CsWW/AHD/H+kEHL0WV9kdXrToefrF4Sc74vCvD/Ma28MfEXI
0Wd9YbDbatf6iFRCjr50HuJZW3evh/L68vdDk9ZRSB7e2XXl8XRcXx3zUQuG
Z6qFnluhJuTos75wKnJYs9LkNSFHX7of9tia603rZBBy9FlfDCvyn65Oln3+
fmjZUl90UB/8R3E1k5Azv3ifKLkvQulU/tHpaYQc/ZLrRov2/Qz9kZJIyNGX
9k/YHxK19LjsY78wzvrC4PjIgWLhU0LOH18ko3n919u9eEbI+b6SzKyPDjTJ
SiHk/HoVCoMjXWjG9xeEHH3WFwVP/p3au2IqIef7ouAeXVTlV+U0Qo4+64vZ
3451z9G+PkeOPuuLfj/fep36Lvv8/dPkvpjWx+79+3dqXF8d81ELXlObT2ub
+JqQo8/6okBz9e5yrwxCjj7ri/TF53pXP5dJyNFnfXH51OW8ceveEHJ+vRoh
tnLn75tGZRFy5hfvKyX3RZu8vEd//pFGyNEvuW7UrHZQdpWkp4QcfdYXPWa9
n7swV/axXxiX7red03Td/PPPCDl/fJGczZ8vSvBMIeR8X0nOjscvzSx4Qcj5
9SoUmWF1u7RqkUrI0Wd9MeLkpmmWg+Tryd9vTe6LgsjaPWPN0wk5+tK/L7WH
1Tdaoibk6LO+6NFj7fGVa14Tch3rK1h5dw20WZ+B66tjPmqhX3XvT76rMwk5
+tL9JuVOD/x78RtCjr70efJkr9wE8yxCjr6033LHqsfnDnlLyPn1agTr3ffC
p7XJJuTML67nndQXnv5LVvd8n0rI0S+5bmT0+Uj2u19JhBx91hc2xgtXr9v+
jJCjz/qijlu3v3ptTiHk/PFFMujRv1vw0xeEnO8raUuraRf2d0ol5Px6FYql
TuPPNv47jZCjz/oiequd4/gr6YSc74vC7KKklJrRakKOPuuLYe1GuDoUvCbk
6LO+qD+uhv5P/UxCrmN9BS/PMyqznm9wfXXMRy1knXIPyx+aRcjRZ33hdmJr
74lj3xJy9Flf1B9Ye3vI+GxCjr50PuPGHrsCxrwj5Px6NcLrFuULrgg5hJz5
xftWyX0R0X3wHecPqYQc/ZLrRtM/HTqaMTuZkKPP+mJ/TnyD7+NSCDn60u/H
Jq9qv/bSC0LOH1/7fj9ol/pKu1RCzveVdLGZWfxMmzRCzq9XoTC0PnliXVo6
IUef9YVR/dR+hv1fE3K+LwpVpud0jtyTQcjRZ31xUXNlV1pwJiFHX9rP+a9n
I/cpsgi5jvUVZjcZuVS/51tcXx3zUQv7m1a7UGtGNiFHn/VF5oagpMwt7wg5
+tLnhXoTljc/nkPI0Zf6ZUvBPYNruYScX69GUJ3fMmGzUx4hZ37xPldyX0Q3
Hf18YJM0Qo5+yXUjwxZLmrX5nkLI0Zfufz807Ydm+QtCjj7rC6t5i637104l
5PzxRVp6Sllvhm0aIef7SnIaNcnCvJGakPPrVSh2mAdn+Nu9JuToS/ufd9/q
YFMnk5DzfVEwV9/Z+uf2N4QcfdYXegfHDMt+mUXI0Zd+P9bNbZaybzYh17G+
Qo0Dve+a7H6H66tjPmqhz+xezZs8ziHk6LO+cOhbc2fqz1xCjr70e34nu/oG
Pd4TcvRZXzyfssLb11BDyPn1aoT03JF/3vPVEHLmF++LlSP3i8WlvZYr0wg5
+iXXjSKeJLf8nP2CkKMvvX/Z8+PllHevCDn6rC96OM667Lhfng9/v7gcqS8W
7RFnVxukJuR8X0lZcd/6eGteE3J+vQrFzfn55a0vZhJy9KXPx+4vnZo3MIuQ
831RmN4m832XqLeEHH1pv6CKDVsvmfKOkKPP+sKg3LLbvSNyCLmO9RWWbBln
ZzYgD9dXx3zUguFLi5ydF94TcvRZXxjurVCdtmoIOfqsL27NTHb60eoDIUdf
+j1Ml4SCiEDZ5+8XlyP1xaoaC4o2LfhIyJlfvI+W3BeG4xsdiMhLI+Tol1w3
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
qgzn1qsR8t8EfDVr2l2FnPn/AwfcH1Y=
       "]]}, {
      RGBColor[0.7926498, 0.5499369, 0.1278459], 
      Opacity[0.3], 
      Line3DBox[CompressedData["
1:eJx0nXdYU9nWh+0y9t57r4i9u9CxYO9dEXsZC/au2LtiQ1RUVBBBpAsEwRWQ
FgRFOggaiWJDDfbul5HZh+f+sj/+mdnv817da857k3OSnNBw1rIxc4sWKlSo
RulChYoY/vnvv3sMeryhisdbLvTfT8Q+k/NlRl8m5OJHcMfT//6o6OXrTSfa
/aqgRi73NTTJrmyv5Q9qqZGj36njvz+J1L7KhrFbhjRUI0ff4c+fk07VspfO
fOLQRI0c/fyVlh6krTf5cLq5Grl8Pzryb977/spprdTI0V8w79+fHDri7DX7
+/s2auTon/mzzxe00P1yQ5tF7dTI0b8b++9PLr01zbw2V2emRi6fV097Omad
e1Cigxq58KcdCfvYYlrBcV8ZOz3ewu0yIUdfHPchzje/r59SWI1c7mvIukNk
gMX30mrk6IvjbrN8yee77SupkaMvjnszvzLJx5KqqpHL59VSjio8Y37dmmrk
8v3o6MmOzrY7W9RRI0dfHPcKUfXmzi5RX40cfXHcQ0JPXI7UNlAjR18c93dF
tRXszRqpkcvn1ZNl5DjusrqxGrnwS6Vetu5dquC4f6P9Rz8WdSLk6Ivjfmzr
xxbZbT8zcrmvodijh22ufSmiRo6+OO7738z4GpphokaOvjjulUIWezl8KqtG
Lp9XS++6zzygHlpRjVy+Hx3NbDDa9vvyymrk6Ivjfu714/YW66uqkaMvjnuL
TSP3P1pQXY0cfXHcY5q27+IxoKYauXxePf0+caVS98q11ciFH1hv16vRgW+U
4z5uU+bSapZOhBx9cdznPTMttWZQHiOX+xpat6XsrR5XfjBy9MVxXzjd27VU
dhE1cvTFcbeY+/PS6YwSauTyebXUw71FY8fVpdTI5fvR0ag+LWbNjC+rRo6+
OO4zN2+0L7Glgho5+uK49+vZLzSxcCU1cvTFcXdqUyF38trKauTyefX006/H
aovHVdTIhf9ne/MKjnuz30MKeQY6EXL0xXEf/NumSK9prxi53NdQanZY2Wrv
PjFy9MVxN7Mb6ei08BcjR18c9z6qanR5bRE1cvm8Wqrc9GVA4WXF1cjl+9FR
cOvIhps7mKiRoy+Ou/300xYf75VSI0dfHPe4a82dRo8qq0aOvjjuq6IvF7ui
Kq9GLp9XTz+q9R/a1KSiGrnwq/w5sSg47mnjnj4Pq+xMyNEXx/1gv3Hd2tjk
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
OulINw6aNnrMyNEXnVzPq5a5uqqOkaOv3J87ornHzq9PGLl8Xj29X9OuT//7
OYxc+PPy96d0MiO89Lcdz+4TcvTFuojLmIv3J3gQcvRFJ9tO1V7h18mbkct9
DcUPWPfJ+ls4I0dfdDLrlYs6d8s9Ro6+6OTY9JAyB1YnMXL5vFoaE3w+dcu9
NEYu34+OTizx4BXPMxk5+srrzxOLRpxZoGXk6ItO6k1pX27VkGxGjr7oZObu
oFCnuk8YuXxePZ3/tXn7tydPGbnw8+/bKuhk3rh7V6J63ifk6Iv14e81V3S5
7UHI0ReduG1raNp9tScjl/saKrOy/anUmNuMHH3RyWKT+o2y9HGMHH3RSYfK
I2M1OxMZuXxeLQ1s03nP5sBURi7fj46SCs8qbHf9ASNHX3SiPXZoWO9Vjxg5
+qKT4jvT65088JiRo698fmxMnZAXI3SMXD6vnq7l7h4WX+IpIxd+/n1eT5VO
ul5dlXj0QjwhR1+sk795NTpg5knI0RedZFxKGM6u7oxc7muoqPPvIVbuYYwc
fdFJ/JhPfx1ZH8vI0RedmA/dVefRxQRGLp9XS50sNBm23imMXL4fHfGKuJdP
d2YwcvRFJ+PGbiuytPVDRo6+6KRj9HK6lapl5OiLTuZXaV2m0cFsRi6fV0/9
knq/39z5CSMXfv59YQWdlLWYNKJOxXhCjr5Y3/xwYWLyeU9Cjr7oZMCQFU+a
F3Vj5HJfQ8E5PTeuPxfKyNEXnfRaucXmfbU7jBx95fmrVYnXB+/cZ+TyebVk
0eVIm8GqZEYu34+O/Eotcw1fnM7I0RednFn5sMWvD5mMHH3RyYmNZTQf22oZ
Ofqik5tVRmdT0mNGLp9XTxuaxtfPXqZj5ML/c1pUr6CTFmnl90fWvUfI0Rdr
jyFzF5Yt6UXI0Red5P1+vb3iFhdGLvcNnfidf8sOajbi4ItOji1Y3rBblIaR
oy86ef0my1FV6D4jl8+rpddu4Y+s7iYxcvl+dLRq8hyn27PTGDn6opMZs6tN
n3TvASNHX3RSZNnML8G1HjFy9EUnD0dOqz2u2WNGLp9XT7qtzmN++GUzcuH/
+Z/HPlE6afwsd2THdncJOfpirXbuFGRGXoQcfdGJ1+s76zZVd2bkcl9DXrXy
9upHMyNHXzl/PtvgzK290YwcfdFJg75b3i8yj2fk8nm19E8Xaxv/t4mMXL4f
HWX4NX3qsCCVkaMvOvl8pG3NKqoMRo6+6GTki1Y157/MYuToi07qWJT5sm+b
lpHL59VTJc+RY58XzWbkwv/zsdYNohMN315SqdIj707myOW+iq+2DYyncXGE
HH2xjt9T/HzqWi9Cjr7oKutp5qiQ2EuMXO5r6NUzz+eVtocwcvRFV3P3fTtY
dUoUI0dfdDViy7H5OyrfY+TyebVUa3299EF1Ehm5fD86Mv+UfrzthhRGjr7o
qvbK8RfeeqUzcvRFV4draC7v12QycvSV3mqk1xgU84iRy+fVU+bzC5YZUx8z
cuHn30dW0NXzE1NThyz7ScjlvorDw4uW/bo/lpCjL9bmH+41Ke7tRcjRF129
e/Ziw/Kzjoxc7mto/6tWO/RRNxk5+qKrWvZ+p951j2Tk6Cufj92zZ0puQBwj
l8+rJU2zhPi2YxMYuXw/Orr0o9C45aeSGTn6oqtD2Q6ZMTfSGDn6oqs8U/XP
XP8HjBx90dXYWV83v3Z8yMjl8+rp8RWHt7WDtYxc+Pn3nemUrranF3pS1eUD
IZf7Km7QcGhl9/t3CDn6Yu01dOCy4JdehBx90ZXZ04frXhU5x8jlvoZu3v98
PbJhECNHX3SlqTVwUNvmEYwcfdHVwN9XyW1xLCOXz6ulIkuycu2P32fk8v3o
aML05ElbOImRoy+6Gv+ocLXLkamMHH3R1fbuvQ6t9M5g5OiLri7s/LwpeVcW
I5fPq6e07lYl/2qiZeTCz79PraCrmim2K2946Am53FfxrxuRzTOb3SHk6Iv1
w+zZnoWaehNy9EVXJ6y3mgZ/tWfkcl9DYR2q//p9KJCRoy+6srhndy+oQTgj
R1905Z7gP3mD2R1GLp9XS/07+0y+mxnPyOX70VGvTd8rbM9LZOToi67mXu7a
60h2CiNHX3SVUzo3sH5gOiNHX3Rlnv3c59XaTEYun1dPy0rXuFm72SNGLvyO
+fMoXZXrtKpHP9tcQi73Vez2qbpHj30xhBx9sTY9Xahl8gxvQo6+6GrP9tIx
WdVPMnK5r6FBmkOepqUDGDn6oqsSn6rOdWt6m5Gjr3x/5qS4Id2LxDBy+bxa
iqiweHZT03hGLt+Pjvz/XjvyVptERo6+6GpdzQ2aYJMURo6+6GqYa40tpWPS
GDn6yud1v+wa3nXNA0Yun1dPOa3VdwdXfMjIhZ9/H1y20tWtxL9d15q/IORy
X8Um416td/ysIeToi/WZ8ws79D7rTcjRF105Nd+a03bKUUYu9zU0pXihzJL2
Nxg5+qKrTh3f12nUOYyRoy+6WlxyxphH2mhGLp9XS/U6nLcrVe4eI5fvR0dl
VmVn7rZOYOToi66mZVlUWtItmZGjL7rS1I7bMS8nlZGjL7qK9yitS9mawcjl
8+rp5KM3w91Mshi58PPvmyvoqtunn77BmhxCLvdVvO5cVXOT5RpCjr5YN3L/
3alXqjchR1901WVzZJLrxgOMXO5rqPQkU8sZHf0YOfqiq0RVUu9pI0IZOfqi
qzs/u1TafCeKkcvn1dIZz2/JkXFxjFy+Hx2tmXFvBgXfZ+Toi67WlO356Z11
EiNHX3T1sN8Zu5VlUhk5+qKrnBXPg34eT2fk8nn1NMxPvWRm6UxGLvw+fz7o
UNDVh5nHx6RnPiHkcl/FLytVzdv3IZqQoy/WNZ5lXE+u7EPI0RddHesd4bTB
Zicjl/saym63YWCTTB9Gjr7o6uS8L2+crNWMHH3R1cvqmeHdQiMZuXxeLR2r
pW2/40wsI5fvx3B92nbu4cnl7zNy9EVX9d8dfuzlncjI0Vdev91pvml3zxRG
jr7oynNmx9V53mmMXD6vnraHPazgUuMBIxd+/n15j5Wu0opN82k3QkfI5b6K
c3XH7k/YFk3I0RfrCwGrTMuO9iHk6Cvft3O8m4vZpo2MXO5rqJz2vGb6UW9G
jr7oKvvv9CVeXZiRo698v3HHI4lDQyMYuXxeLdW68W3P5JV3GLl8Pzpy7h92
buzCeEaOvuhq94y0StW/JTBy9JXrBevdFYusTGbk6Iuu1mkaFzFJT2Xk8nn1
9PtC9OnwdhmMXPj5f19BV+siUlsuL5pNyOW+isOqbjL1rxZNyNEX6913J07P
OexDyNEXXZlX5UpJ6sWMXO5r6PfJu3YtxngxcvRFV+d6jt6oPhvCyNEXXX0Y
0juk0J1wRi6f19DV4m8b1k6MYSMu3Y+OLPfPvbPk+D1Gjr7oKi9kbq1LgxMY
Ofqiq/e3X1yZ4JPEyNEXXVXJHZflbJLKyOXz6ml2Rb/ilUelM3Lh59/3V9DV
zZiijV1eaQm53FfxlMndjxbxiyLk6Iv1m2spn+bE+RBy9JWuvk2okTe1Bxtx
qa+hjZf6ll7Y04ORoy+6WtAn5sj88sGMHH3RVb1Xfft5Z91m5PJ5tTQsqMmE
OgM1jFy+Hx1tWXx3Zluru4wcfdFVi0s396dfuM/I0Ve+jy4n6lihr4mMHH3R
VXaRwO29zFMYuXxePR2e3W7A13VpjFz4+fcJapWu/BpUaXTu0yNCLvdV3OHU
h+kuk6IIOfpinfsiOu5gGV9Cjr7oqkHxZ31rrZlLyOW+huq7cN1dOdcYOfrK
/ctXT0a62gYxcvSV+0+Xa2PCv4Qxcvm8Wpp580inU32iGbl8PzrKyh4xr163
OEaOvnK9EPMlYcSPeEaOvuhq1aa2ebsHJjJy9EVXb7RRVQZvTWbk8nn1VI23
a166pjJy4effV1jQ1eUSh7T7xj0k5HJfxePXVo+pVyyKkKMv1imXR8bOHOZL
yNEXXWndXky4HL2GkMt9DQ1/H1NqoJMrI0dfdNW2U+a6C/VUjBx95X6fsKKF
PGuHMXL5vFo6PGLUrAHmUYxcvh8d9RpY33xfrVhGjr7o6srdhr0dLOMZOfrK
9cKw8P0bziQwcvRFVxtT37UZG5HEyOXz6qnEuYE0LzuFkQs//z7Egq4CTJy6
dnyaScjlvopb5O6qo78RScjRF+t2Ay9+eHbQl5CjL7p6bj8o4nj/bYRc7mto
w9M3pResdGHk6Cufbyw5t/3KwABGjr7oqpOZ2ZE3A0IZuXxeLd0cvvqt7ZBI
Ri7fj44ah+6/GV7iDiNHX3QVvPpkteiD9xg5+qIrR5vZWas+3Gfk6IuutuSM
in9VMYmRy+fVU6DJg2UfGqYw8v89ygVdHXTuM8PzwgNCLvdVHN+XW3ssiSTk
6It/69Y4a2bju76EHH3RldWIVe0aF95DyOW+hj6oi7VVj3Fm5OiLrmpP6/Nw
xnR/Ro6+6Mp6tnflMmvVjFw+r5amxb9b8nZaBCOX70dHNyztLnT6oWHk6Iuu
Pt5iywvz7jJy9EVXgdUv960+7j4jR190pR7rtsN9TiIjl8+rpwnFF/VvviCZ
kQsz/z61R0pXpr5rcpttziDkcl/FX+JMK3xqFUnI0RfrvS2fWdSo4EfI0Vee
T3v6bnd0OEjI5b6Gns/fldm972VGjr7oaoi3rqtnmRuMHH3R1bbrH6jDdGbk
8nm15FHdK0m7JpyRy/ejo/ftZi2x+BbNyNEXXb3ze92x3pA4Ro6+6Gpcxr6W
pVTxjBx90dWIFac2dAlJYOTyefX0MDHvqb1fEiMXfv59SQ+VrrQ/6rejdemE
XO6r2LKWa5GlryMIOfpivavusK8xY/wIOfqiK5P47LyQMkcJudzX0JDomLCk
3hcZOfqiq3ldwicERvgycvRFV5b7siMs00IYuXxeLXUrGrv9zanbjFy+Hx3t
HXDr7w2Fohk5+qKrlN9de3h1iWXk6IuufjoUW/2jUTwjR185f7Nt+rB97QRG
Lp9XTx0Wb//0skQSIxd+/n0oBV0tG2M77sbBNEIu91VcrdEKq3C/CEKOvlhb
BZs+JDs/Qo6+6Gq/zbm0H8HHCbnc15B7mzfXBxw5z8jRF101dai9/OEeH0aO
vujqgJfJnUeWwYxcPq+WLk1/ZunGYYxcvh8dZSyk7OHlohg5+qKrWq1NQu+0
vsPI0Rddfavl4jOg8T1Gjr7oauSjD82Hb7nPyOXz6ik3dZE2wjKRkQs//76D
LKWrpmkd99YISCXkcl/FFicH3vOwiSDk6Iv1mg59tm7M8CPk6CtdjcqYUNvK
joy41Dc8n+5vOfbQzTOMHH3R1cHF724eGePNyNEXXT2vmRZUTB/EyOXzaqld
nracx+tQRi7fj44Wtr0XNbJxJCNHX3S18O8Ujb5FDCNHX3R1dVJJn6V/3WXk
6IuufAI7HemVE8/I5fPqqY7rwW5pNxMYufDzP2eeqXRlUv7NTPsPKYRc7qvY
/HbMphejIgg5+mLtMMN/2/b6Nwg5+qKr2AueD6p+tifkcl9DmenDgnW/7Bg5
+qKrnnXTF/Vv6sXI0Rddndr1pEnLAypGLp9XS2suvut/pmEoI5fvR0dudQYu
rEIRjBx90VU361Utr7bVMHL0RVcLUiNO5H2OZeToi67SXvfbpRoTz8jl8+pp
SsDy9il1Exi58P+8LNeioKuFhzU/tf1SCLncV7FZJ5vVXZpGEHL0xTp63CLX
yXNvEHL0RVeLz28+lLb9LCGX+xry+3jlbNTE44wcfdGVzeuGJ7//us7I0Rdd
lfzrpYtvu0BGLp9XS3X6Hapfbaqakcv3oyObZ7U2d50ZzsjRF10t/u2k3t49
mpGjL7oqZTcyedybO4wcfdHVzrfFbYrtucfI5fPq6VijanXX77zPyIW/88/n
MB8oXQ2wC9xUyDGZkMt9FZcI+V1++s9wQo6+WJ+xS08v7n6DkKMvunpyZG6U
ebHzhFzuG55Ptf7dLu47wsjRF109tFXl7A+9xsjRF10F6Cd/rZLlz8jl8xp6
6z2t47mOzMjl+9HRiszTk6fuu83I0Rdd/fBppakxLIqRoy+6etl475dmuTGM
HH3RVf/OBxx9rO8ycvm8enKqdvH7lrfxjFz42j9vc2UoXdltDWs8tlQyIZf7
Kh7UOmBhy/RwQo6+WB9yHlX94PsbhBx90VW/5KLdyvdxJORyX0ML4l9ZTtm3
l5GjL7oqVXdog8lHXRk5+srvgytnUiLq2A1GLp9XSwldrCvnBoUwcvl+dBTs
bz27RUAYI0dfdEV3n3T6a24kI0dfdNXtS72HP/UaRo6+8viW7Lyr1Kw4Ri6f
V0+OZjurulnGM3Lh539OqaArq/gF3VfZJBFyua/iz6+T3v0TGE7I0Rdr71FV
9+b19Cfk6IuuVp2oeOrM6ouEXO5rqFuRMo36um9j5OiLrqwGFLK2W+LCyNFX
Po/0q3jLYaP8GLl8Xi01yOwxZc/QYEYu34+Oon477x/2MpSRoy+60i18UOfr
jghGjr7oKjjQotGaH9GMHH3R1bgIn5OOU2IZuXxePYV3mUrbLt9j5MLP//vS
la5WOD2a2KFwEiGX+yqO3zK35Ncz4YQcfbGevvHC6p67/Ak5+qKrM00Pcj3X
S4Rc7mto1Kji34tqVzNy9EVXT6o/89w63pmRo6/8vub6ddeYVvVl5PJ5teRU
RL0l50kQI5fvR0cv541N2tAolJGjL7pqMGR+n+NXwxk5+qKrcjZZhzuUi2bk
6Iuu9h+Y9qL8lDuMXD6vnuY8HXK/xtG7jFz4+e/jpyldnffJHb77QCIhl/uG
64UY/fGrNuGEHH2x7vH44fBl9/wJOfqiq6sdZqe/S7tMyOW+hrQhJkleg2cy
cvRFV8PKDZsw3eIyI0df+f2Gju5Vf2u9Gbl8Xi3Nediny77dKkYu34+O+nbx
frtohpqRo698P/DjzJ17Em4zcvRFV3NM6p950DSKkaMvuhpW/SF/nRHDyOXz
6snhd8vaN3bFMXLh57+vWtBVk7SMlwfqJRJyua/iYsuahI9fGE7I0RfrWTsO
Ox2rFUDI0RddjWj1bP7C4s6EXO5ryCZoWsTeVaMJOfpKb8uubN0+4CIjR195
f+HGV8/xvl6MXD6vlvz2t4r+ZLieRS7fj+F6oYSVm3dfZuToi67KfBt/fn/h
24wcfaWrMpfy6v0dyUYcfNFVtyJzChVfrGHk8nn11Onr9cWfbGIZufD/vAzs
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
M+9HYxUjl8+rJ+vpr7JaOIYwcuHn3ycSo3SY0mX/33Hdsgk5+qLDk6ufH2nX
7y4hl/sqfjmW/io5KJyQoy/W/OvlkOUcTMjRFx2aP5lvPveLLyGX+xrqZjp6
kMUKV0KOvuhQf17/6e6u04QcfaXDa2dKhpWbQ0ZcOq+W4id6lV726Bgjl+9H
R1+OF331Zc9lRo6+0mfU1hVj215n5OiLDuMfl3a438uXkaMvOjRrO+u7Pwcw
cvm8etr7wXGOWbNgRi580ZPo8EMt0/27Oz8m5OiLf9bpM27ZmL/uEnK5r+Jy
f/vXOjkhnJCjL9atSzzv9r5+CMmvuwp85fNjqWdNTHf5EXK5ryGvkg8b7E9w
I+Toiw4dX3Xv4aJ2IOToK+8/Pty8Z8H1dYRcPq/h+mj71bMdzh9i5PL9GK6P
nJou7jDyIiNHX3RoEzhDXSbSjZGjr/RZdW099TtvRo6+0mefIOtHM/wZuXxe
PVkNXbm4jncQIxf+qD8nptFKh63m5Zhsnaol5OiLP6/c5qpduyXHEXK5r+Jq
vpNnJs0PJ+Toi/WZ5m+3vt8WQsjRFx12o1aq6ZVuEHK5ryHz8RaB39u7E3L0
lc//5FTe2PbzBUKOvtJnu9VVRzrsIOTyebVkNa3vqFFHdjFy+X4MHW5fViSm
63k24uCLDh0PjpzTfe5VRo6+cv55e7SflbsXI0df+bxZXXN/02I3GLl8Xj1V
qPesykVzFSMXvsmfz9lGKR0Wtr0TM63fI0KOvugw5XbCP27OcYRc7qt43h6f
irwhnJCjL9aLXdaZbnoaQsjRFx3GX+mQ9pfjDUIu9zU06YjpnTTb64QcfeX1
z0klN387cZGQo69cvzu8D0tL3k/I5fMaOmxxpOWchhvZiEv3Y3j8PDRi3eAH
pxk5+srn09Y6DZld6gojR190aLW665OcBA9Gjr7yee9Gl5paufsycvm8erKf
MbXO6qQARi589Z/PSRa8377sWezse7+zCDn6okOz4KaN1m6II+RyX8VJw/6q
N+pIOCFHX6w7NN7ucmrILUKOvvL9DPvmBQwy9Sfkcl9DgR3W6Ke+9SDk6IsO
zZe4BEW2uUzI0Vde/+x4/dvIIkcJuXxeQ4ebshau3TGPjbh0PzoyL/UrruLe
k4wcfeX5ffSt4jVuXGbk6IsOG3j2e75qrDsjR1/5/WvTloxtP8mHkcvn1ZPt
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
lZCjz7mt+PNr1I4unoRc7qvUrvO/0cfPuhNy9Dm3D95NHj+9ufZ+kCx5Zs65
DbnY5Ghwmhshl9drpDAnv/EBbg8JuXw/JnJ1WLqy6xlXQo4+53ZB0f4XctRR
CDn6nNums5452VXV3m+SJc/Mtfe39ss/rFktF0Iur9dMXn/9fr8GIWf/T560
3F60W3x80zAjIUdfe56zi9X6m6ODCLl8fVXxnlWtY7eX/oRc7huUOg9bTTzS
wJeQo8/XizeccZ9+WVs3S56Zc25Dr4Qm3H6g/XsiS54zc5UGD3p2+EhlD0KO
Puc2x8QKWzq5at8nZMkzc86t5c+KL03LtO+Ts+Q5c11GGtwwsdXBgW6EXL4f
EyV7X+81r+1DQo4+53aoT+N2ri20n6tmyTNz7X2vLqe/DF6s/V4hS56Zc27P
tcv/8u427fdqWfKcua5f3w9mvM+IkLP/5z1cWm4djvWt3CEympCjz7mNGVLn
WsupQYRcvr6q3D87L91QIoCQy32DsmLC7MYztvoScvT52qJro+pnSnkTcvQ5
t4Udoqv0bOhFyOW+SmtnRBXPdcqDkKPPue3vY310TUd3Qo4+53b4Px3b9Sys
vS8vS54z12Ukv4ghsxWzGyGX78dEw8etmvEx9iEhR1/7+/loYK8+sa6EHH3t
+brxRdbXCVUIOfpabh8uiHqRfp+ycGm9v77eyHh/HCFn/897D7XcprcfXiS+
XDQhR59ze3720roVHYMIuXx9ValdvKzl4BYBhFzuGxS7q52r50jxJeTo83WX
pCH5Hdd4E3L0Obfd67n5zr3oRcjlvkpL1u6rlFLFk5Cjz7n9eeHeB32QOyFH
n3O7+FDh+U1Pau8nzZLnzHUZaXXy4dLDNj4i5PL9mKihRbX6KavdCDn6nNuw
WXvXDt34kJCjr30eJKFu9LyDroQcfe3rjSZvU6LHKoRcXq+ZjBnv6yTk7M/I
eM+slts7TjEnu8+NIuToc27tHtfsOnR9ECGXr68qiSWrndg6KoCQy32DcvDf
oPwTejwh5Ojz9eVnV57n+uBNyNHn3J6J7d++na1KyOW+Smd8x0YuvOBJyNHX
nhc96ljvwEgPQo4+57bQqGnr7zV1J+Tyeo10t8r87bvtHhNy+X5MdG5ChP3y
ao8IOfqc2+pNL7n/bOxGyNHXcls+3Jja7SFl4eBzboe2qONZYIorIZfXa6YZ
Ge9HJuTsZ8wV99NyayzveTk2NpKQo8+5HT3Vzi/lQBAhl6+vKmX/NfZ3WB9A
yOW+QUnPVeLNvRtPCDn6fF0/n0OXUeN9CDn6nFuXA8v+fX5KJeRyX6Wa5HHD
vZ4XIUefczuuc6eu18wehBx9zi0tNSR8D3An5PJ6jfTg4K2TG70eE3L5fkyU
VHrYpYCAR4Qcfc7tlr0240fHuxFy9LX32QWVHVgtp/CzeR+9ltuuzXuWeW37
kJDL6zVT04z30RPyzKccoOW23PRCF9xGRxJy9Dm3BQ98+BxyOYiQy9dXlbvL
jk+OvR5AyOW+QbHRO9mXLutHyNHn/7YobOkipwgfQo6+9nzih6OpPap4E3K5
r9KaE4lL01y8CDn6nNvgbbNvnF3lScjR59y+7dt8boUpHoRcXq+R7tmeOzhm
sjshl+/HRD3bdCyfe9FjQo4+59ZcMbyP055HhBx9zm3N1Zsmd3FxI+Toc25L
LdvTxTnhISGX1/vr7+cONdP+LfmQkLOZ8V4Skdt8lQ5PPf42gpCjr82bqtR2
dXH3IEIuX19V+uQPfGMTFUDI5b5BWVTFHLd3jR8hR5+v9540fNT18yXk6GvP
Pzv4hHif8ybkcl+l+8MtDpfvpBJy9Dm3Z6w+jzpW2ouQo8+5PfFj37X2+TwJ
ubxeIzVcvmhM2yIehFy+HxPtGjz1RTs7d0KOPufW+2Gfyjm7PCbk6HNunzrE
pi+b94iQo8+59V01a87Oc26EXF6vmSbU6rf3TPRDQs5+x5j/faMYqOV2/Ia5
b45tiyDk6HNu7zvm3XwxMoiQy9dXlZbNTty1yh9IyOW+QZleU9ej3zs/Qo4+
X6/MVf/F8gBfQo4+5/bT5Gc1J9XxIeRyX6Xq7vsLzHihEnL0ObcF3n39plz3
IuToc25rGIf77nHyJOTyeo3Uc6fvid53PQi5fD8manm495s7z90JOfqc23u2
W/S7LISPeWau/bzuaM9bbxs+JuToc26dPXpuvTn1ESGX1/vr7+fWYW5dndwI
OfsZ7zUTuZ00ffOEZi0iCDn62ry1/MUOHU0PIuTy9VWl7tqo9Z7NAgm53Dco
FjkObZ3u4E/I0efr1ZtLJXbp8YSQo8+5rWmeGdzT4EPI5b5KVb69XZ9vqjch
R1+bF/R1zNuaPVRCjj7n1n/cA7V5Ty9CLq/XSK6mldF3x3kScvl+TDTYrWKv
TZs8CDn6nFu7Su1zbrzvTsjR59wu8J3RP/DjY0KOPud2zvU5hzo1Fr78fXwi
t3YnjtyZ5PiIkLO/ze1/vwh/quV2YO4H5WzTwgk5+pzbpeHPjr4rHkzI5eur
ip3zvc+jJgUScrlvUAyGGgssX/gTcvT52mv35surA58QcvQ5t93u7VtxsoMv
IZf7Kr38HHzZJpcPIUefc+tv+2Z/oVSVkKPPuQ1bF3ZySLoXIZfXa6Tns9se
P1vCi5DL92Mi18kN8ia39STk6HNufZutii6+2IOQo8+5Hbz77eUu99wJOfqc
28X/OKnLLYSfZX51prp+5bZ7gw/1uz2mLPzPH23uw5/cmlpO2jH0WjghR59z
e6fNlpTLjYIJuXx9VWnvG3Uw/lAgIZf7BuXAfavww3YBhBx9vlYmxx7qMSDr
zxHQ59wOLDs2bF2o+Lkw5jkzV+nhmxib20d8CDn6/J85g4wDd+wQv0fBffE1
53bB9yfTq5wSv0eUv883SMttkQG393bwxt+j4/t8g7TcPp+wo7vVT09Cjj7n
9sSptuvH2gtf/j7fIC23J/YOjt25xoOQo699P+hY/vCWp+I5Lfn7fIO03A5f
eGdg2D/4XJfI8/P/PdYRKnLr2WxTg3THcEKOvjaf0LS904sBwYRcvr6qlPDd
lnN0YCAhl/sGJe5yi4X7xwUQcvT5ekHRRdWDjH6EHH3O7cg7Vw9Um/KEkMt9
lULyuTuWa+VLyNHn+9294X2vmGY+hBx9zm0je8Majz7ehFxer5E6jjQ/8lyh
EnL5fkw0bc9RQ6EHXoQcfc5t9y3D/r6US/iYZ+ac24/HKm6O6u1JyNHn3K4d
d+Sf82c8CLm8XjP1H9+h/74f7oSc/cW/nyMN1nK7aHRCp5bdwgk5+pzb/WVf
xC5aHEzI5eurist3h2cvrZ4ScrlvUJ5Yr/iy7kwAIUefr4e57vzSZJo/IUef
c5uz1dW7V3P5EXK5r9LSVsuSZ0b7EnL0ObfDYkrG1Iz3IeToc27PLat6cbqV
8DHPmesy0pP7rU4Pa+VNyOX7MVH69W4zmv3KP3L0ObfBKwuPreTvRcjR59x2
nLX24+jKwsc8M+fchr28VSnvMk9CLq/XTAfmtbA9G+lByNmv+L8fS5d/puV2
/anLj9fZhhNy9Dm3L6s+djh+MpiQy9dXFf913Z+v0z8l5HLfoCQ6OzssTwwg
5OjzdRnrRrnO//Qn5OhzblPaGvd1Oe5HyOW+Sj89K6cmrHlCyNHn3FquLVzl
9C5fQo4+53ZWatl/+yo+hFxer5HyePhMbPXdm5DL92Oium3sB7p09Cbk6GvP
iz7dEfP9sErI0deef16zof2QL16EHH3O7YH137onDRE+5jlzXb++3kgOtWj3
0JOQs//493PRIrdz7Or17Z83nJCjz7md6277rd+TYEIuX19VmgQOzzNw0VNC
LvcNisWZ9u931Qwk5OjzdYfuz6LOdw4g5Ohzbss4HrCt3safkMt9lc7MHH/1
Ul0/Qo4+5/Zc8RvBSzs+IeToc25HJNlvvLDIl5DL6zWSbdqcf44+9CHk8v2Y
yPJsnW7+Nj6EHH3t84MVC9ZcNNObkKOvfR7259i7uZ6phBx9zm3RuJ9rN7YS
PuY5c11metrh0OAr570IOfsZ+wvRcmu9ZfX6+m/DCDn6nNuN/Zwdzn4OJuTy
9VVlotrdaeKdp4Rc7huUbod21Y+cFUjI0efrKXnfVHHeG0DI0dfmqbS/WX7Z
S39CLvdVMof1af412o+Qo8+5/V7YuVKaTviYZ+acW7dj8246tXxCyOX1GqlY
1cY5HmzwJeTy/ZjobOV6Q6//+voHOfra71P0q8q/6CR8zDNzzq2xXtE3R529
CTn62vNI38cXq1NZ+JjnzHWZKSwwuWytvSohZ7/A7+f8Q7Xctpo35cG9mDBC
jj7ndmf3wE+n7J4Rcvn6qmK9w2J80KenhFzuG5Qr40YWnOkSSMjR5+sU37Sw
Ai8DCDn6nNtalfxKuXYUPuY5M1fpXJGbTla7/Ak5+tr390t/TGv8wI+Qo6/N
kym64d9dFsLHPGeuy0iDx3psfj7wCSGX78dEa7wr5jrt4kvI0dd+/lz/rzKD
bYWPeWbOua3cblSRmft9CDn62ryCy27JZQoLH/OcuS4zeZXb/CnXBm9Czv7V
f//3ixaR2+cnS+w/GRpGyNHXPt+9quCDEYOfEXL5+qoyY1OLwRebBRFyuW9Q
Yi3nf5xo+ZSQo8/Xk4o8LOjfNJCQo8+5veZeu0qDYwGEXO6rlOLn3/y/quir
WXzObee4/Ws3Lfcn5Ohr8ze2tut86okfIZfXa6SBp2Le1a3pR8jl+zFR4z1W
i1/veULI0efclgzd2KNdPuFneb/nH865zeXWobXrKl9Cjj7n1hzlZLU/h/Cz
vN8zU11mGlhg35WVK30IOft9fz+o9FzL7cb0tflOBoURcvQ5t3uP9F2VtOUZ
IZevrypNvW40sV4aRMjlvkFpeznpY2yfp4Qcfb4+pB+4tOTmQEKOvjZfbWPZ
+MZfAgi53FeplMfgHmfXoK9m8Tm3Lg+UOWUqCx/zzJxz23rC/d0VjvgTcnm9
Rkp2TexondufkMv3Y6LdLl9+PpnvR8jR59z2aVK0YOzbJ4Qcfc5t4kad34vZ
wsc8M+fceu/SnfuU7kvI5fWaKc/nS1M+Lvcl5Oyn/34wWuTWsvDxyyufhRFy
9Dm364IsUwZ5PCPk8vVVJbFT/JjC7kGEXO7/+n7wRpEX6SefEnL0+XrK1V3O
ueICCTn6nNu24RUnvO4vfMxzZq5S7Qdj1q759fUMcvQ5t967Vm+8u0H4mGfm
nNsAl2aFbZsLH/OcuS4jxfy1Oeq2yZ+Qy/djopy97avsH+5PyNHn3ObPka/M
yhg/Qo4+5/Zx/Zf7Ck4SPuaZOec2rkiSy/qPTwi5vF4zXfxZrezNNU8IOft8
vzi3+77ecLSJDCPk6HNuk/v02v9YJ75vwTxnXkdVGjp4FX9aMJiQy32DcuL5
8Q7eH58ScvT5eqRPozq3W2X9PTH6nNsta+c+mnVLPCeBec7MVWpq6TGpfVf0
1Sw+5/b10MgZXd6L5+Qwz8y1/RazqGF/TvhYR+ZrI90tW8OPHPA5PGM2+zFR
16JU1r8K7seUxefcLrO/nX9BiD8hR59zO/eSxxznccLHPDPn3E65fJbOfhHP
eWOeM9dlpq7xnQNLbcfnwkWe9f97zL9VmJbbm80inBokhRFy9Dm3gSuS6re1
DyHk8vVVRZ0Y5ThjSDAhl/sGpWtsa/P8rkGEHH2+vtxnxX+9Djwl5Ohzbr/F
rWqZVkr4mOfMXKXgW0d9CjgHEnL0td/PPz869v1I4WOemfP5NE2t47KktPAx
z5nrMlLNkR/qRrwIIOTy/ZjIVVnru/9oACFHn3N7ptD1IQUnCh/zzFx7Hin/
iI7FGgkf88ycczt/+JZnIRbCxzxnrstMbo2H0IqT/oSc/YzPFYrcHnJNePXo
WxghR59ze+vovkPmpSGEXL6+qoyf+Soqv1MwIZf7BqXUtvTblU8HEXL0tevV
H4+kf35KyNHn3C7Pf23+5qXCl38eVuTWd32BNzkroI+fhxW5LT7Ju2F0QCAh
R1/7/GA1+5+Ftwhf/nlYkdtGFXYaInsHEnL5fkzU8kiFI2HlcD/4eViR2yMF
UnuMTwog5OhzbkvdMX0cfVf48s/DitzWnF+lkW6T8OWfhxW5XV53dfELwwMI
Ofur//drljXhfB8Ui6Bj2ya8/kHI0dee9yj/evdVm3BCjj7nfGSB8CJJbiGE
XL6+qvSxV0I9vgcTcrlvUIZ1TIn+oEPfkMXn6zH3NgYEDQ0i5Ohzzl3dTE4z
Xj4l5HJfpdCcQff7bUZfzeJrz/uMaTG5aTvhY/6Za+/7yx1sXdVS+Jh/OEf6
1mzXp9n+gXi+2ezHRI3HWm5wOxxIyNHX8l+6c/OF04WP+Weu/TwkVynz4rbC
x/wz55wXrp37Wq7Swsf8Z67LTJdLHP+6NDWAkLOf8bnaCC3nbz1SLa6V+0DI
0eec1+nk1Sq5XjghR197HrV0ld498oUScvn6qvL+uPNcjz7PCLncNyj34i3t
i40MJuTyenW64dNy2lo/CiLk6HPOHYOGh3v0Eb788+MRWs7d0g8XrfvzKSFH
n3O+J3eN3XVchC///HiElnPl8NjiKSuEL//8uHaOtDch7Hxgj6d4vtnsx0QW
pZoErKmE+8HPj0doOS83c5TfwvRAQo4+53zZ9xY99gUIX/758QgxT8yZHpa7
IHz558cjtJyfrFTir4WrAwk5+7//cV+R81FN0vdXmJxGyNHnnDs3a1JnRt9w
Qo6+Nj8hplpAm36hhFy+vqpcXlV3Yf1Lzwi53Dco44okzznrFkzI5fXqdJVt
P+8LrBlMyNHnnCc12ltU+dUvyOW+Sk/7zXr5aA76ahZf+/xXmQorPzUSPuaf
Oefcaue6E4dzCB/zD+dIL6c0taoV/BTPN5v9mKj5jUWthzo9JeToc867RpyZ
cGKN8DH/zDnndh1OpKaOEj7mnznnfM+Vlc6rSfiY/8x1man37Zn1Qv7CenF+
QqSWc+/ns61/3E8h5OhzzgtWHVq15eJwQo4+5/y13jfh1clQQi5fX1WSu+bb
0ihfCCGX+wbFe3rjBka7Z4RcXq9O5zZ9eJdeB4IJOfqc8zUpHpc2NhG+fN5C
pJbzczOqn2ufEkTI0eecr55TbZuHs/Dl8xYitZyfNz97M2WN8OXzFrRzpG8u
IQVdhwbh+WazHxOZX7fbsaIp7gfnLURqOS96afuYuiWFL5+3EKnl/NYS28du
n54ScvQ551Y2bnmXvBC+fN5CpJbz2uc3NX3u8pSQs//7sUGbKC3nzS3K7xlU
MpmQo885T/h626b/+XBCjj7nfI/VMJupH0MJuXx9VQnYOH3z90khhFzuG5SZ
i5csTNnxjJDL69Xpus9sHq7kf0bI0eecN39Q+szoK8GEXO6rdOJu5PI3k9FX
s/icc88po36GNBE+5p855zy6ee/6+6yFj/mHc6QS9jNivF4F4flmsx8TVd2w
51Yj7yBCjj7nvHlL23ljLwkf88+cc94oVt+07w7hY/6Zc84rJd8J6rxA+Jj/
zHWZKS10ktF9ONaL80ZEzjtUDlqxv1kSIUefc/7xku0PNTyckKPPOe9ULrll
etfnhFy+vqoUvG7n6eIfQsjlvkGx9GuQaJkDfZxPInLudvfIlb4rnhFy9LV5
aIkzXy6pIXz5fBKR8x497W9/ehNMyNHXnj9ce7H7eEX48vkkIucD0xZajzwg
fPl8EpHzqC9LKm9YFIznm81+TDTSv2nH+yNxPzifROS8yESbv9Z1FL58PonI
uePo+IPJ9YQvn08icr7yykbbpuWEL59PInJefcrKj0mWWK/I/+9vC4ZGazmn
xPRjR0MTCTn6nPNnvTslnS8WQcjR55zPbr7t/d2zzwm5fH1V8b7eqM/ppqGE
XO4blIFzB5YYPTuEkMvr1emOLU/s2+XrM0KOvvZ8V9mkK2UvCh/zn5mrdGdy
+YKn56CvZvE552s22py820X4mH/mnHPT6ZZJeWsKH/MP50jrplyb0aUo1mvM
Zj8mymu3NX3Ut2BCjj7n/L2fW6G4ROFj/plr7wt7637wRYjwMf/Mtc/7+Ofb
t8td+Jj/zHWZKSwoLX6fczAhz3zKRi3nZ7zb22/1eknI0eecF3lY75V1L/F9
FOafOefcs9ulp4mW4veC8nk+2rxY5dKrmCnvTocScrlvUFK71nnbMimEkMvr
1emqV94ea1qY9blV9Dnn85qM/7K0nvDl83yMWs63zlvWsIUOfZznY9Ry/smu
bIvSkeK5cPnnSo1azq/0dFhg/H/Pkct/z6ydI3X1bPdk0GV87hzrNmo5P7bA
qdDsw7gfnOdj1HK+9G/rR95bhC+f52PUcj6sy2rPaSuEL5/nY9Ry3vFzD+Xm
HOHL5/lwPWYanHtSO9sJWK/If+/f/2IQOc+9+FL9Fe8TCDn6nPPTDaOr2+yK
IOToc8798k7xN0x6Qcjl66uKQ9NDz00lnxNyuW9QSv03utaLsaGEXF6vTued
N9fUMd9DCDn6nHPLWW4fUl2Ej/nPzFVa6fK4de7t6KtZfM75KqebqQGzhY/5
Z845/z7on/oNRwgf8w/nSGeGvm6WpyfWa8xmPyYq33Pel/btcD+mLL7293/h
hV93Nhc+5p+5Nv+nVIStZX3hY/6Zc87z6G8//1RN+Jj/zHWZyT1P+PT3f2O9
OM9K5PxSu6XPZ3VNIOToc849ErtWi4mIIOToc85LXvS8OCnoBSGXr68qQ/8q
0d+w5Tkhl/sGZVz5areWJIQScnm9Ot3eUTXX2KwNJeToa5+nK9B3w70uwpfP
vxI5L9clQd/XFn2cfyVyXsnL+LhRYeFj/plzznerPmlDcghfPv9K5Hxb+3md
rn4KwfPNZj8mimpQJKlxWgghR59zvm1IzZlHkoUvn38lcv68ZK6XulfCl8+/
EjmfUmr91AfxwpfPvxI5/36oA42LxXpF/j/+/sWAyLnPwQKzZ3vEE3L0OecT
pi6JP1ojkpCjzzm/MvLplFatwwi5fH1VeTV4SsV7+V4QcrlvUDoE9KL5U54T
cnm9Ot3+6Tc9/7V5TsjR55znm/g2tWlMKCGX+yrZX/H3XfYIfTWLzzm/eKvg
phPXhY/5Z649f7fU6sDN88LH/MM50gTzfv/rp0PxfLPZj4mq7Xi39vwp3I8p
i885//ik7rqe/299zD9zzrnXsjfWXmeEj/lnzjlfMd+65Nxzwsf8Z67LTH8r
K9Wk81gvzn+L0XI+rfWVhWeHxBNy9DnnrQ+1abpyeSQhR59z3mRxydCFzmGE
XL6+qrjdHb+0+aYXhFzuG5Txrce8KJX+nJDL69Xp2q7otrTvueeEHH3OedEm
Qf1dFwtfPi8uRsv58BpzXBPGoo/z4mK0nNunFju4cIjwMf/MOee3/u4RdGag
8OXz4rRzpEV7LpxaMBjrxXlxMVrOPyhX7uYdgfvBeXExWs4nVMlfsfT/q1c+
Ly5Gy/n1aYsGPZksfPm8uBgt5x5JjQdtmyV8+by4GC3n68fUaf95AdYr8p/x
/ydy3sZ6z96aVvGEHH3OeZnQH00ehkcScvQ559vrDCg0rVY4IZevryoN9DR2
fbEwQi73DYrvldFH761/Qcjl9ep0I8qc6Le/zQtCjj7n/Es1uzM3ywsf85+Z
q9T42Y7vqQXRV7P4nPPKFS4eqJJf+Jh/5trzvO1CYw7/v/Ux/3CO1NPp5MrZ
JbBeYzb7MZHFAf+dvhVxP6YsPue84rvaS2fUFD7mnznnPKR8/xqbmgof88+c
c16m7Yn9W9oJH/OfuS4zORRxzl2sJ9aL8xJFzm36Xomc6R5HyNHnnKdXKnXz
cKsoQo4+53y5Q0v99IvhhFy+vqpYvbhWN/fxMEIu9w3K290dHB//jT7OVxQ5
f3O4Q40lpheEHH3Oec89gX1WewpfPl9R5LxEiFO3/Ar6OF9R5LzlvlYzyrgJ
H/PPnHP+qsn9vUV9hS+fryhyPvHI2J/lw7BenK8ocn71RPC/M5NwPzhfUeT8
2BXHAS++Cl8+X1Hk3DTk5IEN1uK85PMVRc5/HOrV5HN54cvnK4qcFzjmtf9x
nTBCzr797+ecY7Wcd381KNV/ZxwhR59zPnz7CP+RZ6IIOfqc85QctsPC6kUQ
cvn6qhK7JWB20UbhhFzuG5QdPc/8OOAaRsjl9ep0j9d3/jR9YxghR59zfiW6
3KDj84WP+c/MVbro23nU9Xnoq1l8zrlNjhr/hiwXPuafOef8TO034//bLnzM
P5wjXdrjcy7HGazXmM1+TJRP/Wfgynu4H1MWn3Neqcf57zFBwsf8M+ecF5hy
8/zg18LH/DPnnAe79PcaayHygPnPXJeZFrpFFT5bKpyQs58xp1HkvKKLW8cO
M+IIOfpazk90OTu0RDRl4eBzzuvtvv3D5kEEIZevryqXx85IKB8QTsjlvkF5
ftY4wXkc+jiPVOR8Zv5Pz143Dyfk6HPOF/2n77SpjvDl80hFzst+2/J2YmP0
cR6pyPlk64AHsf8KH/PPXPu8VMPCRzeMEL58HqnI+YKBJTtedsR6cR6pyHnV
yHXRe/bifnAeqcj5zbXbb1W5KXz5PFKR89RuN84cfCp8+TxSkfNcqftWzU8V
vnweqch5e2fXqaPyRxBy9mN/f1sgcu40s8WP7oPiCDn6nPNrZffXfrM5mpCj
zzmv2G3R8C29Igm5fH1VqZf76+wTsyIIudw3KLNyuN7baoO+IYvP1/VP52oy
7204IUefc94uucbWgFThY/4zc5V6P/cq/OgH+moWn3P+vAC1DSkp9o/5Z845
T6kR5HW7sfAx/3CO1G5hqz7uAyPwfLPZj4msthQt1Hcx7seUxeec/z3Srl33
Y8LH/DPnnG+PHf3g6yPhY/6Zc87T5xaOMiYIH/OfuS4z7YhO6XYhTyQhZz9z
PUbFO3HFYdducYQcfe35z8XDttyzFD8Xw/wz177+/5w6zzVZPEcon99rEt//
Es2s+FckIZf7BmVP0KGCd7wjCLm8Xp2ue7UTTY9fz/pcL/razz+rDXhhaRC+
fH6vSct5uxTbQ0MD0Mf5vSYt523Mufb1SxM+5p+59j7EW8U6GUqK+yOf36ud
I/X9Ebvzox6f48T5vSbtf1/sNCh22uRIQo6+9vx/if2ni+8Rvnx+r0nLeZOy
p9RmrsKXz+81aTkPP9faYewr4cvn95q0nH+s4erXqQg+tyTyv/b352JEzmNz
nrc3dI0j5Ohzzpe30681dDYScvS1n/+/r9i93rYoQi5fX1XKJOp01QIiCbnc
NyjFIut+d1+PviGLz9fWo5MaWS+OJOToc85H7d7lErJR+Jj/zFwltd2Lz3FO
6KtZfM55rNulw8WfCR/zz5xzfv+hRf3OOcX9xPzDOVLy0GnWORtG4flmsx8T
lTgZZ3N5bBQhR1+bVzZgetmOe4WP+WfOOb8bbRph6yV8zD9z7f1c4WvCwj8J
H/OfuS4zrc5fyqVs1WhCzn7GHGCR8xLnY1y29osj5OhzzsfO93CotdNIyNHn
nIdbO8ya0zKakMvXV5XV8ePPDd4URcjlvkG53MjDYVRv9HHetTi/a87vt0/q
EUXI0eecW41cvy19gvDl865Fznv8fTlfuR3o47xrkfPAZluGRj4SPuafOed8
lF210U2/CF8+71rkvNzpRbWU+tF4vtnsx0S3N/d3SJ4cTcjR55zPGR3t6HFK
+PJ51yLn+cu8bu4UIXz5vGuR86Edpw3cl1fkTT7vWuT8ebORVnkrGwk5+9V/
PxgXp+V8Qo34Kur4OEKOPud8zvQXk0YYjYQcfc550J6e12u+jSbk8vVV5bhV
pfoOvaMJudw3KD++2vdvWwV9Qxafr3/sP+C9qFY0IUefc77TwfFMk17Cx/xn
5irFjFs149kq9NUsvvb5F6cto9Y9ED7mnznnPPejdZ/GfRc+5h/OkXquanAh
XwUjnm82+zHRtw1eezaTkZCjr80T3jZq+uMRwsf8M+ecJ+9f+33UMuFj/plz
zu8sez6l4RHhY/4z12Wm+DOHUsvew3px3rvIuXejek2LrIoj5OhzzpuvyV/q
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
GJDlfLPZj4lK3izcddyZBEKOvvZ5yV2DX1R+J3zsF+bcF41fB68ztnpJyNHn
vug+91mOjWuFj/2SuS4ztXnxd5lKT14ScvYz5qiIvujf6XMpctPpkaP/574p
BT3qb/Qt+pKQo899YXnlcN867eIJOfrcF3Y9HRd0SI0j5PL1VWXPg63FEixw
fZwvJPqiuG33t6/s0cf5QqIvLq3pduPspnhCjj73Rc1VJVz6xApfPl9I9EXF
9SWtqrdIIOToc190XD1iq9Mu4cvnC4m+SFEOzHB8I3z5fCHRF49tl1UJapfl
fLPZj4kedyz+puOBl4Qcfe6L2j8vOx1/I3z5fCHRF8deHz7x0D6RkKPPffH8
5ZS9RzcLXz5fSPTFykUeV1qFJRJy9n9/23FZ9IVl+cUTOub6QsjR/3PflAP2
tSb13vqSkKPPfbEq/tu8dvHxhBx97os56ycvGXhc+NgvmddRlTd+DcK9HuL6
aja+QdnXYXW+8F9fDyCX16vTTdPvaHt0ZAIhR5/7ovtdc84DivCxXzJzlcY2
/1m//t8vCTn63BdPOhwbk3OV8LFfmHNfXP/vW+xDk/CxX+AcaVxIzgW32yTi
+WazHxMZUzx3rDiaSMjR574osaB4rZTPwsd+Ya7No755u1xir1eEHH1tHnVq
ySOTzwof+yVzXWYq7tN99rIvrwh55lNO1Ppims2h0g4uHwk5+n/um7Jr+bf6
l0slEnL0te9fip4YYdyRQMjR1+YXne2w+s5I4cvndyVqfdFXV+iKugXXx/ld
iVpfNEy0sL8agz7O70rU7leJnj4ejdq9JOToa/Nb/EOT6lwSvnx+V6LWF5U8
b7vU+3/3Uz6/K1Hri5pbR696u1L42C/MuS9yKTcvNUsWvnx+l3aOtGDEpmIj
+rzC881mPyZ68OLql3x3XhFy9LkvXJve+lasTBIhR5/7orlVsc+TFwpfPr8r
UeuLqnPbWRUPEb58fhfXZabOw1pElKn7mpCzmTHXSPTFgZxtQrrHvyfk6P+5
b8qsgPJtLa4mEnL0uS+eXNzgObb7S0KOPvfFy226gUm1hS+f9yX64vjEHinr
JuP6OO9L9MWWZ31//uODPs77En3xsrrdy1bNsF7xhzn3RdTh7UE/LgpfPu9L
9MX14FnLbSu9IuToc19Ue2TXfNMe4WO/MOe+WLn60uE8eZMIeTbnS/0Tyi3I
uTAJzzeb/Zio4+6QY3UTkgg5+twXnvG7U6b3fE3I0ee+yBF33P/ubeHL532J
vog4qj9XulwyIZfXa6YPyXVXHl6STMjZz5iDJPrCtvnHqzUfvyPk6P+5b8re
Sef2nu3/ipCjz31Ratr4+jNLJxJy9LkvTK1mJl21Fr58Ppjoi+b2cVavB+H6
OB9M9EU193/7NvNEH+eDib5Y6qu3CW2N9Yo/zLkvbKwjQvQPhS+fDyb6IiWp
9pNxrZMIOfrcF39t3erVwlX42C/MuS+KN8oTfLXla0KezfmSQ57vzi1vvcbz
zWY/JmredbXT0ZrJhBx97otawwYue3RU+PL5YKIv0o0L3c8XekPI0ee+qF1l
89VRi4Uvnw8m+qLPsXMFLRLeEHL2M+Ymib5IaOJcvKn1O0KO/p/7pth9r9Kr
acEkQo4+90W/LnHt4n9dI0df+3psw/6ksj+FL58nJvrCf/HH2rZDXxFyuW9Q
vp+buq3Lc/Rxnpjoi15r7tVdOhLrFX+Ya+9TKBbXZ0ey8OXzxERf7L3V+NH5
Ba8JOfraz5OXfdwXapFMyNHnvqiYsvP+PxuEL58nJvoieu+lMiUKvsHzzWY/
Jvrab1nPxVveEHL0uS8SkusndM6fQsjR576IK3W6/abVwpfPExN98WZN81wD
vghfPk9M9MWryj8aeE1JJeTsZ8xZeqX1heM+91fnD70l5Oj/uW9KyO4rzQ8/
TyLk6GvPX1XwmPcl/hUhR5/74sK79kX25xbry+ePvdL6ou2aUiXD5iQRcrlv
UKLHu42qlOM1IZfXq9N9PlE+tNK+14Qcfe6LIc5LB+Wpn0zI5b5KUZb9Q+x8
0Mf5Y6+0vsjtfMvNMOoNIUef+6KUKXlr+Hvhy+ePaedI/1Yff9buVz6Ry/dj
ojGVV9kuKZRKyNHnvgiOsGr/Yo/w5fPHXml9sa3IhVV21mZCjj73RZugS+ty
dBO+fP7YK60vjhR7dzrvRjMhZ5///7gvouz2rO0/4i0hR//PfVO+5XvarcKd
14Qcfe6LtBYHW/f59fctcvS5L7ovHeeQr7JYXz6vTPTF909BNuXPvibkct+g
LLnw7XT+9smEXF6vThf4ocnjNsnJ2XyfKXzuiz3Ti2zqtvsNIZf7KtX69ryU
oWUKIUef+8JpivWFaKPwsV+Yc1+ULXq81rflqYQ8m/Olqjcitg0vaMbzzWY/
Jtoxcn8Tq8FmQo6+9vPktuPWLj0pfPm8MtEXVsGfHgUlCV8+r0z0Re+VM53K
1E0j5PJ6zWT597K0CbPTCDn7GXOcRF+M/rS9d/fObwk5+n/um7L49IGdS68k
E3L0uS86zyo3ukQB4WO/MOe+eONUsKFpmPDl881EXwzLcWXzhY+4Ps43E31R
o3fvUt/PviHk8np/3bmpOfZbj0oh5OhzX7guvvvCs0wqIZf7KjmWi3F/F4g+
zjcTfZF8bsip9W3MhBx97fN9NxsXUPYLXz7fTPRFnpM1ey1OMeP5ZrMfE/X3
blXIVZ9GyNHnvmg2o9zjvduEL59vJvoiYEK5FaWihC+fbyb6Ys3G9lGDq4k8
y+ebib74kW/qjQWz3hJy9jPmPiVpfeHvElO22YC3hBz9P/dN+dg6eXBhtzeE
HH3ui5DbZ2cU6SR87Bfm3Bfj4uz6d78tfPk8tCStLxq93DHv+/gUQi73DYrj
8fk+rrVTCbm8Xp0uvPThUru+phJy9LkvksefsI0fYybkcl+lGXUS2jbyQh/n
oSVpfeH3+VNs4epphBx97fuXHReONlgvfPk8NO0cKe1DBdeN8Wl4vtnsx0T3
Lt6Z8je9JeToc18cn1rblHeP8OXz0MTXI7sf3zsyMkn48nloSVpfXM+z5WDb
lu8IubxeM3nlPdgxcOM7Qs5+xpwo0RcLTy2M2LPyLSFH/899U5J9Vxx/+S6F
kKPPfaF0z/fXy7PCx35hrr0/us+bLqMapRJy+fqqcuuv9jM6/aoPudw3KLkS
Lg7fNx19nJ8m+mJptQSXnDFmQo4+98Ws2vXeTe6VRsjlvkplrrRS5yno4/w0
0Rd1270YuKO6OC/sF+bcF2M6PD+wcYfw5fPTRF/cGrWi3vBPb/F8s9mPia6+
LR5TbtA7Qo4+98UOffV18beFL5+fJvqiy9f5XmHF3hNy9LkvzDu6nqg4Vfjy
+WmiL3y6xp0Ke/SekLOfMVdK9EWBjuNuRHm/JeTo/7lvSuykHp9yVzETcvS5
LwoEq+lVSwof+4U590XapNUxdacLXz5vTfSFs71Dm30mXB/nrYm+CKn28H3b
kWmEXF6vTtfGpbinVVQaIUef+2JXo0/6n4PE/ZTPWxN9UXji7B0fnqKP89b+
379fKrRMnNXxHSFHn/tiToecGwfcFb583proC6pUJM9lu/d4vtnsx0QtR/6X
a/fO94Qcfe4Lh7STBRp+Fb583proi6F1E9SbIz4QcvS5L4x17/9s91D48nlr
oi9mvbfPkb/iR0LOfkY9r7W+6BD4+mXhuu8IOfp/7pvyrMuCtaPjzYQcfe6L
dl87rbqRJnzsF+bcFw+bDAorOiyNkMvXV5WXzk2q28amEXK5b1AaD0j799XU
t4RcXq9O13HR+r+Pf35LyNHnviih91lzYaW4n/L5bK+1vlgQbfX1s9V7Qo4+
98WmwEFuDdcLH/uFOffFlraDA3pafiDk2Zwv6Z63WD5x2Qc832z2Y6L6lRON
F95/IOToc1/Uz5Ew499xHwk5+twXyxt0S5sVLHz5fLbXWl98qf3FbwR9IuTy
es10etTP+FZnPxFy9jPmVom+aHx5VNjmG+8IOfp/7pvybkePJxa/vn5Ajj73
hU2vjcXKJQof+4U594VDUtiibhPfEnL5+qqifjqfp1+Od4Rc7huUCycdx3Y4
gj7OcxN90e5Z7moJzd4TcvS5L8od3R0dEih8+Tw30RfP9LntW4z9QMjR575I
2eTV7cU74WO/MOe+6PKo+y5lyUdCns350uS/U9aXy/kJzzeb/Zgo8O+7/9VY
/YmQo8990dtPt7FGjnRCjj73xc/ide4MdhS+fJ6b6Is4/6n271OFL5/nJvri
2siSs+uM/kzI2c+YcyX6Ys49ZXOFge8JOfp/7puyrb6NrcXtt4Qcfe6L6d6X
o2vp3hFy9Lkv6vdNGtn+gPDl899EXxxLelu9YMf3hFzuG5SW+r+ePEpHH+e/
ib441vbWrutnPhBy9LkvjtSa9t6nx0dCLvdV+rpqbPS4d+jj/DfRF159ij2e
tv0TIUef+2JsJdteBaunE/Jszpdad23/ef39dDzfbPZjou71T16v3fUzIUef
+2JZ2VRTpxDhy+e/ib5Y1qfYlSpDvxBy9LkvFj/ZNtIqSvjy+W+iLz6Z1NTa
Q78ScvYz5mIla31hKPutY4NKHwg5+n/um7Jt+7CfBYPfEXL0uS/qXRwxcmXr
94Qcfe6LtputJg5LF758Xlyy1henEud/nqh8IORy36Bc/KGWKP/fR0Iur1en
69NAV2do50+EHH3ui3ues/NOt0on5HJfpWapr/97dR99nBeXrPXFge73e8VO
/UzI0ee+qNu8ouepkl8IeTbnS7vH+KRucfmC55vNfkzUdnW+LhaDvxJy9Lkv
/lpXtsiwd8KXz4sTv+8a6lPD4dN/3wg5+trnX/KNHFWp1HdCLq/XTDcGVi1h
d+o7IWc/Y46W6IutU8u/6lbqIyFH/899Uyw9z40oUeEDIUef+2J/dPXUdreE
j/3CnPvCotnU2KdbxH7k8+VEXwR1GNvt4OxPhFzuG5Rhi/pen9A/nZDL69Xp
0vxnH/eo/5mQo8994Re32HWc1RdCLvdVCunbwPvvYPRxvpzoi/ErS5Rrvf8r
IUef+2L22JS9jQd8I+TZnC81mFt/wdKC3/F8s9mPiSLv5Fm5Q/lOyNHnvnBx
evw0btIPQo4+98WkqH/LRxX+ScjR5774fPTDkshrwpfPlxN9Ye6aOr+crU6P
nH3+57kvXCiuYkjbT4Qc/T/3TSnvf1vf69RHQo6+9rxl8w6nJk4R62O/MOe+
qD2/4IBSU9MJuXx9VUl4c3PE5LmfCbncNyiP7tetfmbBF0Iur1ena9F8YUSJ
2V+zeS5c+NwXg9w8Y16O+UbI5b5Kg0xTn7fr8p2Qo8998bNq7zM3qv0g5Ohz
X4Q2Gt45+Kfw5fPoRF8UftW5+b9+P/F8s9mPiVYcs7sW2FmnR44+90WnaeUd
mjkJXz6PTvRFku2w3Pvz5NAjR19b7+e59XZjhC+fRyf64uXGEX+VcRE+c/Yz
5nS90fpi7vcmLadcTyfk6P+5b8rN9MhZ3+YInzn63BfX/7NufGH+Z0KOvvb8
WOy+/AXPfyHk8vVVpc6YCzvORnwl5HLfoLzbXmDTOKvvhFxer06nn5y+ZGnV
H4Qcfe6LJx3HBl1o9pOQy32Viry+73+/ok6PHH3uC+8qzVqPPCp87Bfm3Bcf
O9kl2JXOoUeezfnSvLIT/l66RfjM5fsx0Ymocfr7P3PokaPPfdHlhs2rZlMt
9MjR574Y08r1kH2o8OXz695ofVFpxPaD1vY59cjl9Zop8cLZ8JjjOfXI2c+Y
6yX6wqdH0hL69fctcvT/3Ddl8LR//up8QfjM0ee+UN3d9qe+/0rI0ee+eGKl
nxI0+jshl6+vKhdu19zfw/cHIZf7BqV5mfgiVWx0euTyenW6i3abx669K3wd
/GHOfVHS91r4ykE59MjlvkpLc+59eSwNfZx3J/qi4YHgAfNWWeiRo8994Wce
u35HoZx65NmcL9U9u/7A/D059cjl+zHRrsgmdfeXyqVHjj73xeOg5e2H7RG+
fN6d6ItlD6KO/1U4tx45+twXJ3b7T6y2VvjyeXeiL2If99vlkZ5bj5z9jDlg
oi8q6rd/6ub8jZCj/+e+KVNfbO9pmPSdkKOvfb4yIN3xv19ffyJHX3s/TmJ1
66ixOj1y+fqqUqLpAZ8yrXLokct9gzL5616fI/ks9Mjl9ep03bucW9fKT/g6
+MNc+/lYzNXAo+ty6pHLfZWGnx5W4FDzXHrk6Gt9cTFnpZzxwsd+Yc594bry
qLJ9XW498mzOl7Zdib/7poqlHrl8PybqciZw+dn7lnrk6HNfXO9S7ELLnlZ6
5Ohrz1fOGXyhTJTw5fPxRF/E9Ymj4+Pz6JHL6zVTmxvJGyu/yaNHzn7G3LAU
rS+alS8xy2nfT0KO/p/7ppTNu+uv1o46PXL0uS/cNk+/UHl9Dj1y9LkvbpXw
c07fb6FHLl9fVcY92bXl85GceuRy36B434626/3r7zfk8np1uj1LYg7cXZ5b
jxx97ou4enk7zRphqUcu91XyG1Tph6GBlR45+trnK/vfcLz2Q/jYL8y1eReX
1ib3ephHjzyb86UeFeIjZyzOi+ebzX5M1L/J8ZrudfPpkaOvzRO26PbldZTw
5fP0xPPXgTWXf5/yX349cvS5L2otWV32QfUCeuTyes3U2PHJ4A5qAT1y9n9v
b1wKzxtTzpZOW7xreik9cvS5j74cdqxt8yCHHjn6f+6zsrTFJ593Lyz0yNHn
Prrmv674sxa59MjR5z66UX9BYMzO3Hrk8vVV5dS6+/W2PrfUI5f7BmVu1TM/
SubLo0cur1enW218RjOq59UjR5/7aLvjpXbnW+TTI5f7KrnXK+a8j/LrkaPP
fbRh5W0P3yYF9MjR5z6qOmOl484q1nrk2ZwvfR45qGnufAXxfLPZj4k6Vitx
r2BCQT1y9LmPDlSiPgvvFtIjR5/7SF902730toX1yNHXfj4w/mzetWeFL5/X
J/roe4l2XarkKaJHzn7GHDPRR3unvq5/Ob6gHjn63EdtctgemLsylx45+n/u
s9J1SEqhyy0t9cjR5z7ascExcW/pPHrk6HMfWX7oOW5beF49cvn6qjJyc3Sh
d0vz65HLfYPicty2xk9Laz1yeb063fSjuw4vnV9Qjxx97iOLYj997wUV0iOX
+yq1j+7WrcnWwnrk6HMf3eydpourWUSPHH3uo5a751b0eSR8+TxA0Ud5ShbI
7dS3KJ5vNvsxUS7PY5MrGYvqkaPPfTShyLnCt8cV0yNHn/vo08/zt8MShS+f
Byj6qHbQlVyp42z0yOX1mumrc/O5HWNs9MjZz5h7lqr10aDm3QJ61bDWI0ef
+yhp+aTPewLz6JGj/+c+K74NVrS035hfjxx97iO904Fmi+sX1CNHn/tok/31
/+b0KqxHLl9fVda2Pfy+7MwieuRy36A8aFWmbLfFRfXI5fXqdEsaDao3a14x
PXL0uY/cW9XP23i0jR653FfJ9H5ewMXWxfXI0ec+Wv/WdaJjiRJ65OhzH7VR
jtmnxghfPj9QO0cKHDL5U7nTJfF8s9mPiTYdvtQvfmQpPXL0uY/O7XP5mKtE
aT1y9LmPDFcmtyzrLnz5/MBUrY/mr93T8Oq0Mnrk8nrN9GHXmaLNipXVI2c/
Y06a6KPKxZu32f+jkB45+txH+yzPBHYcVFiPHP0/91lR7pVKrXm5qB45+txH
dv3T48d72eiRo899lK/yod0RTiX0yOXrq4rFyvTmUxxK6ZHLfYNSs7Bj36Jf
S+uRy+vV6RyHjV5lP6+sHjn63EeN+4WnnAgrp0cu91WaHG319XGN8nrk6GvP
Jxhp6OApFfTI0ec+On1309k2PSrqkWdzvjQnr77tj5iKeL7Z7MdEr3vur1ds
+t965OhzH+2xD/pZ/JPw5fMGRR+NDNoyeZVjJT1y9LmPQk+6jnb/LHz5vEHR
R8M8+iqN5/6jR85+xlw10UeFw/8r7bemuB45+txHd+osntzhfhk9cvT/3Gel
VK7TNDi6gh45+txH4WdbOfqUq6RHjj73UV7fUbVnW1bWI5evryrRxSvtdFeq
6JHLfYNyv/Kqr7P72uqRy+vV6Sp3POVe3ddOjxx97qNX9646U83qeuRyX6U3
fkesdy2ooUeOPvfRqInzOtg419QjR1+bl35r9tVcMbX0yLM5X6LQDnH1ctTB
881mPyay23O7T578dfXI0ec+qmLeHTpxm/Dl8wlFH3l8qDqvVZF6euToa+/L
2DqtU+pm4cvnE4o+WtUg8nC4ZX09cvb/D/jMdgw=
       "]]}}, Axes -> True, 
    AxesLabel -> {
      FormBox["\"n\"", TraditionalForm], 
      FormBox[
      "\"\\!\\(\\*SubscriptBox[\\(g\\), \\(1\\)]\\)\"", TraditionalForm], 
      FormBox["\"d\[Omega]/dn\"", TraditionalForm]}, BoxRatios -> {1, 1, 0.4},
     FaceGridsStyle -> Automatic, ImageSize -> Large, PlotLabel -> 
    FormBox["\"MZA Solutions\"", TraditionalForm], 
    PlotRange -> {{-0.99, 0.99}, {-1., 1.}, All}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {Automatic, Automatic}}, 
    Ticks -> {Automatic, Automatic, Automatic}, 
    ViewPoint -> {1.0429900994900732`, -2.6900284763161277`, 
     1.7680267104809302`}, 
    ViewVertical -> {-0.0017477175736208862`, -0.08955401187621087, 
     2.4899510844092885`}],FormBox[
    FormBox[
     TemplateBox[{"\"MZA+\"", "\"MZA-\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.3315753, 0.4561011, 0.6388182], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.22105020000000003`, 0.3040674, 0.4258788], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.3315753, 0.4561011, 0.6388182]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.3315753, 0.4561011, 0.6388182]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.3315753, 0.4561011, 0.6388182], Editable -> 
                  False, Selectable -> False], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7926498, 0.5499369, 0.1278459], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5284332, 0.36662459999999997`, 0.08523060000000002], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.7926498, 0.5499369, 0.1278459]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7926498, 0.5499369, 0.1278459]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.7926498, 0.5499369, 0.1278459], Editable -> 
                  False, Selectable -> False], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.704050289475367*^9, 3.704050467812298*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Grid", "@", 
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"n", ",", "#"}], "}"}], "&"}], "/@", 
            RowBox[{"dOmegadN", "[", 
             RowBox[{"n", ",", 
              RowBox[{"-", "0.1"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "0.99"}], ",", "0.99", ",", "0.01"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "None"}], "}"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<MZA+\>\"", ",", "\"\<MZA-\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<d\[Omega]/dn\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
         "\"\<d\[Omega]/dn for MZA solutions \>\"", "<>", 
          "\"\<(\!\(\*SubscriptBox[\(g\), \(1\)]\)=-0.1)\>\""}]}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"n", ",", "#"}], "}"}], "&"}], "/@", 
            RowBox[{"dOmegadN", "[", 
             RowBox[{"n", ",", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "0.99"}], ",", "0.99", ",", "0.01"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", 
           RowBox[{"Transpose", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Limit", "[", 
               RowBox[{
                RowBox[{"dOmegadN", "[", 
                 RowBox[{"n", ",", "0"}], "]"}], ",", 
                RowBox[{"n", "\[Rule]", 
                 RowBox[{"-", "1"}]}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Orange"}], "}"}]}], "}"}]}]}], "}"}]}], 
        ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<MZA+\>\"", ",", "\"\<MZA-\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<d\[Omega]/dn\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
         "\"\<d\[Omega]/dn for MZA solutions \>\"", "<>", 
          "\"\<(\!\(\*SubscriptBox[\(g\), \(1\)]\)=0)\>\""}]}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Transpose", "@", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"n", ",", "#"}], "}"}], "&"}], "/@", 
            RowBox[{"dOmegadN", "[", 
             RowBox[{"n", ",", "0.1"}], "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"n", ",", 
             RowBox[{"-", "0.99"}], ",", "0.99", ",", "0.01"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
        RowBox[{"GridLines", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "None"}], "}"}]}], ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<MZA+\>\"", ",", "\"\<MZA-\>\""}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<n\>\"", ",", "\"\<d\[Omega]/dn\>\""}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{
         "\"\<d\[Omega]/dn for MZA solutions \>\"", "<>", 
          "\"\<(\!\(\*SubscriptBox[\(g\), \(1\)]\)=0.1)\>\""}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], "}"}]}], 
  "//", "Quiet"}]], "Input",
 CellChangeTimes->{{3.704047905185524*^9, 3.7040479474733963`*^9}, {
  3.7040479848218117`*^9, 3.704048057162546*^9}, {3.7040485602508802`*^9, 
  3.704048628232501*^9}, {3.704048686716754*^9, 3.704048696058715*^9}, {
  3.704049671025115*^9, 3.7040497635004177`*^9}, {3.704049794189921*^9, 
  3.70404991278375*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[
      GraphicsBox[{{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJw1kg0snHccxy+GqLSNdKibt1kEs5DNSyfM0MmmXWZo42W1aemasFrPTHv1
NlMamVZbEWtVrGuvpuvI8xzO2833vNVVXXPeelyxOxznFJs5xUR3/vn7JU+e
PHme5/v/fr+fn1PiuaivjTgcTozh2rmzVi3mX8kW8J8nt1aYsojChchmh8IF
DF5wTP85eR7eZBYwZG93WvRKA3WmZd0nah0ik257RERP41qn3i3+mg5/l9TG
RvuoEWiuuMcL1OGzXlO3Ld0kXhC5ecz4pPatG42j4tbOzOPN5e3jfSVjCCOC
87g8kXje5rwCawa1Tr0WNTmxLtrqEQh4O4papF3p4N9/fRhRO3KRWlx+yS+a
YAfBIaOFXVbbZtLFARjMGQTn0HP9bpU4SY54YnAO2nsWW4mKpyD2zOfgX3o0
ed8bMhC55lncXVw/VVj0BGfIzOJokHX2Hvs+WBJBw3v3yowng1KQuJ0a5IeV
Jkru94LY42lg2morzCp9BCLnoMGZlMmPD5T3oJ/MDMqLL1a/VtcNUl/mDG6W
LclcR7vwNjE4g+ESbsWdA10g9hTT0Bmz67ITnZTHNH66cSosVNhBeUzjd45/
erdlB+UxBevt2mTffAnlMQVB0LG0wH+BD0ngKcwoB83CVtspDzVU2a2ZRqbt
lIca8pUM5X7XPykPNZxT84x8osWUhwpik8WXsaVtlIcKWwfXNvKUrZSHCq3z
7k5Sj1bKQ4Vss30XTha30P7/grOIm35tpZn2PYnmX8tkDxObab+TsGixvW37
vIn2OYHQ6YDqqBNNtL9xjG+absunRCB23MaxvuoodEoToYD08xx+Ak3jmIkI
KmJfiUzlSU35nUaaX4kvZGddXwU30rxj0LoEPcBsA803ilyu6btXbjTQPKM4
HCnLcQhpoPukQJVpSK+vvp7ujwIOqwF+5bX1dF+e4dA7sYVmKfV0P0aQ66Uv
inOvp/swAik3QRe3JKT8h6F7qJNNNArxjMgNYcXM5Ko4TwgvwncIXnHHMuTh
QpQQwUGEztuXrDkKKb8BiIpjkvavspTXAKzf+mNko4+lfOTgfL53uVLAUh5y
uPuFtk3ksbT/p+DzvZ0FCSztW4bDuUcGxoJZ2m8/4j3W9qQ4s7TPPvRH9laE
mLO4Sfp7jBfvLYvDVxhEEEEpbDw5nB/HGZiRfnpx3Kva97GUgYT00QPjRu8E
bhMDPsnfjQ8yFZWnf2PgQ/J2wcYiweGXWwzN14Etlxir9qsMzSOBnfb7mqZL
DPXfDt7mR9r8LIb6FaMgQ9p9MIOh/lrAr/rS+Bxv108T5BrfgPzU3fMbIPUM
7P70LAMtOY9FcLhV6yPDM0P066BS6v9Z+pbBdaL3AJK1I3rJdwx45H8BYvce
4vjzDfnI91Wo6TNaj/mBQR55XwbmfY9vuEW7zwWIuLQRn1PK4H/PDApv
            "]], 
           LineBox[CompressedData["
1:eJw1kgtMU2cUx5mbWeWROUFkGyOwMIcKSgATcOqRbaLLWCxQYNEuEYeEoYbH
YDrAwJLi2DBuMJ9YJ486HjLsLYWWhz21IA8p2EKhgCgFSilQHBvgysRt3G8f
J7m5uY9zzv///30exxLDj6+xsbHhr1zsPdup+sBougCSnj9z3l4lxv+fL4KL
afe1zEYxKt1yZsLkv0DR/hJDknr1uwjkAz23HUbEWHSNrQqwVB1yjJpf/b8a
KtU1uk/XMTgXJl95w8Dmk6eil9wZ2i8FbzTe+XwXg+v1pUl7bGWQW51Xkh3J
0Hn1sKFdWxafwqAv/0fVolcT6FKX51zzGTpfAX760lO3GAbLV7r1pUr45nud
1la3uu8e+MbNCqOsDAb6s9UMqo4Ij5/dJHR/C4Rv/+d8Z4gElYteKxvuQ5R+
5E+7ZAlyiJ424G77KDLmhgS57LiwdnAqDmIGOyV4lejrgAIvezvBsgQN6ezA
B5CavJiRtKMGvYheNfCHHILFsTVI5CV1gesRUWeksAbJOHk3KDIde1P7a9CG
lAY4gqD4dxylKCINGjjsKbNNC5fiwVF2gRYy/dyVgotStBB/Wjiq+sTnxKAU
f1KxBnrA+ruV+dCjFgOI314o+HLNd9tO1uIAa0ffC5ofjo0EN9RiJvGvA9HG
MPtyuzp0Z+W49YFwukv07dE6bCF59IHVb0G8IK/D+Di2+mFYmTW4ZaMM7Uk+
elBmL10PTZOh+AArUA8uvPWCvEEZ8ojBAZCLpAkuH8jRSgIZgPa04kavO3IU
kvwGocniqFp0r8d9bDx7hsDof+FF05V6mucQLIcUZSkdG1DAyst5BJyQvogD
lxpovsPAb3aYv+HaiGpSw7BvSdHsXNlI834MxuD2ctu9TUjsOj0BlxeaosGB
Jpr/E1gwJZ6ZSb+LZBx/BDgbZPliTwXlYQBzlndLSb8Cw0mDAThf1H0Wko+U
jwECYroKLm1V4jMiyAC7Y2omv85XUl6j0FS2s1D4QomFxO8ohOYoX4lNvEf5
jcLBJ/9G+0/ew73E/xi4DHuVpR9XUZ5jsDDh/VbttArHyLgxEAXmRSScbqZ8
x6HlK83yDvsWPEfyGQfex2d/vV3RQnmPg9PGt40XufdxKzFoBF7gRJvspVbK
3wi+7ifa/7rbit0kPyNYK159L+JcGz0PEyB8eO0P05F2TCF5ToAh+ZFyHjqQ
yFNNgKhQyx/3f0DzNcHwlVsZh4I6kRyXOBPk+ux8vC5cTfM2Ad/6ssvm7C4k
dm0ngd9wVrC2tZvmPwnLcsuUn6MGybjqSUjY25wT1KOhPMwwx6u2PC3WUh5m
iN/v05wh6KE8zMBNv3kzIbOX8jBDkdEtR3FeR3lMAQdbe16r76M8pkDRZZpm
1uopjyl4qi3vMJ4eoDymIXRXvu8m5yHKYxq42Rfe32d+RHlMg7g8/8Zh62PK
YwbOuEddz91ioDxmQOjK1R0WjFIeM1AVEhbN2zROeVjA3Pt3QOOckfKwAE9d
GWvvOUl5WCDgzavnL6unKI9ZMEq4Fx6+Potdl9NSSt6dhefb3/hNkjCL/wF8
Zhmp
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJw1kgswXGcYhlUyE0QtRSixHZK6JmpQrZj2o2kbk6q61SVFME2Ntmmkk6Ri
yGitIul0c9NK0ks61GWSmlQRVfoJ/9ll47Jr111ll8WyS8nEisyQrr//fjNn
zpw557z/+77P55pxIuaYqYmJSaLh2rpfqdKZ+69p8YDPk5AxxQoMV2S/ZjGs
xVjx45xR4TIUaaOb+UVabL1R+ItDvg4C6Gjxtw3VePeGBlS5dnWHVAtYdsTl
ZEbYLAg7Vj2ThQsY5PHBer6VGgxiBsUFdHqhPfGb0CnQUbl5zPf2yjJHJVy/
tjXzmCM4zdWvTEI4FZxHt/ROu6jOCdAb1DpWNegde4G7pRyDyi17FRp0WM9S
r4WMQsyWXLQGW1MO1wolw2BCR4NDJfyrzoIhMJgzCM5hWOONpfX0QUimBucw
KCZ5TZ6qAGrPYg4zCm5tRp2RA5VrnkUviTtvsnIAPqIzi2lk55PCORnYUcFZ
/Diuv0ocIgMat2MGX605Jb/0sxSovewZtA5PjNxtIwUqx59BzxHeeZFLP/TQ
UeOeOd17AS/1Aa0vV43V+5ulENcLXtSgGiVk27Pr53sYj2nku75je1t2n/GY
RpMmkceE+33GYxpr9A51B0oljMcUWsZpz95c62Y8pjD3R/tQs5Pd8DoNPIVL
z9mvlD7qYjxUuDx9WRb/ZRfjoUJin+fbtKuL8VBhalLwJdMGMeOhRP/vH6VU
J4oZDyXGf+Eg4W8XMx5K9NIV7V5uFDEeSpSGoU/dcRHr/wE+7vW11nuLWN+T
mOZUa/rZIsf6nURHt8/TSAPH+vwHw8ve7q8r4Fh/E/hmpyRvPooDasdzAgMD
C04HvciBgPYzjtvbnvJSNggoqf0xfMvnbpbXKGH5x1C/qHj4STNheUex79yx
HevXCcs3gsGS5Ss1BYTlGUHTE3vJ+1mE7dMwukVGtEzGEbY/w7joVBy59yBh
+zKEIyUShXkgYfsxiFHWC5pTHoTtwyA2O/8L77oQxl+BFnqPc3n2BIaonBzf
CM20WeIR8Kd85ViZtGkltCTwLRUcQLmfpX3kTsL4yTDaR+TrbHj/Py8Z1nz1
6V9zVoTxkWLDw4qEKlvCeEixRbfWddiJsP77UL8Zqe12I6zvXiz+2vXm8/sJ
67cH60vC0S/Y2KcENbFgvuMQgXLaXzfyDzY5lcUTiKKCXbjrj6R0RSYBM9qP
GDOK620wl0A77YPDgQhzfpSQQA7NT/C22Su+hb8SCKR5O/HCyzHlcW3GfPcw
NMD9yL0hY552DM3NtBWvGP3/jQkr10w+tDLuQyvWCMr13+3jmL8/8elsa+rR
CI75uYumQZcD2o5z7PwGfGbUZfPORQ409LzfsXTPD/KQRg7uUP067OUpYo+O
c3CR6tVizoOWapdtIsim/1di3kF1wdl9Imin3/+EZquNjmcSRFBA319Fx1LO
z0FgfBZgc5iSl14vgv8AsHfhiA==
            "]], LineBox[CompressedData["
1:eJw1kg1Q03UYxwdyiyAtZBrVHYeJNV4MEjRL2VfOADVSWWheqYeAA3s5CAxk
wkUEJncdUFECLYMDgdIWHhSY5AGBwAZjGy97YcBe2BgwXhNaGhj/Xz+fu//9
7v/yPM/3+/38t8Qm8c86slisY2sXc2ZzxBEGYS5qH/y6aR2nE//fF8NWf+Oy
IKITLZ5501FNV+H89Nen8jMfva9CyfrtNSn1nSgvZepHsKV8Z1/bo+/F4M6n
NTe+0IX5qKa1Jzex++ep77zjumh/A8btF72EFV14SlWZHOLSiBT/gvfaDF10
3i1cKGkNd/buRuDJwrYlbjNYBwOC307spvPvoNy69/3b4m7UrnWrKltw6LCb
OfTvbrqvFcnuDXH2UAl2BzH1J95tNQlnCiR0fzsiXMWlgaMStCxx1zZ0oO+g
iqMMkMKZ6OkEx9trh+kzKY4y46K6sCFSGJymlaKE6OvGy60h564G9UAvZAZK
kJOYuiu5sAdconftrDvk6zDbAyIvuRfFEf2uiUd6QcY1yfCP0+aZ5vpesEjJ
wdl3nffMczJUkQY5UrfNj1/Jk+GAgVmgQLI/68ixv2SwEX8KODqICpPi+1DU
xhhQ4vdbfhfYmj4EE7/9KPvjseHvuXKoGTuqfpjFezJKBXJkEv8DkK3/9P7l
ajm8GDmeg5hsaIjPtsrRTvIYxLrqsHvF/gokCpgawpui4h0jKQo8QfJRoU4Q
s+Gj2wrURTACVTCy05fPsZWIJgbVeF08tWx8Swk7CUQNx3o3jb1SCRHJTwOR
uiJcsqzEPiaeEC0ijaHz6ZH9NE8tniyyN3pf60cuIy9vGKcOzI4tsQZovjrc
MbN57jED6CGlg8DNdr6mbYDmPQJJ0q4gPXcQxC5nFMmZWRmzXw3S/EfBlgVZ
2Q5DIONOjuHExyc2x6YOUR56zEUGLO6dGgKfNOjh8Xnsds1ZFeWjh8DT57cs
iwrLRJAe4fIopH+gprwMSAiN03jY1Sgjfg3o/SX2h+Z8DeVnwOI34cL2LVrw
iH8jio9Wr5a1aClPIzQ1+sQGwTCMZJwRKQ4tzYUcHeVrwrf9og1NEh0ukXxM
cB8JXOnIH6G8TRDvvBt/hj8KX2JwHKsPeMf3bxuj/McRIn0nQOSgh4zkN44M
VdWVL9P09H8w49lLnrqHC3qkkDzNuPhKTkLqeQOIvDYzNt49zstfNdB8LfDQ
Xf9iocgI8rsILLBxsm+m+Jto3hZsDNtqtilMIHZdJvDJ3OPlp3PGaf4T2PTi
4cVJnhlknHgCJeG5LsPOFsrDimCrI6/OYKE8rCgYjH64VTpBeVjh0xER/Wqn
lfKwYqX2w6I31JOUxyRGEtrOPO8wTXlMIuunf6+5htkoj0n48fkeKzUzlMcU
hBXp0paX5iiPKThZbpwuSZqnPKYw5NN6b3/MAmI4O7n1TtN4ze/+Hu3AAv4D
Q1Gpcg==
            "]]}}, {}}, InsetBox[
         TemplateBox[{"\"MZA+\"","\"MZA-\""},
          "PointLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"d\[Omega]/dn\"", TraditionalForm], None}, {
          FormBox["\"n\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{{-1}, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{},
       PlotLabel->FormBox[
        "\"d\[Omega]/dn for MZA solutions (\\!\\(\\*SubscriptBox[\\(g\\), \
\\(1\\)]\\)=-0.1)\"", TraditionalForm],
       PlotRange->{{-0.91, 0.99}, {-0.9192746525600052, 1.1144659369335401`}},
       
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}],
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJw1kg0snHccxy+GqLSNdKibt1kEs5DNSyfM0MmmXWZo42W1aemasFrPTHv1
NlMamVZbEWtVrGuvpuvI8xzO2833vNVVXXPeelyxOxznFJs5xUR3/vn7JU+e
PHme5/v/fr+fn1PiuaivjTgcTozh2rmzVi3mX8kW8J8nt1aYsojChchmh8IF
DF5wTP85eR7eZBYwZG93WvRKA3WmZd0nah0ik257RERP41qn3i3+mg5/l9TG
RvuoEWiuuMcL1OGzXlO3Ld0kXhC5ecz4pPatG42j4tbOzOPN5e3jfSVjCCOC
87g8kXje5rwCawa1Tr0WNTmxLtrqEQh4O4papF3p4N9/fRhRO3KRWlx+yS+a
YAfBIaOFXVbbZtLFARjMGQTn0HP9bpU4SY54YnAO2nsWW4mKpyD2zOfgX3o0
ed8bMhC55lncXVw/VVj0BGfIzOJokHX2Hvs+WBJBw3v3yowng1KQuJ0a5IeV
Jkru94LY42lg2morzCp9BCLnoMGZlMmPD5T3oJ/MDMqLL1a/VtcNUl/mDG6W
LclcR7vwNjE4g+ESbsWdA10g9hTT0Bmz67ITnZTHNH66cSosVNhBeUzjd45/
erdlB+UxBevt2mTffAnlMQVB0LG0wH+BD0ngKcwoB83CVtspDzVU2a2ZRqbt
lIca8pUM5X7XPykPNZxT84x8osWUhwpik8WXsaVtlIcKWwfXNvKUrZSHCq3z
7k5Sj1bKQ4Vss30XTha30P7/grOIm35tpZn2PYnmX8tkDxObab+TsGixvW37
vIn2OYHQ6YDqqBNNtL9xjG+absunRCB23MaxvuoodEoToYD08xx+Ak3jmIkI
KmJfiUzlSU35nUaaX4kvZGddXwU30rxj0LoEPcBsA803ilyu6btXbjTQPKM4
HCnLcQhpoPukQJVpSK+vvp7ujwIOqwF+5bX1dF+e4dA7sYVmKfV0P0aQ66Uv
inOvp/swAik3QRe3JKT8h6F7qJNNNArxjMgNYcXM5Ko4TwgvwncIXnHHMuTh
QpQQwUGEztuXrDkKKb8BiIpjkvavspTXAKzf+mNko4+lfOTgfL53uVLAUh5y
uPuFtk3ksbT/p+DzvZ0FCSztW4bDuUcGxoJZ2m8/4j3W9qQ4s7TPPvRH9laE
mLO4Sfp7jBfvLYvDVxhEEEEpbDw5nB/HGZiRfnpx3Kva97GUgYT00QPjRu8E
bhMDPsnfjQ8yFZWnf2PgQ/J2wcYiweGXWwzN14Etlxir9qsMzSOBnfb7mqZL
DPXfDt7mR9r8LIb6FaMgQ9p9MIOh/lrAr/rS+Bxv108T5BrfgPzU3fMbIPUM
7P70LAMtOY9FcLhV6yPDM0P066BS6v9Z+pbBdaL3AJK1I3rJdwx45H8BYvce
4vjzDfnI91Wo6TNaj/mBQR55XwbmfY9vuEW7zwWIuLQRn1PK4H/PDApv
              "]], 
             Line[CompressedData["
1:eJw1kgtMU2cUx5mbWeWROUFkGyOwMIcKSgATcOqRbaLLWCxQYNEuEYeEoYbH
YDrAwJLi2DBuMJ9YJ486HjLsLYWWhz21IA8p2EKhgCgFSilQHBvgysRt3G8f
J7m5uY9zzv///30exxLDj6+xsbHhr1zsPdup+sBougCSnj9z3l4lxv+fL4KL
afe1zEYxKt1yZsLkv0DR/hJDknr1uwjkAz23HUbEWHSNrQqwVB1yjJpf/b8a
KtU1uk/XMTgXJl95w8Dmk6eil9wZ2i8FbzTe+XwXg+v1pUl7bGWQW51Xkh3J
0Hn1sKFdWxafwqAv/0fVolcT6FKX51zzGTpfAX760lO3GAbLV7r1pUr45nud
1la3uu8e+MbNCqOsDAb6s9UMqo4Ij5/dJHR/C4Rv/+d8Z4gElYteKxvuQ5R+
5E+7ZAlyiJ424G77KDLmhgS57LiwdnAqDmIGOyV4lejrgAIvezvBsgQN6ezA
B5CavJiRtKMGvYheNfCHHILFsTVI5CV1gesRUWeksAbJOHk3KDIde1P7a9CG
lAY4gqD4dxylKCINGjjsKbNNC5fiwVF2gRYy/dyVgotStBB/Wjiq+sTnxKAU
f1KxBnrA+ruV+dCjFgOI314o+HLNd9tO1uIAa0ffC5ofjo0EN9RiJvGvA9HG
MPtyuzp0Z+W49YFwukv07dE6bCF59IHVb0G8IK/D+Di2+mFYmTW4ZaMM7Uk+
elBmL10PTZOh+AArUA8uvPWCvEEZ8ojBAZCLpAkuH8jRSgIZgPa04kavO3IU
kvwGocniqFp0r8d9bDx7hsDof+FF05V6mucQLIcUZSkdG1DAyst5BJyQvogD
lxpovsPAb3aYv+HaiGpSw7BvSdHsXNlI834MxuD2ctu9TUjsOj0BlxeaosGB
Jpr/E1gwJZ6ZSb+LZBx/BDgbZPliTwXlYQBzlndLSb8Cw0mDAThf1H0Wko+U
jwECYroKLm1V4jMiyAC7Y2omv85XUl6j0FS2s1D4QomFxO8ohOYoX4lNvEf5
jcLBJ/9G+0/ew73E/xi4DHuVpR9XUZ5jsDDh/VbttArHyLgxEAXmRSScbqZ8
x6HlK83yDvsWPEfyGQfex2d/vV3RQnmPg9PGt40XufdxKzFoBF7gRJvspVbK
3wi+7ifa/7rbit0kPyNYK159L+JcGz0PEyB8eO0P05F2TCF5ToAh+ZFyHjqQ
yFNNgKhQyx/3f0DzNcHwlVsZh4I6kRyXOBPk+ux8vC5cTfM2Ad/6ssvm7C4k
dm0ngd9wVrC2tZvmPwnLcsuUn6MGybjqSUjY25wT1KOhPMwwx6u2PC3WUh5m
iN/v05wh6KE8zMBNv3kzIbOX8jBDkdEtR3FeR3lMAQdbe16r76M8pkDRZZpm
1uopjyl4qi3vMJ4eoDymIXRXvu8m5yHKYxq42Rfe32d+RHlMg7g8/8Zh62PK
YwbOuEddz91ioDxmQOjK1R0WjFIeM1AVEhbN2zROeVjA3Pt3QOOckfKwAE9d
GWvvOUl5WCDgzavnL6unKI9ZMEq4Fx6+Potdl9NSSt6dhefb3/hNkjCL/wF8
Zhmp
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJw1kgswXGcYhlUyE0QtRSixHZK6JmpQrZj2o2kbk6q61SVFME2Ntmmkk6Ri
yGitIul0c9NK0ks61GWSmlQRVfoJ/9ll47Jr111ll8WyS8nEisyQrr//fjNn
zpw557z/+77P55pxIuaYqYmJSaLh2rpfqdKZ+69p8YDPk5AxxQoMV2S/ZjGs
xVjx45xR4TIUaaOb+UVabL1R+ItDvg4C6Gjxtw3VePeGBlS5dnWHVAtYdsTl
ZEbYLAg7Vj2ThQsY5PHBer6VGgxiBsUFdHqhPfGb0CnQUbl5zPf2yjJHJVy/
tjXzmCM4zdWvTEI4FZxHt/ROu6jOCdAb1DpWNegde4G7pRyDyi17FRp0WM9S
r4WMQsyWXLQGW1MO1wolw2BCR4NDJfyrzoIhMJgzCM5hWOONpfX0QUimBucw
KCZ5TZ6qAGrPYg4zCm5tRp2RA5VrnkUviTtvsnIAPqIzi2lk55PCORnYUcFZ
/Diuv0ocIgMat2MGX605Jb/0sxSovewZtA5PjNxtIwUqx59BzxHeeZFLP/TQ
UeOeOd17AS/1Aa0vV43V+5ulENcLXtSgGiVk27Pr53sYj2nku75je1t2n/GY
RpMmkceE+33GYxpr9A51B0oljMcUWsZpz95c62Y8pjD3R/tQs5Pd8DoNPIVL
z9mvlD7qYjxUuDx9WRb/ZRfjoUJin+fbtKuL8VBhalLwJdMGMeOhRP/vH6VU
J4oZDyXGf+Eg4W8XMx5K9NIV7V5uFDEeSpSGoU/dcRHr/wE+7vW11nuLWN+T
mOZUa/rZIsf6nURHt8/TSAPH+vwHw8ve7q8r4Fh/E/hmpyRvPooDasdzAgMD
C04HvciBgPYzjtvbnvJSNggoqf0xfMvnbpbXKGH5x1C/qHj4STNheUex79yx
HevXCcs3gsGS5Ss1BYTlGUHTE3vJ+1mE7dMwukVGtEzGEbY/w7joVBy59yBh
+zKEIyUShXkgYfsxiFHWC5pTHoTtwyA2O/8L77oQxl+BFnqPc3n2BIaonBzf
CM20WeIR8Kd85ViZtGkltCTwLRUcQLmfpX3kTsL4yTDaR+TrbHj/Py8Z1nz1
6V9zVoTxkWLDw4qEKlvCeEixRbfWddiJsP77UL8Zqe12I6zvXiz+2vXm8/sJ
67cH60vC0S/Y2KcENbFgvuMQgXLaXzfyDzY5lcUTiKKCXbjrj6R0RSYBM9qP
GDOK620wl0A77YPDgQhzfpSQQA7NT/C22Su+hb8SCKR5O/HCyzHlcW3GfPcw
NMD9yL0hY552DM3NtBWvGP3/jQkr10w+tDLuQyvWCMr13+3jmL8/8elsa+rR
CI75uYumQZcD2o5z7PwGfGbUZfPORQ409LzfsXTPD/KQRg7uUP067OUpYo+O
c3CR6tVizoOWapdtIsim/1di3kF1wdl9Imin3/+EZquNjmcSRFBA319Fx1LO
z0FgfBZgc5iSl14vgv8AsHfhiA==
              "]], 
             Line[CompressedData["
1:eJw1kg1Q03UYxwdyiyAtZBrVHYeJNV4MEjRL2VfOADVSWWheqYeAA3s5CAxk
wkUEJncdUFECLYMDgdIWHhSY5AGBwAZjGy97YcBe2BgwXhNaGhj/Xz+fu//9
7v/yPM/3+/38t8Qm8c86slisY2sXc2ZzxBEGYS5qH/y6aR2nE//fF8NWf+Oy
IKITLZ5501FNV+H89Nen8jMfva9CyfrtNSn1nSgvZepHsKV8Z1/bo+/F4M6n
NTe+0IX5qKa1Jzex++ep77zjumh/A8btF72EFV14SlWZHOLSiBT/gvfaDF10
3i1cKGkNd/buRuDJwrYlbjNYBwOC307spvPvoNy69/3b4m7UrnWrKltw6LCb
OfTvbrqvFcnuDXH2UAl2BzH1J95tNQlnCiR0fzsiXMWlgaMStCxx1zZ0oO+g
iqMMkMKZ6OkEx9trh+kzKY4y46K6sCFSGJymlaKE6OvGy60h564G9UAvZAZK
kJOYuiu5sAdconftrDvk6zDbAyIvuRfFEf2uiUd6QcY1yfCP0+aZ5vpesEjJ
wdl3nffMczJUkQY5UrfNj1/Jk+GAgVmgQLI/68ixv2SwEX8KODqICpPi+1DU
xhhQ4vdbfhfYmj4EE7/9KPvjseHvuXKoGTuqfpjFezJKBXJkEv8DkK3/9P7l
ajm8GDmeg5hsaIjPtsrRTvIYxLrqsHvF/gokCpgawpui4h0jKQo8QfJRoU4Q
s+Gj2wrURTACVTCy05fPsZWIJgbVeF08tWx8Swk7CUQNx3o3jb1SCRHJTwOR
uiJcsqzEPiaeEC0ijaHz6ZH9NE8tniyyN3pf60cuIy9vGKcOzI4tsQZovjrc
MbN57jED6CGlg8DNdr6mbYDmPQJJ0q4gPXcQxC5nFMmZWRmzXw3S/EfBlgVZ
2Q5DIONOjuHExyc2x6YOUR56zEUGLO6dGgKfNOjh8Xnsds1ZFeWjh8DT57cs
iwrLRJAe4fIopH+gprwMSAiN03jY1Sgjfg3o/SX2h+Z8DeVnwOI34cL2LVrw
iH8jio9Wr5a1aClPIzQ1+sQGwTCMZJwRKQ4tzYUcHeVrwrf9og1NEh0ukXxM
cB8JXOnIH6G8TRDvvBt/hj8KX2JwHKsPeMf3bxuj/McRIn0nQOSgh4zkN44M
VdWVL9P09H8w49lLnrqHC3qkkDzNuPhKTkLqeQOIvDYzNt49zstfNdB8LfDQ
Xf9iocgI8rsILLBxsm+m+Jto3hZsDNtqtilMIHZdJvDJ3OPlp3PGaf4T2PTi
4cVJnhlknHgCJeG5LsPOFsrDimCrI6/OYKE8rCgYjH64VTpBeVjh0xER/Wqn
lfKwYqX2w6I31JOUxyRGEtrOPO8wTXlMIuunf6+5htkoj0n48fkeKzUzlMcU
hBXp0paX5iiPKThZbpwuSZqnPKYw5NN6b3/MAmI4O7n1TtN4ze/+Hu3AAv4D
Q1Gpcg==
              "]]}}}, {}}, {
         DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{-0.91, 0.99}, {-0.9192746525600052, 
           1.1144659369335401`}}, DisplayFunction -> Identity, AspectRatio -> 
          GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{"d\[Omega]/dn", None}, {"n", None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {{-1}, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
          "d\[Omega]/dn for MZA solutions (\!\(\*SubscriptBox[\(g\), \
\(1\)]\)=-0.1)", 
          PlotRange -> {{-0.91, 0.99}, {-0.9192746525600052, 
           1.1144659369335401`}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011111111111111112`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.011111111111111112`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {"MZA+", "MZA-"}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {Right, Top}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True], 
     TagBox[
      GraphicsBox[{{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJw1kgtMU3cYxTunoDgDBrMhKvic6KLgdLoQMbq5yQzbqlaZjgjzsemGmYoy
RAXiqhkE29J3EUtbCvgCMT6GU3uKTEWBIVhswaqXZ1se1eF4DKeM/vftS25u
bu6953/O+X3Ttvy4dvsIHo+3dfjy3ItXNSVPKH6GldvO3vjr2nHEiG/2hsQ8
Q9RRc9GeMSL4WPN2R/g8w1S7SHMxWoTSoKOda0rdqKitizcViPAtGzd2a2fM
VvaJMIEJulHiSrcvWyWGR018sxuRLYFXrqvFGBYbVuwGP1Td498pRrBHLqgb
iXEZCTODJaiu8kwXbDtqhkI/k+AgE+xCa2H/0+IECeYwg11Qb/DdkqeVgNmz
doKrPc/53pOAyR3tREFvbHlfrwQL2XQiQ92fsml6FjxpVzV1IGW1lzLiyyyw
uOIOWFIiNIZDWWD2IjpgnvNkduaZLHQxORe8guc+/8eWhWyNZ1wICW843+8t
RSQTdOHIAemi1CVS9Hni9jpxjL8zRvmdFEYW2In292LfXq6WYi0r0AmBzrUl
9a4UPDZOKCcdFkS/lOI/Hg68Vk32q5wnIx4O6KLc1Y/jZMTDAUtZfYNULiMe
7Xj+tb+8u0JGPNphLnHt+fOVjHi0I7Mt8rV+oZx4tCFsRVrjiO/lxKMNAzv6
TO/o5WByQcPvBc6DrTY5GI6qVnB7QgfjxyvA6ktuxfLVvksvr1YQj1Yk3fPZ
XCZUEI8WcM1lKgUUxKMFU3dZly5+qSAeLZDM5G4ULlESj2b43dp02r1PSTya
kTR04ZzvRSWWscDNsMVHKnx7lMSjCduixWteLFARjyb4ZYb0YK+KeDSBd9X/
bPIlFfHgYA52WkL6VcSDQ9jcSe6acDXx4HDIW5CzP1VNPDhwt6uLgm+pqf+n
4P92J9AyVkN9P0FUzihvzToN9fsEAQ2x5ftyNNTnYwQc31azq11D/dlxyu7z
KGNBNpidEDsCNiZV1B3OhpD18wicvbEoqjIbHLPfCGPKBuvQxBOUvxGW+WPu
vth5gvI2QG6btSLs2gnKZ8OH9nfDb4zLoTzDzy8mdhu+yaF9siImztviupJD
+2PFV+sSzmWPO0n78hDmsbxk0/aTtB/1CLs9N30zTtI+1CPJPG+vMFBL/C1Y
mvbG5PCftHjI5B5gZKkQ6fVavM/4PkDUQEXH4Q9yIWKCdSj9JEM4TZVL/Gpx
Kry6JnUwl3jVQthlW1IXqiM+96E0Xbn8+VYd8biPTzuWaUpVOur/D/hE/cKf
WK2jvqsxIOAfSXxTT/1WwS7c4WcN11Of9/BF2SeBHyXooWb93YVXUNGQ6Zwe
fCZYgZUj07eud+gxmvVzBwMPuPnjZhhgZn3cwqL5gzJ3rAFJLP/veMtoGD9C
a8AilrccdkdJIv+xgfKVgWsvbGuekkd5zBBMzbDdjM0j/yaUHhoza9CQR36v
o+qHMzyZI4/8XUVJYeYo9Twj+fkVmacbFk/Yb6TzL4GXFu/lbzLCyc67gMiz
0Rt1o/NRwvSLEeBoElUI8iFheqdRsv7vn9WGfOxm/xsRF+STO6UnH2b2vRbc
q8rK7R8XII29lyNgeuKxVOX/z0KEbSjXHugswL8GhnXx
            "]], 
           LineBox[CompressedData["
1:eJwtkgtMm2UUhgtOQcKGI7jAQARxkQwITMBhHBx0URgiAQQmiA5FGSEsINGl
AiEsgS3OLWBgXIYukzalXNaVAm1hHaeUey0d15Vxb7mVaxjhUuQm/+d3kj9/
/ss5533f53P8PiX8R2MWixV1dDH3bCtBgDY9ByKKDn8NLavA/58LwTqofiNk
qwLl9rlLYdIHYC3LH0v9kk+/c2Gm/PBKt4iPD0uZqgRhtNY42aqS/i+AONMn
TtfYlbgWJj16UwsO951O6CYqaX89sHl7JtqAKnxDw0n1NZNA9nXnKzfqqui8
RvCf/YE96liNHrF5ik1nGQTnyCZNC6rp/GYIPMmKedekBvlH3RqOHLosvt6+
lFVD97WAq/ij94oNNejjyVQr5Buae85ef0T3t8Hac0HMme1HKN90PtrQDvVr
Ljp+hgBNiZ5OUEldzr945TGGMuPCusDO28x0LO8xlhB93fAV70HWsoUQp9KZ
gUpQ+V5Y2YsWojPRqwKByiPMmydEIi+1B1Q2hRM1G0Ik46RqCNaePpn5aS2y
SPWCeJmrkJXUIpc09IJAUnnx9motBmqZBX2gCqn7xShAhMvEXx8Exp/W+5eL
MF/BGOgH4Tm/7URWHXoRvwOg/4u9WvZdHQ4zdjQDYF17yu2gvQ4zif9BYNnx
QsRu9ejAyLEfgjvL61ErJfXYRvIYguF9G53apAETE5h6Ds4cp+jf0hvQnOSj
gbXbPJeQlw0oDGAEaoCddMwiPFmMEcTgMEi5Mxd7lsRoIIEMg9CtQrebIsE/
SX4vINuz3N1+R4L+TDy+IyD3szWwb0lpniOQP26+E2nbiDmMvNxRCDZ6GXqs
oZHmOwb+ks394YgmVJEaA3m2d5L7bhPNexxSh5QmSfwnSOxaTUDX4djBeqyM
5j8BcQs2axdsniIZFzsJfE6aunX8KeUxBSU/Jwwcr27GcNIwBXHfiv6ouYGU
zxSI41PffPucHLeIoCkQ5WVGSXhyyksLTfW+z/YcW/A+8auFA8vtyUhOC+Wn
hX7Xntz3XRToR/zroNBak3W8SUF56qDtfHrJtdBW1JFxOki+E+0+v9pK+U6D
7JvShbeK2vAmyWca4v59VdzxWTvlPQ05A3q7KqMOPEsMzgB7036d19lB+c+A
IT0ro6G0E9UkvxnYUBreWWJ30fMwC+YnfurLSujGNJLnLLiWfn5KHa9EIk8x
C4aP2wPj0/6h+c6BlUfP6F6BCslxSZgD7uVLrkXKHpr3HAi9Cs6kWT9DYtds
HlKrnWys/Htp/vOQvBP0eoxxH5Jxgnl4TeInbBvsozz04CMKmo1s7Kc89PDw
d8+6BNEA5aGH4Fu2GU2KQcpDD5ZlvMjilSHKYwFuttxNm/1AQ3ksQNtVy8XL
nGHKYwGiNtQZ5T4jlMcisDc+/KRlf5TyWATnuy4YvTtOeSzCnNLSxcF+ivJY
gsSaL4ptrmpx8m/kbnktgbw05p5fihb/A5OL38I=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJw1kgtMU3cYxStOIYqZIk6dEYI4hLkxh2RxKnxzccqqKBA2NMJQURY3Izqd
M8pERNSJ4nNOUEHlUUpLaUuhBSunrXM+xku0tDJklEdboFIVfG6TyX//fcnN
zc299/zPOb/PZ21S1HoXgUCQ8PoaussWW3Z6ypy49pNbjntkHsUeNTzxj3Vi
a01cQ1hxHo0y5W0OGeXESzp0/MnwfNJ4pfdGavoQndyy6a2v8imRTR/8BoWC
Uk0+eTLBPpiju+yG8QU0pHbU8ACeZxebvkgqoNdirxUfIDZl7P5vfy8g7yE5
rweIM67UuvoXUm3N0DhwyTp7WWB6Ie1igg5Yz/pO7WgvpABm0IGKS3mT3l0g
ImbP1ItGRVGo6wURMbn0Xhg9As7tHhTRbDa9SPhZFH4qvoiG0i629CBmnCFl
qa6IWNyjPdgjvpok8RETsxfSg9DuuRvL08TkYHLdOP73SeMmq5iys4amG8e8
1V4tnxdTGBPsxoHdktphsmJ6OhT3iR0vVKHJnR4SymeB7ZB4KcwHd0goihVo
R2zQ14X9rRISsLHjyJQL1QGLpPQfDxtc6z8cN0sm5TxsUBuFBaMnlnAeNrz3
5txs/Z4SzsOKWul8/5jeEs7DChdR1MXbX8o4Dysy/5r83UdXZZxHF4wv5dMy
ZpVyHl24PJAbY8wpJSbn1QWZcP2GMa5yYjhqOqErCK6aRXJi9e3sRMOBETmm
H+ScRyc+GaifPkIh5zw6IF+yKEnbI+c8OtDanlAqeEfBeXQgMEsQYIxXcB7t
yM7ZEBRyVsF5tGOadDB4vklBoSxwOybZmkuM45WchwW56m2BYyKVnIcF++ti
4qyZSs7Dgj5J09N1tUrOow2O7hu1h93LOI82NOUtr1mztIzzaMMHiy4O2A6X
cR5tmON7f41vXRnv/08cDLCFTRqr4n23In3q0he3olS831as1ga20mkV7/M+
tgeFpuxqVvH+WnAuviJ1r3c5MTv+LbgR/Y145fpy2sf6+QPZp+/dGyEtpzZm
vxlHCiImHu4v5/mboYiYcPDRvAqe9x7iduV+Py+9guczY66lNTypvoLnMWNt
Wmb+ibfVfJ9MWJVyOliSqOb7Y4KyJdlSXabm+9KEbYlWzZ1hGr4fRrg/nDHg
jNDwfTCiLr77xeSLGs7/LkY/a45f8VhDTUzuDn6cvtuhWFhJQYzvHTwrcsl6
/0wlZTLBRgjXfXyy0VHJ+d1G1aHzVPRpFed1G9unb59XkVXF+TRg9rKx8W88
ruI8GpAW7anLXnKZ91+H8LtPy1ILL/O+a5EsPNCod9HyfmsQ+vz884TVWt7n
LeBVj3ALtHSG9XcTM0fa5/R7X6EIJngD2TOcKf2pV8iN9XMdG0U7ApO7rpCO
9XENQb57Rb8Iq2kHy/8r/MJ9CiMU1RTM8l6FHz5boJwMnk+PLYPFzutp4Hl0
eLniVcZ5J7j/agTG5EpzA3XcrxZTPMTD4xJ13F8lBnY+XDUmV8f9qDFzoSpV
bdbx81VwmxaVsna8nuzsPAVORE64MGG5nuRMXwa/zJCt5gw9HWN6YrS4e9Yr
b+ppM/s/H+aixLtSNwPp2Pc5MP+jf1QXZqA97P0p/OazxOZz6P/nfXAf6XFT
VmOgfwEJcUcP
            "]], LineBox[CompressedData["
1:eJw1kgtMW2UYhslWlcu6yNJlc5EFzcyQixpmQyXpXuaSoqsDu0HQyBgXRUUE
ZqKOix2wFqMVHWzKJRVxMDZcLGxDx7QZUEpbSoGWUlpKV3qjZTcynbDhIrPn
9/dLTk7OOf/3fe/7vOep/NID76wLCQkRBi/mXs1RpLorJNi8q7FcnjmM/55P
QaAUpkbKhzG4XXpT1N+GRy/FPbbo/f97J1ommofiEtRob2GqG8rdo0uBT9X0
vAL95txjMWo17oj6g28u4OiS3bMaOUL7+5Dz5Esb388bwePWjjJ++GW4FFHH
j18cofOuIPrYoaysRzR4Ifsb1XKMEic7NvHvvqmh86+idkuSrLBXg3PBbmvH
IJITpgRDoVq6bwjnjep4ToEWvF1MDcPQvkdZNqCl+9Uorl7bcz1Kh8HlmOCG
EfC7nvOdEOsQSvRoIVvJ7Kl06/A6M06kQ3pYaOdVwSiaib5RVH3ZNVKqGIWr
ghmox7rXuLFdW/WIIXoNEN54K6JCqgeRVzYOhaXHxlrWg4zrn0Bi+NvCvHfH
EELKiEq7uPK8YwydpMGIpo4rKyGZBrziZhaYUMtKnK02GnCL+DNBUr91UZg+
jhMqxsAUdN/WKySmcbxI/Jox8IFHnp41ARtjx2rG0U2VsWbXBKqI/2kcGjz5
d1LJJKIZOdst2MbmsrofTkJNeFggSLM4u/cZ8V4hUzMoDrv9TF+TERsIHyuW
DH/YNwSM6E1lBFpRFDm0cZJnQgYxaIM85Q3xlnoT7hMgNhT3nupj+UyQE36z
yB3jPn+ZP4UUBg/fDsXBms9FrVOUpx0uyUrb/dUpSBh50jkUKGVGc7aZ8nUg
p2T9TvawGQZSDuzYudpsip+mvK9BVZojFLVOg9jlOJF2JHluIMJC+Tuh+q2t
J6PGAjIuex7t1YsZwgcWmocLsTsaPN7yGRwgDS7ow1gfFvwzQ/NxoSkvXsqp
s2KFCHKhpfQXbSrHRvNyY2/NfnHGORtaiV83Dm87ndny8izNz43b3wviPvPO
Yjfx74H6i333SmV2mqcHRyLuWW4mz8FDxnmQeIaV9MmfczRfL9KePc378aID
dYSPF+z8G1x21TWatxcX+v5qKEp3IpYY9GGtpVVfmTBP8/eBN8+7I4twYYLw
82F9Cr/xuzoX/R8WoMnyIT/UjY8IzwU4rE+crW1wg8hTLcB2q3lZ/rSH8vVj
80/XZUVKD8jvUujHw6iPucrDXsrbj/JXx1hitg/EbngAd3+1P/hd46P8A/hZ
uv/S2a8WQMYpAihJadz7Q64fhV8LzhxUBc9Hq9eczX78C6zCXhI=
            "]]}}, {}}, 
        InsetBox[
         TemplateBox[{"\"MZA+\"","\"MZA-\""},
          "PointLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"d\[Omega]/dn\"", TraditionalForm], None}, {
          FormBox["\"n\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{{-1}, {{-0.014372296190660392`, 
           RGBColor[0, 0, 1]}, {0.03705017169198277, 
           RGBColor[1, 0.5, 0]}}},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{},
       PlotLabel->FormBox[
        "\"d\[Omega]/dn for MZA solutions (\\!\\(\\*SubscriptBox[\\(g\\), \
\\(1\\)]\\)=0)\"", TraditionalForm],
       PlotRange->{{-0.99, 0.99}, {-0.5448296467846419, 0.7061610198880132}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}],
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJw1kgtMU3cYxTunoDgDBrMhKvic6KLgdLoQMbq5yQzbqlaZjgjzsemGmYoy
RAXiqhkE29J3EUtbCvgCMT6GU3uKTEWBIVhswaqXZ1se1eF4DKeM/vftS25u
bu6953/O+X3Ttvy4dvsIHo+3dfjy3ItXNSVPKH6GldvO3vjr2nHEiG/2hsQ8
Q9RRc9GeMSL4WPN2R/g8w1S7SHMxWoTSoKOda0rdqKitizcViPAtGzd2a2fM
VvaJMIEJulHiSrcvWyWGR018sxuRLYFXrqvFGBYbVuwGP1Td498pRrBHLqgb
iXEZCTODJaiu8kwXbDtqhkI/k+AgE+xCa2H/0+IECeYwg11Qb/DdkqeVgNmz
doKrPc/53pOAyR3tREFvbHlfrwQL2XQiQ92fsml6FjxpVzV1IGW1lzLiyyyw
uOIOWFIiNIZDWWD2IjpgnvNkduaZLHQxORe8guc+/8eWhWyNZ1wICW843+8t
RSQTdOHIAemi1CVS9Hni9jpxjL8zRvmdFEYW2In292LfXq6WYi0r0AmBzrUl
9a4UPDZOKCcdFkS/lOI/Hg68Vk32q5wnIx4O6KLc1Y/jZMTDAUtZfYNULiMe
7Xj+tb+8u0JGPNphLnHt+fOVjHi0I7Mt8rV+oZx4tCFsRVrjiO/lxKMNAzv6
TO/o5WByQcPvBc6DrTY5GI6qVnB7QgfjxyvA6ktuxfLVvksvr1YQj1Yk3fPZ
XCZUEI8WcM1lKgUUxKMFU3dZly5+qSAeLZDM5G4ULlESj2b43dp02r1PSTya
kTR04ZzvRSWWscDNsMVHKnx7lMSjCduixWteLFARjyb4ZYb0YK+KeDSBd9X/
bPIlFfHgYA52WkL6VcSDQ9jcSe6acDXx4HDIW5CzP1VNPDhwt6uLgm+pqf+n
4P92J9AyVkN9P0FUzihvzToN9fsEAQ2x5ftyNNTnYwQc31azq11D/dlxyu7z
KGNBNpidEDsCNiZV1B3OhpD18wicvbEoqjIbHLPfCGPKBuvQxBOUvxGW+WPu
vth5gvI2QG6btSLs2gnKZ8OH9nfDb4zLoTzDzy8mdhu+yaF9siImztviupJD
+2PFV+sSzmWPO0n78hDmsbxk0/aTtB/1CLs9N30zTtI+1CPJPG+vMFBL/C1Y
mvbG5PCftHjI5B5gZKkQ6fVavM/4PkDUQEXH4Q9yIWKCdSj9JEM4TZVL/Gpx
Kry6JnUwl3jVQthlW1IXqiM+96E0Xbn8+VYd8biPTzuWaUpVOur/D/hE/cKf
WK2jvqsxIOAfSXxTT/1WwS7c4WcN11Of9/BF2SeBHyXooWb93YVXUNGQ6Zwe
fCZYgZUj07eud+gxmvVzBwMPuPnjZhhgZn3cwqL5gzJ3rAFJLP/veMtoGD9C
a8AilrccdkdJIv+xgfKVgWsvbGuekkd5zBBMzbDdjM0j/yaUHhoza9CQR36v
o+qHMzyZI4/8XUVJYeYo9Twj+fkVmacbFk/Yb6TzL4GXFu/lbzLCyc67gMiz
0Rt1o/NRwvSLEeBoElUI8iFheqdRsv7vn9WGfOxm/xsRF+STO6UnH2b2vRbc
q8rK7R8XII29lyNgeuKxVOX/z0KEbSjXHugswL8GhnXx
              "]], 
             Line[CompressedData["
1:eJwtkgtMm2UUhgtOQcKGI7jAQARxkQwITMBhHBx0URgiAQQmiA5FGSEsINGl
AiEsgS3OLWBgXIYukzalXNaVAm1hHaeUey0d15Vxb7mVaxjhUuQm/+d3kj9/
/ss5533f53P8PiX8R2MWixV1dDH3bCtBgDY9ByKKDn8NLavA/58LwTqofiNk
qwLl9rlLYdIHYC3LH0v9kk+/c2Gm/PBKt4iPD0uZqgRhtNY42aqS/i+AONMn
TtfYlbgWJj16UwsO951O6CYqaX89sHl7JtqAKnxDw0n1NZNA9nXnKzfqqui8
RvCf/YE96liNHrF5ik1nGQTnyCZNC6rp/GYIPMmKedekBvlH3RqOHLosvt6+
lFVD97WAq/ij94oNNejjyVQr5Buae85ef0T3t8Hac0HMme1HKN90PtrQDvVr
Ljp+hgBNiZ5OUEldzr945TGGMuPCusDO28x0LO8xlhB93fAV70HWsoUQp9KZ
gUpQ+V5Y2YsWojPRqwKByiPMmydEIi+1B1Q2hRM1G0Ik46RqCNaePpn5aS2y
SPWCeJmrkJXUIpc09IJAUnnx9motBmqZBX2gCqn7xShAhMvEXx8Exp/W+5eL
MF/BGOgH4Tm/7URWHXoRvwOg/4u9WvZdHQ4zdjQDYF17yu2gvQ4zif9BYNnx
QsRu9ejAyLEfgjvL61ErJfXYRvIYguF9G53apAETE5h6Ds4cp+jf0hvQnOSj
gbXbPJeQlw0oDGAEaoCddMwiPFmMEcTgMEi5Mxd7lsRoIIEMg9CtQrebIsE/
SX4vINuz3N1+R4L+TDy+IyD3szWwb0lpniOQP26+E2nbiDmMvNxRCDZ6GXqs
oZHmOwb+ks394YgmVJEaA3m2d5L7bhPNexxSh5QmSfwnSOxaTUDX4djBeqyM
5j8BcQs2axdsniIZFzsJfE6aunX8KeUxBSU/Jwwcr27GcNIwBXHfiv6ouYGU
zxSI41PffPucHLeIoCkQ5WVGSXhyyksLTfW+z/YcW/A+8auFA8vtyUhOC+Wn
hX7Xntz3XRToR/zroNBak3W8SUF56qDtfHrJtdBW1JFxOki+E+0+v9pK+U6D
7JvShbeK2vAmyWca4v59VdzxWTvlPQ05A3q7KqMOPEsMzgB7036d19lB+c+A
IT0ro6G0E9UkvxnYUBreWWJ30fMwC+YnfurLSujGNJLnLLiWfn5KHa9EIk8x
C4aP2wPj0/6h+c6BlUfP6F6BCslxSZgD7uVLrkXKHpr3HAi9Cs6kWT9DYtds
HlKrnWys/Htp/vOQvBP0eoxxH5Jxgnl4TeInbBvsozz04CMKmo1s7Kc89PDw
d8+6BNEA5aGH4Fu2GU2KQcpDD5ZlvMjilSHKYwFuttxNm/1AQ3ksQNtVy8XL
nGHKYwGiNtQZ5T4jlMcisDc+/KRlf5TyWATnuy4YvTtOeSzCnNLSxcF+ivJY
gsSaL4ptrmpx8m/kbnktgbw05p5fihb/A5OL38I=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJw1kgtMU3cYxStOIYqZIk6dEYI4hLkxh2RxKnxzccqqKBA2NMJQURY3Izqd
M8pERNSJ4nNOUEHlUUpLaUuhBSunrXM+xku0tDJklEdboFIVfG6TyX//fcnN
zc299/zPOb/PZ21S1HoXgUCQ8PoaussWW3Z6ypy49pNbjntkHsUeNTzxj3Vi
a01cQ1hxHo0y5W0OGeXESzp0/MnwfNJ4pfdGavoQndyy6a2v8imRTR/8BoWC
Uk0+eTLBPpiju+yG8QU0pHbU8ACeZxebvkgqoNdirxUfIDZl7P5vfy8g7yE5
rweIM67UuvoXUm3N0DhwyTp7WWB6Ie1igg5Yz/pO7WgvpABm0IGKS3mT3l0g
ImbP1ItGRVGo6wURMbn0Xhg9As7tHhTRbDa9SPhZFH4qvoiG0i629CBmnCFl
qa6IWNyjPdgjvpok8RETsxfSg9DuuRvL08TkYHLdOP73SeMmq5iys4amG8e8
1V4tnxdTGBPsxoHdktphsmJ6OhT3iR0vVKHJnR4SymeB7ZB4KcwHd0goihVo
R2zQ14X9rRISsLHjyJQL1QGLpPQfDxtc6z8cN0sm5TxsUBuFBaMnlnAeNrz3
5txs/Z4SzsOKWul8/5jeEs7DChdR1MXbX8o4Dysy/5r83UdXZZxHF4wv5dMy
ZpVyHl24PJAbY8wpJSbn1QWZcP2GMa5yYjhqOqErCK6aRXJi9e3sRMOBETmm
H+ScRyc+GaifPkIh5zw6IF+yKEnbI+c8OtDanlAqeEfBeXQgMEsQYIxXcB7t
yM7ZEBRyVsF5tGOadDB4vklBoSxwOybZmkuM45WchwW56m2BYyKVnIcF++ti
4qyZSs7Dgj5J09N1tUrOow2O7hu1h93LOI82NOUtr1mztIzzaMMHiy4O2A6X
cR5tmON7f41vXRnv/08cDLCFTRqr4n23In3q0he3olS831as1ga20mkV7/M+
tgeFpuxqVvH+WnAuviJ1r3c5MTv+LbgR/Y145fpy2sf6+QPZp+/dGyEtpzZm
vxlHCiImHu4v5/mboYiYcPDRvAqe9x7iduV+Py+9guczY66lNTypvoLnMWNt
Wmb+ibfVfJ9MWJVyOliSqOb7Y4KyJdlSXabm+9KEbYlWzZ1hGr4fRrg/nDHg
jNDwfTCiLr77xeSLGs7/LkY/a45f8VhDTUzuDn6cvtuhWFhJQYzvHTwrcsl6
/0wlZTLBRgjXfXyy0VHJ+d1G1aHzVPRpFed1G9unb59XkVXF+TRg9rKx8W88
ruI8GpAW7anLXnKZ91+H8LtPy1ILL/O+a5EsPNCod9HyfmsQ+vz884TVWt7n
LeBVj3ALtHSG9XcTM0fa5/R7X6EIJngD2TOcKf2pV8iN9XMdG0U7ApO7rpCO
9XENQb57Rb8Iq2kHy/8r/MJ9CiMU1RTM8l6FHz5boJwMnk+PLYPFzutp4Hl0
eLniVcZ5J7j/agTG5EpzA3XcrxZTPMTD4xJ13F8lBnY+XDUmV8f9qDFzoSpV
bdbx81VwmxaVsna8nuzsPAVORE64MGG5nuRMXwa/zJCt5gw9HWN6YrS4e9Yr
b+ppM/s/H+aixLtSNwPp2Pc5MP+jf1QXZqA97P0p/OazxOZz6P/nfXAf6XFT
VmOgfwEJcUcP
              "]], 
             Line[CompressedData["
1:eJw1kgtMW2UYhslWlcu6yNJlc5EFzcyQixpmQyXpXuaSoqsDu0HQyBgXRUUE
ZqKOix2wFqMVHWzKJRVxMDZcLGxDx7QZUEpbSoGWUlpKV3qjZTcynbDhIrPn
9/dLTk7OOf/3fe/7vOep/NID76wLCQkRBi/mXs1RpLorJNi8q7FcnjmM/55P
QaAUpkbKhzG4XXpT1N+GRy/FPbbo/f97J1ommofiEtRob2GqG8rdo0uBT9X0
vAL95txjMWo17oj6g28u4OiS3bMaOUL7+5Dz5Esb388bwePWjjJ++GW4FFHH
j18cofOuIPrYoaysRzR4Ifsb1XKMEic7NvHvvqmh86+idkuSrLBXg3PBbmvH
IJITpgRDoVq6bwjnjep4ToEWvF1MDcPQvkdZNqCl+9Uorl7bcz1Kh8HlmOCG
EfC7nvOdEOsQSvRoIVvJ7Kl06/A6M06kQ3pYaOdVwSiaib5RVH3ZNVKqGIWr
ghmox7rXuLFdW/WIIXoNEN54K6JCqgeRVzYOhaXHxlrWg4zrn0Bi+NvCvHfH
EELKiEq7uPK8YwydpMGIpo4rKyGZBrziZhaYUMtKnK02GnCL+DNBUr91UZg+
jhMqxsAUdN/WKySmcbxI/Jox8IFHnp41ARtjx2rG0U2VsWbXBKqI/2kcGjz5
d1LJJKIZOdst2MbmsrofTkJNeFggSLM4u/cZ8V4hUzMoDrv9TF+TERsIHyuW
DH/YNwSM6E1lBFpRFDm0cZJnQgYxaIM85Q3xlnoT7hMgNhT3nupj+UyQE36z
yB3jPn+ZP4UUBg/fDsXBms9FrVOUpx0uyUrb/dUpSBh50jkUKGVGc7aZ8nUg
p2T9TvawGQZSDuzYudpsip+mvK9BVZojFLVOg9jlOJF2JHluIMJC+Tuh+q2t
J6PGAjIuex7t1YsZwgcWmocLsTsaPN7yGRwgDS7ow1gfFvwzQ/NxoSkvXsqp
s2KFCHKhpfQXbSrHRvNyY2/NfnHGORtaiV83Dm87ndny8izNz43b3wviPvPO
Yjfx74H6i333SmV2mqcHRyLuWW4mz8FDxnmQeIaV9MmfczRfL9KePc378aID
dYSPF+z8G1x21TWatxcX+v5qKEp3IpYY9GGtpVVfmTBP8/eBN8+7I4twYYLw
82F9Cr/xuzoX/R8WoMnyIT/UjY8IzwU4rE+crW1wg8hTLcB2q3lZ/rSH8vVj
80/XZUVKD8jvUujHw6iPucrDXsrbj/JXx1hitg/EbngAd3+1P/hd46P8A/hZ
uv/S2a8WQMYpAihJadz7Q64fhV8LzhxUBc9Hq9eczX78C6zCXhI=
              
              "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{-0.99, 0.99}, {-0.5448296467846419, 
           0.7061610198880132}}, DisplayFunction -> Identity, AspectRatio -> 
          GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{"d\[Omega]/dn", None}, {"n", None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {{-1}, {{-0.014372296190660392`, 
              RGBColor[0, 0, 1]}, {0.03705017169198277, 
              RGBColor[1, 0.5, 0]}}}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
          "d\[Omega]/dn for MZA solutions (\!\(\*SubscriptBox[\(g\), \
\(1\)]\)=0)", 
          PlotRange -> {{-0.99, 0.99}, {-0.5448296467846419, 
           0.7061610198880132}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011111111111111112`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.011111111111111112`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {"MZA+", "MZA-"}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {Right, Top}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True], 
     TagBox[
      GraphicsBox[{{{}, {{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJwtkgtMU2ccxQsyZLgpcdUgCE7HSGVGmYIuLu7zUV4iiyCOwXxggYpGtEMH
DIXBqLoG5SXIw8mjAwSHiIoTWeW0CIJakKegQyzlVUrbwSILi24Ovn7/5Obm
5t57vnPO779ccMwvzJTD4QTPXLP3qLxu2XS+AVWRHtdy23RESMeAkPg35h6f
agi30mMglmsAL95xtbB2kNRP8fak1usRt0IodUpWEdEmy55fRHpsl9itzvDr
I8tOj/vW2OsR8vZizNvCXtKinB0dQuaNHD56vZucpII67HNSLznu1UlWzqhN
8XTwWbj18ns72smM2IziOJTVE/y/Nj0hVO70OKo1bR2NB5RkHZ1xCNyDbjlq
H5IZczOCWvwrDdtl1tBEUqlBLda7JWUrVY2E2tukBXer+soq1waio3JjCH10
c8f6mnqSlzs7Y+Cv+l7xQKAgnlRwDIsipzcuWSMnf8/GndJAeC0iweBcR4pp
YA3MO6pSXrvKiN+snK8G8yfquGphLeHQ0YBz4KDOta6G0PoqR+H4bvstwYY7
hMbdMwqpaH9ZUuttQu1ZjkJQsmIZP6GaULmaEaxzP3XmgdctxmMEqzqjDqfx
bjIeI9jgYxIUa3OD8RjGI9uKTqldFeMxjNDIcKem4EpC5eyHsW9Zd0G6tIJQ
HMohZBYXKT747yqh9cUO4dxX9xLNvy1nPIZQsThqSPDPFcZjEPk++6IDs0oZ
j0F08ENsvLeVMB6D8FtZ9bLepJjxUCNoMqtD9ETKeKghD2yN//jXIvIFDazG
K02JdeuFQsZjAA5zy75WWxUwHgOY+EYWH2B1mfEYQMVax5K9DpcYDxViznkd
ifXOZTxUkJmVe+wSZzMeKggvbXS62pLFeKiwOKYlN8gxk/X/EkHSzbYB5zNY
3/34KfvUeKlJOuu3Hzvn6qeazFJZny8Qbr3QPdLuHOuvDzyt0FbhLSHUDq8P
bxY0ZvBTzhAx7ecPWPAyzUsHk4iK2n8OEc+1qWR7Isv/HJ4L59ivFcexvM8Q
PF+6uy09huXrRZpJV9ES2XGWpxeqcDvxVtOjbJ96UOjm+tGaulC2Pz0IdrN0
s/cNYPvyFJySQ+XbJ13ZfnSDs/TDxxutPGHch27IDUO/TW/ZCyP/LoiizMP3
2h7EUyrXCfm2eG7Ld8ewlvLtxLShNjrk2XGkUMEOiN45L/PXRsPIrx2FtfHu
fYaTMPJqh4rv0bpA8wOMfNoQ7pD/56nxRBh5tKFMog/z6U+Csf9WhM+Na36l
PA1j3y040nXVX3vnLIz9KpGQk3KoqEACY5+PwJ+MHpKIk5FD+3uINP2NaKuD
57GTCjbjhGDLm3yPVFjQfprQvFy8/8sLaZDTPhphFqgP3fBjOmJo/gZYRURx
ZaIMuNC89+EynLn4/f0XWD4FPKMUu4N8MlkeOT673bu08/Ms5r8OVoPXXUqd
LjK/MjQHuHBMbbKZv7vompTkcC1zmJ87SDjhPzrvdQ47vxrBPYH1i/S50NDz
bkDTNDYnWJWHKqpficJ+ryvW3ZeQRvXKIXL2fxHx+GeI6P/FUPF+d065fxly
+n0+Nissksvu5SOBvs+EfE2Pn+5uAXsWQ275SR5/TyH+BwtxJWY=
            "]], 
           LineBox[CompressedData["
1:eJwtkgtMk2cUhqsDZCiRKGa4IXNmYWUil8BYYegxE+M2gqFkXpiISLjDlLF5
Q+KqgriI0unMUDoQKIxrx51SKqcFrIAMyrUdF2kLFGhBWDakuiYb/7fvJH/+
/Jdzzvu+z/de5NmQ6PUsFuv42sXcefaiQ9rUdOAZNmd3hxfg/88/Aev+xmhv
XQHKnDKMXHEeLDeozG6xhfS7EFgNDe7Di4X46AFTZZD8y40tn54vov+LQBkU
Gf8jS4jLXPHamxqQyTbhZJaQ9teD6cyZc1+8U4x2qqLkvTZNcHExTLVUUUzn
NQPnr127l/aVoEdYdtsKWwrs1XxF3FAJnd8KGsvw968k/Yqla92qIhnwa1tf
cTeU0n1yYMOVw9bFpcjxYqodkn9uuq84WEb3d8Dy9muddfNlKFthr214Ah6+
B66Z+OVoTfQ8hWWp3gk/qcBgZhy3EyJs/Ma8DBWYQ/R1AV98fTVdUImaVGZg
N/D1JeO6kCpkE709kFPzzwGerQiJvOTf4WalZ+TdHhGSceJeYDWnbuPyf0MW
KSWwj1XcuuxajULSoIS4ftftp+9V42daZkE/SH9waX1lrsYF4q8fwqoLu2Pj
a5DfxhgYAG/rkXN96hr0Jn4HISL48BvHAmtRzdhRDYK42c3oLK/FNOJ/CDwG
7KwS/OpwJyPHaRgublNJg5rqsIPkMQydOo3/ek49xsUwNQKyjxxrJNJ63ETy
UQGb+z2v6mADVh9iBKpA/UHmXfvBBvySGFRDRGbiwz3RjWgigaghILc/3s/c
iAKS3x8wnTsZeDWnCfcz8ewdheCu+vggPzHNcxSiWhJ9l7RiTGfkZYzBnOWq
SZrdTPMdB4cdoT5bAyTYQ2ockhaWYo78K6F5T4BrVF/2C3kLErv2z6E6MmVd
SJaU5v8cHF5EuZjDHyMZFzYJSSl/p33r10p5aIAf+g3v83cRQ0iDBhZW+au2
G2SUjwayfMIsnl2X4UsiSAMxKSYLXys55aUFQVVa4uM7cnxI/GpBZpAsKXa0
UX5a8FgD2FvXhvuIfx3cvKNlh3LbKU8dpEn27DK9bEcdGacDtfOiIrC4g/Kd
AmmuvN3i5BO8QfKZgp3Wyaf0TgrKewoEBp6p06jAD4nBaejceNoo6HhK+U+D
9+SFla/LO7GX5DcNCytfucXmddHzMAOur30aVQXdmELynIFHV9/az2l8hkRe
2wz434ov9ZzoofnqgfPmgyGhQy+S4xKjh4DNf7LrE/po3nrIezvv8myCEold
m1kIMSfUnnLrp/nPQuUF/8aT6waQjBPNgsj9xLx0ZoDymIPv4Kx9ycQg5TEH
DrYxlfnGIcpjDpRW4ycKt4xQHnMQ0DC52+uoivKYB0FymGuGRE15zEN5eKp/
ccAo5TEPvWZrUd3rMcrDAHMus86e0xOUhwFMfZlHvCw1lIcBAu6dP5rqr6U8
jKC8lFMalK+jPIzAsdf4uH48TXkYId39kjDdTo8txyeCnB0XYPi2o3LrzCz+
B1+E7DY=
            "]]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJwtkgtMU2ccxYs6wwqCMog6JyJmUqHUx5hxMPhwwlC3KSqyBRxuM8iGm1ZU
xkClkhJ0KgxBqKKsAwVBwlteUk5XQXzwqLxBUF5teZWoGeqsYSvf/f7Jzc3N
vfd855zff/kPh3YGz+LxeHuN18w9M9Hez+A0ifbzH6jf0+hgne8zEGk9idOf
+W0QSrRQTQn2JKj0WB2fOO/k9CDE7vzOTLEe6qrNbtFf92NZ7PiOCls9+uYa
aufE9aKxYWYmcNFLZ9gi6kYUFZxAR4Ta0umXDqwyqk0JJhBktj1mh20bjGJG
xXFcMfeyUji0gMrFjsMp/MKvqnA1PqIzjvUDgWYbDY0wmjMKjsGEbxH3ct9D
JFCDY/Bam21as/A+qD33MeR7F1iI+PWYoHKjME9WOIetrcPlSzMziiobk+js
2DvYTAVHceAb06AQngovZ+JOjSAoKrXz8BUlrtHAIxgzqA/15tZg54zcjhHk
r7TKDN9eDR6dEQj5F9xT7KpA68vXYd6iC6HzFleAxt2jw+eqwGaxSxmoPb4O
zn4Ti6cOloLKVRh7Tn4h31VXjP10tIhIXRJW6lLEeGiRcWq56JNjBYyHBs0Z
LV8hJ4/x0GDT1rBhh9m5oHK2Gmj+08csOJkNiqNhGNf1DyOOL7wOWl/kMGo1
vb6KhgzGYxivdaORh9PkjMcQ7DRPIsZnXWU8hiAXR4uq/5UxHkPwjjF70Lfw
IuMxCJVDtNY5IJHxGITkxN22nKiz8KCBB7HVve5apETKeAxgTdKG7DXHoxiP
AchtYNWm/JnxGABvyn/R80BXxqMfvnN1G98PDyYcj36Ic0f9M++FE45HP/6R
+dQleZ0iHI9+uGw7unqFSRzh+n8K4aclMfIr5wjX9xOMNA8+V5gnEq7fJxBL
rna9rU4iXJ99sPPt8V/yXQrh+uuF+s+CxzavZITaEfRic/qJ810xaURK+3mM
2oTges856aSf2u+BX/vsDZYecsLl74E0eUHq5WN/ES5vN/I+PAfbnAzC5etC
yrp93S+6MlmeLng46kJ+euc64fapE6FLxUVqURbh9qcTDVtKlh7ZnU24felA
k77hbOpvNwi3H+0Qpg/JT6XlEG4f2qHNXTM/7HYu4fi3Yc4mu76s7pukg8q1
wrRZIAt8mUfWUb6tkO7WptxfkE/iqWALAgyvHATCAsLxe4RJWdz3HfaFhOP1
CMf1Dy57FxQyPmpMmdlrI92KGA81bjYZquPri1j/TTCN4E/LdhWzvhuhMguY
LnxazPptwI2A0Ev6AyWszwfwGw7xDH5dQmS0v/so7kwzFcWWEl8qeA+OxLHy
W6tbxJT2U4/BrHVd78pvESXtow5tZ/aX+4jKSATNX4sf36yUCBVlxIXmvYO3
R11J45flLN/fsFi/6plHXznLo8TvxdtOpxysYP5rIH1WYDLKq2R+q3E3KD34
i+RK5q8S8xPdOlsEVcxPOcyn+64m11Sx80vx9s2R1Vm7b5MRel4RBNbtrksn
b5NCqp8PsdSl2PJ0NfmD6uUgb7mkPWmFgojp/9cgaxO6K5UKoqTfp0PMvzh8
c28NkdD3yRD7W3x8kAf2LIWnT6vlskyQ/wGxdi3S
            "]], 
           LineBox[CompressedData["
1:eJwtkglMm3UYxlEWQhgmhhGHg+C2SDh2MATGYoCHKAwQyVqKLEvwSMMmKolA
JCAiY+FwissQmRzOuQVC0HEU3MaZ0ou7K4VCP6BdL3oBHTCyKplx2O+//5t8
+fId7/s+z+/5H+F/mXHxZTc3N47rYu8Vvt3JxtIqCA52nztfLMKL5wYY/il4
op8RQRRYvcEduIXEl9wL64+I6fc2nG3UpJeViHG7ma0/kFfpx7+rFNP/u2Ho
fMN5IkyCbe6A600vNlIihT7VEtp/D9u2pMe5RgleZVrz47z6IfA8HZkAKZ03
iOc/l0x33JLiVPZ1iTNkBFFP4yr+2pPS+ULM/3lIWMCXocPVzbSK0F6EBue4
jO4To8+ZLuOeGMOZSLak6FMw8uYbY3S/DMLgRqdxbwwiZ4hrwxhSZfnZyBuH
J9EzgYpervvkyjg47DjuJIL2/tXVp02gieibgraHsfYLJ2AoZQdOwzdHH8SJ
mkQI0StHRoREXtQ5CSIv/yE6TVlJicFTIOMGFBC2XE5eapuCGyklpM7ft84F
TaONNCixlTOjnu6YRoqRXTAH6xeLxz8Pn4GD+JtDwHbBAmdwBnUS1sA84kea
rrSelSOK+FXhQ/+LK1cZOZZYO4wKGQOCltC8hygj/hfgEScYEuxT4DArJ3AR
+ncNTWl3FJARHosIKG0JDntnFrmX2FLj7aT7gZdts/AmfBicPKrwE6UoIUhm
BTLoGzsZFHlbiUxicAm/1vpbTj9TYpcAWUKS5nDuRtYcbhJ+y7hWUyQtfDCH
BBZP3Ar+M1fGPvGbpzxXcGV/b/G18nlUsfKqNRBJVu/m2+YpXy1KVR9pxnkq
yElp8Ti60WdUqqK8H6Fmc7yrNmYBxK6vDrHC19v5PQuUvw4+9gLbt8cWQcZl
63HKf73Hv3OR5mFAScynz8oj1C5ubIMB+wolzq1hNc3HgB3vzB9G0hj8TQQZ
4PXZztYZI0PzMsInRpUlKltCC/FrxG5oSPv9wGWanxGcX+Z4VRPLiCf+TejR
B1y4U7xC8zThm+8SUn8M18BExpmQ6Dh2XbmlofmuYn/o+WWPQS1qCJ9V5Nxo
GFbXPqJ5r8Ljk+/rdnN1CCMGzWjIKW2P4epp/mbUFSn5Q0cNUBB+Znhv9NZl
uny9OA8W6BYs5qdhRhQSnhZU505qooeMIPIkFhyKnUiVcU2UrxXpVzkR/B0T
yHG5ZMVXXrNvrt9cpbyt2BR+/QEvwwxi18uG/lFtyYMDFsrfhuOVrw3zTBaQ
cd02vD+07d4yaqV52LE5y6yHd9loHnbofvtJ9bzTTvOw4+ArWnWCeI3mYUfl
ATOv3rFO81jDx/fKL3i+5UC0VvpefN4aBIXJXc1KB/4HYV6Spg==
            "]]}}, {}}, 
        InsetBox[
         TemplateBox[{"\"MZA+\"","\"MZA-\""},
          "PointLegend",
          DisplayFunction->(FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ),
          Editable->True,
          InterpretationFunction:>(RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
         BaseStyle->{FontSize -> Larger},
         FormatType->StandardForm]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{0, 0},
       DisplayFunction->Identity,
       Frame->{{True, True}, {True, True}},
       FrameLabel->{{
          FormBox["\"d\[Omega]/dn\"", TraditionalForm], None}, {
          FormBox["\"n\"", TraditionalForm], None}},
       FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
       GridLines->{{-1}, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImageSize->Large,
       Method->{},
       PlotLabel->FormBox[
        "\"d\[Omega]/dn for MZA solutions (\\!\\(\\*SubscriptBox[\\(g\\), \
\\(1\\)]\\)=0.1)\"", TraditionalForm],
       PlotRange->{{-0.99, 0.99}, {-0.7467135491064548, 0.9004639038426685}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}],
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJwtkgtMU2ccxQsyZLgpcdUgCE7HSGVGmYIuLu7zUV4iiyCOwXxggYpGtEMH
DIXBqLoG5SXIw8mjAwSHiIoTWeW0CIJakKegQyzlVUrbwSILi24Ovn7/5Obm
5t57vnPO779ccMwvzJTD4QTPXLP3qLxu2XS+AVWRHtdy23RESMeAkPg35h6f
agi30mMglmsAL95xtbB2kNRP8fak1usRt0IodUpWEdEmy55fRHpsl9itzvDr
I8tOj/vW2OsR8vZizNvCXtKinB0dQuaNHD56vZucpII67HNSLznu1UlWzqhN
8XTwWbj18ns72smM2IziOJTVE/y/Nj0hVO70OKo1bR2NB5RkHZ1xCNyDbjlq
H5IZczOCWvwrDdtl1tBEUqlBLda7JWUrVY2E2tukBXer+soq1waio3JjCH10
c8f6mnqSlzs7Y+Cv+l7xQKAgnlRwDIsipzcuWSMnf8/GndJAeC0iweBcR4pp
YA3MO6pSXrvKiN+snK8G8yfquGphLeHQ0YBz4KDOta6G0PoqR+H4bvstwYY7
hMbdMwqpaH9ZUuttQu1ZjkJQsmIZP6GaULmaEaxzP3XmgdctxmMEqzqjDqfx
bjIeI9jgYxIUa3OD8RjGI9uKTqldFeMxjNDIcKem4EpC5eyHsW9Zd0G6tIJQ
HMohZBYXKT747yqh9cUO4dxX9xLNvy1nPIZQsThqSPDPFcZjEPk++6IDs0oZ
j0F08ENsvLeVMB6D8FtZ9bLepJjxUCNoMqtD9ETKeKghD2yN//jXIvIFDazG
K02JdeuFQsZjAA5zy75WWxUwHgOY+EYWH2B1mfEYQMVax5K9DpcYDxViznkd
ifXOZTxUkJmVe+wSZzMeKggvbXS62pLFeKiwOKYlN8gxk/X/EkHSzbYB5zNY
3/34KfvUeKlJOuu3Hzvn6qeazFJZny8Qbr3QPdLuHOuvDzyt0FbhLSHUDq8P
bxY0ZvBTzhAx7ecPWPAyzUsHk4iK2n8OEc+1qWR7Isv/HJ4L59ivFcexvM8Q
PF+6uy09huXrRZpJV9ES2XGWpxeqcDvxVtOjbJ96UOjm+tGaulC2Pz0IdrN0
s/cNYPvyFJySQ+XbJ13ZfnSDs/TDxxutPGHch27IDUO/TW/ZCyP/LoiizMP3
2h7EUyrXCfm2eG7Ld8ewlvLtxLShNjrk2XGkUMEOiN45L/PXRsPIrx2FtfHu
fYaTMPJqh4rv0bpA8wOMfNoQ7pD/56nxRBh5tKFMog/z6U+Csf9WhM+Na36l
PA1j3y040nXVX3vnLIz9KpGQk3KoqEACY5+PwJ+MHpKIk5FD+3uINP2NaKuD
57GTCjbjhGDLm3yPVFjQfprQvFy8/8sLaZDTPhphFqgP3fBjOmJo/gZYRURx
ZaIMuNC89+EynLn4/f0XWD4FPKMUu4N8MlkeOT673bu08/Ms5r8OVoPXXUqd
LjK/MjQHuHBMbbKZv7vompTkcC1zmJ87SDjhPzrvdQ47vxrBPYH1i/S50NDz
bkDTNDYnWJWHKqpficJ+ryvW3ZeQRvXKIXL2fxHx+GeI6P/FUPF+d065fxly
+n0+Nissksvu5SOBvs+EfE2Pn+5uAXsWQ275SR5/TyH+BwtxJWY=
              "]], 
             Line[CompressedData["
1:eJwtkgtMk2cUhqsDZCiRKGa4IXNmYWUil8BYYegxE+M2gqFkXpiISLjDlLF5
Q+KqgriI0unMUDoQKIxrx51SKqcFrIAMyrUdF2kLFGhBWDakuiYb/7fvJH/+
/Jdzzvu+z/de5NmQ6PUsFuv42sXcefaiQ9rUdOAZNmd3hxfg/88/Aev+xmhv
XQHKnDKMXHEeLDeozG6xhfS7EFgNDe7Di4X46AFTZZD8y40tn54vov+LQBkU
Gf8jS4jLXPHamxqQyTbhZJaQ9teD6cyZc1+8U4x2qqLkvTZNcHExTLVUUUzn
NQPnr127l/aVoEdYdtsKWwrs1XxF3FAJnd8KGsvw968k/Yqla92qIhnwa1tf
cTeU0n1yYMOVw9bFpcjxYqodkn9uuq84WEb3d8Dy9muddfNlKFthr214Ah6+
B66Z+OVoTfQ8hWWp3gk/qcBgZhy3EyJs/Ma8DBWYQ/R1AV98fTVdUImaVGZg
N/D1JeO6kCpkE709kFPzzwGerQiJvOTf4WalZ+TdHhGSceJeYDWnbuPyf0MW
KSWwj1XcuuxajULSoIS4ftftp+9V42daZkE/SH9waX1lrsYF4q8fwqoLu2Pj
a5DfxhgYAG/rkXN96hr0Jn4HISL48BvHAmtRzdhRDYK42c3oLK/FNOJ/CDwG
7KwS/OpwJyPHaRgublNJg5rqsIPkMQydOo3/ek49xsUwNQKyjxxrJNJ63ETy
UQGb+z2v6mADVh9iBKpA/UHmXfvBBvySGFRDRGbiwz3RjWgigaghILc/3s/c
iAKS3x8wnTsZeDWnCfcz8ewdheCu+vggPzHNcxSiWhJ9l7RiTGfkZYzBnOWq
SZrdTPMdB4cdoT5bAyTYQ2ockhaWYo78K6F5T4BrVF/2C3kLErv2z6E6MmVd
SJaU5v8cHF5EuZjDHyMZFzYJSSl/p33r10p5aIAf+g3v83cRQ0iDBhZW+au2
G2SUjwayfMIsnl2X4UsiSAMxKSYLXys55aUFQVVa4uM7cnxI/GpBZpAsKXa0
UX5a8FgD2FvXhvuIfx3cvKNlh3LbKU8dpEn27DK9bEcdGacDtfOiIrC4g/Kd
AmmuvN3i5BO8QfKZgp3Wyaf0TgrKewoEBp6p06jAD4nBaejceNoo6HhK+U+D
9+SFla/LO7GX5DcNCytfucXmddHzMAOur30aVQXdmELynIFHV9/az2l8hkRe
2wz434ov9ZzoofnqgfPmgyGhQy+S4xKjh4DNf7LrE/po3nrIezvv8myCEold
m1kIMSfUnnLrp/nPQuUF/8aT6waQjBPNgsj9xLx0ZoDymIPv4Kx9ycQg5TEH
DrYxlfnGIcpjDpRW4ycKt4xQHnMQ0DC52+uoivKYB0FymGuGRE15zEN5eKp/
ccAo5TEPvWZrUd3rMcrDAHMus86e0xOUhwFMfZlHvCw1lIcBAu6dP5rqr6U8
jKC8lFMalK+jPIzAsdf4uH48TXkYId39kjDdTo8txyeCnB0XYPi2o3LrzCz+
B1+E7DY=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Line[CompressedData["
1:eJwtkgtMU2ccxYs6wwqCMog6JyJmUqHUx5hxMPhwwlC3KSqyBRxuM8iGm1ZU
xkClkhJ0KgxBqKKsAwVBwlteUk5XQXzwqLxBUF5teZWoGeqsYSvf/f7Jzc3N
vfd855zff/kPh3YGz+LxeHuN18w9M9Hez+A0ifbzH6jf0+hgne8zEGk9idOf
+W0QSrRQTQn2JKj0WB2fOO/k9CDE7vzOTLEe6qrNbtFf92NZ7PiOCls9+uYa
aufE9aKxYWYmcNFLZ9gi6kYUFZxAR4Ta0umXDqwyqk0JJhBktj1mh20bjGJG
xXFcMfeyUji0gMrFjsMp/MKvqnA1PqIzjvUDgWYbDY0wmjMKjsGEbxH3ct9D
JFCDY/Bam21as/A+qD33MeR7F1iI+PWYoHKjME9WOIetrcPlSzMziiobk+js
2DvYTAVHceAb06AQngovZ+JOjSAoKrXz8BUlrtHAIxgzqA/15tZg54zcjhHk
r7TKDN9eDR6dEQj5F9xT7KpA68vXYd6iC6HzFleAxt2jw+eqwGaxSxmoPb4O
zn4Ti6cOloLKVRh7Tn4h31VXjP10tIhIXRJW6lLEeGiRcWq56JNjBYyHBs0Z
LV8hJ4/x0GDT1rBhh9m5oHK2Gmj+08csOJkNiqNhGNf1DyOOL7wOWl/kMGo1
vb6KhgzGYxivdaORh9PkjMcQ7DRPIsZnXWU8hiAXR4uq/5UxHkPwjjF70Lfw
IuMxCJVDtNY5IJHxGITkxN22nKiz8KCBB7HVve5apETKeAxgTdKG7DXHoxiP
AchtYNWm/JnxGABvyn/R80BXxqMfvnN1G98PDyYcj36Ic0f9M++FE45HP/6R
+dQleZ0iHI9+uGw7unqFSRzh+n8K4aclMfIr5wjX9xOMNA8+V5gnEq7fJxBL
rna9rU4iXJ99sPPt8V/yXQrh+uuF+s+CxzavZITaEfRic/qJ810xaURK+3mM
2oTges856aSf2u+BX/vsDZYecsLl74E0eUHq5WN/ES5vN/I+PAfbnAzC5etC
yrp93S+6MlmeLng46kJ+euc64fapE6FLxUVqURbh9qcTDVtKlh7ZnU24felA
k77hbOpvNwi3H+0Qpg/JT6XlEG4f2qHNXTM/7HYu4fi3Yc4mu76s7pukg8q1
wrRZIAt8mUfWUb6tkO7WptxfkE/iqWALAgyvHATCAsLxe4RJWdz3HfaFhOP1
CMf1Dy57FxQyPmpMmdlrI92KGA81bjYZquPri1j/TTCN4E/LdhWzvhuhMguY
LnxazPptwI2A0Ev6AyWszwfwGw7xDH5dQmS0v/so7kwzFcWWEl8qeA+OxLHy
W6tbxJT2U4/BrHVd78pvESXtow5tZ/aX+4jKSATNX4sf36yUCBVlxIXmvYO3
R11J45flLN/fsFi/6plHXznLo8TvxdtOpxysYP5rIH1WYDLKq2R+q3E3KD34
i+RK5q8S8xPdOlsEVcxPOcyn+64m11Sx80vx9s2R1Vm7b5MRel4RBNbtrksn
b5NCqp8PsdSl2PJ0NfmD6uUgb7mkPWmFgojp/9cgaxO6K5UKoqTfp0PMvzh8
c28NkdD3yRD7W3x8kAf2LIWnT6vlskyQ/wGxdi3S
              "]], 
             Line[CompressedData["
1:eJwtkglMm3UYxlEWQhgmhhGHg+C2SDh2MATGYoCHKAwQyVqKLEvwSMMmKolA
JCAiY+FwissQmRzOuQVC0HEU3MaZ0ou7K4VCP6BdL3oBHTCyKplx2O+//5t8
+fId7/s+z+/5H+F/mXHxZTc3N47rYu8Vvt3JxtIqCA52nztfLMKL5wYY/il4
op8RQRRYvcEduIXEl9wL64+I6fc2nG3UpJeViHG7ma0/kFfpx7+rFNP/u2Ho
fMN5IkyCbe6A600vNlIihT7VEtp/D9u2pMe5RgleZVrz47z6IfA8HZkAKZ03
iOc/l0x33JLiVPZ1iTNkBFFP4yr+2pPS+ULM/3lIWMCXocPVzbSK0F6EBue4
jO4To8+ZLuOeGMOZSLak6FMw8uYbY3S/DMLgRqdxbwwiZ4hrwxhSZfnZyBuH
J9EzgYpervvkyjg47DjuJIL2/tXVp02gieibgraHsfYLJ2AoZQdOwzdHH8SJ
mkQI0StHRoREXtQ5CSIv/yE6TVlJicFTIOMGFBC2XE5eapuCGyklpM7ft84F
TaONNCixlTOjnu6YRoqRXTAH6xeLxz8Pn4GD+JtDwHbBAmdwBnUS1sA84kea
rrSelSOK+FXhQ/+LK1cZOZZYO4wKGQOCltC8hygj/hfgEScYEuxT4DArJ3AR
+ncNTWl3FJARHosIKG0JDntnFrmX2FLj7aT7gZdts/AmfBicPKrwE6UoIUhm
BTLoGzsZFHlbiUxicAm/1vpbTj9TYpcAWUKS5nDuRtYcbhJ+y7hWUyQtfDCH
BBZP3Ar+M1fGPvGbpzxXcGV/b/G18nlUsfKqNRBJVu/m2+YpXy1KVR9pxnkq
yElp8Ti60WdUqqK8H6Fmc7yrNmYBxK6vDrHC19v5PQuUvw4+9gLbt8cWQcZl
63HKf73Hv3OR5mFAScynz8oj1C5ubIMB+wolzq1hNc3HgB3vzB9G0hj8TQQZ
4PXZztYZI0PzMsInRpUlKltCC/FrxG5oSPv9wGWanxGcX+Z4VRPLiCf+TejR
B1y4U7xC8zThm+8SUn8M18BExpmQ6Dh2XbmlofmuYn/o+WWPQS1qCJ9V5Nxo
GFbXPqJ5r8Ljk+/rdnN1CCMGzWjIKW2P4epp/mbUFSn5Q0cNUBB+Znhv9NZl
uny9OA8W6BYs5qdhRhQSnhZU505qooeMIPIkFhyKnUiVcU2UrxXpVzkR/B0T
yHG5ZMVXXrNvrt9cpbyt2BR+/QEvwwxi18uG/lFtyYMDFsrfhuOVrw3zTBaQ
cd02vD+07d4yaqV52LE5y6yHd9loHnbofvtJ9bzTTvOw4+ArWnWCeI3mYUfl
ATOv3rFO81jDx/fKL3i+5UC0VvpefN4aBIXJXc1KB/4HYV6Spg==
              
              "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
          PlotRange -> {{-0.99, 0.99}, {-0.7467135491064548, 
           0.9004639038426685}}, DisplayFunction -> Identity, AspectRatio -> 
          GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{"d\[Omega]/dn", None}, {"n", None}}, 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {{-1}, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, Method -> {}, PlotLabel -> 
          "d\[Omega]/dn for MZA solutions (\!\(\*SubscriptBox[\(g\), \
\(1\)]\)=0.1)", 
          PlotRange -> {{-0.99, 0.99}, {-0.7467135491064548, 
           0.9004639038426685}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{
             Scaled[0.02], 
             Scaled[0.02]}, {
             Scaled[0.05], 
             Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011111111111111112`], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            Directive[
             PointSize[0.011111111111111112`], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[1.6]]}, {"MZA+", "MZA-"}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {Right, Top}, Identity]]& ],
      AutoDelete->True,
      Editable->True,
      SelectWithContents->False,
      Selectable->True]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.7040479484631863`*^9, {3.7040479908797293`*^9, 3.7040480208750343`*^9}, 
   3.7040480581875963`*^9, 3.7040485687991457`*^9, {3.704048602925655*^9, 
   3.7040486293534803`*^9}, {3.704049699829728*^9, 3.7040497448211813`*^9}, {
   3.704049805162208*^9, 3.704049816250312*^9}, {3.704049875557763*^9, 
   3.704049913831772*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"dOmegadN", "[", 
      RowBox[{"n", ",", "#"}], "]"}], ",", 
     RowBox[{"n", "\[Rule]", 
      RowBox[{"-", "1"}]}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.1"}], ",", "0", ",", "0.1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.704048078544755*^9, 3.7040481365701733`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"ComplexInfinity", ",", "ComplexInfinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.014372296190660392`"}], ",", "0.03705017169198277`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Infinity]", ",", 
     RowBox[{"-", "\[Infinity]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704048087073037*^9, 3.7040481138416643`*^9}, 
   3.704048163633754*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"dOmegadN", "[", 
    RowBox[{"n", ",", "0.000001"}], "]"}], ",", 
   RowBox[{"n", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.704056101280232*^9, 3.704056159108809*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Infinity]", ",", 
   RowBox[{"-", "\[Infinity]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.704056102258596*^9, 3.704056163776288*^9}}]
}, Open  ]]
}, Open  ]]
},
Evaluator->"Draft",
WindowSize->{1465, 958},
WindowMargins->{{Automatic, 1543}, {Automatic, 119}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 99, 2, 28, "Input"],
Cell[682, 26, 858, 12, 28, "Output"]
}, Open  ]],
Cell[1555, 41, 229, 4, 28, "Input"],
Cell[1787, 47, 1834, 66, 80, "Input"],
Cell[3624, 115, 2050, 72, 80, "Input"],
Cell[CellGroupData[{
Cell[5699, 191, 971, 31, 46, "Input"],
Cell[6673, 224, 504, 15, 28, "Output"]
}, Open  ]],
Cell[7192, 242, 571, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[7788, 257, 150, 3, 28, "Input"],
Cell[7941, 262, 5975, 175, 159, "Output"]
}, Open  ]],
Cell[13931, 440, 127, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[14083, 445, 310, 7, 63, "Input"],
Cell[14396, 454, 77, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14510, 460, 550, 12, 63, "Input"],
Cell[15063, 474, 619, 12, 24, "Message"],
Cell[15685, 488, 4032, 122, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19754, 615, 907, 22, 46, "Input"],
Cell[20664, 639, 3137, 66, 396, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23838, 710, 1374, 34, 46, "Input"],
Cell[25215, 746, 7632, 134, 398, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32884, 885, 236, 7, 28, "Input"],
Cell[33123, 894, 473, 10, 41, "Message"],
Cell[33599, 906, 471, 10, 41, "Message"],
Cell[34073, 918, 471, 10, 41, "Message"],
Cell[34547, 930, 554, 11, 24, "Message"],
Cell[35104, 943, 289, 8, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35430, 956, 450, 12, 28, "Input"],
Cell[35883, 970, 533, 15, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36453, 990, 142, 2, 28, "Input"],
Cell[36598, 994, 213, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36848, 1004, 110, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[36983, 1009, 446, 10, 80, "Input"],
Cell[37432, 1021, 56006, 1366, 684, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93475, 2392, 576, 13, 114, "Input"],
Cell[94054, 2407, 50817, 1324, 1273, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144908, 3736, 3641, 86, 335, "Input"],
Cell[148552, 3824, 135492, 2384, 411, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[284081, 6213, 271, 7, 28, "Input"],
Cell[284355, 6222, 249, 5, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[284653, 6233, 126, 1, 62, "Subchapter"],
Cell[284782, 6236, 411, 10, 80, "Input"],
Cell[285196, 6248, 724, 19, 80, "Input"],
Cell[285923, 6269, 736, 19, 80, "Input"],
Cell[286662, 6290, 1221, 24, 233, "Input"],
Cell[CellGroupData[{
Cell[287908, 6318, 1083, 21, 63, "Input"],
Cell[288994, 6341, 71573, 1222, 492, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360604, 7568, 799, 17, 63, "Input"],
Cell[361406, 7587, 190648, 3179, 465, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[552091, 10771, 5897, 139, 471, "Input"],
Cell[557991, 10912, 77725, 1493, 399, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635753, 12410, 394, 12, 28, "Input"],
Cell[636150, 12424, 458, 13, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[636645, 12442, 265, 7, 28, "Input"],
Cell[636913, 12451, 178, 4, 28, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
