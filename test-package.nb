(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    232945,       4507]
NotebookOptionsPosition[    230091,       4407]
NotebookOutlinePosition[    230682,       4431]
CellTagsIndexPosition[    230595,       4426]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Test Modes", "Chapter",
 CellChangeTimes->{{3.676723039260427*^9, 3.676723050214436*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"imgsize", "=", "800"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/neutrino.wl\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6725945078959703`*^9, 3.672594509953569*^9}, {
  3.675705587330755*^9, 3.675705590587934*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.676726423037422*^9, {3.6767265611495113`*^9, 3.676726575132374*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<../../neupackage/mma/neumat.wl\>\"", "]"}]], "Input",\

 CellChangeTimes->{{3.672594295880104*^9, 3.672594299034132*^9}, {
  3.675705593783924*^9, 3.675705597619895*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.676726423081346*^9, {3.676726561201007*^9, 3.676726575185012*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modes", "Subchapter",
 CellChangeTimes->{{3.676723151969089*^9, 3.676723152559866*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deltamsquare13", "=", 
    RowBox[{"2.6", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", 
       RowBox[{"-", "15"}], ")"}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"MeV", "^", "2"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"energy10", "=", "10"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Energy", " ", "in", " ", "units", " ", "of", " ", "MeV"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"omegaV", "=", 
   RowBox[{"OmegaVacuum", "[", 
    RowBox[{"energy10", ",", "deltamsquare13"}], "]"}]}], 
  RowBox[{"(*", "MeV", "*)"}], 
  RowBox[{"(*", 
   RowBox[{"deltamsquare13", "/", 
    RowBox[{"(", 
     RowBox[{"2", " ", "energy20"}], ")"}]}], 
   RowBox[{"(*", "MeV", "*)"}], "*)"}], 
  RowBox[{"(*", 
   RowBox[{"For", " ", "10", " ", "MeV", " ", "neutrinos"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"thetaV", "=", 
  RowBox[{
   RowBox[{"ArcSin", "[", 
    SqrtBox["0.093"], "]"}], "/", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambdaM", "=", 
   RowBox[{"0.5", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "thetaV"}], "]"}], "omegaV"}]}], " ", 
  RowBox[{"(*", "MeV", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thetaM", "=", 
   RowBox[{"Mod", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", "thetaV"}], "]"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", "thetaV"}], "]"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"lambdaN", "/", "omegaV"}], ")"}], "^", "2"}]}], ")"}]}], 
       "]"}], "/", "2"}], ",", "Pi"}], "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"omegaM", "=", 
   RowBox[{"OmegaMatter2", "[", 
    RowBox[{"lambdaM", ",", "thetaV", ",", "omegaV"}], "]"}]}], 
  RowBox[{"(*", "MeV", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"endpointTest", "=", 
   RowBox[{"2", "*", 
    RowBox[{"10", "^", "7"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twokList", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "/", "200.1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"twokList2", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"1", "/", "200.2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"twoaListStash", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.02", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MeVInverse2km", "[", 
         RowBox[{"2", 
          RowBox[{"Pi", "/", 
           RowBox[{"(", 
            RowBox[{"omegaM", " ", 
             RowBox[{"twokListKK", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}]}], "]"}], "/", 
        "1500"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"5", "/", "3"}], ")"}]}]}], ",", 
    RowBox[{"0.02", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"MeVInverse2km", "[", 
         RowBox[{"2", 
          RowBox[{"Pi", "/", 
           RowBox[{"(", 
            RowBox[{"omegaM", " ", 
             RowBox[{"twokListKK", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}]}], "]"}], "/", 
        "1500"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"5", "/", "3"}], ")"}]}]}]}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"twoaList", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"twoaListStash", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"twoaListStash", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", "300"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"twoaList2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"twoaList", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"twoaListStash", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "*", "320"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"twophiList", "=", 
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.6767234496725388`*^9, 3.676723608149646*^9}, {
  3.676723644149441*^9, 3.6767236486690693`*^9}, {3.6767237579229317`*^9, 
  3.6767237608829403`*^9}, {3.676723823002914*^9, 3.676723824025032*^9}, {
  3.676725887524342*^9, 3.676725937914948*^9}, {3.6767262153963223`*^9, 
  3.676726252130628*^9}, {3.6767263134209557`*^9, 3.676726409679204*^9}, {
  3.676726488096754*^9, 3.6767265738281183`*^9}}],

Cell[BoxData["1.3000000000000002`*^-16"], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.676727147706218*^9}],

Cell[BoxData["0.15494769630192953`"], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.676727147715535*^9}],

Cell[BoxData["6.190375594420747`*^-17"], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.676727147721518*^9}],

Cell[BoxData["7.351037341763407`*^-17"], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.676727147727523*^9}],

Cell[BoxData["20000000"], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.67672714773351*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000011255730168726747`", ",", "0.000038761969116192606`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.67672714773978*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000011255730168726747`", ",", "0.011628590734857782`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.6767271477463083`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.000011255730168726747`", ",", "0.012403830117181634`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.676727147752913*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.6767234445941896`*^9, 3.676723492116207*^9}, {
   3.676723526520088*^9, 3.676723534498722*^9}, {3.6767235672694597`*^9, 
   3.676723609079569*^9}, 3.676723649407917*^9, 3.676723761208881*^9, 
   3.676723824493438*^9, 3.676725891807219*^9, 3.676725938704606*^9, {
   3.676726217189376*^9, 3.676726252875038*^9}, {3.676726317058196*^9, 
   3.676726423121976*^9}, {3.676726490224009*^9, 3.6767265752356987`*^9}, 
   3.6767271477590933`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"?", "solNList"}], "\[IndentingNewLine]", 
 RowBox[{"?", "widthNList"}]}], "Input",
 CellChangeTimes->{{3.6767231544892893`*^9, 3.676723157981185*^9}, {
  3.676723354375916*^9, 3.6767233551734037`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"solution of a system composed of a given list of n's; \
Parameters taken are \
[listInput_,kNList_,aNList_,phiNList_,thetam_,endpoint_(*,workingprecision_:$\
MachinePrecision,accuracygoal_:0.5$MachinePrecision*)]\"\>", "MSG"]], "Print",\
 "PrintUsage",
 CellChangeTimes->{3.676726575349483*^9},
 CellTags->"Info3676704975-6702627"],

Cell[BoxData[
 StyleBox["\<\"\\\"Calculate the width; Example, widthNList[list of n's,list \
of k's,list of a's,list of \[Phi]'s,thetam] and here lists are in the form \
{0.999,0.6,0.4}. Output is in unit of \\!\\(\\*SubscriptBox[\\(\[Omega]\\), \
\\(m\\)]\\) .\\\"\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.676726575428278*^9},
 CellTags->"Info3676704975-6702627"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Analytically, a mode is described using\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", " ", "=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"B", "^", "2"}], 
      RowBox[{
       RowBox[{"B", "^", "2"}], "+", 
       RowBox[{"g", "^", "2"}]}]], 
     RowBox[{"sin", "^", "2"}], 
     RowBox[{"(", 
      RowBox[{"q", " ", 
       RowBox[{"x", "/", "2"}]}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\nThe prediction using this equation is, for {1,0} mode"
}], "Text",
 CellChangeTimes->{{3.6767231646805677`*^9, 3.676723181750924*^9}, {
  3.6767233002523823`*^9, 3.676723333788526*^9}, {3.676723906078248*^9, 
  3.676723922949669*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"probTheory", "[", 
   RowBox[{"nlist_", ",", "klist_", ",", "alist_", ",", "x_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"widthNList", "[", 
      RowBox[{
      "nlist", ",", "klist", ",", "alist", ",", "twophiList", ",", "thetaM"}],
       "]"}], "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"widthNList", "[", 
        RowBox[{
        "nlist", ",", "klist", ",", "alist", ",", "twophiList", ",", 
         "thetaM"}], "]"}], "^", "2"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"nlist", ".", "klist"}], "-", "1"}], ")"}], "^", "2"}]}], 
     ")"}]}], 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"widthNList", "[", 
           RowBox[{
           "nlist", ",", "klist", ",", "alist", ",", "twophiList", ",", 
            "thetaM"}], "]"}], "^", "2"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"nlist", ".", "klist"}], "-", "1"}], ")"}], "^", "2"}]}]],
        "/", "2"}]}], "]"}], "^", "2"}]}]}]], "Input",
 CellChangeTimes->{{3.6767240938701067`*^9, 3.676724174131297*^9}, {
   3.67672426295022*^9, 3.676724319747795*^9}, {3.676724360050477*^9, 
   3.676724390432661*^9}, {3.676724476656054*^9, 3.676724478453424*^9}, 
   3.676725004103245*^9, 3.676725438911335*^9, {3.676725592836575*^9, 
   3.67672571675419*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probTheory", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "twokList", ",", "twoaList", ",", 
   RowBox[{"10", "^", "6"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6767242961223917`*^9, 3.6767243057783117`*^9}, {
  3.676724400419416*^9, 3.676724405760996*^9}, {3.676725721482085*^9, 
  3.67672572783158*^9}}],

Cell[BoxData["0.023469647536027823`"], "Output",
 CellChangeTimes->{{3.676724301143989*^9, 3.676724306191093*^9}, {
   3.676724392803424*^9, 3.676724406359292*^9}, 3.6767244799095497`*^9, 
   3.676725440335905*^9, 3.676725728265748*^9, 3.676726223887354*^9, 
   3.676726423388839*^9, {3.6767265615021973`*^9, 3.6767265755200243`*^9}}]
}, Open  ]],

Cell["\<\
Will the width change a lot if I modify a little bit amplitudes, due to \
Bessel function?\
\>", "Text",
 CellChangeTimes->{{3.67672607913062*^9, 3.676726120874062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"twoaList", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "/", 
   RowBox[{"twokList", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], 
  RowBox[{"Cos", "[", 
   RowBox[{"2", "thetaM"}], "]"}]}]], "Input",
 CellChangeTimes->{3.676726462060606*^9}],

Cell[BoxData["2.1451309562060277`"], "Output",
 CellChangeTimes->{{3.676726205388247*^9, 3.676726245420719*^9}, {
   3.676726385273184*^9, 3.676726423411399*^9}, 3.6767264624371233`*^9, 
   3.676726496378993*^9, {3.676726536289672*^9, 3.6767265755519648`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"BesselJ", "[", 
    RowBox[{"0", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676726437541955*^9, 3.676726453213697*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVlXk8lN8Xx5XsM2Mo28xYMtpQdklyT2lTljZFUZYslSIpkWTJEiWlIpUU
pZUSIb6ufV9nxEyRhOzGTki/5zd/PPN6v86999xzzuf5PCsdPQ44L+Xj4xMg
Hv//fxLgKKh1Msr4+b///3go8eiQ4RGlU6hmzEpinmCueaSXkpIvcpT+sGOI
YO2NDcminGD0YLvUEzbBPrtsKAJKN9DsrxiZjwTnH+m6/M/1NvLp1c66TvCS
zM9jC613kVWr+CULglXy51fPzd9HihVwlELwzlKwnVF8iJKOdjmULvKQW23o
nUmTx4hdKnfLk+Co5uryMdenqKZCtE2S4CMjQgEzO56h1MxOi7d/ifVeb2Sn
W5+jy2fqezYR7Dtt9mnyVApSPSbwrGCBhyL9eOYT8y+QSxAO3ETw+2DdkFHF
12idVk6axDwPFQi2yvM+vkFvA679PTfHQ42RvjnDJu+Qa+T388V/eGj8bsHw
gGs6Oh94v3bvLA8FR2mWTvp/QEeeJn0KmiHOrwuSmNzxEZn2JBS9n+ahx/tV
3o23ZiDSyf6DfZM8lBJ78c9Y0icUaCTOnZ4g8n8t3zl2KhN986sImx8n8tuc
6uTNZyGyd6ld7ygPdTqkSQ8r5qJuoVIh0yEeGkj+5zTUl4toPZodwoPEfXr2
fRz8+AWV8fZ1FfTz0LLTE3sHTPLRn20S3uReHlrtZRDU64pR1/yJKt1OHpL9
tt31gmwhsr23XPZlBw8xrgyTJ/wLkcSX/+LJP4h5/Gd8bHxHEbIOGNbG33hI
f2vn1GhrMapfc+3nOzYPGf668djTqAQFp0U1NzTxkHGItsloUgmyJ0/y9Tfw
0K6ykBjeqVLU88NecLGGh6xNV6uNzJeheGen9owSHrqy/4z9oGIVUmM8it/9
kYcWQ/TlOm5WoXIXRvPDNB4K/LyExfpThSJtdFI63vLQdXq8yRd2NfpEkxI2
fclD0T2lq2+E16LqspcisQk8lOSrMLya14DK7I3sBYJ4SKJl8gB5QyNKC7VJ
SbrKQwc8jmqEn2xEFvPJcZp+PPT12ao+v6ZGFCltHLvhAg99E8y3cXzbhP6m
7FmRfJKHuhr7jLROsJH88uF/HjuIfpy2kHt7n42yO3RUjmzlIRf+zCmVWjZq
XO8gq7OFh/r0rqXJbmpG8o5evlW6PDSUIKXEt/wrwpqtxz2ZPDR9cht/Q3kL
6hH/WPdqcQSJ/HlU5b7hG2Kp2G9oeTeCDMK5fnscviGNNNLx3NQR5CYlo772
3jeU4WQqFft8BJVr3Y3u+vMN8SZ1VFTjR9D10xEHj5Z9R76joiK9wSOIr827
fZdtOyoa1lyTeHgEXel4eVlix0+USLpzYsXMMLr7csf+wOM/kV1F+6260WH0
5mz3Op7PTyS1Xynh6sAw+ja/8nvtm59odu6idXH7MDKQfbIlgtqJpm63Ff4o
GUbT+2KX/vveiQ4W7Bl3jh5G54uv3Rzy6kK1V/i2lTKG0azEvfffo7pQ+XXl
gOtSwyjA4VV9dUoX0le/eNiIMoxu8jVRX7d0odATnX13/w2hV8bK950Nu5GE
HG38e+cQ+vml9MmPJT1oX47rzZ8pQ2jfJ5H0xpjfyJfhfKhWZQhtSIltykzr
R8b5Hx7+JQ2iFfGaM4VV/ejQnT/us0sH0XxUHaOuux99m1S8MjA7gCovCLn1
0AaQ90VHu8zuAeRocmVRKnwATXN2NnbkDaD7vxzVfE4MIsmuEO0EtwG0oKQd
uok6jPo33e4tyetHPRZujA6DUbTt9eyY5p4+FEcLk39mP4EK7Rrdr5v1oE1e
Oen8tdPo4qb8MpmsTlTS+mifx5o59OaEZACl8zvSurloLGv6F9mnfA5XfNaM
dv027NA8wgcbJZdr/AmtQr3rP++YHFoCr+lXfpZc/YyuLNzQyffjBz8P/46n
dbexkETfqUOqAuDgZiRL1i/A0+G2O55qCkBXVV7mqrsF+Pdio9KAvgBsLteV
oo4U4PKh3NZrJgIwMCLxwOYFxmGVUTve2goA531sd3tEIRYM1Fi59LYAWLfY
uTeMFmFB3iVO+oQAjM8IyPullWKBOoFdYv8JgvLgiZtn26sw6exjp/YSQegI
PhwUJlyNV5B1AtOrBYH2qyvlmk41VjG3zz3IEYRDrt6akjeq8fa6L2qPJwSB
7lV6+rN2DQ6u86CuVxWCOoVEw6FrtZivnsu1iBOCndq6S+OXNGDhc57TSolC
UPRVtPL+2gZMpQgtn0gRgqt/Cl+ft2zASha6ZnEZQtAmuOR6yeMGjOqjCzrq
hCD7ScDMb1ojDqg3SfZcJgxt9zJO5HxoxPP1793vnheGt4vq3TsamrBCk8Oj
7ZeFoXLs6ZtdP5vwNrZU9XSAMPTm8e80GGvCka1X1xy7KQzhmaTuHkkWlv1p
/ouZKgw7mr1oXlYsrD82fCSrTRhC12+9atrKwp7LN5hwdonAiaXmqfV1bHxP
6tf5SAsRuChv6JrUxsbZMg+SjKxEwPDarYP2g2y8SF/8m+QoArYltKdvhJvx
LZX6nFNXRWBmnnLdbVszfqN3bsN8hghUnvL5EprRjHuOpMkpKIgCz+171rrQ
r/il9d9iWxVR+DeY8/VnzFfsZmPm/khVFEqfCwpFPP6KB44OFMhuFAX/XO/Y
l5++4lG71SeX7xMF/mdTYiqdX/GCU2KacLAolLvst1HY1IKXe0abTPSIgrRh
Ff+S9hbc7Nk+pDUkCp9Zgpys3y34wXn1B57jouAz7e17dLQFy16o7hteFAWP
8BD5C/ytWOGSYHSfjBj4Sj/BnWtbsap/AKfdVAyoib6anzxb8daIc2cr34vB
YP+lxwqTrZiW0XEkOlMM3mtVCXoutOLJ7/u2HcoTg4TbHpvSlnHwSw0dmZ+V
YrAy4tfk6AoOJrXOFM50icHcScFPt3U5uGVV0Io1NBKIVXN/a3lycLrl+OKQ
EgkEHabjLX04OMLXqT9jDQkOfdpEPhrAwZvrdhQY65HA7r+NRno3OTjJW9Tt
8D4SaCmlfF6WysFnSmLzQsNI4Hxc4ogwl4O3Dy97ufcWCQyv+JmM/+BgBZlL
MRL3SPBh9+aZym4Objxt7fzkGQnUPB5nG41ysL6kvHhWPgmmDSFjiyAXixtF
//ErIUEy5QrvlhgX9zn/64JqErwt65qrpnLxo9zOnNpWElCmrgWK0bmYz+Gl
Y/c4CWo3K7m+3MDF3EgZ8zd/SPBqa46enQ4XZ2RGbPTkI4OeuUobnwEXOwuf
IS2QyeAZrvSZspWLq9M1Pi9fRwZdtczK7Qe4+P5ijojJCTLY0Da1089zMWlN
2bn7zmTwXW3n6+zNxdctm9i9Z8ggqy18NdGHi72S+p/cvEyGjMyaoh9Xudhi
G0275Q4ZPihUecXf4OKy06vj1saTQX3ZW3+7m1xsFKu94JdIBo/XiQsSt7lY
tXtPueJbMjD9nrqY3uNiwbArR0+VkiGlX4Yx/oSLr6aF47xqMrxcdlxcJ4mL
J1tiVShNZIgbOXzD6TkX/1rzbiSjnajnjiUt9iUX2+zLOSjQTZyn+V3v7isu
brxcmnNkgAzxzlqdgW+4GFe1BS9Mk4F24MOoehoX64/39Vr8JcNBkVSbgXQu
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {-0.4027593745047765, 0.9999999999999896}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6767264536371937`*^9, 3.676726497669099*^9, {3.676726544510659*^9, 
   3.676726575598905*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BesselJ", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"twoaList", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "/", 
     RowBox[{"twokList", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "thetaM"}], "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"BesselJ", "[", 
  RowBox[{"0", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"twoaList2", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "/", 
     RowBox[{"twokList", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], 
    RowBox[{"Cos", "[", 
     RowBox[{"2", "thetaM"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.676726160885207*^9, 3.676726190347083*^9}}],

Cell[BoxData["0.1410712873499662`"], "Output",
 CellChangeTimes->{{3.676726184575395*^9, 3.676726190775835*^9}, {
  3.676726228412985*^9, 3.676726259629932*^9}, {3.676726381960187*^9, 
  3.6767264234467793`*^9}, {3.676726499319434*^9, 3.676726575615922*^9}}],

Cell[BoxData["0.061955344524560745`"], "Output",
 CellChangeTimes->{{3.676726184575395*^9, 3.676726190775835*^9}, {
  3.676726228412985*^9, 3.676726259629932*^9}, {3.676726381960187*^9, 
  3.6767264234467793`*^9}, {3.676726499319434*^9, 3.676726575621914*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"widthNList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "twokList", ",", "twoaList", ",", 
   "twophiList", ",", "thetaM"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"widthNList", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", "twokList", ",", "twoaList2", ",", 
   "twophiList", ",", "thetaM"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676726122875746*^9, 3.676726152058272*^9}}],

Cell[BoxData["3.076074717451369`*^-7"], "Output",
 CellChangeTimes->{{3.676726141118169*^9, 3.676726152450699*^9}, {
  3.6767264008300047`*^9, 3.676726423487196*^9}, {3.676726533355744*^9, 
  3.676726575667506*^9}}],

Cell[BoxData["1.350943005362998`*^-7"], "Output",
 CellChangeTimes->{{3.676726141118169*^9, 3.676726152450699*^9}, {
  3.6767264008300047`*^9, 3.676726423487196*^9}, {3.676726533355744*^9, 
  3.676726575674797*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"destructionQOrder", "=", 
  RowBox[{"Part", "[", 
   RowBox[{
    RowBox[{"qValueOrderdList", "[", 
     RowBox[{
      RowBox[{"listNGenerator", "[", 
       RowBox[{"2", ",", "10"}], "]"}], ",", "twokList", ",", "twoaList", ",",
       "twophiList", ",", "thetamV"}], "]"}], ",", 
    RowBox[{"1", ";;", "10"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.6767233475624733`*^9, 3.6767233739803133`*^9}, {
  3.6767236228971567`*^9, 3.676723638975819*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], ",", "613.7013634293156`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], ",", "626.0931123122901`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", "841.1460275168804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", "849.5955104653171`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], ",", "1022.4802690549669`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], ",", "1053.606000228634`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], ",", "2675.0113099521077`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], ",", "2784.1397672678486`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "4049.1582875712274`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.676723653684641*^9, 3.676723764686057*^9, 3.676726423529456*^9, {
   3.676726561700673*^9, 3.676726575717515*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "0.`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "2"}], "}"}], "613.7013634293156`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}]}], "}"}], "626.0931123122901`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], "841.1460275168804`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1"}]}], "}"}], "849.5955104653171`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "3"}], "}"}], "1022.4802690549669`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "3"}]}], "}"}], "1053.606000228634`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", "4"}], "}"}], "2675.0113099521077`"},
    {
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "4"}]}], "}"}], "2784.1397672678486`"},
    {
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], "4049.1582875712274`"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.676723653684641*^9, 3.676723764686057*^9, 3.676726423529456*^9, {
   3.676726561700673*^9, 3.6767265757243967`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solTest", "=", 
  RowBox[{"solNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "}"}], ",", "twokList", ",", "twoaList",
     ",", "twophiList", ",", "thetaM", ",", "endpointTest"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.676723667114183*^9, 3.67672370547888*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"neumat`Private`psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T/P///////vP2uIeoNN
5hNB+QKpybP17z9wkoxxjbwkQYY0dbpN0+8/OuyQ0/XOLkHeKcXzcp3vP9KF
zBplVzRB0avQ2GhU7z9nMqGZb7I5QTOFPju77u4/xGSQ8fqxPkFHiLvWBHvu
PwEaqEtTDkJBOVwbk0Xn7T8I84geBLdEQcpRcwoFQO0/8w73XfUxR0Gq+n+N
nJDsP055TcR24klBHY09NMO96z+NJjGXOGVMQbgbNlYT5uo/NMUValXbTkEz
VB5egQHqPyVZ8TGBw1BBXeKHAv326D8icR7ldwJSQZBJBBeW7ec/V7C/qzZc
U0FX4GFCd7zmP0BoYfKir1RBctR5uyKA5T+bwUlvL+xVQYJVLrPuSuQ/LkKm
/4NDV0FwxA5jAO3iPzNkScb4g1hBaFTRXZWZ4T9wrWCgNd9ZQUZi7CjgHOA/
YW94+h80W0EhNSpLLzbdP8TS1ooqclxBhD3wUulS2j9fXaku/cpdQRTrSVtX
Htc/bInCCPAMX0FieBOzaBDUPxcXbjFIJGBBGP+CIf8E0T8U/TRofM9gQeys
rSyvVss/yjMfukBvYUGFzLkTggPFPxx+wxVpHGJBpDFSHLwyvD/IBGgxaMZi
Qa6a4TNJFK0/LdwvaPdkY0GAqemOii98Py7HsajqEGRBmdBQHPEyqL/oAlcE
brFkQVDHyB/mAbm//Hr8H8hOZUH/4/BDtszCv6wGXEWG+WVBLi3g1COUyb8V
496F1JhmQb38OwZX1s+/GtMb0IZFZ0FAu//89UPTv9gTfDXJ5mdB+svEieFW
1r/wkNxa4oRoQRf7If0RTNm/pCH3iV8waUGI+uDILW/cvxEDNdRs0GlBJTdD
SZxJ378a+Cwo3n1qQZpljicQJeG/fSklPCYoa0GlXZnmk5Hiv5mrQGv+xmtB
qoD2IE/Z479RQRakOnNsQfZcyq9ELuW/wicP+AYUbUGibPV3NF7mv41KCAyq
sW1Bmgop9ep557/0gLspsVxuQXI5G4jynOi/FAiSYkj8bkFXkT2SDJzpv9Ci
IqVDqW9BfvEzmNGd6r/zvNnTiilwQWDLnuo1h+u/29Cz4rt4cEFvwN8Lvk7s
v5HuavaeznBBUyvPsLoS7b+jtLMXyh5xQeXc8IoEtu2/g4TZPad1cUHup6Jp
DlHuv5By/8PvynFBfrUnVKnS7r/6CLdXgBpyQZPyd5YMN++/MqlL8MJwckFx
hjL0M43vv8bxcZZNwXJBdP5g0x3I77+ChpP6zxJzQWJGAHls7u+/nIzjyQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.*^7}, {-0.9978544581701494, 
                    0.9999999999999946}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T/P///////vP2uIeoNN
5hNB+QKpybP17z9wkoxxjbwkQYY0dbpN0+8/OuyQ0/XOLkHeKcXzcp3vP9KF
zBplVzRB0avQ2GhU7z9nMqGZb7I5QTOFPju77u4/xGSQ8fqxPkFHiLvWBHvu
PwEaqEtTDkJBOVwbk0Xn7T8I84geBLdEQcpRcwoFQO0/8w73XfUxR0Gq+n+N
nJDsP055TcR24klBHY09NMO96z+NJjGXOGVMQbgbNlYT5uo/NMUValXbTkEz
VB5egQHqPyVZ8TGBw1BBXeKHAv326D8icR7ldwJSQZBJBBeW7ec/V7C/qzZc
U0FX4GFCd7zmP0BoYfKir1RBctR5uyKA5T+bwUlvL+xVQYJVLrPuSuQ/LkKm
/4NDV0FwxA5jAO3iPzNkScb4g1hBaFTRXZWZ4T9wrWCgNd9ZQUZi7CjgHOA/
YW94+h80W0EhNSpLLzbdP8TS1ooqclxBhD3wUulS2j9fXaku/cpdQRTrSVtX
Htc/bInCCPAMX0FieBOzaBDUPxcXbjFIJGBBGP+CIf8E0T8U/TRofM9gQeys
rSyvVss/yjMfukBvYUGFzLkTggPFPxx+wxVpHGJBpDFSHLwyvD/IBGgxaMZi
Qa6a4TNJFK0/LdwvaPdkY0GAqemOii98Py7HsajqEGRBmdBQHPEyqL/oAlcE
brFkQVDHyB/mAbm//Hr8H8hOZUH/4/BDtszCv6wGXEWG+WVBLi3g1COUyb8V
496F1JhmQb38OwZX1s+/GtMb0IZFZ0FAu//89UPTv9gTfDXJ5mdB+svEieFW
1r/wkNxa4oRoQRf7If0RTNm/pCH3iV8waUGI+uDILW/cvxEDNdRs0GlBJTdD
SZxJ378a+Cwo3n1qQZpljicQJeG/fSklPCYoa0GlXZnmk5Hiv5mrQGv+xmtB
qoD2IE/Z479RQRakOnNsQfZcyq9ELuW/wicP+AYUbUGibPV3NF7mv41KCAyq
sW1Bmgop9ep557/0gLspsVxuQXI5G4jynOi/FAiSYkj8bkFXkT2SDJzpv9Ci
IqVDqW9BfvEzmNGd6r/zvNnTiilwQWDLnuo1h+u/29Cz4rt4cEFvwN8Lvk7s
v5HuavaeznBBUyvPsLoS7b+jtLMXyh5xQeXc8IoEtu2/g4TZPad1cUHup6Jp
DlHuv5By/8PvynFBfrUnVKnS7r/6CLdXgBpyQZPyd5YMN++/MqlL8MJwckFx
hjL0M43vv8bxcZZNwXJBdP5g0x3I77+ChpP6zxJzQWJGAHls7u+/nIzjyQ==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.*^7}, {-0.9978544581701494, 
                    0.9999999999999946}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 7\nInterpolatingFunction[{{0., 2. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"neumat`Private`psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T8AcBarov1rvmuIeoNN
5hNBNd+Iu+ipqb9wkoxxjbwkQak9rt6gtLq/OuyQ0/XOLkFRgyGadMvDv9KF
zBplVzRBSp8D7JkPyr9nMqGZb7I5Qc6BluxzZNC/xGSQ8fqxPkEtD7eBsHzT
vwEaqEtTDkJBCFIlxeXI1r8I84geBLdEQSDnabLP9Nm/8w73XfUxR0GbqxUo
ANncv055TcR24klB2Qid3LXm37+NJjGXOGVMQWc6NbJuVeG/NMUValXbTkHU
AKEIhKXivyVZ8TGBw1BBOuLGDNoE5L8icR7ldwJSQY+C89RNP+W/V7C/qzZc
U0EQ5wxrooTmv0BoYfKir1RBS/aGDWaz57+bwUlvL+xVQewSkV8nvui/LkKm
/4NDV0EarM0Sqs3pvzNkScb4g1hBpaXjQK256r9wrWCgNd9ZQREm65a6peu/
YW94+h80W0GWMU+A5Xjsv8TS1ooqclxBm6gz2/cq7b9fXaku/cpdQdvUTona
1u2/bInCCPAMX0EG/kijBWPuvxcXbjFIJGBBmM0aRAXZ7r8U/TRofM9gQV6j
62f3Qu+/yjMfukBvYUHHezqV2ZDvvxx+wxVpHGJBEtdvtyXO77/IBGgxaMZi
Qf7ZkMXG8u+/LdwvaPdkY0HNfLf8zP/vvy7HsajqEGRB4cu6Btj277/oAlcE
brFkQcKvBynR2O+//Hr8H8hOZUEpem5BKKfvv6wGXEWG+WVBoNAv/sNa778V
496F1JhmQWknB9CL/u6/GtMb0IZFZ0GHDLFsB4Tuv9gTfDXJ5mdBwWPvWL78
7b/wkNxa4oRoQdXlP1HjZO2/pCH3iV8waUFduEi0FqvsvxEDNdRs0GlBv8rt
hFnq678a+Cwo3n1qQZ6jhc4BBeu/fSklPCYoa0FE4FiNwA/qv5mrQGv+xmtB
q/6Qf6kZ6b9RQRakOnNsQaBqsD+r/Oe/wicP+AYUbUHT1YUVRuLmv41KCAyq
sW1BaT1y4te+5b/0gLspsVxuQbQTjG0nc+S/FAiSYkj8bkHYF8Bz7i/jv9Ci
IqVDqW9Bgh8kh5fD4b/zvNnTiilwQWX3Y2bGUOC/29Cz4rt4cEHu6BD3TNjd
v5HuavaeznBBUluUXEy92r+jtLMXyh5xQWXJ24YZxde/g4TZPad1cUHFHVsT
+XvUv5By/8PvynFBLWTH6Noy0b/6CLdXgBpyQaqrmmBCLcy/MqlL8MJwckE4
JhzHdlrFv8bxcZZNwXJByGQ9lZbZvb+ChpP6zxJzQSjceOK3wrC/BiT+BA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.*^7}, {-0.9999756751893983, 
                    0.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T8AcBarov1rvmuIeoNN
5hNBNd+Iu+ipqb9wkoxxjbwkQak9rt6gtLq/OuyQ0/XOLkFRgyGadMvDv9KF
zBplVzRBSp8D7JkPyr9nMqGZb7I5Qc6BluxzZNC/xGSQ8fqxPkEtD7eBsHzT
vwEaqEtTDkJBCFIlxeXI1r8I84geBLdEQSDnabLP9Nm/8w73XfUxR0GbqxUo
ANncv055TcR24klB2Qid3LXm37+NJjGXOGVMQWc6NbJuVeG/NMUValXbTkHU
AKEIhKXivyVZ8TGBw1BBOuLGDNoE5L8icR7ldwJSQY+C89RNP+W/V7C/qzZc
U0EQ5wxrooTmv0BoYfKir1RBS/aGDWaz57+bwUlvL+xVQewSkV8nvui/LkKm
/4NDV0EarM0Sqs3pvzNkScb4g1hBpaXjQK256r9wrWCgNd9ZQREm65a6peu/
YW94+h80W0GWMU+A5Xjsv8TS1ooqclxBm6gz2/cq7b9fXaku/cpdQdvUTona
1u2/bInCCPAMX0EG/kijBWPuvxcXbjFIJGBBmM0aRAXZ7r8U/TRofM9gQV6j
62f3Qu+/yjMfukBvYUHHezqV2ZDvvxx+wxVpHGJBEtdvtyXO77/IBGgxaMZi
Qf7ZkMXG8u+/LdwvaPdkY0HNfLf8zP/vvy7HsajqEGRB4cu6Btj277/oAlcE
brFkQcKvBynR2O+//Hr8H8hOZUEpem5BKKfvv6wGXEWG+WVBoNAv/sNa778V
496F1JhmQWknB9CL/u6/GtMb0IZFZ0GHDLFsB4Tuv9gTfDXJ5mdBwWPvWL78
7b/wkNxa4oRoQdXlP1HjZO2/pCH3iV8waUFduEi0FqvsvxEDNdRs0GlBv8rt
hFnq678a+Cwo3n1qQZ6jhc4BBeu/fSklPCYoa0FE4FiNwA/qv5mrQGv+xmtB
q/6Qf6kZ6b9RQRakOnNsQaBqsD+r/Oe/wicP+AYUbUHT1YUVRuLmv41KCAyq
sW1BaT1y4te+5b/0gLspsVxuQbQTjG0nc+S/FAiSYkj8bkHYF8Bz7i/jv9Ci
IqVDqW9Bgh8kh5fD4b/zvNnTiilwQWX3Y2bGUOC/29Cz4rt4cEHu6BD3TNjd
v5HuavaeznBBUluUXEy92r+jtLMXyh5xQWXJ24YZxde/g4TZPad1cUHFHVsT
+XvUv5By/8PvynFBLWTH6Noy0b/6CLdXgBpyQaqrmmBCLcy/MqlL8MJwckE4
JhzHdlrFv8bxcZZNwXJByGQ9lZbZvb+ChpP6zxJzQSjceOK3wrC/BiT+BA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, 
                    PlotRange -> {{0., 2.*^7}, {-0.9999756751893983, 0.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 7\nInterpolatingFunction[{{0., 2. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.676723706904151*^9, 3.676723765770646*^9, 3.676723828458527*^9, 
   3.6767259604225473`*^9, 3.676726423588204*^9, {3.6767265617785807`*^9, 
   3.6767265757777853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solTest2", "=", 
  RowBox[{"solNList", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "}"}], ",", "twokList", ",", 
    "twoaList2", ",", "twophiList", ",", "thetaM", ",", "endpointTest"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.676725901595024*^9, 3.676725957170333*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"neumat`Private`psi1", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T/3///////vP2uIeoNN
5hNBv+JJbwP+7z9wkoxxjbwkQeYTCWlf9+8/OuyQ0/XOLkFOhavu9ezvP9KF
zBplVzRBo0rdb8/e7z9nMqGZb7I5QRY/EtcNy+8/xGSQ8fqxPkHyN5o+fbTv
PwEaqEtTDkJBuXmproyX7z8I84geBLdEQQkLRCOddu8/8w73XfUxR0EHpLEz
3lPvP055TcR24klBfLtdONIp7z+NJjGXOGVMQd0zTlN8/u4/NMUValXbTkGQ
Lo1lMtDuPyVZ8TGBw1BBnkWLnryZ7j8icR7ldwJSQSreoZj4Yu4/V7C/qzZc
U0FIbnPFVCPuP0BoYfKir1RBQUtKIJDg7T+bwUlvL+xVQQ/MJIZ+nu0/LkKm
/4NDV0HYqQ/uuVLtPzNkScb4g1hBJNyF1y8I7T9wrWCgNd9ZQbAycpVMs+w/
YW94+h80W0ELZRV51VvsP8TS1ooqclxBAjKRO5gG7D9fXaku/cpdQcPhSHpB
pus/bInCCPAMX0FugtJcrEjrPxcXbjFIJGBBMCP/PpHp6j8U/TRofM9gQYi0
e+Stfuo/yjMfukBvYUFZGC8vfxfqPxx+wxVpHGJBPJ970Puj6T/IBGgxaMZi
Qej1ma7qLuk/LdwvaPdkY0E53JEOg77oPy7HsajqEGRBd+MslCtB6D/oAlcE
brFkQQR8fgP+yOc//Hr8H8hOZUGFL1tsRFDnP6wGXEWG+WVB3J+bohLK5j8V
496F1JhmQaIzNWTuSeY/GtMb0IZFZ0GUx4d547vlP9gTfDXJ5mdBEdCwMGI0
5T/wkNxa4oRoQVV/E63prOQ/pCH3iV8waUEcbkHUGxfkPxEDNdRs0GlBDnMG
u66I4z8a+Cwo3n1qQV34/sCS6+I/fSklPCYoa0EXY008nU7iP5mrQGv+xmtB
7GArLdq54T9RQRakOnNsQWOUvaYTFuE/wicP+AYUbUETGj7Y7nrgP41KCAyq
sW1B8BTUXJ/B3z/0gLspsVxuQT4pjNvTbt4/FAiSYkj8bkG14wTiwC7dP9Ci
IqVDqW9BaiLWdbfP2z/zvNnTiilwQUxfMk4gc9o/29Cz4rt4cEGk+vXDoyrZ
P5HuavaeznBBYSqqCuTC1z+jtLMXyh5xQVavpSn+b9Y/g4TZPad1cUHiHod2
m/3UP5By/8PvynFBq0eiWPCO0z/6CLdXgBpyQVfxSb1WNtI/MqlL8MJwckFo
2TDJMb7QP8bxcZZNwXJB4+6R5o65zj+ChpP6zxJzQe7qMmpC6ss/LiXY5w==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.14}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.*^7}, {0.21808653054707555`, 
                    0.999999999999999}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T/3///////vP2uIeoNN
5hNBv+JJbwP+7z9wkoxxjbwkQeYTCWlf9+8/OuyQ0/XOLkFOhavu9ezvP9KF
zBplVzRBo0rdb8/e7z9nMqGZb7I5QRY/EtcNy+8/xGSQ8fqxPkHyN5o+fbTv
PwEaqEtTDkJBuXmproyX7z8I84geBLdEQQkLRCOddu8/8w73XfUxR0EHpLEz
3lPvP055TcR24klBfLtdONIp7z+NJjGXOGVMQd0zTlN8/u4/NMUValXbTkGQ
Lo1lMtDuPyVZ8TGBw1BBnkWLnryZ7j8icR7ldwJSQSreoZj4Yu4/V7C/qzZc
U0FIbnPFVCPuP0BoYfKir1RBQUtKIJDg7T+bwUlvL+xVQQ/MJIZ+nu0/LkKm
/4NDV0HYqQ/uuVLtPzNkScb4g1hBJNyF1y8I7T9wrWCgNd9ZQbAycpVMs+w/
YW94+h80W0ELZRV51VvsP8TS1ooqclxBAjKRO5gG7D9fXaku/cpdQcPhSHpB
pus/bInCCPAMX0FugtJcrEjrPxcXbjFIJGBBMCP/PpHp6j8U/TRofM9gQYi0
e+Stfuo/yjMfukBvYUFZGC8vfxfqPxx+wxVpHGJBPJ970Puj6T/IBGgxaMZi
Qej1ma7qLuk/LdwvaPdkY0E53JEOg77oPy7HsajqEGRBd+MslCtB6D/oAlcE
brFkQQR8fgP+yOc//Hr8H8hOZUGFL1tsRFDnP6wGXEWG+WVB3J+bohLK5j8V
496F1JhmQaIzNWTuSeY/GtMb0IZFZ0GUx4d547vlP9gTfDXJ5mdBEdCwMGI0
5T/wkNxa4oRoQVV/E63prOQ/pCH3iV8waUEcbkHUGxfkPxEDNdRs0GlBDnMG
u66I4z8a+Cwo3n1qQV34/sCS6+I/fSklPCYoa0EXY008nU7iP5mrQGv+xmtB
7GArLdq54T9RQRakOnNsQWOUvaYTFuE/wicP+AYUbUETGj7Y7nrgP41KCAyq
sW1B8BTUXJ/B3z/0gLspsVxuQT4pjNvTbt4/FAiSYkj8bkG14wTiwC7dP9Ci
IqVDqW9BaiLWdbfP2z/zvNnTiilwQUxfMk4gc9o/29Cz4rt4cEGk+vXDoyrZ
P5HuavaeznBBYSqqCuTC1z+jtLMXyh5xQVavpSn+b9Y/g4TZPad1cUHiHod2
m/3UP5By/8PvynFBq0eiWPCO0z/6CLdXgBpyQVfxSb1WNtI/MqlL8MJwckFo
2TDJMb7QP8bxcZZNwXJB4+6R5o65zj+ChpP6zxJzQe7qMmpC6ss/LiXY5w==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0.14}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.*^7}, {0.21808653054707555`, 
                    0.999999999999999}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 7\nInterpolatingFunction[{{0., 2. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"neumat`Private`psi2", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T8AAOL++JVYvmuIeoNN
5hNB+g784KmMlr9wkoxxjbwkQYmU3M3Rfae/OuyQ0/XOLkG0RE5Tf3Gxv9KF
zBplVzRB7JOp4VIFt79nMqGZb7I5Qbygms/2Dr2/xGSQ8fqxPkH4k8DI2VbB
vwEaqEtTDkJBgTC4Y/tfxL8I84geBLdEQcjSO5EGWMe/8w73XfUxR0EJw+be
AhrKv055TcR24klBSVM9n+YTzb+NJjGXOGVMQS8Byahd18+/NMUValXbTkHP
exTCgETRvyVZ8TGBw1BBSq01QEG40r8icR7ldwJSQQMQ3xu4ENS/V7C/qzZc
U0G4tR3cRoPVv0BoYfKir1RBANxHCf/r1r+bwUlvL+xVQfL+as1+Odi/LkKm
/4NDV0F/TaLO15/ZvzNkScb4g1hBeaFMrfvq2r9wrWCgNd9ZQf55I/v4Tdy/
YW94+h80W0GdxSATb6bdv8TS1ooqclxBfnWyxvrj3r9fXaku/cpdQaIz7833
G+C/bInCCPAMX0EjpAs9jrjgvxcXbjFIJGBBuml1UAJQ4b8U/TRofM9gQeXf
Gx7s8eG/yjMfukBvYUGvxj4Dsobivxx+wxVpHGJBLnu6zVEl47/IBGgxaMZi
QaEL511QvuO/LdwvaPdkY0HvbOmGf0rkvy7HsajqEGRBW3OrjrHf5L/oAlcE
brFkQczwHsQ8aOW//Hr8H8hOZUE329hreOvlv6wGXEWG+WVB/pqQ8Nx25r8V
496F1JhmQTr2ZgkH9ua/GtMb0IZFZ0FP3l4ep3znv9gTfDXJ5mdBOtRmyUP3
57/wkNxa4oRoQSZN7bqCbOi/pCH3iV8waUE8mC00TujovxEDNdRs0GlBJ+zc
rptY6b8a+Cwo3n1qQcRPuzO2zum/fSklPCYoa0FRb3GH9j7qv5mrQGv+xmtB
JpMMBVGk6r9RQRakOnNsQcvGIyJ+Duu/wicP+AYUbUH1NyveEW7rv41KCAyq
sW1BsXH3x2TI67/0gLspsVxuQUaluWeQJuy/FAiSYkj8bkHztlwtzXrsv9Ci
IqVDqW9BAjJ48RfS7L/zvNnTiilwQed0jOitI+2/29Cz4rt4cEGCIwtFD2zt
v5HuavaeznBBuYbU7Hi27b+jtLMXyh5xQd0DLr8O+O2/g4TZPad1cUFepAwI
3Druv5By/8PvynFB7Q7+Yxh47r/6CLdXgBpyQdf0cy5Pre6/MqlL8MJwckH9
mtnps+Luv8bxcZZNwXJBHOvFU34Q77+ChpP6zxJzQTd+DVXQOu+/EhL5NA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, PlotRange -> {{0., 2.*^7}, {-0.9759294186769186, 
                    0.}}, PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{}, {}, {
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0HBS9+Wx1T8AAOL++JVYvmuIeoNN
5hNB+g784KmMlr9wkoxxjbwkQYmU3M3Rfae/OuyQ0/XOLkG0RE5Tf3Gxv9KF
zBplVzRB7JOp4VIFt79nMqGZb7I5Qbygms/2Dr2/xGSQ8fqxPkH4k8DI2VbB
vwEaqEtTDkJBgTC4Y/tfxL8I84geBLdEQcjSO5EGWMe/8w73XfUxR0EJw+be
AhrKv055TcR24klBSVM9n+YTzb+NJjGXOGVMQS8Byahd18+/NMUValXbTkHP
exTCgETRvyVZ8TGBw1BBSq01QEG40r8icR7ldwJSQQMQ3xu4ENS/V7C/qzZc
U0G4tR3cRoPVv0BoYfKir1RBANxHCf/r1r+bwUlvL+xVQfL+as1+Odi/LkKm
/4NDV0F/TaLO15/ZvzNkScb4g1hBeaFMrfvq2r9wrWCgNd9ZQf55I/v4Tdy/
YW94+h80W0GdxSATb6bdv8TS1ooqclxBfnWyxvrj3r9fXaku/cpdQaIz7833
G+C/bInCCPAMX0EjpAs9jrjgvxcXbjFIJGBBuml1UAJQ4b8U/TRofM9gQeXf
Gx7s8eG/yjMfukBvYUGvxj4Dsobivxx+wxVpHGJBLnu6zVEl47/IBGgxaMZi
QaEL511QvuO/LdwvaPdkY0HvbOmGf0rkvy7HsajqEGRBW3OrjrHf5L/oAlcE
brFkQczwHsQ8aOW//Hr8H8hOZUE329hreOvlv6wGXEWG+WVB/pqQ8Nx25r8V
496F1JhmQTr2ZgkH9ua/GtMb0IZFZ0FP3l4ep3znv9gTfDXJ5mdBOtRmyUP3
57/wkNxa4oRoQSZN7bqCbOi/pCH3iV8waUE8mC00TujovxEDNdRs0GlBJ+zc
rptY6b8a+Cwo3n1qQcRPuzO2zum/fSklPCYoa0FRb3GH9j7qv5mrQGv+xmtB
JpMMBVGk6r9RQRakOnNsQcvGIyJ+Duu/wicP+AYUbUH1NyveEW7rv41KCAyq
sW1BsXH3x2TI67/0gLspsVxuQUaluWeQJuy/FAiSYkj8bkHztlwtzXrsv9Ci
IqVDqW9BAjJ48RfS7L/zvNnTiilwQed0jOitI+2/29Cz4rt4cEGCIwtFD2zt
v5HuavaeznBBuYbU7Hi27b+jtLMXyh5xQd0DLr8O+O2/g4TZPad1cUFepAwI
3Druv5By/8PvynFB7Q7+Yxh47r/6CLdXgBpyQdf0cy5Pre6/MqlL8MJwckH9
mtnps+Luv8bxcZZNwXJBHOvFU34Q77+ChpP6zxJzQTd+DVXQOu+/EhL5NA==

                    "]]}}}, {
                   DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> 
                    None}, 
                    PlotRange -> {{0., 2.*^7}, {-0.9759294186769186, 0.}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2.`*^7"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->(
        "                                 7\nInterpolatingFunction[{{0., 2. \
10 }}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6767259440487633`*^9, 3.67672596115352*^9}, 
   3.676726423650498*^9, {3.676726562419469*^9, 3.6767265758439198`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"solTestList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "solTest"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointTest", ",", 
       RowBox[{"endpointTest", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solTestList2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"neumat`Private`psi2", "[", "x", "]"}], "]"}], "^", "2"}], "/.", 
        RowBox[{"First", "@", "solTest2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointTest", ",", 
       RowBox[{"endpointTest", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theoryTestList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probTheory", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", "twokList", ",", "twoaList", 
         ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointTest", ",", 
       RowBox[{"endpointTest", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theoryTestList2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"probTheory", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", "twokList", ",", "twoaList2", 
         ",", "x"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "endpointTest", ",", 
       RowBox[{"endpointTest", "/", "1000"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.676723713405086*^9, 3.6767238166651497`*^9}, {
  3.676725452326331*^9, 3.676725469180147*^9}, {3.676725739718267*^9, 
  3.676725740017803*^9}, {3.676725946771009*^9, 3.676725953292143*^9}, {
  3.676726588133123*^9, 3.676726593810961*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "solTestList", ",", "solTestList2", ",", "theoryTestList", ",", 
     "theoryTestList2"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*OverscriptBox[\(x\), \(^\)]\)\>\"", ",", 
      "\"\<Transition Probability\>\""}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Purple", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}], ",", "Blue"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Dashing", "[", 
         RowBox[{"{", 
          RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", 
           RowBox[{"{", 
            RowBox[{"0.03", ",", "0.03"}], "}"}], "]"}], ",", "Orange"}], 
         "}"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Numerical 10 mode (Para 1)\>\"", ",", 
        "\"\<Numerical 10 mode (Para 2)\>\"", ",", "\"\<Theory (Para 1)\>\"", 
        ",", "\"\<Theory (Para 2)\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Above"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"Inset", "[", 
     RowBox[{
      RowBox[{"\"\<Para 1: \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"twoaList", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "<>", 
       "\"\<\\n Para 2: \!\(\*SubscriptBox[\(A\), \(2\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"twoaList2", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "<>", 
       "\"\<\\n Both with \!\(\*SubscriptBox[\(A\), \(1\)]\)=\>\"", "<>", 
       RowBox[{"ToString", "@", 
        RowBox[{"twoaList", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "<>", 
       "\"\<\\n and {\!\(\*SubscriptBox[\(k\), \
\(1\)]\),\!\(\*SubscriptBox[\(k\), \(2\)]\)}=\>\"", "<>", 
       RowBox[{"ToString", "@", "twokList"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Test of Numerical and Analytical Results for Modes\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", "Black"}], ",", 
   RowBox[{"FrameTicksStyle", "\[Rule]", "Larger"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"FontSize", "\[Rule]", "15"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676723803551862*^9, 3.676723886211309*^9}, {
  3.676724512816516*^9, 3.676724626972706*^9}, {3.6767250157662697`*^9, 
  3.676725030505439*^9}, {3.676725081234317*^9, 3.676725084912159*^9}, {
  3.676725206919785*^9, 3.676725212545982*^9}, {3.67672546526368*^9, 
  3.676725559849888*^9}, {3.676725971908511*^9, 3.676725972826097*^9}, {
  3.676726607474382*^9, 3.676726630802236*^9}, {3.6767266728364964`*^9, 
  3.676726724672964*^9}, {3.676726758695435*^9, 3.676726789515656*^9}, {
  3.6767268593656807`*^9, 3.6767268733378477`*^9}, {3.676726956404684*^9, 
  3.67672701017236*^9}, {3.676727056775423*^9, 3.67672711971631*^9}, {
  3.676727160673682*^9, 3.676727163456465*^9}, {3.6767271945255613`*^9, 
  3.676727287658593*^9}, {3.6767273701531277`*^9, 3.6767274200644417`*^9}, {
  3.6767274531338387`*^9, 3.67672747151656*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {{}, {}, 
         {RGBColor[1, 0, 0], PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1:eJxt22lcTV/UB/BkKEqKEJEkcxEqRdKvWYPmebrVrW7zvbcQpX+oJElSZEpI
ChGFUCqRSlGkQVEIoRRCpDw91nnePd74fD/Hufucvffayzlnr7kewZZeggIC
Ah9GCwj879//75+4p1ouCTnjBpreaJLfaM1P1/77qWn0+n826dGaEeIf8cRy
Gjnum9aKCTlZt5rmkf0GtPzDFwi3Cixn/v2QVt+9h4O2lqrk6aOw1kThcZy7
JnP+aFTb6Eb9bNQh/xoL+6Ir629Kb2B+TxgGD21S/gxvJLdOgE5jEc+h1JL5
/YlYrX11jLe5Lbl4EuZIFSkcW+7ItCeByMLlZr0urv8cZTYZLb9zxl4MdGfa
nwLTJbkyb5960vFSSVS/9P173N2buZ6pOJdQZlk7zZeOr5gO/pZC9+Bv/sz1
SeGJVNSUiJ9BdPz0DGROKvuxSYLHXO9MeAte39N6i0/Hp8xCZvqJMx+3hDLX
PxuBw5n96Yab6Xi0DGYZL/vzTSGMuZ850C1sEn4rv+2fS7fJ4nb1TrVApQjm
/uZi8yensN1mkf+slT8XK+fxtKcjirlfOaT8/hm6jL2Dzv8kh/dr3HeMO7CT
uf95CM0Ytf34g110vrw8RGOL2T1CMUx/yCNQUEjmh0Usne88H9vErmzOP7ub
6Z/5UOzeJi83eg+dn7oA79ZNva/pF8/010IY6Cx8ObZ1L51fuxDn1lq/CLHZ
x/TfIkz4rCUV05JI549bDNMLJu+Orkpi+nMxXmiIiOMvuVRzCQyWaYvnPz7A
9O8SHJDofPU5M5nO37IUIku+hXyNPMj0twJeZUTn3HZJofMvK2B7TbmDIVKZ
/lfElfjvZocWH6LzuxRxIDfc+My0w8x4LMPC8Oa/AcJpdL7scmjKHpD8MpzG
jM9ySPbJLlD8feSfMxSUIFH74b7M76PMeClBb8vhreXDx/65o1IJahLzbksJ
n2DGbwXkhJoGpKel/7Os1wpEC1ulVi86yYznCiycUPlNXDbjn1mjViLPmH9i
0qUMZnxXom5j9Hs3zVPU/omVyJ4wMUCg/hQz3isRlWxe0ut1mtpXX4U/G6qD
FYZOM+O/Cpvklo+7dugMtd+4CumvgsfGrcxk5oMy3Hi3P56pI7P4ynivtkNR
iHeWmR/K+B4Zsj5vSha1L6aCxWG7Ek4UZjHzRQVLK46E17qdo/bPqyBxdmyQ
5vhsZv6ooG5CWNnnArKsgSoOLxF42OaRw8wnVay8Pblt3JTz1P4bVcxcPUHL
//55Zn6txuaBHA3hbReo/f9W49xb2cltSheZ+bYalQtEBzs/kDuk1aDfuVVh
7tlcZv6pwVOs+1mixyVqv1ANlYpOcxXkLjPzUR1y69RX/XxDZlmr46nemqk/
rfKY+akON+t1SUI3yBl96tC7eEJSQfoKM1/X4EFlao5nFLkjYQ1+SWRa5b67
wszfNfgTOXGq8Mar1P7itTCubO3hX7/KzOe16KkIau2ek0/t31+LO3nhzaHx
+cz81sD3C2Ivxv8gZ7hrYJRPwsvzHgXMfNfA1YL8x7Z15I4hDbxROJkhuv4a
M//Xwbe+QvPhJbLs0XVg3RiVemDOdSYe1uFzwe69rgfILFVNmE/5JrRizA0m
PjShrafdIxRGzniiiY5TLdKvu28w8bIej+bF8O54FFL7QetxV2Fb1bGWQiZ+
1oNn6vAnzOLmPyeN1UKs+IoO6+qbTDxpYdP1RRuW6d765zwrLQjeOzR+TMkt
Jr608Nrd7kvDmtv/XHdKC9lSlbUnb9xm4k0L93KqfD1Viv65r1cLj7vL9skU
FDHxB0hfOfH38arifxbXBCzPPNm5uaCYiUcgeLV7s7jqnX9WSgA6DjXeOVF4
h4lPoDV541dpjZJ/Nn8OfD66SSG+tISJV210OOklf5Mr/WfuIm0I3c97IOVd
ysSvNr4uuDqpIIectFkbv/uM7t7rKWXiWRunP2xQNVpZRvd/TxtXNfaX6mwp
Y+JbG8dNW6/mFZHrJutAr4vlniR4l4l3HYyXPjbntSG5j6UDqZ+v15/df5eJ
fx3UHuFOaWkki1/WwbfVzh8jZMqZ9UAHE5aenJLkTVYa0sEmgakvJC6XM+uD
LvLjIw6OGiCbG+sisj9spyvuMeuFLr48S+5fuJfMPaKLk8bqq1ye3WPWD10c
mlQeOzTnPt3/e11sTglWFfa/z6wnevCU48RFXCfnqehB4EdpmYNgBbO+6MHF
fduCkxvJdbv00Px5xy/jYxXMeqOHvzH5EW5d5L56PfgmP+9rVnnArD96CFXI
T72xiywuq4+Zup9yftc/YNYjfZyuned/SraS7j9IH+59X6ZeCK5k1id9WK3u
eDuthGxepI+n5cFTO8WqmPVKH4t2zngp4UbmTjCALMss7OTlKmb9MkBazHbp
BIFqun97A4zaLzLcaFHNrGcGaKlysfnvDDkvywDSIY020d+rmfXNAAU/G1e+
NXhI999vgGbVMplTRx8y650hbh57bnSjh9ynbYhv2p3vF6CGWf8Msajk78Le
FLL4AUPMEMjSmPShhlkPDbFyIcc2dl0t3X+7IYbu9mVaJdcy6+MG2IqOtdv8
nmyuuAFh82OP9mg8YtbLDchw5B8vTCZzw0fMfhfX2PWIWT83QCJXZq/++sd0
/1Ub4J4SVit06DGznm7A7pshW2f0kPOmG6HqVIvTOrk6Zn01Quihv3ZTN5Lr
vIywrPK0ruS2Oma9NULfYG2Beha5L98Ih2xl18Y8qWPWXyMMjH3k+2OYLC5o
jJ8fM54kLK1n1mNj+Ov+GmdoT1YyN0aH46PDC2PqmfXZGMaKl6cuvUo2TzdG
rEy5uGV7PbNeG6PuTLXUcdEndP/dxhDun1MsvOYJs36boPXGjYTDPuSkNSZo
vzV3mmHqE2Y9NwHvxJ73M8rJeXEmOLj7RqLolyfM+m6CpDbxI3PmPKX7bzRB
Sm/aQUvTp8x6bwLpm18mnA0n98mbwnif895p558y678pZjy9lZHVTBYPMUXV
4uhGa6EGJh+Y4tLLJYWyqmSlMlPsW+HyZLxXA5MfTGH1K/fKpBSy+aSNcN3m
8npFeQOTLzYidapjX/BXMtdlI4wGtHyq5j5j8sdG1Na4PllnQU66sBEt/nlF
NVHPmHyyEdcT3+RtyiPn/doIyZ126modz5j8YobiltkdU8Qb6f4NzPBXfnCZ
sFYjk2/M8OyMz2VJLrkv1Qwtf/Z/VMtoZPKPGfq/2fiG1pHFO81QN9eioEKg
iclH5ph28bHV8hVkqRnmcBtufJzr3sTkJ3N82yWfh2TyIi1z6Hosi/h4t4nJ
V+ZQUpa/fe4bWc3HHGMrer+FyTcz+csc656o5LrYkA0TzSFeYhtoE9vM5DNz
3HQOvuV2g2x/zRw7Mh1mRnQ1M/nNHHFhuZPPz2j5Z06bOTzZZYs+GLUw+c4c
bNcLr9QiyGGjLZC3B3fTcluY/GcB6V8zzYTbyXFLLFDKTxLdLf6cyYcWcFIu
jpTUJqdZWIBb+N/ivJDnTH60QG18SJLDWXJ2mAUep3itFm96zuRLCySzfp95
Ktz6z4UnLVBwSdD5zJpWJn9a4Eu+7NvIAHJlhQXk6yvveaW3MvnUAq3G2lF2
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
bi0lR/zhYOKLKXvVpcha43wRknHs+8kx5DHivtgdNzaqp495HzXDF6anYp3l
XpAT5vmiwDS8WLOKeT+l6Iuz37yfaV8jS672hWP2t8Zlp5j3VVq+uNP2pV9w
H/m4kS9+jLf3KAlj3l9Z+2KKq7Ylm02Wd/VFJ+frzy9mzPssH198qnwUy1lL
vsjzRVizx8rKBcz7rXBftDm6LpOYTFaO8UXj4tRLOkP0Pm8g0Rfj3wy/c+si
F6WNXG/qdRHvp+So075Yzf1tbnuHrHvRF/FBSz8p5ZCFr/uiSKhW7MdBck2J
L0LbovvORpKTqnyxymvmfS1fsvVTX9RmbC6rsCJLvfCFUPmZmWqa5LZ3I/3z
pmZs6iJyRp8v6i+sK3wxmcz+7QsxYQ+fyUP/9z7VD5EN9w1XvSd3T/RD2j7J
ZK16ct50P9j8ldq65jY5dK4fKvuLVs09S1Zb6of774UH+hPJf5T9UJ0378+1
MHKpph9+qVpuZnuQow39sFz253EBE7Kh5cjv70jOilchizr7oSyxrEpwDrnO
yw+3TTTX+QqTU4L9oKzVvvrOF3qfbb/VD0lzDveNaiXP2uWHKTyBk8r3yB0J
fljcWB5hm0vOPOSHTO+P5T6HyJwMP5yPPXCJ8x9Z4fzI8fBPmx045L78kfZF
19utsSAXFPshZd77PSJrmPf9D/xgGGi5oVaOrFHvh22DgnX/iTDv/1v9UPR2
n/28fvpecK/TD1Kfjs4ubCPHffZD7ZROB837ZJMBP5hZqRhezyWLC/qDvSRg
nuwhcoOIPw5u2LIgIpKcNtUfF1bZJlR7k53n+COxQypJxIwsu9gfyqz2gPWr
yZ0r/fFse4uL9xxytoY/TD3106OEyAH6/rirEeqb2EvfY5TM/eHTVvJ7fxO5
38Ef/7mm7IspIRd6+uNkrZ9L8DlyRKA/xB5UnTXdT9ba4g/+HL3TslvIY3b4
I2339sQuV3JlvD+iV8hmndUnJ6T4o3DTO3n7Zcz3qfSR+w1L1ReYRpbM9odI
3ZB++hB9z2q+4o/tiwfdV74lH789cv29IU+Lasis+/7gfbFvWldAln/sDzeh
sznXjpG7mv2hfds5Vn4X+eJrfxz/vC8n3o/M7fZH9Q4zsy4LsvIPfzgPluav
UycP/B25/uUTpuyVJReND8AeLeecOiFy1JQA9Ju9zBfrpe+FurMDoHRZmqfX
SBZeGIDLU87M2VRMrlEKwPOjo4dPZJKT1gRgB7vGqHQv2Vo3ACcVE3Tb+GSp
jQFw/1S3+KsDuc0uAEHeC9UFQc5wD0BM48wroovIbP8AbIxUrpOYxHxP3TRy
3GCwQeIHfW/tjgyAp9u3IdEX5Ly4AJg/PbFn9D1yaHIAmhTDrn8/T1Y7HoDe
KX/uvjlA/nM2AOGv03tqw8illwMww6Q+tMCNHH0zANo/hw8d1icblgcgdVZi
8hZFsmhtAPbObz9rLUmuawyAm7HJpOWD9L06pSMAq1UXTxR6Tbb/ONJ/x+++
aKskz+oPQPwbl5K8y+SOoQDcL1br23mInCkUiFc1cZestpM5EoGIQLjaPDZZ
QToQyyOUa74YkfvkA3H90uNzJSvIBcsCYb3ddfw+KXKYWiDmo96lYJi+92to
B4Ij1nRxYw3z/d8kEJ/78sM/HCHfswmEUeBq/RgfcpxbIG7qzIyTUyGb+AbC
+fpQUZkgWTwkEL2P/ViedbQ/oSEiENMv1PcIpZPTYgNhcCuu47I/2TkpEJLi
NflO6mTZo4E4J/v8tYgQufNMICwN5D+VNtD+iezcQOwpNDcOP00OuBGIZT/u
7FjLJSuVBWKXSKaooCa5vzoQ2++O93ssQi5sCERdS+30zBba3xHxMhAFa08d
jDpH1uoKhI2KkJPXJvKYr4H4c8n6k6UOuXIwEL/Yl8s2SJATxgZhwdyJTkbt
zP6USUFQ/75S2SaXLDkjCGWbCqr8wpn9KnJBePj96+G9G8jHFYJgWz5LunA6
maUaBBe2wuO+t7RfRl4rCLcb3i9XLSB3bQhC4r32wrid5ItWQTjQFPS2y5zM
dQlCX2ehkt0csrJPED6sPj+1oYf28wxwg7Ci/ocYq4hctC0IPdkzDg/Gk6Oi
g7Dli9Wicw5k3cQgPHG8qOG5iCycFoQK28+mSj9pv1HNqSBUu+Q8E6sgJ10Y
uT5lJdO/KWTrayP9sTJNUZBNlioJgs/uwt7pq8htlUFoj1ksCkFyxpMgvOrS
GdxeT/uj2G1BMJORVXmcweyneheE4KTUFSpccndvELh96py89cz+ql9BSN3B
MsckcujoYMz3muHe9ZL2c6lNDMa490oSWZfIf6YFY8rDZU3bIsmlsiM+ZrPY
ZyM5ekkwLqI/wl+GbKgcDHmzjfpxn2m/mahmMHo2xAwV3yHXGQSjv7di5sT9
5BSLYDx993HqZjeyvVMwzAZ53r+Wk2d5BaPMPWbXYQFyR1AwTH5+f2NeT/vj
MsOC8WXX2uH5p8mcncE4NBRiOD2ErJAQjIcPPdTm65L7UoOxV5SrYz6VXHAy
GA9azr1Me0f7+cJygtGy/2bk3xtkjfxg1Ej+PBy9h9n/VxyMfbLW6YucyPcq
RtqP8RrbrUCOqwtGZgRL6/Ew7Tc0eR6Mzk8z7j6pI4t3BmPB9bFDP06TG3qC
cXysqqfGJnLaz2AcPOLofcaAfEmAizzJ0i0KM5n9jmO5GGViJtzcTfsl+RO4
mHA4IS6rhGw9iYvdsoc5aclkVUkulqstkrrkRZaawcW6s8njutTIv2dz8fFX
2Wl9UXKbHBdX3qs7VbfT/s47C7mITpmaHpJPzlDg4mnfuBbt3eSdK7jgitlu
VXMis1W58Ajr+GS9nKy/lovNe6VOpI0mL9Li4uzJ8V+F8mh/6gQ9Lk5kRTYu
cyB3b+DCbfzH4ixB8qONXCTPqd7OvUj7X/OsuPgQWvoxwZacbM/Fw+ik5j8C
5FCXEW+RmVl2gfbX2npwUfk6cMdzW7Kaz8jx3RntGwTJMwO4yJf6Pkb8Eu3f
/cPlYsfg/VJFR/LLTSPXLx736sw4cum2kfa3VimH5NP+4NP/cVHlpbT7OIsc
Hc1Ff/PWTFkxsvceLlZGhNkJFNH+Y8NELob8pvhp+JGXHORCcIze2WdSZNE0
LhSzr9fXPKD9zp+PczFpp3CR3BZy3Skugt90LWteQL6axcU9tv+3nkbaT51y
gYsD3Yfq2bvJm/O4uMtjJ61TI9tf46K3pPh72Afar73mFhdv1kVUTD9GnlUy
cj3XfSpmmpKHy0f6T1alcOdfZn94JReevBgX86vku7VcrGV3bo72Imc+4SLL
7EH5nBnk2KaR+fNjr+C8WtqPzmnjQtxlS1/iDrLRKy5SThZsYKuSFd5xof/Q
qurMJ9rvLvaJi7k3DRdvPEXu6+Wi7qOvHNuO/KSfi0zf4IB3E8kFv7jYf+5L
8bN7tL/+0DAXqz04NSsjyGGjeRCOW2wyvIrsKMyD6xxOn1o37efXmMhD7vJV
/m8yyTKTeSi6GBo47MLs/5/Ow2fPvqz46eTX0jwc/KRdEVdP9QT3ZHnQS+kI
+7WXnDWfB3NnSf8X+uS4JTzIvR02UBEk+y3nockv9eaoO1S/YKLMw7XiDI7O
NvIydR6erCv681uVLK7Jg+WVHDXLLqqX+KrNw2kJ85bjnuQGAx58L8fMa2qn
eovrJjxcvjvKRdCFnGbBg3HBtKo5rVSvsc2WhzOKedlKjmRnJx7CFSzWqD6n
eg9NFg+NMyffWuFElvXiYfBjurv8C6oXEfTjIWG1CmcSi9wZxEOez2nB/jdU
b1IRwoNFEzyfcsjZYTzsGj1489JnqleJ385D3631yrs3kQN28uBhOWHIZYjq
XTbu5sHtRauGcixZKYGHbr9bM0TEyZMPjPSv/vIbb45S/Ux/Kg8TNPRUSxaQ
G4/ycKvK+Hp6PtXjFJ7koatvo8sukI9m8nCvYZpRUB3V80Tk8HBD0PIQi0V2
vcTD6OJxDk5fqB5IK5+HLL0DWW67yHKFPNxRPJ0UNI08ppiH7TkaC/acp/qi
d2Uj7ioIyVtPrqwY6W/+pZ1vn1G90vmHPITumem4OJCcUDfSv/tUhyPGkoOe
8SDhH899lU71T+bPeVg55v1lO3XyynYe6rPZhR0NVE8l2cnDjAT3Xdt55B9d
PBgiSmj5JHJzz8h8DjPhdTtRfdatrzy0X+qflH2M6rmO/xw5XljxIPkF1XtF
/uFBecFE7qW5ZNYoPrKyE57/8aH6MO1xfIw80Tz9L4/qyeRF+Fiz9dhc9UGq
NxsnzkdkxlDMEkNylyQfN6XUi2wOU71a9Qw+GrOMtxV1UT3bRRk+Qh4d57I0
yInz+FiqOrhBJ5nq4biLRv695NEL3h+pXs5SkY/yc2IqNbpk5ZV8fLxiGrXp
FNXbTVvNx4IxOXPZAuSBtXwYi9WeO+JO9XnPtfiw33rn2PT7VM9XpMdHfHVT
VPsScroRH5smPWj4mkz1f1FmfEgc3DvJaojqBT2s+XhwLOTMKD+yrgMfh6K/
DP1tpnrDBa58LHf32mNmRBb2HDl/ynmLN+FUr/jRh48Dcjv5j32onrEmgA+9
u2nzvO2p3vESj4+G9aFC502PU/7fzIemUVPBCQOqj+SH83HyQ9F1HX2qn7SO
4iNjj3VC+gaqr1SN4aNz2nB2ngXVX0rF8zFmuX5ohCvVa/5O5MPf8/WGMVyq
52w7yMdQYu5Wo1iq97yTxoeHZqaBxSmqB804wYfK0lefZpZRvejO03z0VB1J
znlL9aTsc3yEf5zp/FeMrH+Rj0f+951l1lH96aIrfPweJXJCmEv1qROu8+Es
07gyymw/5f9bfPySaY/eV0n1ro9K+Li6zPqXhnEC5f97fORUuSO5ieplk6v4
8BFS+5EUSPW0oY/48BIee0RjYhzl/6d8aO/pTU67TvW4as18sI5JqGT7Ur3u
zBd8LN4VUhi0IJry/ys+7twep9nbTfW+L9/xYSp76pFC8f/VA/PxfM2A45LD
VC98uo+PeTz1Lc++Uz1x9Hc+/IS63V/VUb2x9++R+xkbUbG9hOqRDf/yMXXo
173LZVSvvGRMCBqsRUwjmqieWXR8CGbmvp7dJbCJ8v/EEFyJU6v4uS6E8v/k
EETo6GZeTuSt/x9DPi7c
            "]],
           FontSize->15]}, 
         {RGBColor[0.5, 0, 0.5], PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], 
          StyleBox[LineBox[CompressedData["
1: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
k+nHCt58tUTIxzLnd7JX/7lfxBINIhGpV5yu8uatJUqPz+8tSyF/X2eJJ9Vr
Vr+qu8qbv5YQmOIXoveLLOBliZ48lYg25UrePLaE8BM+tXRfsliCJR7PkD+Q
kFnJm8+WqB7p8zv/kCx/0RIrrZ2L+KZU8ea1JRg2xzVjtcnq7ZbQtzvKpx5e
xZvfliiftrxT/DzZ4K8lnsUsqVrRV8Wb51Y4I6O0PVS8mvIva4UjN9unvLGs
5s13K8RmF+gnJJBZm6xwNGzKPJeb1bx5bwXZSD1ft5/kiDArVIccnX1Q5Rpv
/lthRp7kpI/+5LjjVpj0+5307lNk4WIr1P/tN0UHOf2mFZrbvwSvmHOd8t9m
henej5kmpuT8t1aYslpVIn0fWfm3FaZmnw2fdYNcIWwN62vnbap+khky1nDc
dj47VbWG8r/GGtOyvqqnB5PNja2x8M6NiY355HZXa9jsU363rJfszrVGxAXZ
V53Tayn/e6yxs3ti3XolMjvDGt6ieXsvG5K/F1lDaW6fOINJjq61hr9CVnhv
LFmg1RpJisfjsnLJKW+sIRZ/YkNwLVnslzVGdZ0zbDrJOdNt0Dq6fZvVKFle
2gbaQyefM+ffoPyvtoHiV8fCVHWyuqENnBbIdjyyJdc626Do1BtXxc1kA7YN
lBZ+kclII7fE2GBVzYNFCy+R7Y/a4MrrL4wrLeTuAhvEizdvZQ6TWddtUChS
W7Vs+k3K/wMbpFZLfp+yjBzxygY7V2tJjhqT+X7YoOmF45IJAeQ4IVtYW1/4
LpVAFpa0xZUon0Sbc+T0VbZ4EJN7/0Q9WXKjLab3RV3+/Yac72iLJ37jFLmT
/6P8B9vi9xoV2VFZcsUuW8g0TjpyXJ/MOGwLdf7AAHNfcn2+LToW6h6dv5ds
Xm2L97d8BX+eJrc32+L7tJNl7+vI7r22qNhZFv/9Fbn/qy1OzHXeIjrpFuVf
0A6OhjohxrLk7wvt4DFtquchfXL0Sjtse27K+OhLFtCzg2fp8Z/e+8gp9nZg
LNm8a/AsWSzQDt4m1nVx9eScnXaof3G2XOMtWT7NDrVyrXp/p9RR/s/YIV10
ldfTpWT1Sjtoaon8vWNMrm2yQ39r9ZSGQLLBSzs8uMEM7dlPbvlsh65MPaXp
xWR7AXs4lEbJmLaQu8XtcX6mgknuBzJrhT0kdzinCc6+TfnXsceRfRLv9qqS
I2ztYbcnkCFqS+bzt0dbpsbeqi3kuO322HE7uDA0gyx80B67Hr7L1q4ip+fZ
oyhot9WiF2TJCnusk+Urn/WXnN9gj3K2zJV5Unco/132eFR0Wl91A7nioz1M
lypbe/qQGZMc8HSZb/OpfeT6eQ74+6Xr7PdzZPNlDhCuVWxybyS3Mxwwu6lp
ecd7sru1A6p8GdX+M+sp/0wHuPV98hZSJbO3OWC42FTshi35e7IDfhmdr4vb
So7OdcAFK09nr0yyQLkDnsSXN5jXkFPuOuDno/7xFj1ksRcOMNJd/sFr4l3K
/4gDmhde2hMvT5af4IjAp4eLbxiTS0QdMU7xg4tQCFld0RFRkx7u9Esl12o5
4m+e5oSnZWQDS0fwJyg+c3xKbvFxxI64AyPvR8n2Wx0hWG+mdljyHuU/yRFz
7hke26RLZuU4YlaIxVQxFnnksiMu/lKO+JxIjrjjCGGJc809xWS+547485HN
1/uIHPfeERpT1X58/kYWHu+EYnZmvtiCBsr/HCfcKdT6vYlBllRwQlH9+VeH
vMn5mk447swxH4ojK5s7YVXiZCW78+QKLyc8f9Hl+/ABmbHFCUsSjYddv5Lr
E5xwiu/F5dH5jZT/E0742qV0qlCb3H7RCZPmNxQGeJPd65ww+7NWtWY8ub/d
CZ1Ck/+TuEBmD47t1yPjwsxH5O9/nTBi5RU05zs5erYz3M/fHVJY2ET5l3PG
ujPyEmY65JS1zuh++2gwlkkWM3WGfOZcg4Ykco6HM1JdV0lIXyLLb3bGDhtv
l/gn5JI4ZwQse/6J7zdZPXNsveSN5jjp+5T/Ymcs+6nWJWlANvjPGfcW2Qjf
DSK3tDkjLFXRYlca2f6dM8S/3jhgeJXc/dsZ/kdEK6W6yKyZLlgcuPj6lInN
lH8ZF4RIt8aPUyRHqLtg1QLhqVMsyHwmLti8tWyF5BZynJsLihcce6WfRRYO
dcHaksT52/8jp+91QUmhWfXNt2TJYy7IL7LomCrQQvk/74KKoaw/68XJyjdc
8Emst2rLcnJFqwtqsj8JXgWZ0e+C0jdZPeNsyPW/XOC5qUjDkkU2n+EKPrlX
kwq2kdulXbHmjiCmHCC7q7miY+fzzpBccr+hK67mzXzyoozMdnGFcbKXpNVd
8ne2K5IzYy42d5CjY11xXUNyl9UIWSDdFbIvevd08j+g/Be6om/a5nK2KFms
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
            "]],
           FontSize->15]}, 
         {RGBColor[0, 0, 1], PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
          StyleBox[LineBox[CompressedData["
1:eJxt22lcTV/UB/AkiooiRKGSKUlICg2/NGnQPM+3+TbdexNJiEISkimESpFE
qSRUovhHRSkVlUISmowp4umxzvPu8cbn+6lz9tln77VX55y9ZFkhlt78fHx8
H8by8f3v///vv9h6bcMXvKxfTW81yW+1PdT1nfubxmr9s0mv9rWTRqsaLaeT
Y79qb3tQO6+0aR6Z/VM76qYyu51vGfP7I9pyz1jnHSxVyTPGIFVLuuuAhyZz
/FgYX6zSG2pcTx4ah+krr2jdkdrAnE8IsyPknv75s5HcMhGHhEuzHcssmfOL
Iuvtdhdfc1tyyWRIqUdfSF7myLQnjiV8CzsHXFz/OcpsClS1tTuygzyY9qdC
YN/diV31nvTzMgk0NPD/Oevhw1zPNAStj/F6Mt2ffr58Bmaua9zL+RrAXJ8k
LsgUGG8fDKafp83Ejq8TkjeLc5nrnYU7VsmrW2/z6OdTpXF6kqfDpy2bmOuf
DV48+/p5w83085g5uMITuPtNMZzpz1x8ffKs9p18xD+XRchg7p16gWDlSKZ/
sni5Ncgw1mzHP2vny+L5Ho3sGYhi+isHk3PZHUpeu+j4T3IYlIjoH39kN9P/
eZiVwu5L/i+ajpeXx5lmyZZewT3M/ZDHl9zfp39Y7KXjneejb2Hor/yMfcz9
mQ+31Q+vy43dT8cfXwCLPypOWuw45n4thOjC35HjWw7Q8TULcSLWNWaTzUHm
/i1C2thrD/e8OETHj1+MraZZ2mdWJjD3czF2vu0LxF9ymaYCQvj5QvKfHmHu
rwLEzevRn55Ix29Zgt8t2xu+7DjK3G9F7NJSn1jscoyOz1GEYIvfbUMcZ+7/
UtQrn889sfgEHd+9FEIuF7IvTD/JjIcSvmRtZgUJJdHxMstwyMAx4vOfJGZ8
lmGJ+POEpcOn/jlFURmzY26pzh0+zYyXMk5VLPlc/ufMP3dUKsPmwSX1mUJn
mfFbDr0Dgjukp5/7Zxnv5ZA+tF+matF5ZjyX49HpT2vFZVL+2X3MCty8tef9
5GspzPiugExJ6wp3zVRq/+wKWFQO3eSrS2XGewUO8C0WHvBOo/bVV0Jh6sht
xZE0ZvxX4tcjS/MbJy5Q+40rUXrVemPsinRmPqjgWeGOFem1ZHeeCj4Kp20S
5GYw80MFr590782depHan7QK2wZfPD9bdJGZL6tgsM6lssbtErWftQobJ9y9
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
ubnXApLrU1nW/K1MfrXEQsGKaEcVcreEJfpWC01m+7Qy+dYSi1iI3Z1E/rnW
Eto9iqEXHrcy+dcSF41Crap/k4U8LaGpcjn7t1Ibk49Hz9dozq/iQZaMs8Qm
kZYm7tE2Jj9bwuVwZu6NB+RF1y0hqSws9newjcnXlrCYaLDVVOEVjX/z6Plv
Hw1JcX7F5G9LLE+cvXnwENnwryXW1Y4Xs7z3isnnVmiv9yvL+Uq2X2CFDiub
iWIL2pn8boWlx5o4PHuyn6kVnpz5vrkxrp3J96O/P/p4ubaEHL7JClnKE4NT
+9uZ/G+FurIdeWPFO2j8z1ihXL8iWlWBLJZjhdIs6x6/9eSk+1YQ/Jxz9bQz
WabRCpeL7fZXhZEzP1gh5ONT7V+HyMojVviw5PzxxZnkIjFrOKeZbbC9R9aW
t8aNrSGzd70kV662RkD0kfrLX8nmxtZwrDNdWivymsbf1RoHzXV6vs4nu/Os
Meg59ZmEFrl7jzWW7AxMWWFP5pyyRk8Z30xTLvlntjWKDx4Y8YwjR5VZw1Sh
bvKWC2ShBmu8szkvvreYnPDeGqc7ayoSnpMlf1kj3kHr04k+csokG3yMeq2f
JPiGxl/OBsMTrp06JkPOXWWDdpkrGQfUyWobbOAr1KO43ZJc5myDo/lHPvsF
kA05NpBzq7qxMYZcG22DZwpNa5XOku1P2uBcHr++YCG5I8sG5ZeunHjxhOxX
aoMUf+2B9PfkgTobcM5pT/Pne0vj/84GTVUalfNnkvmGbLC+v6Xq5XJyrIgt
pKY/e7PPiCwmY4vK7x+fKnqSk1baIi56nO2jbWQZA1tMjZ+m5nKMnOloi29G
8urd2WTlYFu8HGMhzX5ALtpliwOH69LftJG1j9vixvivxy1+kCszbbFJd1Z+
4aROGv9iW1zfW3FXfCG5+aktlvPH7mRpkd3f2iIiXKIw047c/cMWrJqVCztD
yJyJduAlPz4hEUv+OdsOQzXNleop5KjlduhcErHLqogspGcHwx9dMR615AR7
O+Rs2XTSs5ssGWiH6aeOb3fge0fjv9MOaWEtv3QkyYuO2mFq3/fGucrk3It2
aFlbUN9vQFa7bYev0eNu5rmRy2rs4Ok/pOe3hWz42g4B58v0xA6Ta7/ZwWfb
1W1ZF8n2QvZw36tyVbWU3CFlj3WTes8XPCf7LbNHZuGRmfK95AEde5yZMKYj
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
/9d5Y8raKwrX25n83+IN9bVpRjaNTP5/5w2JG7+SG6qZ/N/vjXXPNqgvK2fy
/5A3Squ2rva+xeR/fh88uVafszmHyf8iPtglM3zbM4PJ/9N9cFfmI1fxDJP/
ZXywonq4tzaByf+LfbBvdpuhxV5y0kofnLp6JvnqNrKzhg/6eafHdnHIMgY+
WBV1ImnYm9xp7oMf9zI2f3IkZzr6gHVH9VaRGTnQywfGOmKRLF2ycrAP1qyx
aOlWI3/b4oMbGzlfjZeSi3aNtp+99vUBWXLkAR/k3W6+lzmNrH3cB7515Xlp
E8gC532Q+vlp3dYR+nuyMtMH/0Us0FD6TI7P80Fvu/7Usk6yefHo9TuPD13W
TJZ46AOri4e3RVaRm5/6QO0Cy+RSKTn5hQ8+z7Ael3ud7P7WB6WOBx+eSCfL
9/pg7dj4XKeT5O4fPqg7Jdv5Zz85m88XVvqhu6MiyZyJvri5fSi7I5isIuGL
BTk798z1IP+c7YupA/OUNKzIxQt9ceWS7SN1PXLUcl+w1F9unbaarLvWFzeu
3WfVLiIL6fliuXvYJfYscvVGX6SdzQzoFGb+/rf3xXYbz3qNEXpesWb5Iu7O
b/4tfczzUqAv8vqk5ia0k1vDfCF77qbJ/lrm+WmnL45fnXaddY/std8Xb5of
c6XzmOepo74osb1dUJhG7kn2RVXEtJTlR5nnq4u+eG7r5Hgwmrwp1xd2TvYT
H4cyz1u3faEzOL/pvSf5d7kvvqkqdHdZMc9fNb44yJrh/d96ckyTL7hnPoXt
X8k8j732xbStAzpL55FFPo3ez4zb3/KmMM9n33yxbfPigln85GN/fLE53ifL
6zM9v9oL+WGZ3zu+Ix1k6Sl++DXO8/X5p8zzu5QfmsLehR0pJafP94Ns6J1u
76vM8/wyPxT+2uY1O5msqO4HdI2TKIpjnu91/NC7Zaec6lZygYkfrIZs7pz0
ZZ73bf1QbaQxsc2GvM7dD+PDl60dr8s8/7P90GcUGDF1Bbki1A/9beHfBGSY
9wHb/RC9dG7jS1GyyT4/SF8OMjn+i95HiB3xg2t5YYzKB3LD6dHr3ZWQXdRI
Tkr3g7Fww2fZCrLzNT+orz67m3OdLFPkh3WzjA6mnyN33vPDlaMR2qUHyJlV
fqh7MbmqJJwc+NwPaeMUnS94k5Xb/VB7dvm8EEvyt24/WMqWm8lqkYu++EHq
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
/08Jxe73j1ZeO8TV+h9lqv+n
            "]],
           FontSize->15]}, 
         {RGBColor[1, 0.5, 0], PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], Dashing[{0.03, 0.03}], 
          StyleBox[LineBox[CompressedData["
1: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
l0p+f7XFH//VBz8suvzPPZK2MFjZeafC7TK/39qirvGG1KVk8q91tphWuzv4
za3L/P5ri2NyFfkGv8kivrZIO91Y2qpcxe/Htog+tYCTGkCWSrDFzEXjGxMy
qvj92RbvPuefPvuQrHDeFpszpPsEJlTz+7UtGpODtsdqk9XbRvcjE6WvvrGa
379tsWfXQnnps2Tjv7bQ+L1AULm7mt/P7cC4J3MnfE4NxX+RHRLscx3e2dbw
+7sdvk5WPJyQQGZZ2MGgcAbL43oNv9/bQV+87JLXEDkywg4Hwlf5p6hc4ff/
0fncy52/BJHjj9th8SXtjbtOksVL7PDo2fVctJNTr9shKEfqxorpVyn+rXZQ
DxKqMbckF7y3w+elq3ipe8jKI3Z4Gr3ursQ1cqW4PR6UnSioHiLryNtj970b
nw+q1lL819gjN2dMQiqbbG1mjynthx2aCshtnvZYNfmU+vIuMoNnD/mXORM7
JtdR/OPs4a126cN6JTInzR4tDruKykzIv4rtMX7GJ20dJjm6zh63Ga1pXbFk
kRZ7fFg3qehELjn5nT2mP3DxZ9eRpX7bIzEossrhJTl7sgPGJs3OsBsmK8g5
YHP/29/M2dco/moOEN+1ufGgOlndxAHfo3yHHzmS69wdYOyzNHrpBrIxxwHj
xlkYpx0iN8c44MdhDUOZC2TnYw44d9wpuKKZ3FnogF2TBM8w+8msqw7Ya7Z/
YNnk6xT//xyQv3T9KtFl5Mg3Dkj5a+kzbEYWGHTAu+Pf2ELB5HgxR+h4OZjK
JZDFZR1hopH0xuEMOXWVI96dP78yq54sa+QIm4E78/68Ixe4OsLg+v1s3vgb
FH+2I1aevHxqeBG5cqcjfG9w52UYknWOOMJ0Susf6wByfYEjClZXq87ZTbau
ccTzst7zQ6fIbQ8csejRYmb/LTKjyxFfLy80GHxD7vnhCEV2iqbUuJsUf1En
JLwQ0zJfRP4l44Tf3SvWHjEkR690when+PlfA8giBk5oHp/e7b+HnOzsBJvG
l+EfT5OlQkbHx92u3VtPzt7hhJ0rKirXvicrHHKC+XMxKwHRWxT/fCd8rJ0V
/kyRrF7lhONai6Y3mJHr7jnh1gfOwqYQsvGr0f2mLD/ctZ/c/M0JDkiwmVJC
dhZxRpDNKQurZnLnHGfsCDwWefIzmbXCGc572dcnTrtN8dd1Bkt8xZx4VXKk
ozM23nrEk3IkCwQ5w/ylxeWaTeT4bc5wGR/3MiKNLJ7ijA3BTg91qsmpec5I
qk6LlX1Blq10RsDqmW+m/SUXNDrDrjSla/b8OxT/DmdMPH4tTE2PXPnFGcxJ
jpt9/ck641yg3PitP28PuX6WC4bM194YPEO2XuaCr3cuv/ZuIrfpuOCm2sj6
F5/IDHsXhLnH3QyeWk/xZ7pgZWuD/yRVMmerCzbM0ph63ZH8K8kFpdHql/Zu
JkfnusDbVl7fL4MscskF4xusCm1qyckNLpg0R7jN5jVZ6oULnu+Kq/ETbqD4
D7igyXCCUYICWUHIFerXagOum5FLZ7oihvVAdFIYWX2pK5SeOMgFHSTXabmi
4xEz42k52djWFXtdprLcnpKb/V2xLcshon+Y7LzZFQfnryg9InuX4p/oCt2C
A6KW+mRWtiueWTN4UizyQJkr8o/sbP22jxx5xxWzHRsXdpWQBZ67YnqHmFXX
I3L8J1dM/iqG7z/J4mPd4PZw7wcp6UaK/3Q3BOpprLXUIcsuccOk4/Vzj/iR
CzTdcO1m++6P8WRlazf8MZXwdjpLrvR1Q4zXyPGH/5F1NrnhYteSRV4/yPUJ
bujhzPk0PLuJ4p/phjaGxesibXLbeTd8fqzyOdiPzLjlhqobqyes30vuaXOD
2c9qqXnnyJw+N5ybJzNZ4hH511832LUWP5n+ixw9zR2xp8t9FWXuUfwXu+Pd
7C3ZVrrk5LXu6KtWjYpjkqUs3eEkJ/WmMZGc7e2Om0OWDXIXyAob3KE0ZXhG
whNyabw7NlmtrRkzQlbPcIfQM+nTe+XuU/xL3LFOqOTWfGOy8Q13LPf9Jnw3
lNzc6g6Vlh6HXYfIzh/cER4XfdL0MrlzxB0n/5xul+sgs6Z64NgS/X5R4QcU
f3kPDLmqNIxdSo5U98A7V2NnURuygLkHykPtE+ZvIsd7eeCou4yF8QmyeLgH
XLb7JG2/QU7d7YH5dc/X3XxPlk33wPQnGTliIs0U/7Me0Lkq0aA1h6x8bXS9
PbL7IpeTK1s8IBVz6OVlkHV6PPDVS61qrAO5/rcH5FWbJO1YZOspnlDfMftN
4VZym5wn5FZ0zBc9QGas9kRi3uNrnFxyj4knGBXl1S/LyRwPT8hXrxpn30D+
xfHE9hiB1OZ2cnSsJzJZDUz7AbJIqicumqmHdAj+R/Ev8kTQ8a/HuTPJUrWe
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
            "]],
           FontSize->15]}}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      BaseStyle->{FontSize -> 15},
      DisplayFunction->Identity,
      Epilog->TagBox[
        InsetBox[
        "Para 1: \!\(\*SubscriptBox[\(A\), \(2\)]\)=0.0116286\n Para 2: \
\!\(\*SubscriptBox[\(A\), \(2\)]\)=0.0124038\n Both with \
\!\(\*SubscriptBox[\(A\), \(1\)]\)=0.0000112557\n and {\!\(\*SubscriptBox[\(k\
\), \(1\)]\),\!\(\*SubscriptBox[\(k\), \(2\)]\)}={1, 0.0049975}", {0.1, 
         0.9}, {Left, Top}], "InsetString"],
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox["\"Transition Probability\"", TraditionalForm], None}, {
         FormBox[
         "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
         None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      FrameTicksStyle->Larger,
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->800,
      LabelStyle->GrayLevel[0],
      Method->{},
      PlotLabel->None,
      PlotRange->{{0, 2.*^7}, {0, 0.9999988382315866}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "\"Numerical 10 mode (Para 1)\"","\"Numerical 10 mode (Para 2)\"",
       "\"Theory (Para 1)\"","\"Theory (Para 2)\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}, {
              
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    Dashing[{0.27, 0.27}], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    Dashing[{0.27, 0.27}], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    Dashing[{0.27, 0.27}], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.05], 
                    AbsoluteThickness[1.6], FontSize -> 15, 
                    Dashing[{0.27, 0.27}], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0.5, 0, 0.5]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.005555555555555556`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.03`", ",", "0.03`"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                RowBox[{
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                   PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, 
               DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, 1.01}], ImageScaled[{0.5, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   BaseStyle->{FontSize -> 15},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{
      FormBox["\"Transition Probability\"", TraditionalForm], None}, {
      FormBox[
      "\"\\!\\(\\*OverscriptBox[\\(x\\), \\(^\\)]\\)\"", TraditionalForm], 
      None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   FrameTicksStyle->Larger,
   ImagePadding->All,
   ImageSize->800,
   LabelStyle->GrayLevel[0],
   Method->{},
   PlotLabel->FormBox[
    "\"Test of Numerical and Analytical Results for Modes\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[1, 0, 0]], 
         Line[CompressedData["
1:eJxt22lcTV/UB/BkKEqKEJEkcxEqRdKvWYPmebrVrW7zvbcQpX+oJElSZEpI
ChGFUCqRSlGkQVEIoRRCpDw91nnePd74fD/Hufucvffayzlnr7kewZZeggIC
Ah9GCwj879//75+4p1ouCTnjBpreaJLfaM1P1/77qWn0+n826dGaEeIf8cRy
Gjnum9aKCTlZt5rmkf0GtPzDFwi3Cixn/v2QVt+9h4O2lqrk6aOw1kThcZy7
JnP+aFTb6Eb9bNQh/xoL+6Ir629Kb2B+TxgGD21S/gxvJLdOgE5jEc+h1JL5
/YlYrX11jLe5Lbl4EuZIFSkcW+7ItCeByMLlZr0urv8cZTYZLb9zxl4MdGfa
nwLTJbkyb5960vFSSVS/9P173N2buZ6pOJdQZlk7zZeOr5gO/pZC9+Bv/sz1
SeGJVNSUiJ9BdPz0DGROKvuxSYLHXO9MeAte39N6i0/Hp8xCZvqJMx+3hDLX
PxuBw5n96Yab6Xi0DGYZL/vzTSGMuZ850C1sEn4rv+2fS7fJ4nb1TrVApQjm
/uZi8yensN1mkf+slT8XK+fxtKcjirlfOaT8/hm6jL2Dzv8kh/dr3HeMO7CT
uf95CM0Ytf34g110vrw8RGOL2T1CMUx/yCNQUEjmh0Usne88H9vErmzOP7ub
6Z/5UOzeJi83eg+dn7oA79ZNva/pF8/010IY6Cx8ObZ1L51fuxDn1lq/CLHZ
x/TfIkz4rCUV05JI549bDNMLJu+Orkpi+nMxXmiIiOMvuVRzCQyWaYvnPz7A
9O8SHJDofPU5M5nO37IUIku+hXyNPMj0twJeZUTn3HZJofMvK2B7TbmDIVKZ
/lfElfjvZocWH6LzuxRxIDfc+My0w8x4LMPC8Oa/AcJpdL7scmjKHpD8MpzG
jM9ySPbJLlD8feSfMxSUIFH74b7M76PMeClBb8vhreXDx/65o1IJahLzbksJ
n2DGbwXkhJoGpKel/7Os1wpEC1ulVi86yYznCiycUPlNXDbjn1mjViLPmH9i
0qUMZnxXom5j9Hs3zVPU/omVyJ4wMUCg/hQz3isRlWxe0ut1mtpXX4U/G6qD
FYZOM+O/Cpvklo+7dugMtd+4CumvgsfGrcxk5oMy3Hi3P56pI7P4ynivtkNR
iHeWmR/K+B4Zsj5vSha1L6aCxWG7Ek4UZjHzRQVLK46E17qdo/bPqyBxdmyQ
5vhsZv6ooG5CWNnnArKsgSoOLxF42OaRw8wnVay8Pblt3JTz1P4bVcxcPUHL
//55Zn6txuaBHA3hbReo/f9W49xb2cltSheZ+bYalQtEBzs/kDuk1aDfuVVh
7tlcZv6pwVOs+1mixyVqv1ANlYpOcxXkLjPzUR1y69RX/XxDZlmr46nemqk/
rfKY+akON+t1SUI3yBl96tC7eEJSQfoKM1/X4EFlao5nFLkjYQ1+SWRa5b67
wszfNfgTOXGq8Mar1P7itTCubO3hX7/KzOe16KkIau2ek0/t31+LO3nhzaHx
+cz81sD3C2Ivxv8gZ7hrYJRPwsvzHgXMfNfA1YL8x7Z15I4hDbxROJkhuv4a
M//Xwbe+QvPhJbLs0XVg3RiVemDOdSYe1uFzwe69rgfILFVNmE/5JrRizA0m
PjShrafdIxRGzniiiY5TLdKvu28w8bIej+bF8O54FFL7QetxV2Fb1bGWQiZ+
1oNn6vAnzOLmPyeN1UKs+IoO6+qbTDxpYdP1RRuW6d765zwrLQjeOzR+TMkt
Jr608Nrd7kvDmtv/XHdKC9lSlbUnb9xm4k0L93KqfD1Viv65r1cLj7vL9skU
FDHxB0hfOfH38arifxbXBCzPPNm5uaCYiUcgeLV7s7jqnX9WSgA6DjXeOVF4
h4lPoDV541dpjZJ/Nn8OfD66SSG+tISJV210OOklf5Mr/WfuIm0I3c97IOVd
ysSvNr4uuDqpIIectFkbv/uM7t7rKWXiWRunP2xQNVpZRvd/TxtXNfaX6mwp
Y+JbG8dNW6/mFZHrJutAr4vlniR4l4l3HYyXPjbntSG5j6UDqZ+v15/df5eJ
fx3UHuFOaWkki1/WwbfVzh8jZMqZ9UAHE5aenJLkTVYa0sEmgakvJC6XM+uD
LvLjIw6OGiCbG+sisj9spyvuMeuFLr48S+5fuJfMPaKLk8bqq1ye3WPWD10c
mlQeOzTnPt3/e11sTglWFfa/z6wnevCU48RFXCfnqehB4EdpmYNgBbO+6MHF
fduCkxvJdbv00Px5xy/jYxXMeqOHvzH5EW5d5L56PfgmP+9rVnnArD96CFXI
T72xiywuq4+Zup9yftc/YNYjfZyuned/SraS7j9IH+59X6ZeCK5k1id9WK3u
eDuthGxepI+n5cFTO8WqmPVKH4t2zngp4UbmTjCALMss7OTlKmb9MkBazHbp
BIFqun97A4zaLzLcaFHNrGcGaKlysfnvDDkvywDSIY020d+rmfXNAAU/G1e+
NXhI999vgGbVMplTRx8y650hbh57bnSjh9ynbYhv2p3vF6CGWf8Msajk78Le
FLL4AUPMEMjSmPShhlkPDbFyIcc2dl0t3X+7IYbu9mVaJdcy6+MG2IqOtdv8
nmyuuAFh82OP9mg8YtbLDchw5B8vTCZzw0fMfhfX2PWIWT83QCJXZq/++sd0
/1Ub4J4SVit06DGznm7A7pshW2f0kPOmG6HqVIvTOrk6Zn01Quihv3ZTN5Lr
vIywrPK0ruS2Oma9NULfYG2Beha5L98Ih2xl18Y8qWPWXyMMjH3k+2OYLC5o
jJ8fM54kLK1n1mNj+Ov+GmdoT1YyN0aH46PDC2PqmfXZGMaKl6cuvUo2TzdG
rEy5uGV7PbNeG6PuTLXUcdEndP/dxhDun1MsvOYJs36boPXGjYTDPuSkNSZo
vzV3mmHqE2Y9NwHvxJ73M8rJeXEmOLj7RqLolyfM+m6CpDbxI3PmPKX7bzRB
Sm/aQUvTp8x6bwLpm18mnA0n98mbwnif895p558y678pZjy9lZHVTBYPMUXV
4uhGa6EGJh+Y4tLLJYWyqmSlMlPsW+HyZLxXA5MfTGH1K/fKpBSy+aSNcN3m
8npFeQOTLzYidapjX/BXMtdlI4wGtHyq5j5j8sdG1Na4PllnQU66sBEt/nlF
NVHPmHyyEdcT3+RtyiPn/doIyZ126modz5j8YobiltkdU8Qb6f4NzPBXfnCZ
sFYjk2/M8OyMz2VJLrkv1Qwtf/Z/VMtoZPKPGfq/2fiG1pHFO81QN9eioEKg
iclH5ph28bHV8hVkqRnmcBtufJzr3sTkJ3N82yWfh2TyIi1z6Hosi/h4t4nJ
V+ZQUpa/fe4bWc3HHGMrer+FyTcz+csc656o5LrYkA0TzSFeYhtoE9vM5DNz
3HQOvuV2g2x/zRw7Mh1mRnQ1M/nNHHFhuZPPz2j5Z06bOTzZZYs+GLUw+c4c
bNcLr9QiyGGjLZC3B3fTcluY/GcB6V8zzYTbyXFLLFDKTxLdLf6cyYcWcFIu
jpTUJqdZWIBb+N/ivJDnTH60QG18SJLDWXJ2mAUep3itFm96zuRLCySzfp95
Ktz6z4UnLVBwSdD5zJpWJn9a4Eu+7NvIAHJlhQXk6yvveaW3MvnUAq3G2lF2
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
bi0lR/zhYOKLKXvVpcha43wRknHs+8kx5DHivtgdNzaqp495HzXDF6anYp3l
XpAT5vmiwDS8WLOKeT+l6Iuz37yfaV8jS672hWP2t8Zlp5j3VVq+uNP2pV9w
H/m4kS9+jLf3KAlj3l9Z+2KKq7Ylm02Wd/VFJ+frzy9mzPssH198qnwUy1lL
vsjzRVizx8rKBcz7rXBftDm6LpOYTFaO8UXj4tRLOkP0Pm8g0Rfj3wy/c+si
F6WNXG/qdRHvp+So075Yzf1tbnuHrHvRF/FBSz8p5ZCFr/uiSKhW7MdBck2J
L0LbovvORpKTqnyxymvmfS1fsvVTX9RmbC6rsCJLvfCFUPmZmWqa5LZ3I/3z
pmZs6iJyRp8v6i+sK3wxmcz+7QsxYQ+fyUP/9z7VD5EN9w1XvSd3T/RD2j7J
ZK16ct50P9j8ldq65jY5dK4fKvuLVs09S1Zb6of774UH+hPJf5T9UJ0378+1
MHKpph9+qVpuZnuQow39sFz253EBE7Kh5cjv70jOilchizr7oSyxrEpwDrnO
yw+3TTTX+QqTU4L9oKzVvvrOF3qfbb/VD0lzDveNaiXP2uWHKTyBk8r3yB0J
fljcWB5hm0vOPOSHTO+P5T6HyJwMP5yPPXCJ8x9Z4fzI8fBPmx045L78kfZF
19utsSAXFPshZd77PSJrmPf9D/xgGGi5oVaOrFHvh22DgnX/iTDv/1v9UPR2
n/28fvpecK/TD1Kfjs4ubCPHffZD7ZROB837ZJMBP5hZqRhezyWLC/qDvSRg
nuwhcoOIPw5u2LIgIpKcNtUfF1bZJlR7k53n+COxQypJxIwsu9gfyqz2gPWr
yZ0r/fFse4uL9xxytoY/TD3106OEyAH6/rirEeqb2EvfY5TM/eHTVvJ7fxO5
38Ef/7mm7IspIRd6+uNkrZ9L8DlyRKA/xB5UnTXdT9ba4g/+HL3TslvIY3b4
I2339sQuV3JlvD+iV8hmndUnJ6T4o3DTO3n7Zcz3qfSR+w1L1ReYRpbM9odI
3ZB++hB9z2q+4o/tiwfdV74lH789cv29IU+Lasis+/7gfbFvWldAln/sDzeh
sznXjpG7mv2hfds5Vn4X+eJrfxz/vC8n3o/M7fZH9Q4zsy4LsvIPfzgPluav
UycP/B25/uUTpuyVJReND8AeLeecOiFy1JQA9Ju9zBfrpe+FurMDoHRZmqfX
SBZeGIDLU87M2VRMrlEKwPOjo4dPZJKT1gRgB7vGqHQv2Vo3ACcVE3Tb+GSp
jQFw/1S3+KsDuc0uAEHeC9UFQc5wD0BM48wroovIbP8AbIxUrpOYxHxP3TRy
3GCwQeIHfW/tjgyAp9u3IdEX5Ly4AJg/PbFn9D1yaHIAmhTDrn8/T1Y7HoDe
KX/uvjlA/nM2AOGv03tqw8illwMww6Q+tMCNHH0zANo/hw8d1icblgcgdVZi
8hZFsmhtAPbObz9rLUmuawyAm7HJpOWD9L06pSMAq1UXTxR6Tbb/ONJ/x+++
aKskz+oPQPwbl5K8y+SOoQDcL1br23mInCkUiFc1cZestpM5EoGIQLjaPDZZ
QToQyyOUa74YkfvkA3H90uNzJSvIBcsCYb3ddfw+KXKYWiDmo96lYJi+92to
B4Ij1nRxYw3z/d8kEJ/78sM/HCHfswmEUeBq/RgfcpxbIG7qzIyTUyGb+AbC
+fpQUZkgWTwkEL2P/ViedbQ/oSEiENMv1PcIpZPTYgNhcCuu47I/2TkpEJLi
NflO6mTZo4E4J/v8tYgQufNMICwN5D+VNtD+iezcQOwpNDcOP00OuBGIZT/u
7FjLJSuVBWKXSKaooCa5vzoQ2++O93ssQi5sCERdS+30zBba3xHxMhAFa08d
jDpH1uoKhI2KkJPXJvKYr4H4c8n6k6UOuXIwEL/Yl8s2SJATxgZhwdyJTkbt
zP6USUFQ/75S2SaXLDkjCGWbCqr8wpn9KnJBePj96+G9G8jHFYJgWz5LunA6
maUaBBe2wuO+t7RfRl4rCLcb3i9XLSB3bQhC4r32wrid5ItWQTjQFPS2y5zM
dQlCX2ehkt0csrJPED6sPj+1oYf28wxwg7Ci/ocYq4hctC0IPdkzDg/Gk6Oi
g7Dli9Wicw5k3cQgPHG8qOG5iCycFoQK28+mSj9pv1HNqSBUu+Q8E6sgJ10Y
uT5lJdO/KWTrayP9sTJNUZBNlioJgs/uwt7pq8htlUFoj1ksCkFyxpMgvOrS
GdxeT/uj2G1BMJORVXmcweyneheE4KTUFSpccndvELh96py89cz+ql9BSN3B
MsckcujoYMz3muHe9ZL2c6lNDMa490oSWZfIf6YFY8rDZU3bIsmlsiM+ZrPY
ZyM5ekkwLqI/wl+GbKgcDHmzjfpxn2m/mahmMHo2xAwV3yHXGQSjv7di5sT9
5BSLYDx993HqZjeyvVMwzAZ53r+Wk2d5BaPMPWbXYQFyR1AwTH5+f2NeT/vj
MsOC8WXX2uH5p8mcncE4NBRiOD2ErJAQjIcPPdTm65L7UoOxV5SrYz6VXHAy
GA9azr1Me0f7+cJygtGy/2bk3xtkjfxg1Ej+PBy9h9n/VxyMfbLW6YucyPcq
RtqP8RrbrUCOqwtGZgRL6/Ew7Tc0eR6Mzk8z7j6pI4t3BmPB9bFDP06TG3qC
cXysqqfGJnLaz2AcPOLofcaAfEmAizzJ0i0KM5n9jmO5GGViJtzcTfsl+RO4
mHA4IS6rhGw9iYvdsoc5aclkVUkulqstkrrkRZaawcW6s8njutTIv2dz8fFX
2Wl9UXKbHBdX3qs7VbfT/s47C7mITpmaHpJPzlDg4mnfuBbt3eSdK7jgitlu
VXMis1W58Ajr+GS9nKy/lovNe6VOpI0mL9Li4uzJ8V+F8mh/6gQ9Lk5kRTYu
cyB3b+DCbfzH4ixB8qONXCTPqd7OvUj7X/OsuPgQWvoxwZacbM/Fw+ik5j8C
5FCXEW+RmVl2gfbX2npwUfk6cMdzW7Kaz8jx3RntGwTJMwO4yJf6Pkb8Eu3f
/cPlYsfg/VJFR/LLTSPXLx736sw4cum2kfa3VimH5NP+4NP/cVHlpbT7OIsc
Hc1Ff/PWTFkxsvceLlZGhNkJFNH+Y8NELob8pvhp+JGXHORCcIze2WdSZNE0
LhSzr9fXPKD9zp+PczFpp3CR3BZy3Skugt90LWteQL6axcU9tv+3nkbaT51y
gYsD3Yfq2bvJm/O4uMtjJ61TI9tf46K3pPh72Afar73mFhdv1kVUTD9GnlUy
cj3XfSpmmpKHy0f6T1alcOdfZn94JReevBgX86vku7VcrGV3bo72Imc+4SLL
7EH5nBnk2KaR+fNjr+C8WtqPzmnjQtxlS1/iDrLRKy5SThZsYKuSFd5xof/Q
qurMJ9rvLvaJi7k3DRdvPEXu6+Wi7qOvHNuO/KSfi0zf4IB3E8kFv7jYf+5L
8bN7tL/+0DAXqz04NSsjyGGjeRCOW2wyvIrsKMyD6xxOn1o37efXmMhD7vJV
/m8yyTKTeSi6GBo47MLs/5/Ow2fPvqz46eTX0jwc/KRdEVdP9QT3ZHnQS+kI
+7WXnDWfB3NnSf8X+uS4JTzIvR02UBEk+y3nockv9eaoO1S/YKLMw7XiDI7O
NvIydR6erCv681uVLK7Jg+WVHDXLLqqX+KrNw2kJ85bjnuQGAx58L8fMa2qn
eovrJjxcvjvKRdCFnGbBg3HBtKo5rVSvsc2WhzOKedlKjmRnJx7CFSzWqD6n
eg9NFg+NMyffWuFElvXiYfBjurv8C6oXEfTjIWG1CmcSi9wZxEOez2nB/jdU
b1IRwoNFEzyfcsjZYTzsGj1489JnqleJ385D3631yrs3kQN28uBhOWHIZYjq
XTbu5sHtRauGcixZKYGHbr9bM0TEyZMPjPSv/vIbb45S/Ux/Kg8TNPRUSxaQ
G4/ycKvK+Hp6PtXjFJ7koatvo8sukI9m8nCvYZpRUB3V80Tk8HBD0PIQi0V2
vcTD6OJxDk5fqB5IK5+HLL0DWW67yHKFPNxRPJ0UNI08ppiH7TkaC/acp/qi
d2Uj7ioIyVtPrqwY6W/+pZ1vn1G90vmHPITumem4OJCcUDfSv/tUhyPGkoOe
8SDhH899lU71T+bPeVg55v1lO3XyynYe6rPZhR0NVE8l2cnDjAT3Xdt55B9d
PBgiSmj5JHJzz8h8DjPhdTtRfdatrzy0X+qflH2M6rmO/xw5XljxIPkF1XtF
/uFBecFE7qW5ZNYoPrKyE57/8aH6MO1xfIw80Tz9L4/qyeRF+Fiz9dhc9UGq
NxsnzkdkxlDMEkNylyQfN6XUi2wOU71a9Qw+GrOMtxV1UT3bRRk+Qh4d57I0
yInz+FiqOrhBJ5nq4biLRv695NEL3h+pXs5SkY/yc2IqNbpk5ZV8fLxiGrXp
FNXbTVvNx4IxOXPZAuSBtXwYi9WeO+JO9XnPtfiw33rn2PT7VM9XpMdHfHVT
VPsScroRH5smPWj4mkz1f1FmfEgc3DvJaojqBT2s+XhwLOTMKD+yrgMfh6K/
DP1tpnrDBa58LHf32mNmRBb2HDl/ynmLN+FUr/jRh48Dcjv5j32onrEmgA+9
u2nzvO2p3vESj4+G9aFC502PU/7fzIemUVPBCQOqj+SH83HyQ9F1HX2qn7SO
4iNjj3VC+gaqr1SN4aNz2nB2ngXVX0rF8zFmuX5ohCvVa/5O5MPf8/WGMVyq
52w7yMdQYu5Wo1iq97yTxoeHZqaBxSmqB804wYfK0lefZpZRvejO03z0VB1J
znlL9aTsc3yEf5zp/FeMrH+Rj0f+951l1lH96aIrfPweJXJCmEv1qROu8+Es
07gyymw/5f9bfPySaY/eV0n1ro9K+Li6zPqXhnEC5f97fORUuSO5ieplk6v4
8BFS+5EUSPW0oY/48BIee0RjYhzl/6d8aO/pTU67TvW4as18sI5JqGT7Ur3u
zBd8LN4VUhi0IJry/ys+7twep9nbTfW+L9/xYSp76pFC8f/VA/PxfM2A45LD
VC98uo+PeTz1Lc++Uz1x9Hc+/IS63V/VUb2x9++R+xkbUbG9hOqRDf/yMXXo
173LZVSvvGRMCBqsRUwjmqieWXR8CGbmvp7dJbCJ8v/EEFyJU6v4uS6E8v/k
EETo6GZeTuSt/x9DPi7c
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          RGBColor[0.5, 0, 0.5]], 
         Line[CompressedData["
1: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
k+nHCt58tUTIxzLnd7JX/7lfxBINIhGpV5yu8uatJUqPz+8tSyF/X2eJJ9Vr
Vr+qu8qbv5YQmOIXoveLLOBliZ48lYg25UrePLaE8BM+tXRfsliCJR7PkD+Q
kFnJm8+WqB7p8zv/kCx/0RIrrZ2L+KZU8ea1JRg2xzVjtcnq7ZbQtzvKpx5e
xZvfliiftrxT/DzZ4K8lnsUsqVrRV8Wb51Y4I6O0PVS8mvIva4UjN9unvLGs
5s13K8RmF+gnJJBZm6xwNGzKPJeb1bx5bwXZSD1ft5/kiDArVIccnX1Q5Rpv
/lthRp7kpI/+5LjjVpj0+5307lNk4WIr1P/tN0UHOf2mFZrbvwSvmHOd8t9m
henej5kmpuT8t1aYslpVIn0fWfm3FaZmnw2fdYNcIWwN62vnbap+khky1nDc
dj47VbWG8r/GGtOyvqqnB5PNja2x8M6NiY355HZXa9jsU363rJfszrVGxAXZ
V53Tayn/e6yxs3ti3XolMjvDGt6ieXsvG5K/F1lDaW6fOINJjq61hr9CVnhv
LFmg1RpJisfjsnLJKW+sIRZ/YkNwLVnslzVGdZ0zbDrJOdNt0Dq6fZvVKFle
2gbaQyefM+ffoPyvtoHiV8fCVHWyuqENnBbIdjyyJdc626Do1BtXxc1kA7YN
lBZ+kclII7fE2GBVzYNFCy+R7Y/a4MrrL4wrLeTuAhvEizdvZQ6TWddtUChS
W7Vs+k3K/wMbpFZLfp+yjBzxygY7V2tJjhqT+X7YoOmF45IJAeQ4IVtYW1/4
LpVAFpa0xZUon0Sbc+T0VbZ4EJN7/0Q9WXKjLab3RV3+/Yac72iLJ37jFLmT
/6P8B9vi9xoV2VFZcsUuW8g0TjpyXJ/MOGwLdf7AAHNfcn2+LToW6h6dv5ds
Xm2L97d8BX+eJrc32+L7tJNl7+vI7r22qNhZFv/9Fbn/qy1OzHXeIjrpFuVf
0A6OhjohxrLk7wvt4DFtquchfXL0Sjtse27K+OhLFtCzg2fp8Z/e+8gp9nZg
LNm8a/AsWSzQDt4m1nVx9eScnXaof3G2XOMtWT7NDrVyrXp/p9RR/s/YIV10
ldfTpWT1Sjtoaon8vWNMrm2yQ39r9ZSGQLLBSzs8uMEM7dlPbvlsh65MPaXp
xWR7AXs4lEbJmLaQu8XtcX6mgknuBzJrhT0kdzinCc6+TfnXsceRfRLv9qqS
I2ztYbcnkCFqS+bzt0dbpsbeqi3kuO322HE7uDA0gyx80B67Hr7L1q4ip+fZ
oyhot9WiF2TJCnusk+Urn/WXnN9gj3K2zJV5Unco/132eFR0Wl91A7nioz1M
lypbe/qQGZMc8HSZb/OpfeT6eQ74+6Xr7PdzZPNlDhCuVWxybyS3Mxwwu6lp
ecd7sru1A6p8GdX+M+sp/0wHuPV98hZSJbO3OWC42FTshi35e7IDfhmdr4vb
So7OdcAFK09nr0yyQLkDnsSXN5jXkFPuOuDno/7xFj1ksRcOMNJd/sFr4l3K
/4gDmhde2hMvT5af4IjAp4eLbxiTS0QdMU7xg4tQCFld0RFRkx7u9Esl12o5
4m+e5oSnZWQDS0fwJyg+c3xKbvFxxI64AyPvR8n2Wx0hWG+mdljyHuU/yRFz
7hke26RLZuU4YlaIxVQxFnnksiMu/lKO+JxIjrjjCGGJc809xWS+547485HN
1/uIHPfeERpT1X58/kYWHu+EYnZmvtiCBsr/HCfcKdT6vYlBllRwQlH9+VeH
vMn5mk447swxH4ojK5s7YVXiZCW78+QKLyc8f9Hl+/ABmbHFCUsSjYddv5Lr
E5xwiu/F5dH5jZT/E0742qV0qlCb3H7RCZPmNxQGeJPd65ww+7NWtWY8ub/d
CZ1Ck/+TuEBmD47t1yPjwsxH5O9/nTBi5RU05zs5erYz3M/fHVJY2ET5l3PG
ujPyEmY65JS1zuh++2gwlkkWM3WGfOZcg4Ykco6HM1JdV0lIXyLLb3bGDhtv
l/gn5JI4ZwQse/6J7zdZPXNsveSN5jjp+5T/Ymcs+6nWJWlANvjPGfcW2Qjf
DSK3tDkjLFXRYlca2f6dM8S/3jhgeJXc/dsZ/kdEK6W6yKyZLlgcuPj6lInN
lH8ZF4RIt8aPUyRHqLtg1QLhqVMsyHwmLti8tWyF5BZynJsLihcce6WfRRYO
dcHaksT52/8jp+91QUmhWfXNt2TJYy7IL7LomCrQQvk/74KKoaw/68XJyjdc
8Emst2rLcnJFqwtqsj8JXgWZ0e+C0jdZPeNsyPW/XOC5qUjDkkU2n+EKPrlX
kwq2kdulXbHmjiCmHCC7q7miY+fzzpBccr+hK67mzXzyoozMdnGFcbKXpNVd
8ne2K5IzYy42d5CjY11xXUNyl9UIWSDdFbIvevd08j+g/Be6om/a5nK2KFms
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
          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          Dashing[{0.03, 0.03}], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJxt22lcTV/UB/AkiooiRKGSKUlICg2/NGnQPM+3+TbdexNJiEISkimESpFE
qSRUovhHRSkVlUISmowp4umxzvPu8cbn+6lz9tln77VX55y9ZFkhlt78fHx8
H8by8f3v///vv9h6bcMXvKxfTW81yW+1PdT1nfubxmr9s0mv9rWTRqsaLaeT
Y79qb3tQO6+0aR6Z/VM76qYyu51vGfP7I9pyz1jnHSxVyTPGIFVLuuuAhyZz
/FgYX6zSG2pcTx4ah+krr2jdkdrAnE8IsyPknv75s5HcMhGHhEuzHcssmfOL
Iuvtdhdfc1tyyWRIqUdfSF7myLQnjiV8CzsHXFz/OcpsClS1tTuygzyY9qdC
YN/diV31nvTzMgk0NPD/Oevhw1zPNAStj/F6Mt2ffr58Bmaua9zL+RrAXJ8k
LsgUGG8fDKafp83Ejq8TkjeLc5nrnYU7VsmrW2/z6OdTpXF6kqfDpy2bmOuf
DV48+/p5w83085g5uMITuPtNMZzpz1x8ffKs9p18xD+XRchg7p16gWDlSKZ/
sni5Ncgw1mzHP2vny+L5Ho3sGYhi+isHk3PZHUpeu+j4T3IYlIjoH39kN9P/
eZiVwu5L/i+ajpeXx5lmyZZewT3M/ZDHl9zfp39Y7KXjneejb2Hor/yMfcz9
mQ+31Q+vy43dT8cfXwCLPypOWuw45n4thOjC35HjWw7Q8TULcSLWNWaTzUHm
/i1C2thrD/e8OETHj1+MraZZ2mdWJjD3czF2vu0LxF9ymaYCQvj5QvKfHmHu
rwLEzevRn55Ix29Zgt8t2xu+7DjK3G9F7NJSn1jscoyOz1GEYIvfbUMcZ+7/
UtQrn889sfgEHd+9FEIuF7IvTD/JjIcSvmRtZgUJJdHxMstwyMAx4vOfJGZ8
lmGJ+POEpcOn/jlFURmzY26pzh0+zYyXMk5VLPlc/ufMP3dUKsPmwSX1mUJn
mfFbDr0Dgjukp5/7Zxnv5ZA+tF+matF5ZjyX49HpT2vFZVL+2X3MCty8tef9
5GspzPiugExJ6wp3zVRq/+wKWFQO3eSrS2XGewUO8C0WHvBOo/bVV0Jh6sht
xZE0ZvxX4tcjS/MbJy5Q+40rUXrVemPsinRmPqjgWeGOFem1ZHeeCj4Kp20S
5GYw80MFr590782depHan7QK2wZfPD9bdJGZL6tgsM6lssbtErWftQobJ9y9
qzkhk5k/q3ArpmBGfwFZxkAVHqluC9pYl5n5pIq5WlbrBKdmUftvVdFnfzI9
4EEWM79Wo177arpQxBVqf+dqbPlwNLJVOZuZb6thp1Ht8+4DuUNKDSXRLkmy
GVeZ+aeG+fUvtA+zrlH7RWrQOcKKU5TLYeajOrbzXT01+Jbsbq2OTUFjDQat
cpn5qQ7j7VfLBG+SUwbUkSEopasodZ2Zr2tQlvuu2TOK3BG/Bp51v6Ovdl1n
5u8aHHt3yUBoYx61v3gthsfsnxdamMfM57UoNTsv0Ts3n9p/sBbjDm+YFhaX
z8zvdWg/bzh74g9yisc6FIvfl73CKmDm+zp43tKZZldL7hhZBzXTe+9FtG4w
818Ds4VS91ZdI8uc1kCMZUHrkbmFTDxoYAxP65nrEbK7qiaUtX6ZLBe4ycSH
Jhpez1AWCienPNOE7VEt5zc9N5l40cJu31M5pawiaj9YC2FS1eOSXxQx8aOF
ko98alstbv1zwjhtlLO7pG0e32LiSRvagfmxSrq3/znXShu1bxabCty9zcSX
Nq4/O6X+fM2df65N1Ua4bueslJt3mHjTxlfNHXc8VxX/80C/Nt49DH07p6CY
iT/geSfbvnZlyT+LaY4692Lb5oISJh4Baa+JKuKqpf+sHA8c50jPOldUysQn
YHlugon0urv/bP4SyFHKjI4ru8vEqw5Kd2sUf5Ur+2fOIh28CHjZL+lTxsSv
DvhzZ6sWXCYnbNbBUROb9xW9ZUw86+D5nyuORivuUf8rdFDbpdC1fss9Jr51
0K5451VuMbl2ynpMzlqYlMB/n4n39dh4dI73G0PygPt6GC9ceTLj8H0m/tdD
3q19x4tGsljOepSn7gnYPqecWQ/W4+dW3pUEH7LyyHpom706MCWnnFkfdLFa
tt+e/yfZ3FgXRXq3XdxQwawXuji7WL9z0QEy55QuFknEr3J9XsGsH7ro69l6
6s/cB9T/97rYLfDNdkLAA2Y90cPB9sb87YXk3FV6OCAw9M2R/yGzvuiBv1rR
NWUjuTZaD/YrdVaYnnnIrDd64MsTynfvJg/U6cFC3EL25ar/mPVHD0X6/cVF
0WQxGX14mhdX/Kr7j1mP9OEukbQ5TaaS+h+sjzk6AZOzQyqZ9UkfTqqLq2bc
JZsX6yP4dV1n56RHzHqlj/6c0BNT3MiciQbICVs6MyXnEbN+GWCqk3JGPN9j
6r+9AS5W3+M2WTxm1jMDCARp3Nh5gZx70QDCE2ZkxHx/zKxvBlh1qDXsnUEV
9f+bAUzGqjmlnq5i1jtDqEd/3nezlzygY4jJaz4vXYhqZv0zxHov7Og/RhY7
YogRM7HLkz9UM+uhITLc89r2atRQ/9sNwZVIN7JOrGHWxw2YKhI/e8t7svnS
DYiT0IjuW/eEWS834M2Koku3EsmcbRsgnadU2NT9hFk/N2B4hcALA62n1P9H
G/ClpFZ9womnzHo6enwja4xULzl3hhHCH3Us0ZSrZdZXI0jbz1gxfSO51tsI
+XbHFkyLqGXWWyOkb1FNXnORPJBvBJF3kfP3Pqtl1l8jBDnGWg/+IYvxG2OB
svSdg0vqmPXYGANB5z8a2pOVzY2xrG32pkV76pj12Rhy0hu6l+SRzc8ZY1ze
1ibL9jpmvR61fG5dssgz6n+PMcYIn/CZsOYZs36bYL3CzvlJvuSENSb4sJd9
1vD4M2Y9N4Fu1FiXWeXk3FgTvO1O+yLy+RmzvpsgVsa8Z+7ceup/owlale43
WZrWM+u9CdpeuetkbCMPyJtiRYverelZ9cz6b4oZVRqPLjaTxUJNoch59Mda
sIHJB6Z4VzGnS0aVrHzPFM+kFIQnejcw+cEUm7UOD00+RjafvBE/ErPWrShv
YPLFRgSuTHTjfCFzXDaiYeaM3keyz5n8sRG1Gg9DNC3ICVc2or/oA7cm6jmT
TzYi/eP+7ZtzyblDG9GbHCyt3vGcyS9m2LdYpllCrJH6b2CGuvPd6hO0G5l8
YwbVTw2Pp3HIA8fNoD98Y+qalEYm/5jBokv2bFgtWazTDCelwvr/42ti8pE5
pu2uT1ReTpacaY4HFxdPzvFoYvKTOfa/W9qjk0hepG2OsKMe1z/db2LylTlK
Fk/pyvxKVvM1x2yuo3iEfDOTv8xx8eq82642ZMND5lCsWuBru7eZyWfmEInr
Ped+k2x/wxx7suvfR3Y3M/nNHC7yQpVZM1/8s1+rOcRw6MEHoxdMvjNHxCtN
H/VIcvhYCxQcfbTs1NUXTP6zwKk3Ny4JtZNjFSwQ7utltU/sJZMPLaA/QaxI
QoecZGGBJQpPHXNDXzL50QJmzcfKHDLImeEWUP67PFis6SWTLy0w9ZRtd71Q
yz8XnbfAUEdi/oU1LUz+tEBpjL31zkBy5UMLnGn6tdHnXAuTTy3QJXBjoX0t
ubnXApLrU1nW/K1MfrXEQsGKaEcVcreEJfpWC01m+7Qy+dYSi1iI3Z1E/rnW
Eto9iqEXHrcy+dcSF41Crap/k4U8LaGpcjn7t1Ibk49Hz9dozq/iQZaMs8Qm
kZYm7tE2Jj9bwuVwZu6NB+RF1y0hqSws9newjcnXlrCYaLDVVOEVjX/z6Plv
Hw1JcX7F5G9LLE+cvXnwENnwryXW1Y4Xs7z3isnnVmiv9yvL+Uq2X2CFDiub
iWIL2pn8boWlx5o4PHuyn6kVnpz5vrkxrp3J96O/P/p4ubaEHL7JClnKE4NT
+9uZ/G+FurIdeWPFO2j8z1ihXL8iWlWBLJZjhdIs6x6/9eSk+1YQ/Jxz9bQz
WabRCpeL7fZXhZEzP1gh5ONT7V+HyMojVviw5PzxxZnkIjFrOKeZbbC9R9aW
t8aNrSGzd70kV662RkD0kfrLX8nmxtZwrDNdWivymsbf1RoHzXV6vs4nu/Os
Meg59ZmEFrl7jzWW7AxMWWFP5pyyRk8Z30xTLvlntjWKDx4Y8YwjR5VZw1Sh
bvKWC2ShBmu8szkvvreYnPDeGqc7ayoSnpMlf1kj3kHr04k+csokG3yMeq2f
JPiGxl/OBsMTrp06JkPOXWWDdpkrGQfUyWobbOAr1KO43ZJc5myDo/lHPvsF
kA05NpBzq7qxMYZcG22DZwpNa5XOku1P2uBcHr++YCG5I8sG5ZeunHjxhOxX
aoMUf+2B9PfkgTobcM5pT/Pne0vj/84GTVUalfNnkvmGbLC+v6Xq5XJyrIgt
pKY/e7PPiCwmY4vK7x+fKnqSk1baIi56nO2jbWQZA1tMjZ+m5nKMnOloi29G
8urd2WTlYFu8HGMhzX5ALtpliwOH69LftJG1j9vixvivxy1+kCszbbFJd1Z+
4aROGv9iW1zfW3FXfCG5+aktlvPH7mRpkd3f2iIiXKIw047c/cMWrJqVCztD
yJyJduAlPz4hEUv+OdsOQzXNleop5KjlduhcErHLqogspGcHwx9dMR615AR7
O+Rs2XTSs5ssGWiH6aeOb3fge0fjv9MOaWEtv3QkyYuO2mFq3/fGucrk3It2
aFlbUN9vQFa7bYev0eNu5rmRy2rs4Ok/pOe3hWz42g4B58v0xA6Ta7/ZwWfb
1W1ZF8n2QvZw36tyVbWU3CFlj3WTes8XPCf7LbNHZuGRmfK95AEde5yZMKYj
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
/9d5Y8raKwrX25n83+IN9bVpRjaNTP5/5w2JG7+SG6qZ/N/vjXXPNqgvK2fy
/5A3Squ2rva+xeR/fh88uVafszmHyf8iPtglM3zbM4PJ/9N9cFfmI1fxDJP/
ZXywonq4tzaByf+LfbBvdpuhxV5y0kofnLp6JvnqNrKzhg/6eafHdnHIMgY+
WBV1ImnYm9xp7oMf9zI2f3IkZzr6gHVH9VaRGTnQywfGOmKRLF2ycrAP1qyx
aOlWI3/b4oMbGzlfjZeSi3aNtp+99vUBWXLkAR/k3W6+lzmNrH3cB7515Xlp
E8gC532Q+vlp3dYR+nuyMtMH/0Us0FD6TI7P80Fvu/7Usk6yefHo9TuPD13W
TJZ46AOri4e3RVaRm5/6QO0Cy+RSKTn5hQ8+z7Ael3ud7P7WB6WOBx+eSCfL
9/pg7dj4XKeT5O4fPqg7Jdv5Zz85m88XVvqhu6MiyZyJvri5fSi7I5isIuGL
BTk798z1IP+c7YupA/OUNKzIxQt9ceWS7SN1PXLUcl+w1F9unbaarLvWFzeu
3WfVLiIL6fliuXvYJfYscvVGX6SdzQzoFGb+/rf3xXYbz3qNEXpesWb5Iu7O
b/4tfczzUqAv8vqk5ia0k1vDfCF77qbJ/lrm+WmnL45fnXaddY/std8Xb5of
c6XzmOepo74osb1dUJhG7kn2RVXEtJTlR5nnq4u+eG7r5Hgwmrwp1xd2TvYT
H4cyz1u3faEzOL/pvSf5d7kvvqkqdHdZMc9fNb44yJrh/d96ckyTL7hnPoXt
X8k8j732xbStAzpL55FFPo3ez4zb3/KmMM9n33yxbfPigln85GN/fLE53ifL
6zM9v9oL+WGZ3zu+Ix1k6Sl++DXO8/X5p8zzu5QfmsLehR0pJafP94Ns6J1u
76vM8/wyPxT+2uY1O5msqO4HdI2TKIpjnu91/NC7Zaec6lZygYkfrIZs7pz0
ZZ73bf1QbaQxsc2GvM7dD+PDl60dr8s8/7P90GcUGDF1Bbki1A/9beHfBGSY
9wHb/RC9dG7jS1GyyT4/SF8OMjn+i95HiB3xg2t5YYzKB3LD6dHr3ZWQXdRI
Tkr3g7Fww2fZCrLzNT+orz67m3OdLFPkh3WzjA6mnyN33vPDlaMR2qUHyJlV
fqh7MbmqJJwc+NwPaeMUnS94k5Xb/VB7dvm8EEvyt24/WMqWm8lqkYu++EHq
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
/08Jxe73j1ZeO8TV+h9lqv+n
          "]]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[0.005555555555555556], 
          AbsoluteThickness[1.6], FontSize -> 15, 
          Dashing[{0.03, 0.03}], 
          RGBColor[1, 0.5, 0]], 
         Line[CompressedData["
1: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
l0p+f7XFH//VBz8suvzPPZK2MFjZeafC7TK/39qirvGG1KVk8q91tphWuzv4
za3L/P5ri2NyFfkGv8kivrZIO91Y2qpcxe/Htog+tYCTGkCWSrDFzEXjGxMy
qvj92RbvPuefPvuQrHDeFpszpPsEJlTz+7UtGpODtsdqk9XbRvcjE6WvvrGa
379tsWfXQnnps2Tjv7bQ+L1AULm7mt/P7cC4J3MnfE4NxX+RHRLscx3e2dbw
+7sdvk5WPJyQQGZZ2MGgcAbL43oNv9/bQV+87JLXEDkywg4Hwlf5p6hc4ff/
0fncy52/BJHjj9th8SXtjbtOksVL7PDo2fVctJNTr9shKEfqxorpVyn+rXZQ
DxKqMbckF7y3w+elq3ipe8jKI3Z4Gr3ursQ1cqW4PR6UnSioHiLryNtj970b
nw+q1lL819gjN2dMQiqbbG1mjynthx2aCshtnvZYNfmU+vIuMoNnD/mXORM7
JtdR/OPs4a126cN6JTInzR4tDruKykzIv4rtMX7GJ20dJjm6zh63Ga1pXbFk
kRZ7fFg3qehELjn5nT2mP3DxZ9eRpX7bIzEossrhJTl7sgPGJs3OsBsmK8g5
YHP/29/M2dco/moOEN+1ufGgOlndxAHfo3yHHzmS69wdYOyzNHrpBrIxxwHj
xlkYpx0iN8c44MdhDUOZC2TnYw44d9wpuKKZ3FnogF2TBM8w+8msqw7Ya7Z/
YNnk6xT//xyQv3T9KtFl5Mg3Dkj5a+kzbEYWGHTAu+Pf2ELB5HgxR+h4OZjK
JZDFZR1hopH0xuEMOXWVI96dP78yq54sa+QIm4E78/68Ixe4OsLg+v1s3vgb
FH+2I1aevHxqeBG5cqcjfG9w52UYknWOOMJ0Susf6wByfYEjClZXq87ZTbau
ccTzst7zQ6fIbQ8csejRYmb/LTKjyxFfLy80GHxD7vnhCEV2iqbUuJsUf1En
JLwQ0zJfRP4l44Tf3SvWHjEkR690when+PlfA8giBk5oHp/e7b+HnOzsBJvG
l+EfT5OlQkbHx92u3VtPzt7hhJ0rKirXvicrHHKC+XMxKwHRWxT/fCd8rJ0V
/kyRrF7lhONai6Y3mJHr7jnh1gfOwqYQsvGr0f2mLD/ctZ/c/M0JDkiwmVJC
dhZxRpDNKQurZnLnHGfsCDwWefIzmbXCGc572dcnTrtN8dd1Bkt8xZx4VXKk
ozM23nrEk3IkCwQ5w/ylxeWaTeT4bc5wGR/3MiKNLJ7ijA3BTg91qsmpec5I
qk6LlX1Blq10RsDqmW+m/SUXNDrDrjSla/b8OxT/DmdMPH4tTE2PXPnFGcxJ
jpt9/ck641yg3PitP28PuX6WC4bM194YPEO2XuaCr3cuv/ZuIrfpuOCm2sj6
F5/IDHsXhLnH3QyeWk/xZ7pgZWuD/yRVMmerCzbM0ph63ZH8K8kFpdHql/Zu
JkfnusDbVl7fL4MscskF4xusCm1qyckNLpg0R7jN5jVZ6oULnu+Kq/ETbqD4
D7igyXCCUYICWUHIFerXagOum5FLZ7oihvVAdFIYWX2pK5SeOMgFHSTXabmi
4xEz42k52djWFXtdprLcnpKb/V2xLcshon+Y7LzZFQfnryg9InuX4p/oCt2C
A6KW+mRWtiueWTN4UizyQJkr8o/sbP22jxx5xxWzHRsXdpWQBZ67YnqHmFXX
I3L8J1dM/iqG7z/J4mPd4PZw7wcp6UaK/3Q3BOpprLXUIcsuccOk4/Vzj/iR
CzTdcO1m++6P8WRlazf8MZXwdjpLrvR1Q4zXyPGH/5F1NrnhYteSRV4/yPUJ
bujhzPk0PLuJ4p/phjaGxesibXLbeTd8fqzyOdiPzLjlhqobqyes30vuaXOD
2c9qqXnnyJw+N5ybJzNZ4hH511832LUWP5n+ixw9zR2xp8t9FWXuUfwXu+Pd
7C3ZVrrk5LXu6KtWjYpjkqUs3eEkJ/WmMZGc7e2Om0OWDXIXyAob3KE0ZXhG
whNyabw7NlmtrRkzQlbPcIfQM+nTe+XuU/xL3LFOqOTWfGOy8Q13LPf9Jnw3
lNzc6g6Vlh6HXYfIzh/cER4XfdL0MrlzxB0n/5xul+sgs6Z64NgS/X5R4QcU
f3kPDLmqNIxdSo5U98A7V2NnURuygLkHykPtE+ZvIsd7eeCou4yF8QmyeLgH
XLb7JG2/QU7d7YH5dc/X3XxPlk33wPQnGTliIs0U/7Me0Lkq0aA1h6x8bXS9
PbL7IpeTK1s8IBVz6OVlkHV6PPDVS61qrAO5/rcH5FWbJO1YZOspnlDfMftN
4VZym5wn5FZ0zBc9QGas9kRi3uNrnFxyj4knGBXl1S/LyRwPT8hXrxpn30D+
xfHE9hiB1OZ2cnSsJzJZDUz7AbJIqicumqmHdAj+R/Ev8kTQ8a/HuTPJUrWe
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
          "]]}}}, {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.*^7}, {0, 0.9999988382315866}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      BaseStyle -> {FontSize -> 15}, DisplayFunction :> Identity, Epilog -> 
      Inset["Para 1: \!\(\*SubscriptBox[\(A\), \(2\)]\)=0.0116286\n Para 2: \
\!\(\*SubscriptBox[\(A\), \(2\)]\)=0.0124038\n Both with \
\!\(\*SubscriptBox[\(A\), \(1\)]\)=0.0000112557\n and {\!\(\*SubscriptBox[\(k\
\), \(1\)]\),\!\(\*SubscriptBox[\(k\), \(2\)]\)}={1, 0.0049975}", {0.1, 
        0.9}, {Left, Top}], Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{"Transition Probability", None}, {
        "\!\(\*OverscriptBox[\(x\), \(^\)]\)", None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      FrameTicksStyle -> Larger, GridLines -> {None, None}, GridLinesStyle -> 
      Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> 800, LabelStyle -> GrayLevel[0], 
      Method -> {}, PlotLabel -> 
      "Test of Numerical and Analytical Results for Modes", 
      PlotRange -> {{0, 2.*^7}, {0, 0.9999988382315866}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[1, 0, 0]], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         RGBColor[0.5, 0, 0.5]], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         Dashing[{0.03, 0.03}], 
         RGBColor[0, 0, 1]], 
        Directive[
         PointSize[0.005555555555555556], 
         AbsoluteThickness[1.6], FontSize -> 15, 
         Dashing[{0.03, 0.03}], 
         RGBColor[1, 0.5, 0]]}, {
       "Numerical 10 mode (Para 1)", "Numerical 10 mode (Para 2)", 
        "Theory (Para 1)", "Theory (Para 2)"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True, True, True}, LabelStyle -> GrayLevel[0], 
       LegendLayout -> "Row"]], {Center, Above}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.676727472055048*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 755},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3676704975-6702627"->{
  Cell[11323, 304, 360, 7, 43, "Print",
   CellTags->"Info3676704975-6702627"],
  Cell[11686, 313, 382, 6, 43, "Print",
   CellTags->"Info3676704975-6702627"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3676704975-6702627", 230411, 4418}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 95, 1, 65, "Chapter"],
Cell[678, 25, 196, 5, 46, "Input"],
Cell[CellGroupData[{
Cell[899, 34, 215, 4, 28, "Input"],
Cell[1117, 40, 127, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281, 47, 210, 4, 28, "Input"],
Cell[1494, 53, 125, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1656, 60, 93, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[1774, 65, 4444, 134, 295, "Input"],
Cell[6221, 201, 509, 7, 32, "Output"],
Cell[6733, 210, 505, 7, 28, "Output"],
Cell[7241, 219, 508, 7, 32, "Output"],
Cell[7752, 228, 508, 7, 32, "Output"],
Cell[8263, 237, 492, 7, 28, "Output"],
Cell[8758, 246, 579, 10, 28, "Output"],
Cell[9340, 258, 579, 10, 28, "Output"],
Cell[9922, 270, 577, 10, 28, "Output"],
Cell[10502, 282, 533, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11072, 296, 226, 4, 46, "Input"],
Cell[CellGroupData[{
Cell[11323, 304, 360, 7, 43, "Print",
 CellTags->"Info3676704975-6702627"],
Cell[11686, 313, 382, 6, 43, "Print",
 CellTags->"Info3676704975-6702627"]
}, Open  ]]
}, Open  ]],
Cell[12095, 323, 685, 20, 77, "Text"],
Cell[12783, 345, 1493, 43, 80, "Input"],
Cell[CellGroupData[{
Cell[14301, 392, 361, 8, 28, "Input"],
Cell[14665, 402, 334, 4, 28, "Output"]
}, Open  ]],
Cell[15014, 409, 179, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[15218, 417, 285, 9, 28, "Input"],
Cell[15506, 428, 260, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15803, 436, 266, 7, 28, "Input"],
Cell[16072, 445, 11733, 204, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27842, 654, 700, 21, 46, "Input"],
Cell[28545, 677, 258, 3, 28, "Output"],
Cell[28806, 682, 260, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29103, 690, 464, 11, 46, "Input"],
Cell[29570, 703, 215, 3, 32, "Output"],
Cell[29788, 708, 215, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30040, 716, 534, 12, 46, "Input"],
Cell[30577, 730, 1578, 53, 46, "Output"],
Cell[32158, 785, 1238, 42, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33433, 832, 345, 9, 28, "Input"],
Cell[33781, 843, 22823, 442, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56641, 1290, 346, 9, 28, "Input"],
Cell[56990, 1301, 22777, 440, 70, "Output"]
}, Open  ]],
Cell[79782, 1744, 2272, 64, 80, "Input"],
Cell[CellGroupData[{
Cell[82079, 1812, 3716, 86, 124, "Input"],
Cell[85798, 1900, 144253, 2502, 634, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
